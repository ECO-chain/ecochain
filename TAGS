
src/chainparams.h,2139
#define BITCOIN_CHAINPARAMS_H7,269
struct CDNSSeedData 16,431
    std::string name,17,453
    std::string name, host;17,453
    bool supportsServiceBitsFiltering;18,481
    CDNSSeedData(19,520
struct SeedSpec6 22,738
    uint8_t addr[addr23,757
    uint16_t port;24,779
typedef std::map<int,int27,802
typedef std::map<int, uint256> MapCheckpoints;27,802
struct CCheckpointData 29,850
    MapCheckpoints mapCheckpoints;30,875
struct ChainTxData 33,914
    int64_t nTime;34,935
    int64_t nTxCount;35,954
    double dTxRate;36,976
class CChainParams46,1395
    enum Base58Type 49,1424
        PUBKEY_ADDRESS,50,1446
        SCRIPT_ADDRESS,51,1470
        SECRET_KEY,52,1494
        EXT_PUBLIC_KEY,53,1514
        EXT_SECRET_KEY,54,1538
        MAX_BASE58_TYPES56,1564
    const Consensus::Params& GetConsensus(59,1597
    const CMessageHeader::MessageStartChars& MessageStart(60,1669
    int GetDefaultPort(61,1763
    const CBlock& GenesisBlock(63,1820
    bool MiningRequiresPeers(65,1942
    bool DefaultConsistencyChecks(67,2085
    bool RequireStandard(69,2244
    uint64_t PruneAfterHeight(70,2306
    bool MineBlocksOnDemand(72,2487
    std::string NetworkIDString(74,2622
    const std::vector<CDNSSeedData>& DNSSeeds(75,2687
    const std::vector<unsigned char>& Base58Prefix(76,2760
    const std::vector<SeedSpec6>& FixedSeeds(77,2867
    const CCheckpointData& Checkpoints(78,2944
    const ChainTxData& TxData(79,3018
    CChainParams(81,3091
    Consensus::Params consensus;83,3114
    CMessageHeader::MessageStartChars pchMessageStart;84,3147
    int nDefaultPort;85,3202
    uint64_t nPruneAfterHeight;86,3224
    std::vector<CDNSSeedData> vSeeds;87,3256
    std::vector<unsigned char> base58Prefixes[base58Prefixes88,3294
    std::string strNetworkID;89,3359
    CBlock genesis;90,3389
    std::vector<SeedSpec6> vFixedSeeds;91,3409
    bool fMiningRequiresPeers;92,3449
    bool fDefaultConsistencyChecks;93,3480
    bool fRequireStandard;94,3516
    bool fMineBlocksOnDemand;95,3543
    CCheckpointData checkpointData;96,3573
    ChainTxData chainTxData;97,3609

src/utilmoneystr.h,38
#define BITCOIN_UTILMONEYSTR_H10,317

src/txmempool.cpp,3960
CTxMemPoolEntry::CTxMemPoolEntry(21,564
CTxMemPoolEntry::CTxMemPoolEntry(CTxMemPoolEntry48,1710
CTxMemPoolEntry::GetPriority(GetPriority54,1804
void CTxMemPoolEntry::UpdateFeeDelta(UpdateFeeDelta63,2156
void CTxMemPoolEntry::UpdateLockPoints(UpdateLockPoints70,2355
size_t CTxMemPoolEntry::GetTxSize(GetTxSize75,2442
void CTxMemPool::UpdateForDescendants(UpdateForDescendants83,2691
void CTxMemPool::UpdateTransactionsFromBlock(UpdateTransactionsFromBlock130,4935
bool CTxMemPool::CalculateMemPoolAncestors(CalculateMemPoolAncestors173,7095
void CTxMemPool::UpdateAncestorsOf(UpdateAncestorsOf237,9929
void CTxMemPool::UpdateEntryForAncestors(UpdateEntryForAncestors252,10543
void CTxMemPool::UpdateChildrenForRemoval(UpdateChildrenForRemoval266,11080
void CTxMemPool::UpdateForRemoveFromMempool(UpdateForRemoveFromMempool274,11311
void CTxMemPoolEntry::UpdateDescendantState(UpdateDescendantState332,14667
void CTxMemPoolEntry::UpdateAncestorState(UpdateAncestorState341,14995
CTxMemPool::CTxMemPool(352,15421
CTxMemPool::~CTxMemPool(~CTxMemPool365,15829
bool CTxMemPool::isSpent(isSpent370,15893
unsigned int CTxMemPool::GetTransactionsUpdated(GetTransactionsUpdated376,16002
void CTxMemPool::AddTransactionsUpdated(AddTransactionsUpdated382,16110
bool CTxMemPool::addUnchecked(addUnchecked388,16216
void CTxMemPool::removeUnchecked(removeUnchecked447,18689
void CTxMemPool::CalculateDescendants(CalculateDescendants478,20046
void CTxMemPool::removeRecursive(removeRecursive501,20840
void CTxMemPool::removeForReorg(removeForReorg533,22048
void CTxMemPool::removeConflicts(removeConflicts570,23758
void CTxMemPool::removeForBlock(removeForBlock590,24410
void CTxMemPool::_clear(_clear619,25366
void CTxMemPool::clear(clear632,25647
void CTxMemPool::check(check638,25705
bool CTxMemPool::CompareDepthAndScore(CompareDepthAndScore772,31735
class DepthAndScoreComparator788,32278
    bool operator()(operator()791,32318
std::vector<CTxMemPool::indexed_transaction_set::const_iterator> CTxMemPool::GetSortedDepthAndScore(GetSortedDepthAndScore803,32721
void CTxMemPool::queryHashes(queryHashes817,33170
static TxMempoolInfo GetInfo(830,33426
std::vector<TxMempoolInfo> CTxMemPool::infoAll(infoAll834,33654
CTransactionRef CTxMemPool::get(get848,33926
TxMempoolInfo CTxMemPool::info(info857,34149
CFeeRate CTxMemPool::estimateFee(estimateFee866,34373
CFeeRate CTxMemPool::estimateSmartFee(estimateSmartFee871,34498
double CTxMemPool::estimatePriority(estimatePriority876,34687
double CTxMemPool::estimateSmartPriority(estimateSmartPriority881,34820
CTxMemPool::WriteFeeEstimates(WriteFeeEstimates888,35023
CTxMemPool::ReadFeeEstimates(ReadFeeEstimates904,35496
void CTxMemPool::PrioritiseTransaction(PrioritiseTransaction921,36098
void CTxMemPool::ApplyDeltas(ApplyDeltas944,37152
void CTxMemPool::ClearPrioritisation(ClearPrioritisation955,37541
bool CTxMemPool::HasNoInputsOf(HasNoInputsOf961,37644
CCoinsViewMemPool::CCoinsViewMemPool(969,37850
bool CCoinsViewMemPool::GetCoin(GetCoin971,37988
bool CCoinsViewMemPool::HaveCoin(HaveCoin987,38699
size_t CTxMemPool::DynamicMemoryUsage(DynamicMemoryUsage991,38835
void CTxMemPool::RemoveStaged(RemoveStaged997,39299
int CTxMemPool::Expire(Expire1005,39576
bool CTxMemPool::addUnchecked(addUnchecked1021,40108
void CTxMemPool::UpdateChild(UpdateChild1031,40513
void CTxMemPool::UpdateParent(UpdateParent1041,40869
const CTxMemPool::setEntries & CTxMemPool::GetMemPoolParents(GetMemPoolParents1051,41227
const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(GetMemPoolChildren1059,41471
CFeeRate CTxMemPool::GetMinFee(GetMinFee1067,41717
void CTxMemPool::trackPackageRemoved(trackPackageRemoved1091,42583
void CTxMemPool::TrimToSize(TrimToSize1099,42827
bool CTxMemPool::TransactionWithinChainLimit(TransactionWithinChainLimit1143,44730
SaltedTxidHasher::SaltedTxidHasher(1150,45001

src/threadinterrupt.h,173
#define BITCOIN_THREADINTERRUPT_H6,224
class CThreadInterrupt18,522
    std::condition_variable cond;29,800
    std::mutex mut;30,834
    std::atomic<bool> flag;31,854

src/zmq/zmqabstractnotifier.h,461
#define BITCOIN_ZMQ_ZMQABSTRACTNOTIFIER_H6,232
typedef CZMQAbstractNotifier* (*CZMQNotifierFactory)CZMQNotifierFactory13,347
class CZMQAbstractNotifier15,404
    CZMQAbstractNotifier(18,441
    static CZMQAbstractNotifier* Create(22,549
    std::string GetType(27,628
    void SetType(28,677
    std::string GetAddress(29,730
    void SetAddress(30,785
    void *psocket;psocket39,1066
    std::string type;40,1085
    std::string address;41,1107

src/zmq/zmqpublishnotifier.cpp,936
static std::multimap<std::string, CZMQAbstractPublishNotifier*> mapPublishNotifiers;12,340
static const char *MSG_HASHBLOCK MSG_HASHBLOCK14,426
static const char *MSG_HASHTX MSG_HASHTX15,474
static const char *MSG_RAWBLOCK MSG_RAWBLOCK16,519
static const char *MSG_RAWTX MSG_RAWTX17,566
static int zmq_send_multipart(20,658
bool CZMQAbstractPublishNotifier::Initialize(Initialize59,1450
void CZMQAbstractPublishNotifier::Shutdown(Shutdown98,2539
    typedef std::multimap<std::string, CZMQAbstractPublishNotifier*>::iterator iterator105,2736
bool CZMQAbstractPublishNotifier::SendMessage(SendMessage128,3347
bool CZMQPublishHashBlockNotifier::NotifyBlock(NotifyBlock145,3888
bool CZMQPublishHashTransactionNotifier::NotifyTransaction(NotifyTransaction155,4227
bool CZMQPublishRawBlockNotifier::NotifyBlock(NotifyBlock165,4577
bool CZMQPublishRawTransactionNotifier::NotifyTransaction(NotifyTransaction186,5195

src/zmq/zmqconfig.h,38
#define BITCOIN_ZMQ_ZMQCONFIG_H6,222

src/zmq/zmqpublishnotifier.h,304
#define BITCOIN_ZMQ_ZMQPUBLISHNOTIFIER_H6,236
class CZMQAbstractPublishNotifier 12,332
    uint32_t nSequence;15,407
class CZMQPublishHashBlockNotifier 31,750
class CZMQPublishHashTransactionNotifier 37,885
class CZMQPublishRawBlockNotifier 43,1038
class CZMQPublishRawTransactionNotifier 49,1172

src/zmq/zmqabstractnotifier.cpp,203
CZMQAbstractNotifier::~CZMQAbstractNotifier(~CZMQAbstractNotifier9,243
bool CZMQAbstractNotifier::NotifyBlock(NotifyBlock14,316
bool CZMQAbstractNotifier::NotifyTransaction(NotifyTransaction19,414

src/zmq/zmqnotificationinterface.h,184
#define BITCOIN_ZMQ_ZMQNOTIFICATIONINTERFACE_H6,242
class CZMQNotificationInterface 15,405
    void *pcontext;pcontext33,900
    std::list<CZMQAbstractNotifier*> notifiers;34,920

src/zmq/zmqnotificationinterface.cpp,519
void zmqError(13,351
CZMQNotificationInterface::CZMQNotificationInterface(18,464
CZMQNotificationInterface::~CZMQNotificationInterface(~CZMQNotificationInterface22,541
CZMQNotificationInterface* CZMQNotificationInterface::Create(Create32,748
bool CZMQNotificationInterface::Initialize(Initialize73,2268
void CZMQNotificationInterface::Shutdown(Shutdown110,3162
void CZMQNotificationInterface::UpdatedBlockTip(UpdatedBlockTip127,3675
void CZMQNotificationInterface::SyncTransaction(SyncTransaction147,4281

src/merkleblock.h,719
#define BITCOIN_MERKLEBLOCK_H7,269
class CPartialMerkleTree50,1900
    unsigned int nTransactions;54,1995
    std::vector<bool> vBits;57,2075
    std::vector<uint256> vHash;60,2142
    bool fBad;63,2226
    unsigned int CalcTreeWidth(66,2349
    ADD_SERIALIZE_METHODS;85,3297
    template <typename Stream,87,3325
    inline void SerializationOp(88,3376
class CMerkleBlock125,4758
    CBlockHeader header;129,4827
    CPartialMerkleTree txn;130,4852
    std::vector<std::vector134,4961
    std::vector<std::pair<unsigned int, uint256> > vMatchedTxn;134,4961
    CMerkleBlock(146,5443
    ADD_SERIALIZE_METHODS;148,5466
    template <typename Stream,150,5494
    inline void SerializationOp(151,5545

src/limitedmap.h,1266
#define BITCOIN_LIMITEDMAP_H6,224
template <typename K,12,375
class limitedmap13,409
    typedef K key_type;16,436
    typedef V mapped_type;17,460
    typedef std::pair<const key_type,18,487
    typedef std::pair<const key_type, mapped_type> value_type;18,487
    typedef typename std::map<std::map19,550
    typedef typename std::map<K, V>::const_iterator const_iterator;19,550
    typedef typename std::map<std::map20,618
    typedef typename std::map<K, V>::size_type size_type;20,618
    std::map<std::map23,688
    std::map<K, V> map;23,688
    typedef typename std::map<std::map24,712
    typedef typename std::map<K, V>::iterator iterator;24,712
    std::multimap<std::multimap25,768
    std::multimap<V, iterator> rmap;25,768
    typedef typename std::multimap<std::multimap26,805
    typedef typename std::multimap<V, iterator>::iterator rmap_iterator;26,805
    size_type nMaxSize;27,878
    limitedmap(30,911
    const_iterator begin(35,1023
    const_iterator end(36,1080
    size_type size(37,1133
    bool empty(38,1183
    const_iterator find(39,1230
    size_type count(40,1303
    void insert(41,1373
    void erase(52,1716
    void update(67,2227
    size_type max_size(87,3112
    size_type max_size(88,3164

src/utilstrencodings.h,365
#define BITCOIN_UTILSTRENCODINGS_H10,332
#define BEGIN(16,425
#define END(17,467
#define UBEGIN(18,517
#define UEND(19,568
#define ARRAYLEN(20,627
#define PAIRTYPE(23,780
enum SafeChars26,859
    SAFE_CHARS_DEFAULT,28,876
    SAFE_CHARS_UA_COMMENT 29,935
std::string HexStr(95,3800
inline std::string HexStr(114,4372
bool TimingResistantEqual(131,4816

src/warnings.h,80
#define BITCOIN_WARNINGS_H7,266
static const bool DEFAULT_TESTSAFEMODE 19,596

src/pubkey.cpp,680
secp256k1_context* secp256k1_context_verify 13,345
static int ecdsa_signature_parse_der_lax(26,959
bool CPubKey::Verify(Verify167,4257
bool CPubKey::RecoverCompact(RecoverCompact187,5095
bool CPubKey::IsFullyValid(IsFullyValid207,5906
bool CPubKey::Decompress(Decompress214,6111
bool CPubKey::Derive(Derive228,6543
void CExtPubKey::Encode(Encode249,7349
void CExtPubKey::Decode(Decode259,7741
bool CExtPubKey::Derive(Derive267,8043
/* static */ bool CPubKey::CheckLowS(CheckLowS275,8321
/* static */ int ECCVerifyHandle::refcount 283,8658
ECCVerifyHandle::ECCVerifyHandle(ECCVerifyHandle285,8707
ECCVerifyHandle::~ECCVerifyHandle(~ECCVerifyHandle295,8981

src/httpserver.cpp,3108
static const size_t MAX_HEADERS_SIZE 40,948
class HTTPWorkItem 43,1024
    HTTPWorkItem(46,1074
    void operator()(operator()50,1253
    std::unique_ptr<HTTPRequest> req;55,1319
    std::string path;58,1367
    HTTPRequestHandler func;59,1389
class WorkQueue66,1565
    std::mutex cs;70,1632
    std::condition_variable cond;71,1651
    std::deque<std::unique_ptr<WorkItem>> queue;72,1685
    bool running;73,1734
    size_t maxDepth;74,1752
    int numThreads;75,1773
    class ThreadCounter78,1867
        WorkQueue &wq;wq81,1909
        ThreadCounter(82,1932
        ~ThreadCounter(87,2080
    WorkQueue(96,2260
    ~WorkQueue(104,2507
    bool Enqueue(108,2567
    void Run(119,2871
    void Interrupt(137,3371
    void WaitExit(144,3546
    size_t Depth(152,3727
struct HTTPPathHandler159,3838
    HTTPPathHandler(161,3863
    HTTPPathHandler(162,3888
    std::string prefix;166,4057
    bool exactMatch;167,4081
    HTTPRequestHandler handler;168,4102
static struct event_base* eventBase 174,4188
struct evhttp* eventHTTP 176,4245
static std::vector<CSubNet> rpc_allow_subnets;178,4325
static WorkQueue<HTTPClosure>* workQueue 180,4442
std::vector<HTTPPathHandler> pathHandlers;182,4516
std::vector<evhttp_bound_socket *> boundSockets;184,4587
static bool ClientAllowed(187,4708
static bool InitHTTPAllowList(198,4986
static std::string RequestMethodString(229,6359
static void http_request_cb(250,6784
static void http_reject_request_cb(302,8628
static bool ThreadHTTP(309,8851
static bool HTTPBindAddresses(320,9246
static void HTTPWorkQueueRun(359,11175
static void libevent_log_cb(366,11333
# define EVENT_LOG_WARN 370,11497
bool InitHTTPServer(378,11742
std::thread threadHTTP;445,13760
std::future<bool> threadResult;446,13784
bool StartHTTPServer(448,13817
void InterruptHTTPServer(464,14377
void StopHTTPServer(479,14810
struct event_base* EventBase(512,16127
static void httpevent_callback_fn(517,16185
HTTPEvent::HTTPEvent(526,16428
HTTPEvent::~HTTPEvent(~HTTPEvent533,16739
void HTTPEvent::trigger(trigger540,16852
HTTPRequest::HTTPRequest(547,17066
HTTPRequest::~HTTPRequest(~HTTPRequest554,17371
void HTTPRequest::waitClientClose(waitClientClose563,17640
void HTTPRequest::startDetectClientClose(startDetectClientClose581,18287
void HTTPRequest::setConnClosed(setConnClosed608,19644
bool HTTPRequest::isConnClosed(isConnClosed614,19774
bool HTTPRequest::isChunkMode(isChunkMode619,19877
std::pair<bool, std::string> HTTPRequest::GetHeader(GetHeader623,19947
std::string HTTPRequest::ReadBody(ReadBody634,20296
bool HTTPRequest::ReplySent(ReplySent654,21077
void HTTPRequest::WriteHeader(WriteHeader658,21134
void HTTPRequest::ChunkEnd(ChunkEnd665,21372
void HTTPRequest::Chunk(Chunk683,22020
void HTTPRequest::WriteReply(WriteReply713,22951
CService HTTPRequest::GetPeer(GetPeer727,23502
std::string HTTPRequest::GetURI(GetURI741,23898
HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod(GetRequestMethod746,23977
void RegisterHTTPHandler(767,24390
void UnregisterHTTPHandler(773,24668

src/utilmoneystr.cpp,82
std::string FormatMoney(14,379
bool ParseMoney(36,1004
bool ParseMoney(41,1101

src/checkpoints.cpp,198
static const int nCheckpointSpan 16,362
namespace Checkpoints 18,403
    CBlockIndex* GetLastCheckpoint(20,428
    const CBlockIndex* AutoSelectSyncCheckpoint(35,935
    bool CheckSync(46,1373

src/clientversion.h,391
#define BITCOIN_CLIENTVERSION_H6,227
#define CLIENT_VERSION_MAJOR 17,471
#define CLIENT_VERSION_MINOR 18,502
#define CLIENT_VERSION_REVISION 19,534
#define CLIENT_VERSION_BUILD 20,569
#define CLIENT_VERSION_IS_RELEASE 23,665
#define COPYRIGHT_YEAR 29,815
#define STRINGIZE(37,1002
#define DO_STRINGIZE(38,1039
#define COPYRIGHT_STR 41,1114
static const int CLIENT_VERSION 54,1480

src/wallet/crypter.cpp,765
int CCrypter::BytesToKeySHA512AES(BytesToKeySHA512AES17,409
bool CCrypter::SetKeyFromPassphrase(SetKeyFromPassphrase44,1427
bool CCrypter::SetKey(SetKey64,2055
bool CCrypter::Encrypt(Encrypt76,2432
bool CCrypter::Decrypt(Decrypt94,2995
static bool EncryptSecret(113,3530
static bool DecryptSecret(123,3990
static bool DecryptKey(133,4444
bool CCryptoKeyStore::SetCrypted(SetCrypted146,4905
bool CCryptoKeyStore::Lock(Lock157,5097
bool CCryptoKeyStore::Unlock(Unlock171,5293
bool CCryptoKeyStore::AddKeyPubKey(AddKeyPubKey209,6436
bool CCryptoKeyStore::AddCryptedKey(AddCryptedKey231,7019
bool CCryptoKeyStore::GetKey(GetKey243,7332
bool CCryptoKeyStore::GetPubKey(GetPubKey261,7911
bool CCryptoKeyStore::EncryptKeys(EncryptKeys280,8463

src/wallet/crypter.h,1561
#define BITCOIN_WALLET_CRYPTER_H6,228
const unsigned int WALLET_CRYPTO_KEY_SIZE 14,363
const unsigned int WALLET_CRYPTO_SALT_SIZE 15,411
const unsigned int WALLET_CRYPTO_IV_SIZE 16,459
class CMasterKey34,1162
    std::vector<unsigned char> vchCryptedKey;37,1189
    std::vector<unsigned char> vchSalt;38,1235
    unsigned int nDerivationMethod;41,1321
    unsigned int nDeriveIterations;42,1357
    std::vector<unsigned char> vchOtherDerivationParameters;45,1498
    ADD_SERIALIZE_METHODS;47,1560
    template <typename Stream,49,1588
    inline void SerializationOp(50,1639
    CMasterKey(58,1900
typedef std::vector<unsigned char,68,2223
typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;68,2223
namespace wallet_crypto70,2310
class CCrypter76,2420
    std::vector<std::vector80,2520
    std::vector<unsigned char, secure_allocator<unsigned char>> vchKey;80,2520
    std::vector<std::vector81,2592
    std::vector<unsigned char, secure_allocator<unsigned char>> vchIV;81,2592
    bool fKeySet;82,2663
    void CleanKey(92,3322
    CCrypter(99,3486
    ~CCrypter(106,3631
class CCryptoKeyStore 115,3822
    CryptedKeyMap mapCryptedKeys;118,3879
    CKeyingMaterial vMasterKey;120,3914
    bool fUseCrypto;124,4057
    bool fDecryptionThoroughlyChecked;127,4149
    CCryptoKeyStore(138,4390
    bool IsCrypted(142,4482
    bool IsLocked(147,4549
    bool HaveKey(163,4967
    void GetKeys(175,5371
    boost::signals2::signal<void (CCryptoKeyStore* wallet)> NotifyStatusChanged;195,5878

src/wallet/walletdb.cpp,2912
static uint64_t nAccountingEntryNumber 27,662
static std::atomic<unsigned int> nWalletDBUpdateCounter;29,707
bool CWalletDB::WriteName(WriteName35,785
bool CWalletDB::EraseName(EraseName41,961
bool CWalletDB::WritePurpose(WritePurpose49,1287
bool CWalletDB::ErasePurpose(ErasePurpose55,1475
bool CWalletDB::WriteTx(WriteTx61,1625
bool CWalletDB::EraseTx(EraseTx67,1779
bool CWalletDB::WriteKey(WriteKey73,1911
bool CWalletDB::WriteCryptedKey(WriteCryptedKey90,2603
bool CWalletDB::WriteMasterKey(WriteMasterKey111,3292
bool CWalletDB::WriteCScript(WriteCScript117,3484
bool CWalletDB::WriteWatchOnly(WriteWatchOnly123,3707
bool CWalletDB::EraseWatchOnly(EraseWatchOnly131,4034
bool CWalletDB::WriteBestBlock(WriteBestBlock139,4318
bool CWalletDB::ReadBestBlock(ReadBestBlock146,4621
bool CWalletDB::WriteOrderPosNext(WriteOrderPosNext152,4829
bool CWalletDB::WriteDefaultKey(WriteDefaultKey158,4983
bool CWalletDB::ReadPool(ReadPool164,5132
bool CWalletDB::WritePool(WritePool169,5266
bool CWalletDB::ErasePool(ErasePool175,5438
bool CWalletDB::WriteMinVersion(WriteMinVersion181,5576
bool CWalletDB::ReadAccount(ReadAccount186,5682
bool CWalletDB::WriteAccount(WriteAccount192,5847
bool CWalletDB::WriteAccountingEntry(WriteAccountingEntry197,5997
bool CWalletDB::WriteAccountingEntry_Backend(WriteAccountingEntry_Backend202,6218
CAmount CWalletDB::GetAccountCreditDebit(GetAccountCreditDebit207,6369
void CWalletDB::ListAccountCreditDebit(ListAccountCreditDebit219,6686
class CWalletScanState 262,8016
    unsigned int nKeys;264,8049
    unsigned int nCKeys;265,8073
    unsigned int nWatchKeys;266,8098
    unsigned int nKeyMeta;267,8127
    bool fIsEncrypted;268,8154
    bool fAnyUnordered;269,8177
    int nFileVersion;270,8201
    vector<uint256> vWalletUpgrade;271,8223
    CWalletScanState(273,8260
ReadKeyValue(282,8439
static bool IsKeyType(589,18419
DBErrors CWalletDB::LoadWallet(LoadWallet595,18567
DBErrors CWalletDB::FindWalletTx(FindWalletTx704,22179
DBErrors CWalletDB::ZapSelectTx(ZapSelectTx770,23932
DBErrors CWalletDB::ZapWalletTx(ZapWalletTx809,25077
void ThreadFlushWalletDB(826,25485
bool CWalletDB::Recover(Recover892,27737
bool CWalletDB::Recover(Recover973,30667
bool CWalletDB::WriteDestData(WriteDestData978,30795
bool CWalletDB::EraseDestData(EraseDestData984,31034
bool CWalletDB::WriteHDChain(WriteHDChain991,31241
void CWalletDB::IncrementUpdateCounter(IncrementUpdateCounter997,31377
unsigned int CWalletDB::GetUpdateCounter(GetUpdateCounter1002,31453
bool CWalletDB::WriteToken(WriteToken1007,31536
bool CWalletDB::EraseToken(EraseToken1013,31706
bool CWalletDB::WriteTokenTx(WriteTokenTx1019,31844
bool CWalletDB::EraseTokenTx(EraseTokenTx1025,32022
bool CWalletDB::WriteContractData(WriteContractData1031,32164
bool CWalletDB::EraseContractData(EraseContractData1037,32396

src/wallet/wallet.h,10491
#define BITCOIN_WALLET_WALLET_H7,271
static const unsigned int DEFAULT_KEYPOOL_SIZE 52,1300
static const CAmount DEFAULT_TRANSACTION_FEE 54,1376
static const CAmount DEFAULT_FALLBACK_FEE 56,1451
static const CAmount DEFAULT_TRANSACTION_MINFEE 58,1524
static const CAmount WALLET_INCREMENTAL_RELAY_FEE 60,1644
static const CAmount MIN_CHANGE 62,1735
static const CAmount MIN_FINAL_CHANGE 64,1829
static const bool DEFAULT_SPEND_ZEROCONF_CHANGE 66,1920
static const bool DEFAULT_ZERO_BALANCE_ADDRESS_TOKEN 68,2017
static const bool DEFAULT_SEND_FREE_TRANSACTIONS 70,2116
static const bool DEFAULT_WALLET_REJECT_LONG_CHAINS 72,2214
static const unsigned int DEFAULT_TX_CONFIRM_TARGET 74,2304
static const bool DEFAULT_WALLET_RBF 76,2384
static const unsigned int MAX_FREE_TRANSACTION_CREATE_SIZE 78,2494
static const bool DEFAULT_WALLETBROADCAST 79,2561
static const bool DEFAULT_DISABLE_WALLET 80,2611
static const bool DEFAULT_USE_HD_WALLET 82,2713
static const bool DEFAULT_NOT_USE_CHANGE_ADDRESS 86,2803
static const bool DEFAULT_CHECK_FOR_UPDATES 88,2862
enum WalletFeature101,3154
    FEATURE_BASE 103,3175
    FEATURE_WALLETCRYPT 105,3296
    FEATURE_COMPRPUBKEY 106,3350
    FEATURE_HD 108,3410
    FEATURE_LATEST 109,3490
class CKeyPool114,3621
    int64_t nTime;117,3646
    CPubKey vchPubKey;118,3665
    ADD_SERIALIZE_METHODS;123,3748
    template <typename Stream,125,3776
    inline void SerializationOp(126,3827
class CAddressBookData136,4099
    std::string name;139,4132
    std::string purpose;140,4154
    CAddressBookData(142,4180
    typedef std::map<std::string,std::string147,4245
    typedef std::map<std::string, std::string> StringMap;147,4245
    StringMap destdata;148,4303
struct CRecipient151,4331
    CScript scriptPubKey;153,4351
    CAmount nAmount;154,4377
    bool fSubtractFeeFromAmount;155,4398
typedef std::map<std::string,std::string158,4435
typedef std::map<std::string, std::string> mapValue_t;158,4435
static inline void ReadOrderPos(161,4492
static inline void WriteOrderPos(172,4730
struct COutputEntry179,4898
    CTxDestination destination;181,4920
    CAmount amount;182,4952
    int vout;183,4972
class CMerkleTx193,5257
    static const uint256 ABANDON_HASH;197,5354
    CTransactionRef tx;200,5402
    uint256 hashBlock;201,5426
    int nIndex;208,5715
    CMerkleTx(210,5732
    CMerkleTx(216,5814
    operator const operator const224,6060
    void Init(226,6118
    void SetTx(232,6199
    ADD_SERIALIZE_METHODS;237,6277
    template <typename Stream,239,6305
    inline void SerializationOp(240,6356
    int GetDepthInMainChain(257,7018
    bool IsInMainChain(258,7127
    bool hashUnset(262,7444
    bool isAbandoned(263,7533
    void setAbandoned(264,7602
    const uint256& GetHash(266,7657
    bool IsCoinBase(267,7718
    bool IsCoinStake(268,7775
class CWalletTx 275,8015
    const CWallet* pwallet;278,8061
    mapValue_t mapValue;281,8098
    std::vector<std::vector282,8123
    std::vector<std::pair<std::string, std::string> > vOrderForm;282,8123
    unsigned int fTimeReceivedIsTxTime;283,8189
    unsigned int nTimeReceived;284,8229
    unsigned int nTimeSmart;285,8293
    char fFromMe;291,8573
    std::string strFromAccount;292,8591
    int64_t nOrderPos;293,8623
    mutable bool fDebitCached;296,8708
    mutable bool fCreditCached;297,8739
    mutable bool fImmatureCreditCached;298,8771
    mutable bool fAvailableCreditCached;299,8811
    mutable bool fWatchDebitCached;300,8852
    mutable bool fWatchCreditCached;301,8888
    mutable bool fImmatureWatchCreditCached;302,8925
    mutable bool fAvailableWatchCreditCached;303,8970
    mutable bool fChangeCached;304,9016
    mutable CAmount nDebitCached;305,9048
    mutable CAmount nCreditCached;306,9082
    mutable CAmount nImmatureCreditCached;307,9117
    mutable CAmount nAvailableCreditCached;308,9160
    mutable CAmount nWatchDebitCached;309,9204
    mutable CAmount nWatchCreditCached;310,9243
    mutable CAmount nImmatureWatchCreditCached;311,9283
    mutable CAmount nAvailableWatchCreditCached;312,9331
    mutable CAmount nChangeCached;313,9380
    CWalletTx(315,9416
    CWalletTx(320,9465
    void Init(325,9592
    ADD_SERIALIZE_METHODS;356,10525
    template <typename Stream,358,10553
    inline void SerializationOp(359,10604
    void MarkDirty(401,11824
    void BindWallet(414,12189
    bool IsFromMe(435,13137
class COutput457,13565
    const CWalletTx *tx;tx460,13589
    int i;461,13614
    int nDepth;462,13625
    bool fSpendable;463,13641
    bool fSolvable;464,13662
    COutput(466,13683
class CWalletKey478,14011
    CPrivKey vchPrivKey;481,14038
    int64_t nTimeCreated;482,14063
    int64_t nTimeExpires;483,14089
    std::string strComment;484,14115
    ADD_SERIALIZE_METHODS;490,14326
    template <typename Stream,492,14354
    inline void SerializationOp(493,14405
class CAccountingEntry508,14824
    std::string strAccount;511,14857
    CAmount nCreditDebit;512,14885
    int64_t nTime;513,14911
    std::string strOtherAccount;514,14930
    std::string strComment;515,14963
    mapValue_t mapValue;516,14991
    int64_t nOrderPos;517,15016
    uint64_t nEntryNo;518,15081
    CAccountingEntry(520,15105
    void SetNull(525,15160
    ADD_SERIALIZE_METHODS;536,15372
    template <typename Stream,538,15400
    inline void SerializationOp(539,15451
    std::vector<char> _ssExtra;583,16941
class CWallet 591,17144
    static std::atomic<bool> fFlushThreadRunning;594,17223
    CWalletDB *pwalletdbEncryption;pwalletdbEncryption603,17704
    int nWalletVersion;606,17836
    int nWalletMaxVersion;609,17984
    int64_t nNextResend;611,18012
    int64_t nLastResend;612,18037
    bool fBroadcastTransactions;613,18062
    typedef std::multimap<COutPoint,COutPoint620,18273
    typedef std::multimap<COutPoint, uint256> TxSpends;620,18273
    TxSpends mapTxSpends;621,18329
    CHDChain hdChain;633,18907
    bool fFileBacked;635,18930
    std::set<int64_t> setKeyPool;637,18953
    int64_t nTimeFirstKey;639,18988
    mutable CCriticalSection cs_wallet;660,19845
    const std::string strWalletFile;662,19886
    void LoadKeyPool(664,19924
    std::map<std::map678,20502
    std::map<CTxDestination, CKeyMetadata> mapKeyMetadata;678,20502
    typedef std::map<unsigned int,680,20562
    typedef std::map<unsigned int, CMasterKey> MasterKeyMap;680,20562
    MasterKeyMap mapMasterKeys;681,20623
    unsigned int nMasterKeyMaxID;682,20655
    CWallet(684,20690
    CWallet(689,20736
    ~CWallet(695,20877
    void SetNull(701,20977
    std::map<std::map715,21328
    std::map<uint256, CWalletTx> mapWallet;715,21328
    std::list<CAccountingEntry> laccentries;716,21372
    typedef std::pair<CWalletTx*CWalletTx718,21418
    typedef std::pair<CWalletTx*, CAccountingEntry*> TxPair;718,21418
    typedef std::multimap<int64_t,int64_t719,21479
    typedef std::multimap<int64_t, TxPair > TxItems;719,21479
    TxItems wtxOrdered;720,21532
    int64_t nOrderPosNext;722,21557
    std::map<std::map723,21584
    std::map<uint256, int> mapRequestCount;723,21584
    std::map<std::map725,21629
    std::map<CTxDestination, CAddressBookData> mapAddressBook;725,21629
    std::map<std::map727,21693
    std::map<std::string, CContractBookData> mapContractBook;727,21693
    CPubKey vchDefaultKey;729,21756
    std::set<COutPoint> setLockedCoins;731,21784
    std::map<std::map733,21825
    std::map<uint256, CTokenInfo> mapToken;733,21825
    std::map<std::map735,21870
    std::map<uint256, CTokenTx> mapTokenTx;735,21870
    bool CanSupportFeature(740,22067
    bool LoadKey(777,23915
    bool LoadMinVersion(781,24157
    static CFeeRate minTxFee;869,29551
    static CFeeRate fallbackFee;870,29581
    std::map<std::map897,30716
    void Inventory(937,32711
    void ResetRequestCount(948,33058
    unsigned int GetKeyPoolSize(954,33193
    int GetVersion(969,33876
            ChangeType status)> NotifyAddressBookChanged;993,34798
            ChangeType status)> NotifyTransactionChanged;1000,35047
            ChangeType status)> NotifyTokenTransactionChanged;1007,35302
    boost::signals2::signal<void (const std::string &title, int nProgress)> ShowProgress;1010,35407
            ChangeType status)> NotifyTokenChanged;1017,35749
            ChangeType status)> NotifyContractBookChanged;1022,35983
    bool GetBroadcastTransactions(1025,36107
    void SetBroadcastTransactions(1027,36244
    const CHDChain& GetHDChain(1055,37415
class CReserveKey 1083,38463
    CWallet* pwallet;1086,38518
    int64_t nIndex;1087,38540
    CPubKey vchPubKey;1088,38560
    CReserveKey(1090,38591
    ~CReserveKey(1096,38690
    void KeepScript(1104,38827
class CAccount1112,38958
    CPubKey vchPubKey;1115,38983
    CAccount(1117,39007
    void SetNull(1122,39054
    ADD_SERIALIZE_METHODS;1127,39117
    template <typename Stream,1129,39145
    inline void SerializationOp(1130,39196
bool CWallet::DummySignTx(DummySignTx1142,39658
class CTokenInfo1163,40211
    static const int CURRENT_VERSION=1166,40238
    int nVersion;1167,40278
    std::string strContractAddress;1168,40296
    std::string strTokenName;1169,40332
    std::string strTokenSymbol;1170,40362
    uint8_t nDecimals;1171,40394
    std::string strSenderAddress;1172,40417
    int64_t nCreateTime;1175,40493
    uint256 blockHash;1176,40518
    int64_t blockNumber;1177,40541
    CTokenInfo(1179,40567
    ADD_SERIALIZE_METHODS;1184,40616
    template <typename Stream,1186,40644
    inline void SerializationOp(1187,40695
    void SetNull(1202,41152
class CTokenTx1218,41488
    static const int CURRENT_VERSION=1221,41513
    int nVersion;1222,41553
    std::string strContractAddress;1223,41571
    std::string strSenderAddress;1224,41607
    std::string strReceiverAddress;1225,41641
    uint256 nValue;1226,41677
    uint256 transactionHash;1227,41697
    int64_t nCreateTime;1230,41768
    uint256 blockHash;1231,41793
    int64_t blockNumber;1232,41816
    std::string strLabel;1233,41841
    CTokenTx(1235,41868
    ADD_SERIALIZE_METHODS;1240,41915
    template <typename Stream,1242,41943
    inline void SerializationOp(1243,41994
    void SetNull(1259,42503
class CContractBookData1277,42901
    std::string name;1280,42935
    std::string abi;1281,42957
    CContractBookData(1283,42979

src/wallet/rpcwallet.cpp,2628
int64_t nWalletUnlockTime;33,752
static CCriticalSection cs_nWalletUnlockTime;34,779
std::string HelpRequiringPassphrase(36,826
bool EnsureWalletIsAvailable(43,1013
void EnsureWalletIsUnlocked(55,1272
void WalletTxToJSON(63,1603
string AccountFromValue(102,3141
UniValue getnewaddress(110,3369
CBitcoinAddress GetAccountAddress(152,5172
UniValue getaccountaddress(162,5511
UniValue getrawchangeaddress(194,6881
UniValue setaccount(229,7971
UniValue getaccount(275,9854
UniValue getaddressesbyaccount(307,11115
static void SendMoney(344,12495
UniValue sendtoaddress(387,14413
UniValue createcontract(500,19621
UniValue sendtocontract(701,28747
UniValue listaddressgroupings(904,37590
UniValue signmessage(955,39602
UniValue getreceivedbyaddress(1011,41797
UniValue getreceivedbyaccount(1069,44415
UniValue getbalance(1126,46964
UniValue getunconfirmedbalance(1215,51724
UniValue movecmd(1231,52175
UniValue sendfrom(1278,54580
UniValue sendmany(1345,58592
UniValue sendmanywithdupes(1461,64692
UniValue addmultisigaddress(1578,70821
class Witnessifier 1626,72945
    CScriptID result;1629,73011
    bool operator()(operator()1631,73034
    bool operator()(operator()1633,73107
    bool operator()(operator()1649,73692
UniValue addwitnessaddress(1671,74499
struct tallyitem1715,76034
    CAmount nAmount;1717,76053
    int nConf;1718,76074
    vector<uint256> txids;1719,76089
    bool fIsWatchonly;1720,76116
    tallyitem(1721,76139
UniValue ListReceived(1729,76271
UniValue listreceivedbyaddress(1849,80450
UniValue listreceivedbyaccount(1891,82636
static void MaybePushAddress(1928,84463
void ListTransactions(1935,84652
void AcentryToJSON(2010,87886
UniValue listtransactions(2027,88559
UniValue listaccounts(2155,96300
UniValue listsinceblock(2234,99958
UniValue gettransaction(2340,106205
UniValue abandontransaction(2476,112498
UniValue backupwallet(2511,114098
UniValue keypoolrefill(2537,115000
static void LockWallet(2574,116225
UniValue walletpassphrase(2581,116351
UniValue walletpassphrasechange(2648,119328
UniValue walletlock(2694,121322
UniValue encryptwallet(2733,122810
UniValue  reservebalance(2790,125713
UniValue lockunspent(2828,127113
UniValue listlockunspent(2917,131160
UniValue settxfee(2966,133001
UniValue getwalletinfo(2993,133917
UniValue resendwallettransactions(3041,136911
UniValue listunspent(3069,137915
UniValue fundrawtransaction(3193,144078
int64_t CalculateMaximumSignedTxSize(3355,153563
UniValue bumpfee(3375,154559
static const CRPCCommand commands[commands3675,170469
void RegisterWalletRPCCommands(3732,177355

src/wallet/walletdb.h,1132
#define BITCOIN_WALLET_WALLETDB_H7,273
static const bool DEFAULT_FLUSHWALLET 20,497
enum DBErrors36,798
    DB_LOAD_OK,38,814
    DB_CORRUPT,39,830
    DB_NONCRITICAL_ERROR,40,846
    DB_TOO_NEW,41,872
    DB_LOAD_FAIL,42,888
    DB_NEED_REWRITE43,906
class CHDChain47,963
    uint32_t nExternalChainCounter;50,988
    CKeyID masterKeyID;51,1024
    static const int CURRENT_VERSION 53,1073
    int nVersion;54,1115
    CHDChain(56,1134
    ADD_SERIALIZE_METHODS;57,1164
    template <typename Stream,58,1191
    inline void SerializationOp(59,1242
    void SetNull(66,1429
class CKeyMetadata74,1576
    static const int VERSION_BASIC=77,1605
    static const int VERSION_WITH_HDDATA=78,1643
    static const int CURRENT_VERSION=79,1688
    int nVersion;80,1746
    int64_t nCreateTime;81,1764
    std::string hdKeypath;82,1808
    CKeyID hdMasterKeyID;83,1863
    CKeyMetadata(85,1939
    CKeyMetadata(89,1989
    ADD_SERIALIZE_METHODS;95,2096
    template <typename Stream,97,2124
    inline void SerializationOp(98,2175
    void SetNull(108,2459
class CWalletDB 118,2666
    CWalletDB(121,2705

src/wallet/db.h,1408
#define BITCOIN_WALLET_DB_H7,267
static const unsigned int DEFAULT_WALLET_DBLOGSIZE 23,518
static const bool DEFAULT_WALLET_PRIVDB 24,576
class CDBEnv26,625
    bool fDbEnvInit;29,649
    bool fMockDb;30,670
    std::string strPath;33,842
    mutable CCriticalSection cs_db;38,901
    DbEnv *dbenv;dbenv39,937
    std::map<std::map40,955
    std::map<std::string, int> mapFileUseCount;40,955
    std::map<std::map41,1003
    std::map<std::string, Db*> mapDb;41,1003
    bool IsMock(48,1111
    enum VerifyResult 56,1363
    enum VerifyResult { VERIFY_OK,56,1363
                        RECOVER_OK,57,1398
                        RECOVER_FAIL 58,1434
    typedef std::pair<std::vector<std::vector67,1936
    typedef std::pair<std::vector<unsigned char>, std::vector<unsigned char> > KeyValPair;67,1936
    DbTxn* TxnBegin(78,2375
class CDB92,2690
    Db* pdb;95,2713
    std::string strFile;96,2726
    DbTxn* activeTxn;97,2751
    bool fReadOnly;98,2773
    bool fFlushOnClose;99,2793
    ~CDB(102,2923
protected:protected112,3056
    bool Read(114,3105
    template <typename K,147,4082
    bool Write(148,4120
    bool Erase(177,5026
    bool Exists(199,5596
    Dbc* GetCursor(218,6033
    int ReadAtCursor(229,6260
    bool TxnBegin(265,7457
    bool TxnCommit(276,7679
    bool TxnAbort(285,7864
    bool ReadVersion(294,8046
    bool WriteVersion(300,8172

src/wallet/coincontrol.h,574
#define BITCOIN_WALLET_COINCONTROL_H6,232
class CCoinControl11,337
    CTxDestination destChange;14,366
    bool fAllowOtherInputs;16,482
    bool fAllowWatchOnly;18,595
    CAmount nMinimumTotalFee;20,669
    bool fOverrideFeeRate;22,734
    CFeeRate nFeeRate;24,811
    int nConfirmTarget;26,900
    CCoinControl(28,925
    void SetNull(33,976
    bool HasSelected(45,1268
    bool IsSelected(50,1351
    void Select(55,1463
    void UnSelect(60,1553
    void UnSelectAll(65,1644
    void ListSelected(70,1709
    std::set<COutPoint> setSelected;76,1862

src/wallet/rpcdump.cpp,593
std::string static EncodeDumpTime(35,807
int64_t static DecodeDumpTime(39,920
std::string static EncodeDumpString(52,1433
std::string DecodeDumpString(64,1737
UniValue importprivkey(78,2171
void ImportScript(159,5342
void ImportAddress(181,6316
UniValue importaddress(190,6643
UniValue importprunedfunds(258,9645
UniValue removeprunedfunds(317,12214
UniValue importpubkey(353,13631
UniValue importwallet(411,15983
UniValue dumpprivkey(517,19884
UniValue dumpwallet(557,21481
UniValue ProcessImport(648,25081
int64_t GetImportTimestamp(965,38066
UniValue importmulti(979,38647

src/wallet/test/accounting_tests.cpp,62
BOOST_FIXTURE_TEST_SUITE(16,386
BOOST_AUTO_TEST_CASE(32,793

src/wallet/test/wallet_tests.cpp,408
#define RUN_TESTS 26,734
#define RANDOM_REPEATS 30,902
std::vector<std::unique_ptr<CWalletTx>> wtxn;34,950
typedef set<pair<const CWalletTx*,unsigned int> > CoinSet;36,997
static vector<COutput> vCoins;41,1146
static void add_coin(43,1178
static void empty_wallet(66,2059
static bool equal_sets(72,2133
BOOST_AUTO_TEST_CASE(78,2335
BOOST_AUTO_TEST_CASE(353,16574
BOOST_FIXTURE_TEST_CASE(374,17056

src/wallet/test/crypto_tests.cpp,389
BOOST_FIXTURE_TEST_SUITE(16,421
bool OldEncrypt(37,1190
bool OldDecrypt(65,2142
class TestCrypter93,3049
static void TestPassphraseSingle(96,3077
static void TestPassphrase(121,4442
static void TestDecrypt(131,5000
static void TestEncryptSingle(156,6260
static void TestEncrypt(176,7109
BOOST_AUTO_TEST_CASE(186,7628
BOOST_AUTO_TEST_CASE(202,8281
BOOST_AUTO_TEST_CASE(217,8828

src/wallet/test/wallet_test_fixture.h,160
#define BITCOIN_WALLET_TEST_FIXTURE_H6,228
struct WalletTestingSetup:WalletTestingSetup12,346
    WalletTestingSetup(13,395
    ~WalletTestingSetup(14,474

src/wallet/test/wallet_test_fixture.cpp,115
WalletTestingSetup::WalletTestingSetup(11,311
WalletTestingSetup::~WalletTestingSetup(~WalletTestingSetup24,635

src/wallet/rpcwallet.h,41
#define BITCOIN_WALLET_RPCWALLET_H6,225

src/wallet/wallet.cpp,11271
CWallet* pwalletMain 40,980
unsigned int nTxConfirmTarget 43,1092
bool bSpendZeroConfChange 44,1151
bool bZeroBalanceAddressToken 45,1210
bool fSendFreeTransactions 46,1278
bool fWalletRbf 47,1339
bool fNotUseChangeAddress 48,1377
bool fCheckForUpdates 49,1437
bool fBatchProcessingMode 50,1488
const char * DEFAULT_WALLET_DAT 52,1524
const uint32_t BIP32_HARDENED_KEY_LIMIT 53,1572
CAmount nReserveBalance 55,1627
struct ScriptsElement{ScriptsElement57,1657
    CScript script;58,1680
    uint256 hash;59,1700
std::map<int, ScriptsElement> scriptsMap;66,1866
CFeeRate CWallet::minTxFee 72,2034
CFeeRate CWallet::fallbackFee 79,2276
unsigned int GetStakeMaxCombineInputs(87,2540
int64_t GetStakeCombineThreshold(89,2597
unsigned int GetStakeSplitOutputs(91,2656
int64_t GetStakeSplitThreshold(93,2707
bool NeedToEraseScriptFromCache(95,2805
void CleanScriptCache(110,3405
bool ReadFromScriptCache(125,3889
void AddToScriptCache(143,4383
bool AddMPoSScript(154,4787
bool GetMPoSOutputScripts(214,6769
bool CreateMPoSOutputs(228,7207
struct CompareValueOnly253,7863
    bool operator()(operator()255,7889
std::string COutput::ToString(ToString262,8115
const CWalletTx* CWallet::GetWalletTx(GetWalletTx267,8282
CPubKey CWallet::GenerateNewKey(GenerateNewKey276,8527
void CWallet::DeriveNewChildKey(DeriveNewChildKey309,9502
bool CWallet::AddKeyPubKey(AddKeyPubKey349,11296
bool CWallet::AddCryptedKey(AddCryptedKey374,12095
bool CWallet::LoadKeyMetadata(LoadKeyMetadata395,12943
bool CWallet::LoadCryptedKey(LoadCryptedKey403,13175
void CWallet::UpdateTimeFirstKey(UpdateTimeFirstKey408,13359
bool CWallet::AddCScript(AddCScript420,13725
bool fWalletUnlockStakingOnly 432,14142
bool CWallet::LoadCScript(LoadCScript434,14182
bool CWallet::AddWatchOnly(AddWatchOnly450,14917
bool CWallet::AddWatchOnly(AddWatchOnly462,15285
bool CWallet::RemoveWatchOnly(RemoveWatchOnly468,15453
bool CWallet::LoadWatchOnly(LoadWatchOnly482,15801
bool CWallet::Unlock(Unlock487,15903
bool CWallet::ChangeWalletPassphrase(ChangeWalletPassphrase507,16592
void CWallet::SetBestChain(SetBestChain553,18915
bool CWallet::SetMinVersion(SetMinVersion559,19046
bool CWallet::SetMaxVersion(SetMaxVersion586,19830
set<uint256> CWallet::GetConflicts(GetConflicts598,20091
bool CWallet::HasWalletSpend(HasWalletSpend621,20830
void CWallet::Flush(Flush628,21051
bool CWallet::Verify(Verify633,21118
void CWallet::SyncMetaData(SyncMetaData692,23635
bool CWallet::IsSpent(IsSpent733,25100
void CWallet::AddToSpends(AddToSpends752,25777
void CWallet::RemoveFromSpends(RemoveFromSpends761,26038
void CWallet::AddToSpends(AddToSpends778,26494
void CWallet::RemoveFromSpends(RemoveFromSpends789,26801
bool CWallet::EncryptWallet(EncryptWallet800,27115
DBErrors CWallet::ReorderTransactions(ReorderTransactions900,30638
    typedef pair<CWalletTx*, CAccountingEntry*> TxPair;909,30949
    typedef multimap<int64_t, TxPair > TxItems;910,31005
int64_t CWallet::IncOrderPosNext(IncOrderPosNext977,33163
bool CWallet::AccountMove(AccountMove989,33484
bool CWallet::GetAccountPubkey(GetAccountPubkey1023,34396
void CWallet::MarkDirty(MarkDirty1061,35571
bool CWallet::MarkReplaced(MarkReplaced1070,35751
bool CWallet::AddToWallet(AddToWallet1099,36547
bool CWallet::LoadToWallet(LoadToWallet1222,40892
bool CWallet::AddToWalletIfInvolvingMe(AddToWalletIfInvolvingMe1256,42303
bool CWallet::AbandonTransaction(AbandonTransaction1290,43726
void CWallet::MarkConflicted(MarkConflicted1347,45849
void CWallet::SyncTransaction(SyncTransaction1406,48098
isminetype CWallet::IsMine(IsMine1434,48901
CAmount CWallet::GetDebit(GetDebit1451,49456
isminetype CWallet::IsMine(IsMine1467,49972
CAmount CWallet::GetCredit(GetCredit1472,50079
bool CWallet::IsChange(IsChange1479,50341
CAmount CWallet::GetChange(GetChange1501,51202
bool CWallet::IsMine(IsMine1508,51427
bool CWallet::IsFromMe(IsFromMe1516,51601
CAmount CWallet::GetDebit(GetDebit1521,51702
bool CWallet::IsAllFromMe(IsAllFromMe1533,52052
CAmount CWallet::GetCredit(GetCredit1554,52624
CAmount CWallet::GetChange(GetChange1566,52984
CPubKey CWallet::GenerateNewHDMasterKey(GenerateNewHDMasterKey1578,53308
bool CWallet::SetHDMasterKey(SetHDMasterKey1608,54061
bool CWallet::SetHDChain(SetHDChain1625,54490
bool CWallet::IsHDEnabled(IsHDEnabled1635,54763
int64_t CWalletTx::GetTxTime(GetTxTime1640,54838
int CWalletTx::GetRequestCount(GetRequestCount1646,54942
void CWalletTx::GetAmounts(GetAmounts1685,56251
void CWalletTx::GetAccountAmounts(GetAccountAmounts1741,58092
CBlockIndex* CWallet::ScanForWalletTransactions(ScanForWalletTransactions1785,59530
void CWallet::ReacceptWalletTransactions(ReacceptWalletTransactions1830,61584
bool CWalletTx::RelayWalletTransaction(RelayWalletTransaction1863,62647
set<uint256> CWalletTx::GetConflicts(GetConflicts1885,63378
CAmount CWalletTx::GetDebit(GetDebit1897,63623
CAmount CWalletTx::GetCredit(GetCredit1928,64359
CAmount CWalletTx::GetImmatureCredit(GetImmatureCredit1961,65300
CAmount CWalletTx::GetAvailableCredit(GetAvailableCredit1975,65704
CAmount CWalletTx::GetImmatureWatchOnlyCredit(GetImmatureWatchOnlyCredit2005,66600
CAmount CWalletTx::GetAvailableWatchOnlyCredit(GetAvailableWatchOnlyCredit2019,67046
CAmount CWalletTx::GetChange(GetChange2048,67950
bool CWalletTx::InMempool(InMempool2057,68144
bool CWalletTx::IsTrusted(IsTrusted2066,68287
bool CWalletTx::IsEquivalentTo(IsEquivalentTo2097,69247
std::vector<uint256> CWallet::ResendWalletTransactionsBefore(ResendWalletTransactionsBefore2106,69638
void CWallet::ResendWalletTransactions(ResendWalletTransactions2130,70418
CAmount CWallet::GetBalance(GetBalance2164,71333
CAmount CWallet::GetUnconfirmedBalance(GetUnconfirmedBalance2180,71734
CAmount CWallet::GetImmatureBalance(GetImmatureBalance2195,72205
CAmount CWallet::GetWatchOnlyBalance(GetWatchOnlyBalance2209,72572
CAmount CWallet::GetUnconfirmedWatchOnlyBalance(GetUnconfirmedWatchOnlyBalance2225,72991
CAmount CWallet::GetImmatureWatchOnlyBalance(GetImmatureWatchOnlyBalance2240,73480
void CWallet::AvailableCoins(AvailableCoins2254,73865
void CWallet::AvailableCoinsForStaking(AvailableCoinsForStaking2328,77666
bool CWallet::HaveAvailableCoinsForStaking(HaveAvailableCoinsForStaking2363,79080
static void ApproximateBestSubset(2370,79232
CAmount CWallet::GetStake(GetStake2417,81102
CAmount CWallet::GetWatchOnlyStake(GetWatchOnlyStake2430,81551
bool CWallet::SelectCoinsMinConf(SelectCoinsMinConf2443,82010
bool CWallet::SelectCoins(SelectCoins2547,85577
bool CWallet::SelectCoinsForStaking(SelectCoinsForStaking2616,89122
bool CWallet::FundTransaction(FundTransaction2655,90213
bool CWallet::CreateTransaction(CreateTransaction2711,92261
uint64_t CWallet::GetStakeWeight(GetStakeWeight3115,111593
bool CWallet::CreateCoinStake(CreateCoinStake3147,112371
bool CWallet::CommitTransaction(CommitTransaction3359,120977
void CWallet::ListAccountCreditDebit(ListAccountCreditDebit3398,122445
bool CWallet::AddAccountingEntry(AddAccountingEntry3403,122660
bool CWallet::AddAccountingEntry(AddAccountingEntry3410,122822
CAmount CWallet::GetRequiredFee(GetRequiredFee3422,123184
CAmount CWallet::GetMinimumFee(GetMinimumFee3427,123326
CAmount CWallet::GetMinimumFee(GetMinimumFee3433,123582
DBErrors CWallet::LoadWallet(LoadWallet3455,124427
DBErrors CWallet::ZapSelectTx(ZapSelectTx3482,125185
DBErrors CWallet::ZapWalletTx(ZapWalletTx3508,125914
bool CWallet::SetAddressBook(SetAddressBook3532,126589
bool CWallet::DelAddressBook(DelAddressBook3552,127554
bool CWallet::SetDefaultKey(SetDefaultKey3577,128414
bool CWallet::NewKeyPool(NewKeyPool3592,128718
bool CWallet::TopUpKeyPool(TopUpKeyPool3616,129370
void CWallet::ReserveKeyFromKeyPool(ReserveKeyFromKeyPool3647,130269
void CWallet::KeepKey(KeepKey3674,131056
void CWallet::ReturnKey(ReturnKey3685,131283
bool CWallet::GetKeyFromPool(GetKeyFromPool3695,131472
int64_t CWallet::GetOldestKeyPoolTime(GetOldestKeyPoolTime3714,131884
std::map<CTxDestination, CAmount> CWallet::GetAddressBalances(GetAddressBalances3732,132417
set< set<CTxDestination> > CWallet::GetAddressGroupings(GetAddressGroupings3772,133609
CAmount CWallet::GetAccountBalance(GetAccountBalance3865,136898
CAmount CWallet::GetAccountBalance(GetAccountBalance3871,137122
std::set<CTxDestination> CWallet::GetAccountAddresses(GetAccountAddresses3896,137970
void CWallet::DisableTransaction(DisableTransaction3911,138457
bool CReserveKey::GetReservedKey(GetReservedKey3934,139174
void CReserveKey::KeepKey(KeepKey3951,139540
void CReserveKey::ReturnKey(ReturnKey3959,139673
void CWallet::GetAllReserveKeys(GetAllReserveKeys3967,139810
void CWallet::UpdatedTransaction(UpdatedTransaction3987,140424
void CWallet::GetScriptForMining(GetScriptForMining3998,140762
void CWallet::LockCoin(LockCoin4009,141080
void CWallet::UnlockCoin(UnlockCoin4015,141217
void CWallet::UnlockAllCoins(UnlockAllCoins4021,141355
bool CWallet::IsLockedCoin(IsLockedCoin4027,141468
void CWallet::ListLockedCoins(ListLockedCoins4035,141662
class CAffectedKeysVisitor 4047,141994
    const CKeyStore &keystore;keystore4049,142069
    std::vector<CKeyID> &vKeys;vKeys4050,142100
    CAffectedKeysVisitor(4053,142141
    void Process(4055,142268
    void operator()(operator()4065,142597
    void operator()(operator()4070,142720
    void operator()(operator()4076,142880
void CWallet::GetKeyBirthTimes(GetKeyBirthTimes4079,142935
bool CWallet::AddDestData(AddDestData4133,145353
bool CWallet::EraseDestData(EraseDestData4144,145738
bool CWallet::LoadDestData(LoadDestData4153,146029
bool CWallet::GetDestData(GetDestData4159,146226
std::string CWallet::GetWalletHelpString(GetWalletHelpString4175,146724
CWallet* CWallet::CreateWalletFromFile(CreateWalletFromFile4218,151242
bool CWallet::InitLoadWallet(InitLoadWallet4399,158818
void CWallet::postInitProcess(postInitProcess4420,159297
bool CWallet::ParameterInteraction(ParameterInteraction4432,159708
bool CWallet::BackupWallet(BackupWallet4522,164165
bool CWallet::LoadToken(LoadToken4562,165627
bool CWallet::LoadTokenTx(LoadTokenTx4570,165763
bool CWallet::AddTokenEntry(AddTokenEntry4578,165907
bool CWallet::AddTokenTxEntry(AddTokenTxEntry4627,167023
CKeyPool::CKeyPool(CKeyPool4664,167964
CKeyPool::CKeyPool(CKeyPool4669,168013
CWalletKey::CWalletKey(CWalletKey4675,168117
void CMerkleTx::SetMerkleBranch(SetMerkleBranch4681,168239
int CMerkleTx::GetDepthInMainChain(GetDepthInMainChain4690,168474
int CMerkleTx::GetBlocksToMaturity(GetBlocksToMaturity4709,168994
bool CMerkleTx::AcceptToMemoryPool(AcceptToMemoryPool4717,169169
uint256 CTokenInfo::GetHash(GetHash4723,169352
uint256 CTokenTx::GetHash(GetHash4729,169443
bool CWallet::GetTokenTxDetails(GetTokenTxDetails4735,169532
bool CWallet::IsTokenTxMine(IsTokenTxMine4766,170436
bool CWallet::RemoveTokenEntry(RemoveTokenEntry4787,170949
bool CWallet::SetContractBook(SetContractBook4824,171833
bool CWallet::DelContractBook(DelContractBook4843,172532
bool CWallet::LoadContractData(LoadContractData4858,172951

src/wallet/db.cpp,739
CDBEnv bitdb;31,558
void CDBEnv::EnvShutdown(EnvShutdown33,573
void CDBEnv::Reset(Reset46,910
CDBEnv::CDBEnv(54,1044
CDBEnv::~CDBEnv(~CDBEnv59,1093
void CDBEnv::Close(Close66,1171
bool CDBEnv::Open(Open71,1216
void CDBEnv::MakeMock(MakeMock116,2890
CDBEnv::VerifyResult CDBEnv::Verify(Verify148,3907
static const char *HEADER_END HEADER_END166,4479
static const char *DATA_END DATA_END168,4553
bool CDBEnv::Salvage(Salvage170,4596
void CDBEnv::CheckpointLSN(CheckpointLSN231,6485
CDB::CDB(240,6657
void CDB::Flush(Flush299,8747
void CDB::Close(Close312,9055
void CDBEnv::CloseDb(CloseDb330,9316
bool CDBEnv::RemoveDb(RemoveDb344,9611
bool CDB::Rewrite(Rewrite353,9804
void CDBEnv::Flush(Flush437,13620

src/core_read.cpp,191
CScript ParseScript(23,674
bool DecodeHexTx(91,3138
bool DecodeHexBlk(124,3919
uint256 ParseHashUV(141,4291
uint256 ParseHashStr(149,4530
std::vector<unsigned char> ParseHexUV(159,4828

src/noui.h,29
#define BITCOIN_NOUI_H6,218

src/bitcoind.cpp,71
void WaitForShutdown(44,1447
bool AppInit(64,1885
int main(189,6067

src/merkleblock.cpp,461
CMerkleBlock::CMerkleBlock(CMerkleBlock12,347
CMerkleBlock::CMerkleBlock(CMerkleBlock38,1028
uint256 CPartialMerkleTree::CalcHash(CalcHash61,1615
void CPartialMerkleTree::TraverseAndBuild(TraverseAndBuild78,2273
uint256 CPartialMerkleTree::TraverseAndExtract(TraverseAndExtract96,3152
CPartialMerkleTree::CPartialMerkleTree(134,4822
CPartialMerkleTree::CPartialMerkleTree(148,5229
uint256 CPartialMerkleTree::ExtractMatches(ExtractMatches150,5305

src/arith_uint256.h,2179
#define BITCOIN_ARITH_UINT256_H7,271
class uint_error 18,437
    explicit uint_error(20,492
class base_uint25,655
    enum { WIDTH=28,684
    uint32_t pn[pn29,712
    base_uint(32,745
    base_uint(38,837
    base_uint& operator=(operator=44,953
    base_uint(51,1102
    bool operator!(61,1327
    const base_uint operator~(69,1486
    const base_uint operator-(77,1652
    base_uint& operator=(operator=88,1864
    base_uint& operator^=(operator^=97,2073
    base_uint& operator&=(operator&=104,2224
    base_uint& operator|=(operator|=111,2375
    base_uint& operator^=(operator^=118,2526
    base_uint& operator|=(operator|=125,2675
    base_uint& operator+=(operator+=135,2921
    base_uint& operator-=(operator-=147,3205
    base_uint& operator+=(operator+=153,3307
    base_uint& operator-=(operator-=161,3440
    base_uint& operator++(173,3710
    const base_uint operator++(182,3880
    base_uint& operator--(190,4033
    const base_uint operator--(199,4214
    friend inline const base_uint operator+(210,4449
    friend inline const base_uint operator-(211,4563
    friend inline const base_uint operator*(212,4677
    friend inline const base_uint operator/(213,4791
    friend inline const base_uint operator|(214,4905
    friend inline const base_uint operator&(215,5019
    friend inline const base_uint operator^(216,5133
    friend inline const base_uint operator>>(217,5247
    friend inline const base_uint operator<<(218,5358
    friend inline const base_uint operator*(219,5469
    friend inline bool operator==(operator==220,5575
    friend inline bool operator!=(operator!=221,5699
    friend inline bool operator>(222,5823
    friend inline bool operator<(223,5927
    friend inline bool operator>=(operator>=224,6031
    friend inline bool operator<=(operator<=225,6137
    friend inline bool operator==(operator==226,6243
    friend inline bool operator!=(operator!=227,6334
    unsigned int size(237,6697
    uint64_t GetLow64(248,6913
class arith_uint256 256,7070
    arith_uint256(258,7124
    arith_uint256(259,7147
    arith_uint256(260,7213
    explicit arith_uint256(261,7266

src/validation.cpp,9519
std::unique_ptr<QtumState> globalState;70,1653
std::shared_ptr<dev::eth::SealEngineFace> globalSealEngine;71,1693
bool fRecordLogOpcodes 72,1753
bool fIsVMlogFile 73,1785
CCriticalSection cs_main;76,1845
BlockMap mapBlockIndex;78,1872
std::set<std::pair<COutPoint, unsigned int>> setStakeSeen;79,1896
CChain chainActive;80,1955
CBlockIndex *pindexBestHeader pindexBestHeader81,1975
CWaitableCriticalSection csBestBlock;82,2013
CConditionVariable cvBlockChange;83,2051
int nScriptCheckThreads 84,2085
bool fReindex 86,2150
bool fTxIndex 87,2173
bool fLogEvents 88,2196
bool fHavePruned 89,2229
bool fPruneMode 90,2255
bool fIsBareMultisigStd 91,2280
bool fRequireStandard 92,2335
bool fCheckBlockIndex 93,2365
bool fCheckpointsEnabled 94,2396
size_t nCoinCacheUsage 95,2452
uint64_t nPruneTarget 96,2488
int64_t nMaxTipAge 97,2515
bool fEnableReplacement 98,2557
uint256 hashAssumeValid;100,2612
CFeeRate minRelayTxFee 102,2638
CAmount maxTxFee 103,2699
CScript COINBASE_FLAGS;111,3077
const std::string strMessageMagic 113,3102
    struct CBlockIndexWorkComparator118,3196
        bool operator()(operator()120,3239
    CBlockIndex *pindexBestInvalid;pindexBestInvalid139,3961
    std::set<std::set146,4261
    std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;146,4261
    std::multimap<std::multimap150,4513
    std::multimap<CBlockIndex*, CBlockIndex*> mapBlocksUnlinked;150,4513
    CCriticalSection cs_LastBlockFile;152,4579
    std::vector<CBlockFileInfo> vinfoBlockFile;153,4618
    int nLastBlockFile 154,4666
    bool fCheckForPruning 159,4902
    CCriticalSection cs_nBlockSequenceId;165,5094
    int32_t nBlockSequenceId 167,5217
    int32_t nBlockReverseSequenceId 169,5323
    arith_uint256 nLastPreciousChainwork 171,5445
    std::set<CBlockIndex*> setDirtyBlockIndex;174,5530
    std::set<int> setDirtyFileInfo;177,5615
class MemPoolConflictRemovalTracker187,6099
    std::vector<CTransactionRef> conflictedTxs;190,6146
    CTxMemPool &pool;pool191,6194
    MemPoolConflictRemovalTracker(194,6225
    void NotifyEntryRemoved(198,6421
    ~MemPoolConflictRemovalTracker(204,6628
CBlockIndex* FindForkInGlobalIndex(213,6990
CCoinsViewCache *pcoinsTip pcoinsTip231,7588
CBlockTreeDB *pblocktree pblocktree232,7623
StorageResults *pstorageresult pstorageresult233,7656
enum FlushStateMode 235,7696
    FLUSH_STATE_NONE,236,7718
    FLUSH_STATE_IF_NEEDED,237,7740
    FLUSH_STATE_PERIODIC,238,7767
    FLUSH_STATE_ALWAYS239,7793
bool IsFinalTx(247,8103
bool CheckFinalTx(260,8512
static std::pair<int, int64_t> CalculateSequenceLocks(298,10343
static bool EvaluateSequenceLocks(360,13315
bool SequenceLocks(370,13612
bool TestLockPointValidity(375,13824
bool CheckSequenceLocks(393,14421
unsigned int GetLegacySigOpCount(464,17625
unsigned int GetP2SHSigOpCount(478,17951
int64_t GetTransactionSigOpCost(493,18409
bool CheckTransaction(516,19029
void LimitMempoolSize(577,21770
std::string FormatStateMessage(589,22276
static bool IsCurrentForFeeEstimation(597,22524
bool AcceptToMemoryPoolWorker(609,22863
bool AcceptToMemoryPoolWithTime(1137,50130
bool IsConfirmedInNPrevBlocks(1153,51013
bool AcceptToMemoryPool(1167,51496
bool GetTransaction(1175,52049
bool CheckHeaderPoW(1230,53789
bool CheckHeaderPoS(1236,54003
bool CheckHeaderProof(1249,54470
bool CheckIndexProof(1259,54768
bool WriteBlockToDisk(1279,55589
bool ReadBlockFromDisk(1301,56291
bool ReadBlockFromDisk(1329,57289
bool ReadFromDisk(1339,57746
bool ReadFromDisk(1345,58018
bool ReadFromDisk(1365,58579
CAmount GetBlockSubsidy(1378,58905
bool IsInitialBlockDownload(1391,59311
CBlockIndex *pindexBestForkTip pindexBestForkTip1416,60143
static void AlertNotify(1418,60211
void CheckForkWarningConditions(1435,60871
void CheckForkWarningConditionsOnNewFork(1476,62691
void static InvalidChainFound(1509,64216
void static InvalidBlockFound(1526,65030
void UpdateCoins(1535,65334
void UpdateCoins(1549,65770
bool CScriptCheck::operator()(operator()1555,65920
int GetSpendHeight(1564,66280
namespace Consensus 1571,66471
bool CheckTxInputs(1572,66493
bool CheckInputs(1621,68580
bool UndoWriteToDisk(1690,72336
bool UndoReadFromDisk(1717,73220
bool AbortNode(1744,74067
bool AbortNode(1755,74461
enum DisconnectResult1763,74669
    DISCONNECT_OK,1765,74693
    DISCONNECT_UNCLEAN,1766,74730
    DISCONNECT_FAILED 1767,74812
int ApplyTxInUndo(1777,75132
static DisconnectResult DisconnectBlock(1800,76042
void static FlushBlockFile(1879,78831
void ThreadScriptCheck(1906,79551
VersionBitsCache versionbitscache;1912,79674
int32_t ComputeBlockVersion(1914,79710
class WarningBitsConditionChecker 1932,80358
    int bit;1935,80446
    WarningBitsConditionChecker(1938,80468
    int64_t BeginTime(1940,80528
    int64_t EndTime(1941,80603
    int Period(1942,80710
    int Threshold(1943,80808
    bool Condition(1945,80916
static ThresholdConditionCache warningcache[warningcache1954,81261
static int64_t nTimeCheck 1956,81329
static int64_t nTimeForks 1957,81360
static int64_t nTimeVerify 1958,81391
static int64_t nTimeConnect 1959,81423
static int64_t nTimeIndex 1960,81456
static int64_t nTimeCallbacks 1961,81487
static int64_t nTimeTotal 1962,81522
bool CheckSenderScript(1965,81631
std::vector<ResultExecute> CallContract(1973,81894
bool CheckMinGasPrice(2005,83284
bool CheckReward(2013,83522
valtype GetSenderAddress(2104,87554
UniValue vmLogToJSON(2148,89288
void writeVMlog(2187,90880
bool ByteCodeExec::performByteCode(performByteCode2217,91683
bool ByteCodeExec::processingResults(processingResults2239,92621
dev::eth::EnvInfo ByteCodeExec::BuildEVMEnvironment(BuildEVMEnvironment2280,94383
dev::Address ByteCodeExec::EthAddrFromScript(EthAddrFromScript2306,95144
bool QtumTxConverter::extractionQtumTransactions(extractionQtumTransactions2321,95762
bool QtumTxConverter::receiveStack(receiveStack2346,96599
bool QtumTxConverter::parseEthTXParams(parseEthTXParams2364,97126
QtumTransaction QtumTxConverter::createEthTX(createEthTX2411,98709
bool ConnectBlock(2430,99476
bool static FlushStateToDisk(2993,129475
void FlushStateToDisk(3097,134934
void PruneAndFlush(3102,135040
void static UpdateTip(3109,135234
bool static DisconnectTip(3175,138390
static int64_t nTimeReadFromDisk 3229,140933
static int64_t nTimeConnectTotal 3230,140971
static int64_t nTimeFlush 3231,141009
static int64_t nTimeChainState 3232,141040
static int64_t nTimePostConnect 3233,141076
struct ConnectTrace 3239,141249
    std::vector<std::vector3240,141271
    std::vector<std::pair<CBlockIndex*, std::shared_ptr<const CBlock> > > blocksConnected;3240,141271
bool static ConnectTip(3251,141747
static CBlockIndex* FindMostWorkChain(3314,145055
static void PruneBlockIndexCandidates(3369,147834
static bool ActivateBestChainStep(3384,148622
static void NotifyHeaderTip(3458,152016
bool ActivateBestChain(3485,152860
bool PreciousBlock(3568,156494
bool InvalidateBlock(3597,157664
bool ResetBlockFailureFlags(3637,159375
CBlockIndex* AddToBlockIndex(3670,160606
bool ReceivedBlockTransactions(3709,162399
bool FindBlockPos(3757,164476
bool FindUndoPos(3814,166554
bool CheckFirstCoinstakeOutput(3845,167666
bool SignBlock(3865,168235
bool GetBlockPublicKey(3909,170109
bool CheckBlockSignature(3954,171303
bool CheckBlockHeader(3968,171635
bool CheckBlock(3984,172355
static bool CheckIndexAgainstCheckpoint(4093,177854
bool IsWitnessEnabled(4107,178506
static int GetWitnessCommitmentIndex(4115,178850
void UpdateUncommittedBlockStructures(4128,179479
std::vector<unsigned char> GenerateCoinbaseCommitment(4140,180042
bool ContextualCheckBlockHeader(4169,181428
bool ContextualCheckBlock(4199,183151
static bool UpdateHashProof(4271,187107
static bool AcceptBlockHeader(4313,188802
bool ProcessNewBlockHeaders(4398,192834
static bool AcceptBlock(4426,193823
bool static IsCanonicalBlockSignature(4543,199468
bool CheckCanonicalBlockSignature(4552,199768
bool ProcessNewBlock(4563,200039
bool TestBlockValidity(4595,201125
uint64_t CalculateCurrentUsage(4637,202978
void PruneOneBlockFile(4647,203238
void UnlinkPrunedFiles(4679,204569
void FindFilesToPruneManual(4690,205097
void PruneBlockFilesManual(4713,206067
void FindFilesToPrune(4720,206299
bool CheckDiskSpace(4767,208209
FILE* OpenDiskFile(4778,208563
FILE* OpenBlockFile(4802,209306
FILE* OpenUndoFile(4806,209421
boost::filesystem::path GetBlockPosFilename(4810,209535
CBlockIndex * InsertBlockIndex(4815,209711
bool static LoadBlockIndexDB(4835,210257
CVerifyDB::CVerifyDB(CVerifyDB4952,215019
CVerifyDB::~CVerifyDB(~CVerifyDB4957,215106
bool CVerifyDB::VerifyDB(VerifyDB4962,215174
bool RewindBlockIndex(5079,221032
void UnloadBlockIndex(5168,224913
bool LoadBlockIndex(5194,225553
bool InitBlockIndex(5203,225743
bool LoadExternalBlockFile(5246,227701
void static CheckBlockIndex(5364,233555
std::string CBlockFileInfo::ToString(ToString5549,246068
CBlockFileInfo* GetBlockFileInfo(5554,246337
ThresholdState VersionBitsTipState(5559,246419
int VersionBitsTipStateSinceHeight(5565,246620
static const uint64_t MEMPOOL_DUMP_VERSION 5571,246832
bool LoadMempool(5573,246881
void DumpMempool(5639,249008
double GuessVerificationProgress(5687,250428
class CMainCleanup 5704,250873
        CMainCleanup(5706,250906
        CMainCleanup() {}~CMainCleanup(~CMainCleanup5706,250906
instance_of_cmaincleanup;5714,251178

src/init.cpp,2404
bool fFeeEstimatesInitialized 68,1645
static const bool DEFAULT_PROXYRANDOMIZE 69,1684
static const bool DEFAULT_REST_ENABLE 70,1733
static const bool DEFAULT_DISABLE_SAFEMODE 71,1780
static const bool DEFAULT_STOPAFTERBLOCKIMPORT 72,1832
std::unique_ptr<CConnman> g_connman;74,1889
std::unique_ptr<PeerLogicValidation> peerLogic;75,1926
static CZMQNotificationInterface* pzmqNotificationInterface 78,1990
#define MIN_CORE_FILEDESCRIPTORS 85,2225
#define MIN_CORE_FILEDESCRIPTORS 87,2266
enum BindFlags 91,2360
    BF_NONE 92,2377
    BF_EXPLICIT 93,2402
    BF_REPORT_ERROR 94,2435
    BF_WHITELIST 95,2468
static const char* FEE_ESTIMATES_FILENAME=98,2505
void StartShutdown(133,3749
bool ShutdownRequested(137,3803
class CCoinsViewErrorCatcher 147,4099
    CCoinsViewErrorCatcher(150,4164
    bool GetCoin(151,4237
static CCoinsViewDB *pcoinsdbview pcoinsdbview167,5098
static CCoinsViewErrorCatcher *pcoinscatcher pcoinscatcher168,5140
static std::unique_ptr<ECCVerifyHandle> globalVerifyHandle;169,5193
void Interrupt(171,5254
void Shutdown(183,5511
void HandleSIGTERM(281,8254
void HandleSIGHUP(286,8312
bool static Bind(291,8368
void OnRPCStarted(302,8751
void OnRPCStopped(307,8839
void OnRPCPreCommand(315,9043
std::string HelpMessage(324,9378
std::string LicenseInfo(522,31988
static void BlockNotifyCallback(544,33118
static bool fHaveGenesis 555,33450
static boost::mutex cs_GenesisWait;556,33484
static CConditionVariable condvar_GenesisWait;557,33520
static void BlockNotifyGenesisWait(559,33568
struct CImportingNow570,33857
    CImportingNow(572,33880
    ~CImportingNow(577,33973
void CleanupBlockRevFiles(590,34561
void ThreadImport(625,36136
bool InitSanityCheck(699,38872
bool AppInitServers(711,39143
void InitParameterInteraction(730,39665
static std::string ResolveErrMsg(793,42966
void InitLogging(798,43139
ServiceFlags nRelevantServices 811,43611
int nMaxConnections;812,43658
int nUserMaxConnections;813,43679
int nFD;814,43704
ServiceFlags nLocalServices 815,43713
[[noreturn]] static void new_handler_terminate(819,43761
bool AppInitBasicSetup(832,44214
#define PROCESS_DEP_ENABLE 851,45106
    typedef BOOL (WINAPI 853,45151
bool AppInitParameterInteraction(890,46190
static bool LockDataDirectory(1126,58033
bool AppInitSanityChecks(1149,59057
bool AppInitMain(1165,59569
void UnlockDataDirectory(1755,86456

src/httprpc.h,32
#define BITCOIN_HTTPRPC_H6,216

src/bloom.cpp,1107
#define LN2SQUARED 19,436
#define LN2 20,510
CBloomFilter::CBloomFilter(22,578
CBloomFilter::CBloomFilter(43,1617
inline unsigned int CBloomFilter::Hash(Hash53,1948
void CBloomFilter::insert(insert59,2253
void CBloomFilter::insert(insert72,2571
void CBloomFilter::insert(insert80,2793
bool CBloomFilter::contains(contains86,2926
bool CBloomFilter::contains(contains102,3326
bool CBloomFilter::contains(contains110,3565
void CBloomFilter::clear(clear116,3715
void CBloomFilter::reset(reset123,3821
bool CBloomFilter::IsWithinSizeConstraints(IsWithinSizeConstraints129,3912
bool CBloomFilter::IsRelevantAndUpdate(IsRelevantAndUpdate134,4050
void CBloomFilter::UpdateEmptyFull(UpdateEmptyFull204,6561
CRollingBloomFilter::CRollingBloomFilter(CRollingBloomFilter217,6818
static inline uint32_t RollingBloomHash(245,8577
void CRollingBloomFilter::insert(insert249,8778
void CRollingBloomFilter::insert(insert279,10053
bool CRollingBloomFilter::contains(contains285,10195
bool CRollingBloomFilter::contains(contains299,10699
void CRollingBloomFilter::reset(reset305,10858

src/random.h,426
#define BITCOIN_RANDOM_H7,264
class FastRandomContext 37,1018
    bool requires_seed;39,1053
    ChaCha20 rng;40,1077
    unsigned char bytebuf[bytebuf42,1096
    int bytebuf_size;43,1127
    uint64_t bitbuf;45,1150
    int bitbuf_size;46,1171
    void FillByteBuffer(50,1217
    void FillBitBuffer(59,1407
    uint64_t rand64(68,1610
    uint32_t rand32(75,1801
    uint32_t Rz;81,1960
    uint32_t Rw;82,1977

src/init.h,135
#define BITCOIN_INIT_H7,262
namespace boost14,339
enum HelpMessageMode 54,1784
    HMM_BITCOIND,55,1807
    HMM_BITCOIN_QT56,1825

src/net.h,10557
#define BITCOIN_NET_H7,261
namespace boost 43,901
static const int PING_INTERVAL 48,1062
static const int TIMEOUT_INTERVAL 50,1193
static const int FEELER_INTERVAL 52,1314
static const unsigned int MAX_INV_SZ 54,1420
static const unsigned int MAX_ADDR_TO_SEND 56,1542
static const unsigned int MAX_SUBVERSION_LENGTH 60,1789
static const int MAX_OUTBOUND_CONNECTIONS 62,1894
static const int MAX_ADDNODE_CONNECTIONS 64,1989
static const bool DEFAULT_LISTEN 66,2058
static const bool DEFAULT_UPNP 69,2136
static const bool DEFAULT_UPNP 71,2185
static const size_t MAPASKFOR_MAX_SZ 74,2282
static const size_t SETASKFOR_MAX_SZ 76,2414
static const unsigned int DEFAULT_MAX_PEER_CONNECTIONS 78,2528
static const uint64_t DEFAULT_MAX_UPLOAD_TARGET 80,2645
static const uint64_t MAX_UPLOAD_TIMEFRAME 82,2756
static const bool DEFAULT_BLOCKSONLY 84,2845
static const bool DEFAULT_FORCEDNSSEED 86,2892
static const size_t DEFAULT_MAXRECEIVEBUFFER 87,2940
static const size_t DEFAULT_MAXSENDBUFFER 88,2997
static const ServiceFlags REQUIRED_SERVICES 90,3055
static const unsigned int DEFAULT_MISBEHAVING_BANTIME 93,3182
typedef int NodeId;95,3277
struct AddedNodeInfo97,3298
    std::string strAddedNode;99,3321
    CService resolvedAddress;100,3351
    bool fConnected;101,3381
    bool fInbound;102,3402
struct CSerializedNetMsg109,3490
    std::vector<unsigned char> data;118,3834
    std::string command;119,3871
class CConnman123,3901
    enum NumConnections 127,3927
        CONNECTIONS_NONE 128,3953
        CONNECTIONS_IN 129,3983
        CONNECTIONS_OUT 130,4019
        CONNECTIONS_ALL 131,4056
    struct Options134,4126
    bool GetNetworkActive(155,4918
    void ForEachNode(165,5446
    void ForEachNode(175,5672
    template<typename Callable,184,5872
    void ForEachNodeThen(185,5928
    template<typename Callable,195,6162
    void ForEachNodeThen(196,6218
    struct ListenSocket 290,9897
        SOCKET socket;291,9923
        bool whitelisted;292,9946
        ListenSocket(294,9973
    CCriticalSection cs_totalBytesRecv;339,11451
    CCriticalSection cs_totalBytesSent;340,11491
    uint64_t nTotalBytesRecv;341,11531
    uint64_t nTotalBytesSent;342,11561
    uint64_t nMaxOutboundTotalBytesSentInCycle;345,11622
    uint64_t nMaxOutboundCycleStartTime;346,11670
    uint64_t nMaxOutboundLimit;347,11711
    uint64_t nMaxOutboundTimeframe;348,11743
    std::vector<CSubNet> vWhitelistedRange;352,11926
    CCriticalSection cs_vWhitelistedRange;353,11970
    unsigned int nSendBufferMaxSize;355,12014
    unsigned int nReceiveFloodSize;356,12051
    std::vector<ListenSocket> vhListenSocket;358,12088
    std::atomic<bool> fNetworkActive;359,12134
    banmap_t setBanned;360,12172
    CCriticalSection cs_setBanned;361,12196
    bool setBannedIsDirty;362,12231
    bool fAddressesInitialized;363,12258
    CAddrMan addrman;364,12290
    std::deque<std::string> vOneShots;365,12312
    CCriticalSection cs_vOneShots;366,12351
    std::vector<std::string> vAddedNodes;367,12386
    CCriticalSection cs_vAddedNodes;368,12428
    std::vector<CNode*> vNodes;369,12465
    std::list<CNode*> vNodesDisconnected;370,12497
    mutable CCriticalSection cs_vNodes;371,12539
    std::atomic<NodeId> nLastNodeId;372,12579
    ServiceFlags nLocalServices;375,12658
    ServiceFlags nRelevantServices;378,12738
    CSemaphore *semOutbound;semOutbound380,12775
    CSemaphore *semAddnode;semAddnode381,12804
    int nMaxConnections;382,12832
    int nMaxOutbound;383,12857
    int nMaxAddnode;384,12879
    int nMaxFeeler;385,12900
    std::atomic<int> nBestHeight;386,12920
    CClientUIInterface* clientInterface;387,12954
    const uint64_t nSeed0,390,13052
    const uint64_t nSeed0, nSeed1;390,13052
    bool fMsgProcWake;393,13138
    std::condition_variable condMsgProc;395,13162
    std::mutex mutexMsgProc;396,13203
    std::atomic<bool> flagInterruptMsgProc;397,13232
    CThreadInterrupt interruptNet;399,13277
    std::thread threadDNSAddressSeed;401,13313
    std::thread threadSocketHandler;402,13351
    std::thread threadOpenAddedConnections;403,13388
    std::thread threadOpenConnections;404,13432
    std::thread threadMessageHandler;405,13471
struct CombinerAll413,13764
    typedef bool result_type;415,13785
    bool operator()(operator()418,13841
struct CNodeSignals429,14057
    boost::signals2::signal<bool (CNode*, CConnman&, std::atomic<bool>&), CombinerAll> ProcessMessages;431,14079
    boost::signals2::signal<bool (CNode*, CConnman&, std::atomic<bool>&), CombinerAll> SendMessages;432,14183
    boost::signals2::signal<void (CNode*, CConnman&)> InitializeNode;433,14284
    boost::signals2::signal<void (NodeId, bool&)> FinalizeNode;434,14354
    LOCAL_NONE,443,14464
    LOCAL_IF,444,14493
    LOCAL_BIND,445,14551
    LOCAL_UPNP,446,14598
    LOCAL_MANUAL,447,14644
    LOCAL_MAX449,14710
struct LocalServiceInfo 477,15623
    int nScore;478,15649
    int nPort;479,15665
typedef std::map<std::string,std::string484,15783
typedef std::map<std::string, uint64_t> mapMsgCmdSize;484,15783
class CNodeStats486,15862
    NodeId nodeid;489,15889
    ServiceFlags nServices;490,15908
    bool fRelayTxes;491,15936
    int64_t nLastSend;492,15957
    int64_t nLastRecv;493,15980
    int64_t nTimeConnected;494,16003
    int64_t nTimeOffset;495,16031
    std::string addrName;496,16056
    int nVersion;497,16082
    std::string cleanSubVer;498,16100
    bool fInbound;499,16129
    bool fAddnode;500,16148
    int nStartingHeight;501,16167
    uint64_t nSendBytes;502,16192
    mapMsgCmdSize mapSendBytesPerMsgCmd;503,16217
    uint64_t nRecvBytes;504,16258
    mapMsgCmdSize mapRecvBytesPerMsgCmd;505,16283
    bool fWhitelisted;506,16324
    double dPingTime;507,16347
    double dPingWait;508,16369
    double dMinPing;509,16391
    std::string addrLocal;510,16412
    CAddress addr;511,16439
class CNetMessage 517,16465
    mutable CHash256 hasher;519,16494
    mutable uint256 data_hash;520,16523
    bool in_data;522,16562
    CDataStream hdrbuf;524,16640
    CMessageHeader hdr;525,16705
    unsigned int nHdrPos;526,16760
    CDataStream vRecv;528,16787
    unsigned int nDataPos;529,16848
    int64_t nTime;531,16876
    CNetMessage(533,16959
    bool complete(541,17269
    void SetVersion(550,17447
class CNode562,17724
    std::atomic<ServiceFlags> nServices;567,17787
    ServiceFlags nServicesExpected;568,17828
    SOCKET hSocket;569,17864
    size_t nSendSize;570,17884
    size_t nSendOffset;571,17944
    uint64_t nSendBytes;572,18017
    std::deque<std::vector<unsigned char>> vSendMsg;573,18042
    CCriticalSection cs_vSend;574,18095
    CCriticalSection cs_hSocket;575,18126
    CCriticalSection cs_vRecv;576,18159
    CCriticalSection cs_vProcessMsg;578,18191
    std::list<CNetMessage> vProcessMsg;579,18228
    size_t nProcessQueueSize;580,18268
    CCriticalSection cs_sendProcessing;582,18299
    std::deque<CInv> vRecvGetData;584,18340
    uint64_t nRecvBytes;585,18375
    std::atomic<int> nRecvVersion;586,18400
    std::atomic<int64_t> nLastSend;588,18436
    std::atomic<int64_t> nLastRecv;589,18472
    const int64_t nTimeConnected;590,18508
    std::atomic<int64_t> nTimeOffset;591,18542
    const CAddress addr;592,18580
    std::atomic<int> nVersion;593,18605
    std::string strSubVer,598,19011
    std::string strSubVer, cleanSubVer;598,19011
    CCriticalSection cs_SubVer;599,19051
    bool fWhitelisted;600,19126
    bool fFeeler;601,19186
    bool fOneShot;602,19264
    bool fAddnode;603,19283
    bool fClient;604,19302
    const bool fInbound;605,19320
    std::atomic_bool fSuccessfullyConnected;606,19345
    std::atomic_bool fDisconnect;607,19390
    bool fRelayTxes;612,19685
    bool fSentAddr;613,19731
    CSemaphoreGrant grantOutbound;614,19751
    CCriticalSection cs_filter;615,19786
    CBloomFilter* pfilter;616,19818
    std::atomic<int> nRefCount;617,19845
    const NodeId id;618,19877
    const uint64_t nKeyedNetGroup;620,19899
    std::atomic_bool fPauseRecv;621,19934
    std::atomic_bool fPauseSend;622,19967
    mapMsgCmdSize mapSendBytesPerMsgCmd;625,20012
    mapMsgCmdSize mapRecvBytesPerMsgCmd;626,20053
    uint256 hashContinue;629,20103
    std::atomic<int> nStartingHeight;630,20129
    std::vector<CAddress> vAddrToSend;633,20187
    CRollingBloomFilter addrKnown;634,20226
    bool fGetAddr;635,20261
    std::set<uint256> setKnown;636,20280
    int64_t nNextAddrSend;637,20312
    int64_t nNextLocalAddrSend;638,20339
    CRollingBloomFilter filterInventoryKnown;641,20401
    std::set<uint256> setInventoryTxToSend;644,20587
    std::vector<uint256> vInventoryBlockToSend;648,20800
    CCriticalSection cs_inventory;649,20848
    std::set<uint256> setAskFor;650,20883
    std::multimap<std::multimap651,20916
    std::multimap<int64_t, CInv> mapAskFor;651,20916
    int64_t nNextInvSend;652,20960
    std::vector<uint256> vBlockHashesToAnnounce;655,21091
    bool fSendMempool;657,21210
    std::atomic<int64_t> timeLastMempoolReq;660,21285
    std::atomic<int64_t> nLastBlockTime;663,21365
    std::atomic<int64_t> nLastTXTime;664,21406
    std::atomic<uint64_t> nPingNonceSent;668,21540
    std::atomic<int64_t> nPingUsecStart;670,21659
    std::atomic<int64_t> nPingUsecTime;672,21738
    std::atomic<int64_t> nMinPingUsecTime;674,21816
    std::atomic<bool> fPingQueued;676,21895
    CAmount minFeeFilter;678,21994
    CCriticalSection cs_feeFilter;679,22020
    CAmount lastSentFeeFilter;680,22055
    int64_t nextSendTimeFeeFilter;681,22086
    const uint64_t nLocalHostNonce;691,22443
    const ServiceFlags nLocalServices;693,22516
    const int nMyStartingHeight;694,22555
    int nSendVersion;695,22588
    std::list<CNetMessage> vRecvMsg;696,22610
    mutable CCriticalSection cs_addrName;698,22686
    std::string addrName;699,22728
    CService addrLocal;701,22755
    mutable CCriticalSection cs_addrLocal;702,22779
    NodeId GetId(705,22831
    uint64_t GetLocalNonce(709,22882
    int GetMyStartingHeight(713,22956
    int GetRefCount(717,23033
    void SetRecvVersion(725,23207
    int GetRecvVersion(729,23294
    CNode* AddRef(740,23563
    void Release(746,23638
    void AddAddressKnown(753,23693
    void PushAddress(758,23796
    void AddInventoryKnown(773,24371
    void PushInventory(781,24531
    void PushBlockHash(793,24884
    ServiceFlags GetLocalServices(805,25127

src/txmempool.h,6279
#define BITCOIN_TXMEMPOOL_H7,267
#undef foreach23,539
inline double AllowFreeThreshold(33,766
inline bool AllowFree(38,835
static const uint32_t MEMPOOL_HEIGHT 46,1106
struct LockPoints48,1158
    int height;53,1390
    int64_t time;54,1406
    CBlockIndex* maxInputBlock;58,1626
    LockPoints(60,1659
class CTxMemPoolEntry82,2490
    CTransactionRef tx;85,2523
    CAmount nFee;86,2547
    size_t nTxWeight;87,2636
    size_t nModSize;88,2736
    size_t nUsageSize;89,2807
    int64_t nTime;90,2870
    double entryPriority;91,2943
    unsigned int entryHeight;92,3014
    CAmount inChainInputValue;93,3089
    bool spendsCoinbase;94,3179
    int64_t sigOpCost;95,3264
    int64_t feeDelta;96,3317
    LockPoints lockPoints;97,3428
    CAmount nMinGasPrice;98,3512
    uint64_t nCountWithDescendants;105,3930
    uint64_t nSizeWithDescendants;106,4006
    CAmount nModFeesWithDescendants;107,4061
    uint64_t nCountWithAncestors;110,4196
    uint64_t nSizeWithAncestors;111,4230
    CAmount nModFeesWithAncestors;112,4263
    int64_t nSigOpCostWithAncestors;113,4298
    const CTransaction& GetTx(123,4706
    CTransactionRef GetSharedTx(124,4766
    const CAmount& GetFee(130,5050
    size_t GetTxWeight(132,5131
    int64_t GetTime(133,5184
    unsigned int GetHeight(134,5230
    int64_t GetSigOpCost(135,5289
    int64_t GetModifiedFee(136,5344
    size_t DynamicMemoryUsage(137,5407
    const LockPoints& GetLockPoints(138,5468
    const CAmount& GetMinGasPrice(139,5535
    uint64_t GetCountWithDescendants(151,6146
    uint64_t GetSizeWithDescendants(152,6225
    CAmount GetModFeesWithDescendants(153,6302
    bool GetSpendsCoinbase(155,6385
    uint64_t GetCountWithAncestors(157,6448
    uint64_t GetSizeWithAncestors(158,6523
    CAmount GetModFeesWithAncestors(159,6596
    int64_t GetSigOpCostWithAncestors(160,6674
    mutable size_t vTxHashesIdx;162,6757
struct update_descendant_state166,6902
    update_descendant_state(168,6935
    void operator() operator()172,7118
        int64_t modifySize;176,7246
        CAmount modifyFee;177,7274
        int64_t modifyCount;178,7301
struct update_ancestor_state181,7334
    update_ancestor_state(183,7365
    void operator() operator()187,7610
        int64_t modifySize;191,7754
        CAmount modifyFee;192,7782
        int64_t modifyCount;193,7809
        int64_t modifySigOpsCost;194,7838
struct update_fee_delta197,7876
    update_fee_delta(199,7902
    void operator() operator()201,7969
    int64_t feeDelta;204,8052
struct update_lock_points207,8078
    update_lock_points(209,8106
    void operator() operator()211,8167
    const LockPoints& lp;214,8246
struct mempoolentry_txid218,8324
    typedef uint256 result_type;220,8351
    result_type operator() operator()221,8384
class CompareTxMemPoolEntryByDescendantScore231,8646
    bool operator()(operator()234,8701
    bool UseDescendantScore(256,9586
class CompareTxMemPoolEntryByScore268,9951
    bool operator()(operator()271,9996
class CompareTxMemPoolEntryByEntryTime282,10338
    bool operator()(operator()285,10387
class CompareTxMemPoolEntryByAncestorFee291,10523
    bool operator()(operator()294,10574
class CompareTxMemPoolEntryByAncestorFeeOrGasPrice314,11131
    bool operator()(operator()317,11192
struct descendant_score 361,13500
struct entry_time 362,13528
struct mining_score 363,13550
struct ancestor_score 364,13574
struct ancestor_score_or_gas_price 365,13600
struct TxMempoolInfo372,13722
    CTransactionRef tx;375,13779
    int64_t nTime;378,13857
    CFeeRate feeRate;381,13916
    int64_t nFeeDelta;384,13965
enum class MemPoolRemovalReason 390,14101
    UNKNOWN 391,14135
    EXPIRY,392,14191
    SIZELIMIT,393,14233
    REORG,394,14279
    BLOCK,395,14327
    CONFLICT,396,14366
    REPLACED 397,14434
class SaltedTxidHasher400,14483
    const uint64_t k0,404,14533
    const uint64_t k0, k1;404,14533
    size_t operator()(operator()409,14594
class CTxMemPool494,19167
    uint32_t nCheckFrequency;497,19195
    unsigned int nTransactionsUpdated;498,19275
    CBlockPolicyEstimator* minerPolicyEstimator;499,19314
    uint64_t totalTxSize;501,19364
    uint64_t cachedInnerUsage;502,19525
    mutable int64_t lastRollingFeeUpdate;504,19640
    mutable bool blockSinceLastRollingFeeBump;505,19682
    mutable double rollingMinimumFeeRate;506,19729
    static const int ROLLING_FEE_HALFLIFE 512,19897
        CTxMemPoolEntry,515,20025
        boost::multi_index::indexed_by<boost::multi_index::indexed_by516,20050
    > indexed_transaction_set;550,21682
    mutable CCriticalSection cs;552,21714
    indexed_transaction_set mapTx;553,21747
    typedef indexed_transaction_set::nth_index<0>::type::iterator txiter;555,21783
    std::vector<std::vector556,21857
    std::vector<std::pair<uint256, txiter> > vTxHashes;556,21857
    struct CompareIteratorByHash 558,21975
        bool operator()(operator()559,22010
    typedef std::set<txiter,txiter563,22157
    typedef std::set<txiter, CompareIteratorByHash> setEntries;563,22157
    typedef std::map<txiter,txiter568,22356
    typedef std::map<txiter, setEntries,568,22356
    typedef std::map<txiter, setEntries, CompareIteratorByHash> cacheMap;568,22356
    struct TxLinks 570,22431
        setEntries parents;571,22452
        setEntries children;572,22480
    typedef std::map<txiter,txiter575,22517
    typedef std::map<txiter, TxLinks,575,22517
    typedef std::map<txiter, TxLinks, CompareIteratorByHash> txlinksMap;575,22517
    txlinksMap mapLinks;576,22590
    indirectmap<indirectmap584,22837
    indirectmap<COutPoint, const CTransaction*> mapNextTx;584,22837
    std::map<std::map585,22896
    std::map<uint256, std::pair<double, CAmount> > mapDeltas;585,22896
    void setSanityCheck(599,23403
    unsigned long size(689,28748
    uint64_t GetTotalTxSize(695,28833
    bool exists(701,28922
    bool exists(707,29030
class CCoinsViewMemPool 788,32862
    const CTxMemPool& mempool;791,32925
typedef std::pair<double,double800,33209
typedef std::pair<double, CTxMemPool::txiter> TxCoinAgePriority;800,33209
struct TxCoinAgePriorityCompare802,33275
    bool operator()(operator()804,33309

src/validation.h,6152
#define BITCOIN_VALIDATION_H7,268
using valtype 51,1289
using ExtractQtumTX 52,1333
static const uint64_t MINIMUM_GAS_LIMIT 73,1904
static const uint64_t MEMPOOL_MIN_GAS_LIMIT 75,1954
static const bool DEFAULT_WHITELISTRELAY 78,2051
static const bool DEFAULT_WHITELISTFORCERELAY 80,2148
static const unsigned int DEFAULT_MIN_RELAY_TX_FEE 82,2272
static const CAmount DEFAULT_TRANSACTION_MAXFEE 84,2355
static const CAmount HIGH_TX_FEE_PER_KB 86,2493
static const CAmount HIGH_MAX_TX_FEE 88,2628
static const unsigned int DEFAULT_ANCESTOR_LIMIT 90,2768
static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT 92,2913
static const unsigned int DEFAULT_DESCENDANT_LIMIT 94,3053
static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT 96,3195
static const unsigned int DEFAULT_MEMPOOL_EXPIRY 98,3343
static const unsigned int MAX_BLOCKFILE_SIZE 100,3458
static const unsigned int BLOCKFILE_CHUNK_SIZE 102,3599
static const unsigned int UNDOFILE_CHUNK_SIZE 104,3741
static const int MAX_SCRIPTCHECK_THREADS 107,3866
static const int DEFAULT_SCRIPTCHECK_THREADS 109,3979
static const int MAX_BLOCKS_IN_TRANSIT_PER_PEER 111,4113
static const unsigned int BLOCK_STALLING_TIMEOUT 113,4275
static const unsigned int MAX_HEADERS_RESULTS 116,4522
static const int MAX_CMPCTBLOCK_DEPTH 119,4765
static const int MAX_BLOCKTXN_DEPTH 121,4893
static const unsigned int BLOCK_DOWNLOAD_WINDOW 126,5319
static const unsigned int DATABASE_WRITE_INTERVAL 128,5452
static const unsigned int DATABASE_FLUSH_INTERVAL 130,5583
static const unsigned int MAX_REJECT_MESSAGE_LENGTH 132,5691
static const unsigned int AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL 134,5816
static const unsigned int AVG_ADDRESS_BROADCAST_INTERVAL 136,5960
static const unsigned int INVENTORY_BROADCAST_INTERVAL 139,6183
static const unsigned int INVENTORY_BROADCAST_MAX 142,6363
static const unsigned int AVG_FEEFILTER_BROADCAST_INTERVAL 144,6511
static const unsigned int MAX_FEEFILTER_CHANGE_DELAY 146,6648
static const int64_t BLOCK_DOWNLOAD_TIMEOUT_BASE 148,6807
static const int64_t BLOCK_DOWNLOAD_TIMEOUT_PER_PEER 150,6951
static const unsigned int DEFAULT_LIMITFREERELAY 152,7015
static const bool DEFAULT_RELAYPRIORITY 153,7069
static const int64_t DEFAULT_MAX_TIP_AGE 154,7117
static const int64_t MAX_FEE_ESTIMATION_TIP_AGE 156,7375
static const bool DEFAULT_PERMIT_BAREMULTISIG 159,7478
static const bool DEFAULT_CHECKPOINTS_ENABLED 160,7532
static const bool DEFAULT_TXINDEX 161,7586
static const bool DEFAULT_LOGEVENTS 162,7629
static const unsigned int DEFAULT_BANSCORE_THRESHOLD 163,7674
static const bool DEFAULT_ENABLE_REPLACEMENT 166,7774
static const bool DEFAULT_FEEFILTER 168,7863
static const unsigned int MAX_BLOCKS_TO_ANNOUNCE 171,7995
static const int MAX_UNCONNECTING_HEADERS 174,8127
static const bool DEFAULT_PEERBLOOMFILTERS 176,8176
static const uint64_t DEFAULT_GAS_LIMIT_OP_CREATE=178,8228
static const uint64_t DEFAULT_GAS_LIMIT_OP_SEND=179,8287
static const CAmount DEFAULT_GAS_PRICE=180,8343
static const CAmount MAX_RPC_GAS_PRICE=181,8399
static const size_t MAX_CONTRACT_VOUTS 183,8456
struct BlockHasher185,8512
    size_t operator()(operator()187,8533
typedef boost::unordered_map<uint256,uint256193,8709
typedef boost::unordered_map<uint256, CBlockIndex*CBlockIndex193,8709
typedef boost::unordered_map<uint256, CBlockIndex*, BlockHasher> BlockMap;193,8709
static const uint64_t nMinDiskSpace 228,10207
static const unsigned int MIN_BLOCKS_TO_KEEP 238,10662
static const signed int DEFAULT_CHECKBLOCKS 240,10715
static const unsigned int DEFAULT_CHECKLEVEL 241,10764
static const uint64_t MIN_DISK_SPACE_FOR_BLOCK_FILES 251,11368
inline int64_t FutureDrift(253,11443
struct CHeightTxIndexIteratorKey 381,18809
    unsigned int height;382,18844
    size_t GetSerializeSize(384,18870
    void Serialize(388,18985
    void Unserialize(392,19097
    CHeightTxIndexIteratorKey(396,19176
    CHeightTxIndexIteratorKey(400,19263
    void SetNull(404,19323
struct CHeightTxIndexKey 409,19374
    unsigned int height;410,19401
    dev::h160 address;411,19426
    size_t GetSerializeSize(413,19450
    void Serialize(417,19566
    void Unserialize(422,19710
    CHeightTxIndexKey(429,19862
    CHeightTxIndexKey(434,19989
    void SetNull(438,20041
namespace Consensus 490,22286
class CScriptCheck549,24558
    CScript scriptPubKey;552,24588
    CAmount amount;553,24614
    const CTransaction *ptxTo;ptxTo554,24634
    unsigned int nIn;555,24665
    unsigned int nFlags;556,24687
    bool cacheStore;557,24712
    ScriptError error;558,24733
    PrecomputedTransactionData *txdata;txdata559,24756
    CScriptCheck(562,24805
    CScriptCheck(563,24919
    void swap(569,25326
    ScriptError GetScriptError(580,25702
class CVerifyDB 637,29917
static const unsigned int REJECT_INTERNAL 685,31678
static const unsigned int REJECT_HIGHFEE 687,31791
static const unsigned int REJECT_ALREADY_KNOWN 689,31911
static const unsigned int REJECT_CONFLICT 691,32029
struct EthTransactionParams{EthTransactionParams719,33285
    VersionVM version;720,33314
    dev::u256 gasLimit;721,33337
    dev::u256 gasPrice;722,33361
    valtype code;723,33385
    dev::Address receiveAddress;724,33403
    bool operator!=(operator!=726,33437
struct ByteCodeExecResult{ByteCodeExecResult735,33754
    uint64_t usedGas 736,33781
    CAmount refundSender 737,33807
    std::vector<CTxOut> refundOutputs;738,33837
    std::vector<CTransaction> valueTransfers;739,33876
class QtumTxConverter{QtumTxConverter742,33926
    QtumTxConverter(746,33959
    const CTransaction txBit;758,34399
    const CCoinsViewCache* view;759,34429
    std::vector<valtype> stack;760,34462
    opcodetype opcode;761,34494
    const std::vector<CTransactionRef> *blockTransactions;blockTransactions762,34517
class ByteCodeExec 766,34581
    ByteCodeExec(770,34612
    std::vector<ResultExecute>& getResult(776,34924
    std::vector<QtumTransaction> txs;784,35105
    std::vector<ResultExecute> result;786,35144
    const CBlock& block;788,35184
    const uint64_t blockGasLimit;790,35210

src/random.cpp,446
static void RandFailure(27,628
static inline int64_t GetPerformanceCounter(33,728
void RandAddSeed(46,1009
static void RandAddSeedPerfmon(54,1226
static void GetOSRand(95,2664
void GetRandBytes(125,3345
void GetStrongRandBytes(132,3463
uint64_t GetRand(153,3889
int GetRandInt(168,4328
uint256 GetRandHash(173,4384
void FastRandomContext::RandomSeed(RandomSeed180,4501
FastRandomContext::FastRandomContext(FastRandomContext187,4638

src/pos.cpp,225
uint256 ComputeStakeModifier(25,838
bool CheckStakeKernelHash(54,2196
bool CheckProofOfStake(102,3944
bool CheckCoinStakeTimestamp(135,5802
bool CheckKernel(141,5911
bool CheckKernel(147,6165
void CacheKernel(183,7689

src/primitives/transaction.cpp,1070
std::string COutPoint::ToString(ToString12,349
CTxIn::CTxIn(CTxIn17,470
CTxIn::CTxIn(CTxIn24,635
std::string CTxIn::ToString(ToString31,832
CTxOut::CTxOut(CTxOut46,1244
std::string CTxOut::ToString(ToString52,1371
CMutableTransaction::CMutableTransaction(57,1544
CMutableTransaction::CMutableTransaction(58,1646
uint256 CMutableTransaction::GetHash(GetHash60,1792
uint256 CTransaction::ComputeHash(ComputeHash65,1922
uint256 CTransaction::GetWitnessHash(GetWitnessHash70,2049
CTransaction::CTransaction(76,2273
CTransaction::CTransaction(77,2384
CTransaction::CTransaction(78,2543
CAmount CTransaction::GetValueOut(GetValueOut80,2720
double CTransaction::ComputePriority(ComputePriority92,3097
unsigned int CTransaction::CalculateModifiedSize(CalculateModifiedSize100,3310
unsigned int CTransaction::GetTotalSize(GetTotalSize118,4176
std::string CTransaction::ToString(ToString123,4298
int64_t GetTransactionWeight(141,4918
bool CTransaction::HasCreateOrCall(HasCreateOrCall147,5228
bool CTransaction::HasOpSpend(HasOpSpend158,5441

src/primitives/block.cpp,192
uint256 CBlockHeader::GetHash(GetHash13,370
uint256 CBlockHeader::GetHashWithoutSign(GetHashWithoutSign18,446
std::string CBlock::ToString(ToString23,570
int64_t GetBlockWeight(45,1328

src/primitives/transaction.h,3171
#define BITCOIN_PRIMITIVES_TRANSACTION_H7,280
static const int SERIALIZE_TRANSACTION_NO_WITNESS 14,414
static const int WITNESS_SCALE_FACTOR 16,479
class COutPoint19,609
    uint256 hash;22,635
    uint32_t n;23,653
    COutPoint(25,670
    COutPoint(26,701
    ADD_SERIALIZE_METHODS;28,774
    template <typename Stream,30,802
    inline void SerializationOp(31,853
    void SetNull(36,974
    bool IsNull(37,1032
    friend bool operator<(39,1107
    friend bool operator==(operator==45,1279
    friend bool operator!=(operator!=50,1408
class CTxIn62,1725
    COutPoint prevout;65,1747
    CScript scriptSig;66,1770
    uint32_t nSequence;67,1793
    CScriptWitness scriptWitness;68,1817
    static const uint32_t SEQUENCE_FINAL 72,1995
    static const uint32_t SEQUENCE_LOCKTIME_DISABLE_FLAG 77,2199
    static const uint32_t SEQUENCE_LOCKTIME_TYPE_FLAG 82,2469
    static const uint32_t SEQUENCE_LOCKTIME_MASK 86,2676
    static const int SEQUENCE_LOCKTIME_GRANULARITY 95,3161
    CTxIn(97,3218
    ADD_SERIALIZE_METHODS;105,3503
    template <typename Stream,107,3531
    inline void SerializationOp(108,3582
    friend bool operator==(operator==114,3762
    friend bool operator!=(operator!=121,3969
class CTxOut132,4231
    CAmount nValue;135,4254
    CScript scriptPubKey;136,4274
    CTxOut(138,4301
    ADD_SERIALIZE_METHODS;145,4408
    template <typename Stream,147,4436
    inline void SerializationOp(148,4487
    void SetNull(153,4639
    bool IsNull(159,4722
    void SetEmpty(164,4790
    bool IsEmpty(170,4873
    CAmount GetDustThreshold(174,4965
    bool IsDust(206,6358
    friend bool operator==(operator==211,6555
    friend bool operator!=(operator!=217,6726
template<typename Stream,244,7309
inline void UnserializeTransaction(245,7352
template<typename Stream,279,8433
inline void SerializeTransaction(280,8476
class CTransaction312,9385
    static const int32_t CURRENT_VERSION=316,9450
    static const int32_t MAX_STANDARD_VERSION=322,9786
    const int32_t nVersion;329,10175
    const std::vector<CTxIn> vin;330,10203
    const std::vector<CTxOut> vout;331,10237
    const uint32_t nLockTime;332,10273
    const uint256 hash;336,10337
    inline void Serialize(349,10675
    CTransaction(356,10972
    bool IsNull(358,11074
    const uint256& GetHash(362,11151
    bool IsCoinBase(392,12187
    bool IsCoinStake(397,12309
    bool IsNormalTx(403,12539
    friend bool operator==(operator==409,12679
    friend bool operator!=(operator!=414,12798
    bool HasWitness(421,12952
struct CMutableTransaction433,13213
    int32_t nVersion;435,13242
    std::vector<CTxIn> vin;436,13264
    std::vector<CTxOut> vout;437,13292
    uint32_t nLockTime;438,13322
    inline void Serialize(444,13455
    inline void Unserialize(450,13579
    CMutableTransaction(455,13700
    friend bool operator==(operator==464,13983
    bool HasWitness(469,14126
typedef std::shared_ptr<const CTransaction> CTransactionRef;480,14345
static inline CTransactionRef MakeTransactionRef(481,14406
template <typename Tx> static inline CTransactionRef MakeTransactionRef(482,14508

src/primitives/block.h,1579
#define BITCOIN_PRIMITIVES_BLOCK_H7,274
static const int SER_WITHOUT_SIGNATURE 13,391
class CBlockHeader22,856
    int32_t nVersion;26,899
    uint256 hashPrevBlock;27,921
    uint256 hashMerkleRoot;28,948
    uint32_t nTime;29,976
    uint32_t nBits;30,996
    uint32_t nNonce;31,1016
    uint256 hashStateRoot;32,1037
    uint256 hashUTXORoot;33,1072
    COutPoint prevoutStake;35,1144
    std::vector<unsigned char> vchBlockSig;36,1172
    CBlockHeader(37,1216
    ADD_SERIALIZE_METHODS;42,1267
    template <typename Stream,44,1295
    inline void SerializationOp(45,1346
    void SetNull(59,1807
    bool IsNull(73,2128
    int64_t GetBlockTime(82,2265
    virtual bool IsProofOfStake(88,2413
    virtual bool IsProofOfWork(93,2512
    virtual uint32_t StakeTime(98,2602
    CBlockHeader& operator=(operator=108,2774
class CBlock 128,3452
    std::vector<CTransactionRef> vtx;132,3521
    mutable bool fChecked;135,3579
    CBlock(137,3607
    CBlock(142,3652
    ADD_SERIALIZE_METHODS;148,3764
    template <typename Stream,150,3792
    inline void SerializationOp(151,3843
    void SetNull(156,3982
    std::pair<std::pair163,4094
    std::pair<COutPoint, unsigned int> GetProofOfStake(163,4094
    CBlockHeader GetBlockHeader(168,4298
struct CBlockLocator191,5107
    std::vector<uint256> vHave;193,5130
    CBlockLocator(195,5163
    CBlockLocator(197,5187
    ADD_SERIALIZE_METHODS;202,5280
    template <typename Stream,204,5308
    inline void SerializationOp(205,5359
    void SetNull(212,5573
    bool IsNull(217,5628

src/clientversion.cpp,426
#define CLIENT_VERSION_SUFFIX 21,544
#define GIT_COMMIT_ID 47,1625
#define GIT_COMMIT_DATE 48,1661
#define BUILD_DESC_WITH_SUFFIX(51,1708
#define BUILD_DESC_FROM_COMMIT(54,1891
#define BUILD_DESC_FROM_UNKNOWN(57,2061
#define BUILD_DESC 62,2258
#define BUILD_DESC 64,2434
#define BUILD_DESC 66,2588
static std::string FormatVersion(72,2804
std::string FormatFullVersion(80,3129
std::string FormatSubVersion(88,3322

src/versionbits.h,808
#define BITCOIN_CONSENSUS_VERSIONBITS6,228
static const int32_t VERSIONBITS_LAST_OLD_BLOCK_VERSION 12,368
static const int32_t VERSIONBITS_TOP_BITS 14,487
static const int32_t VERSIONBITS_TOP_MASK 16,606
static const int32_t VERSIONBITS_NUM_BITS 18,708
enum ThresholdState 20,757
    THRESHOLD_DEFINED,21,779
    THRESHOLD_STARTED,22,802
    THRESHOLD_LOCKED_IN,23,825
    THRESHOLD_ACTIVE,24,850
    THRESHOLD_FAILED,25,872
typedef std::map<const CBlockIndex*CBlockIndex31,1125
typedef std::map<const CBlockIndex*, ThresholdState> ThresholdConditionCache;31,1125
struct BIP9DeploymentInfo 33,1204
    const char *name;name35,1259
    bool gbt_force;37,1360
class AbstractThresholdConditionChecker 45,1543
struct VersionBitsCache59,2376
    ThresholdConditionCache caches[caches61,2402

src/cuckoocache.h,1144
#define _BITCOIN_CUCKOOCACHE_H_6,207
class bit_packed_atomic_flags42,1290
    std::unique_ptr<std::atomic<uint8_t>[]> mem;44,1322
    bit_packed_atomic_flags(61,1905
    inline void setup(79,2528
    inline void bit_set(92,2880
    inline void bit_unset(103,3264
    inline bool bit_is_set(113,3563
template <typename Element,159,4979
class cache160,5022
    std::vector<Element> table;164,5086
    uint32_t size;167,5186
    mutable bit_packed_atomic_flags collection_flags;171,5353
    mutable std::vector<bool> epoch_flags;177,5597
    uint32_t epoch_heuristic_counter;184,5945
    uint32_t epoch_size;194,6491
    uint32_t hash_mask;200,6712
    uint8_t depth_limit;204,6850
    const Hash hash_function;210,7061
    inline std::array<std::array218,7382
    inline std::array<uint32_t, 8> compute_hashes(218,7382
    constexpr uint32_t invalid(232,8109
    inline void allow_erase(241,8358
    inline void please_keep(250,8641
    void epoch_check(264,9277
    cache(302,11038
    uint32_t setup(315,11508
    uint32_t setup_bytes(343,12786
    inline void insert(368,13580
    inline bool contains(443,16507

src/netbase.cpp,1295
#define MSG_NOSIGNAL 29,719
static proxyType proxyInfo[proxyInfo33,762
static proxyType nameProxy;34,799
static CCriticalSection cs_proxyInfos;35,827
int nConnectTimeout 36,866
bool fNameLookup 37,913
static const int SOCKS5_RECV_TIMEOUT 40,1038
enum Network ParseNetwork(43,1142
std::string GetNetworkName(51,1380
void SplitHostPort(61,1584
bool static LookupIntern(80,2463
bool LookupHost(132,3948
bool LookupHost(145,4390
bool Lookup(155,4628
bool Lookup(173,5214
CService LookupNumeric(183,5491
struct timeval MillisToTimeval(193,5801
bool static InterruptibleRecv(212,6407
struct ProxyCredentials251,7881
    std::string username;253,7907
    std::string password;254,7933
std::string Socks5ErrorString(257,7963
static bool Socks5(273,8503
bool static ConnectSocketDirectly(400,13797
bool SetProxy(494,17242
bool GetProxy(503,17472
bool SetNameProxy(512,17707
bool GetNameProxy(520,17879
bool HaveNameProxy(528,18050
bool IsProxy(533,18133
static bool ConnectThroughProxy(542,18337
bool ConnectSocket(567,19235
bool ConnectSocketByName(579,19760
bool LookupSubNet(607,20634
std::string NetworkErrorString(645,21850
std::string NetworkErrorString(661,22285
bool CloseSocket(678,22797
bool SetSocketNonBlocking(691,23047
void InterruptSocks5(720,23806

src/consensus/params.h,1324
#define BITCOIN_CONSENSUS_PARAMS_H7,274
enum DeploymentPos15,388
    DEPLOYMENT_TESTDUMMY,17,409
    DEPLOYMENT_CSV,18,435
    DEPLOYMENT_SEGWIT,19,499
    MAX_VERSION_BITS_DEPLOYMENTS21,653
struct BIP9Deployment 27,762
    int bit;29,852
    int64_t nStartTime;31,956
    int64_t nTimeout;33,1045
struct Params 39,1125
    uint256 hashGenesisBlock;40,1141
    int nSubsidyHalvingInterval;41,1171
    int BIP34Height;43,1267
    uint256 BIP34Hash;44,1288
    int BIP65Height;46,1365
    int BIP66Height;48,1440
    int ThemisHeight;50,1493
    int lastPOSBlock;52,1633
    uint32_t nRuleChangeActivationThreshold;58,1916
    uint32_t nMinerConfirmationWindow;59,1961
    BIP9Deployment vDeployments[vDeployments60,2000
    uint256 powLimit;62,2099
    uint256 posLimit;63,2121
    bool fPowAllowMinDifficultyBlocks;64,2143
    bool fPowNoRetargeting;65,2182
    bool fPoSNoRetargeting;66,2210
    int64_t nPowTargetSpacing;67,2238
    int64_t nPowTargetTimespan;68,2269
    int64_t DifficultyAdjustmentInterval(69,2301
    uint256 nMinimumChainWork;70,2401
    uint256 defaultAssumeValid;71,2432
    int nLastPOWBlock;73,2465
    int nFirstMPoSBlock;74,2488
    int nFixUTXOCacheHFHeight;75,2513
    int nOriginalMPoSRewardRecipients;76,2544
    int nThemisMPoSRewardRecipients;77,2583

src/consensus/validation.h,1214
#define BITCOIN_CONSENSUS_VALIDATION_H7,278
static const unsigned char REJECT_MALFORMED 12,367
static const unsigned char REJECT_INVALID 13,419
static const unsigned char REJECT_OBSOLETE 14,469
static const unsigned char REJECT_DUPLICATE 15,520
static const unsigned char REJECT_NONSTANDARD 16,572
static const unsigned char REJECT_DUST 17,626
static const unsigned char REJECT_INSUFFICIENTFEE 18,673
static const unsigned char REJECT_CHECKPOINT 19,731
class CValidationState 22,847
    enum mode_state 24,881
        MODE_VALID,25,903
        MODE_INVALID,26,944
        MODE_ERROR,27,1017
    } mode;28,1059
    int nDoS;29,1071
    std::string strRejectReason;30,1085
    unsigned int chRejectCode;31,1118
    bool corruptionPossible;32,1149
    std::string strDebugMessage;33,1178
    CValidationState(35,1219
    bool DoS(36,1317
    bool Invalid(50,1844
    bool Error(55,2117
    bool IsValid(61,2308
    bool IsInvalid(64,2376
    bool IsError(67,2448
    bool IsInvalid(70,2516
    bool CorruptionPossible(77,2675
    void SetCorruptionPossible(80,2754
    unsigned int GetRejectCode(83,2830
    std::string GetRejectReason(84,2894
    std::string GetDebugMessage(85,2962

src/consensus/merkle.h,29
#define BITCOIN_MERKLE6,213

src/consensus/consensus.h,217
#define BITCOIN_CONSENSUS_CONSENSUS_H7,277
static const int COINBASE_MATURITY 29,1065
static const int MAX_TRANSACTION_BASE_SIZE 31,1201
    LOCKTIME_VERIFY_SEQUENCE 36,1403
    LOCKTIME_MEDIAN_TIME_PAST 39,1521

src/consensus/merkle.cpp,296
static void MerkleComputation(46,2267
uint256 ComputeMerkleRoot(133,5897
std::vector<uint256> ComputeMerkleBranch(139,6071
uint256 ComputeMerkleRootFromBranch(145,6277
uint256 BlockMerkleRoot(158,6773
uint256 BlockWitnessMerkleRoot(168,7058
std::vector<uint256> BlockMerkleBranch(184,7662

src/consensus/consensus.cpp,246
unsigned int MaxBlockSerSize 6,182
unsigned int MaxBlockWeight 8,332
unsigned int MaxBlockBaseSize 10,499
unsigned int MaxBlockSize 11,553
int64_t MaxBlockSigOps 14,694
unsigned int MaxProtoMsgLength 15,764
unsigned int MaxTxSigOps 16,843

src/protocol.h,2809
#define BITCOIN_PROTOCOL_H11,342
class CMessageHeader27,592
        MESSAGE_START_SIZE 31,634
        COMMAND_SIZE 32,666
        MESSAGE_SIZE_SIZE 33,693
        CHECKSUM_SIZE 34,724
        MESSAGE_SIZE_OFFSET 36,752
        CHECKSUM_OFFSET 37,817
        HEADER_SIZE 38,884
    typedef unsigned char MessageStartChars[MessageStartChars40,983
    ADD_SERIALIZE_METHODS;48,1331
    template <typename Stream,50,1359
    inline void SerializationOp(51,1410
    char pchMessageStart[pchMessageStart59,1650
    char pchCommand[pchCommand60,1696
    uint32_t nMessageSize;61,1731
    uint8_t pchChecksum[pchChecksum62,1758
namespace NetMsgType 69,1938
extern const char *VERSION;VERSION76,2160
extern const char *VERACK;VERACK82,2403
extern const char *ADDR;ADDR88,2586
extern const char *INV;INV94,2793
extern const char *GETDATA;GETDATA99,2960
extern const char *MERKLEBLOCK;MERKLEBLOCK106,3243
extern const char *GETBLOCKS;GETBLOCKS112,3483
extern const char *GETHEADERS;GETHEADERS119,3754
extern const char *TX;TX124,3897
extern const char *HEADERS;HEADERS131,4159
extern const char *BLOCK;BLOCK136,4310
extern const char *GETADDR;GETADDR142,4546
extern const char *MEMPOOL;MEMPOOL149,4826
extern const char *PING;PING155,5022
extern const char *PONG;PONG162,5283
extern const char *NOTFOUND;NOTFOUND169,5548
extern const char *FILTERLOAD;FILTERLOAD178,5955
extern const char *FILTERADD;FILTERADD187,6354
extern const char *FILTERCLEAR;FILTERCLEAR196,6713
extern const char *REJECT;REJECT203,6972
extern const char *SENDHEADERS;SENDHEADERS210,7244
extern const char *FEEFILTER;FEEFILTER216,7461
extern const char *SENDCMPCT;SENDCMPCT224,7847
extern const char *CMPCTBLOCK;CMPCTBLOCK230,8040
extern const char *GETBLOCKTXN;GETBLOCKTXN236,8223
extern const char *BLOCKTXN;BLOCKTXN242,8401
enum ServiceFlags 249,8573
    NODE_NONE 251,8619
    NODE_NETWORK 255,8877
    NODE_GETUTXO 259,9139
    NODE_BLOOM 263,9425
    NODE_WITNESS 266,9566
    NODE_XTHIN 269,9739
class CAddress 281,10303
    ADD_SERIALIZE_METHODS;289,10445
    template <typename Stream,291,10473
    inline void SerializationOp(292,10524
    ServiceFlags nServices;310,11132
    unsigned int nTime;313,11190
const uint32_t MSG_WITNESS_FLAG 317,11252
const uint32_t MSG_TYPE_MASK 318,11295
enum GetDataMsg324,11503
    UNDEFINED 326,11521
    MSG_TX 327,11540
    MSG_BLOCK 328,11556
    MSG_FILTERED_BLOCK 330,11652
    MSG_CMPCT_BLOCK 331,11703
    MSG_WITNESS_BLOCK 332,11755
    MSG_WITNESS_TX 333,11832
    MSG_FILTERED_WITNESS_BLOCK 334,11909
class CInv338,12009
    ADD_SERIALIZE_METHODS;344,12088
    template <typename Stream,346,12116
    inline void SerializationOp(347,12167
    int type;360,12483
    uint256 hash;361,12497

src/netaddress.h,832
#define BITCOIN_NETADDRESS_H6,224
enum Network19,425
    NET_UNROUTABLE 21,440
    NET_IPV4,22,464
    NET_IPV6,23,478
    NET_TOR,24,492
    NET_MAX,26,506
class CNetAddr30,597
        unsigned char ip[ip33,629
        uint32_t scopeId;34,684
        ADD_SERIALIZE_METHODS;85,3226
        template <typename Stream,87,3258
        inline void SerializationOp(88,3313
class CSubNet95,3466
        CNetAddr network;99,3532
        uint8_t netmask[netmask101,3601
        bool valid;103,3698
        ADD_SERIALIZE_METHODS;122,4305
        template <typename Stream,124,4337
        inline void SerializationOp(125,4392
class CService 133,4661
        unsigned short port;136,4711
        ADD_SERIALIZE_METHODS;159,5714
        template <typename Stream,161,5746
        inline void SerializationOp(162,5801

src/dbwrapper.cpp,678
static leveldb::Options GetOptions(18,419
CDBWrapper::CDBWrapper(CDBWrapper34,1143
CDBWrapper::~CDBWrapper(~CDBWrapper79,2896
bool CDBWrapper::WriteBatch(WriteBatch91,3132
const unsigned int CDBWrapper::OBFUSCATE_KEY_NUM_BYTES 104,3596
std::vector<unsigned char> CDBWrapper::CreateObfuscateKey(CreateObfuscateKey110,3763
bool CDBWrapper::IsEmpty(IsEmpty118,4014
CDBIterator::~CDBIterator(~CDBIterator125,4148
bool CDBIterator::Valid(Valid126,4194
void CDBIterator::SeekToFirst(SeekToFirst127,4247
void CDBIterator::Next(Next128,4305
namespace dbwrapper_private 130,4350
void HandleError(132,4381
const std::vector<unsigned char>& GetObfuscateKey(146,4817

src/core_memusage.h,451
#define BITCOIN_CORE_MEMUSAGE_H6,227
static inline size_t RecursiveDynamicUsage(12,349
static inline size_t RecursiveDynamicUsage(16,498
static inline size_t RecursiveDynamicUsage(20,582
static inline size_t RecursiveDynamicUsage(28,1000
static inline size_t RecursiveDynamicUsage(32,1119
static inline size_t RecursiveDynamicUsage(43,1577
static inline size_t RecursiveDynamicUsage(54,2042
static inline size_t RecursiveDynamicUsage(62,2296

src/compat/glibcxx_sanity.cpp,131
bool sanity_test_widen(14,443
bool sanity_test_list(24,841
bool sanity_test_range_fmt(46,1398
bool glibcxx_sanity_test(58,1590

src/compat/byteswap.h,216
#define BITCOIN_COMPAT_BYTESWAP_H6,229
#define bswap_16(26,758
#define bswap_32(27,793
#define bswap_64(28,828
inline uint16_t bswap_16(36,958
inline uint32_t bswap_32(43,1099
inline uint64_t bswap_64(51,1333

src/compat/sanity.h,38
#define BITCOIN_COMPAT_SANITY_H6,227

src/compat/glibc_sanity.cpp,121
void* memcpy_int(16,407
bool sanity_test_memcpy(29,865
bool sanity_test_fdelt(50,1499
bool glibc_sanity_test(61,1643

src/compat/endian.h,839
#define BITCOIN_COMPAT_ENDIAN_H6,227
inline uint16_t htobe16(25,550
inline uint16_t htole16(32,680
inline uint16_t be16toh(39,820
inline uint16_t le16toh(46,962
inline uint32_t htobe32(53,1120
inline uint32_t htole32(60,1250
inline uint32_t be32toh(67,1390
inline uint32_t le32toh(74,1532
inline uint64_t htobe64(81,1690
inline uint64_t htole64(88,1820
inline uint64_t be64toh(95,1960
inline uint64_t le64toh(102,2102
inline uint16_t htobe16(111,2286
inline uint16_t htole16(118,2426
inline uint16_t be16toh(125,2556
inline uint16_t le16toh(132,2708
inline uint32_t htobe32(139,2856
inline uint32_t htole32(146,2996
inline uint32_t be32toh(153,3126
inline uint32_t le32toh(160,3278
inline uint64_t htobe64(167,3426
inline uint64_t htole64(174,3566
inline uint64_t be64toh(181,3696
inline uint64_t le64toh(188,3848

src/compat/glibc_compat.cpp,75
extern "C" void* memcpy(17,463
extern "C" FDELT_TYPE __fdelt_warn(23,619

src/compat/strnlen.cpp,23
size_t strnlen(12,312

src/base58.h,1495
#define BITCOIN_BASE58_H15,702
class CBase58Data71,2333
    std::vector<unsigned char> vchVersion;75,2392
    typedef std::vector<unsigned char,78,2470
    typedef std::vector<unsigned char, zero_after_free_allocator<unsigned char> > vector_uchar;78,2470
    vector_uchar vchData;79,2566
    bool operator==(operator==91,3039
    bool operator<=(operator<=92,3121
    bool operator>=(operator>=93,3203
    bool operator< 94,3285
    bool operator> 95,3367
class CBitcoinAddress 104,3820
    CBitcoinAddress(112,4061
    CBitcoinAddress(113,4086
    CBitcoinAddress(114,4149
    CBitcoinAddress(115,4227
class CBitcoinSecret 126,4472
    CBitcoinSecret(135,4703
    CBitcoinSecret(136,4768
template<typename K,139,4796
template<typename K, int Size,139,4796
template<typename K, int Size, CChainParams::Base58Type Type> class CBitcoinExtKeyBase 139,4796
    void SetKey(142,4914
    K GetKey(148,5072
    CBitcoinExtKeyBase(157,5304
    CBitcoinExtKeyBase(161,5371
    CBitcoinExtKeyBase(165,5509
typedef CBitcoinExtKeyBase<CExtKey,CExtKey168,5541
typedef CBitcoinExtKeyBase<CExtKey, BIP32_EXTKEY_SIZE,168,5541
typedef CBitcoinExtKeyBase<CExtKey, BIP32_EXTKEY_SIZE, CChainParams::EXT_SECRET_KEY> CBitcoinExtKey;168,5541
typedef CBitcoinExtKeyBase<CExtPubKey,CExtPubKey169,5642
typedef CBitcoinExtKeyBase<CExtPubKey, BIP32_EXTKEY_SIZE,169,5642
typedef CBitcoinExtKeyBase<CExtPubKey, BIP32_EXTKEY_SIZE, CChainParams::EXT_PUBLIC_KEY> CBitcoinExtPubKey;169,5642

src/compressor.cpp,479
bool CScriptCompressor::IsToKeyID(IsToKeyID12,332
bool CScriptCompressor::IsToScriptID(IsToScriptID23,692
bool CScriptCompressor::IsToPubKey(IsToPubKey33,972
bool CScriptCompressor::Compress(Compress48,1554
unsigned int CScriptCompressor::GetSpecialSize(GetSpecialSize79,2334
bool CScriptCompressor::Decompress(Decompress88,2560
uint64_t CTxOutCompressor::CompressAmount(CompressAmount142,4272
uint64_t CTxOutCompressor::DecompressAmount(DecompressAmount161,4644

src/leveldb/table/block_builder.h,467
#define STORAGE_LEVELDB_TABLE_BLOCK_BUILDER_H_6,264
class BlockBuilder 17,417
  explicit BlockBuilder(19,447
  void Reset(22,566
  void Add(26,718
  Slice Finish(31,963
  size_t CurrentSizeEstimate(35,1077
  const Options*        options_;43,1253
  std::string           buffer_;44,1287
  std::vector<uint32_t> restarts_;45,1347
  int                   counter_;46,1403
  bool                  finished_;47,1484
  std::string           last_key_;48,1551

src/leveldb/table/filter_block.h,637
#define STORAGE_LEVELDB_TABLE_FILTER_BLOCK_H_10,443
class FilterBlockBuilder 29,942
  explicit FilterBlockBuilder(31,978
  void StartBlock(33,1031
  void AddKey(34,1073
  Slice Finish(35,1106
  void GenerateFilter(38,1135
  const FilterPolicy* policy_;40,1161
  std::string keys_;41,1192
  std::vector<size_t> start_;42,1252
  std::string result_;43,1325
  std::vector<Slice> tmp_keys_;44,1390
  std::vector<uint32_t> filter_offsets_;45,1460
class FilterBlockReader 52,1624
  const FilterPolicy* policy_;59,1876
  const char* data_;60,1907
  const char* offset_;61,1974
  size_t num_;62,2053
  size_t base_lg_;63,2114

src/leveldb/table/format.h,860
#define STORAGE_LEVELDB_TABLE_FORMAT_H_6,257
class BlockHandle 22,603
  BlockHandle(24,632
  uint64_t offset(27,692
  void set_offset(28,738
  uint64_t size(31,830
  void set_size(32,872
  void EncodeTo(34,922
  enum { kMaxEncodedLength 38,1045
  uint64_t offset_;41,1096
  uint64_t size_;42,1116
class Footer 47,1230
  Footer(49,1254
  const BlockHandle& metaindex_handle(52,1329
  void set_metaindex_handle(53,1405
  const BlockHandle& index_handle(56,1538
  void set_index_handle(59,1612
    kEncodedLength 70,1956
  BlockHandle metaindex_handle_;74,2030
  BlockHandle index_handle_;75,2063
static const uint64_t kTableMagicNumber 81,2229
static const size_t kBlockTrailerSize 84,2323
struct BlockContents 86,2367
  Slice data;87,2390
  bool cachable;88,2441
  bool heap_allocated;89,2496
inline BlockHandle::BlockHandle(101,2954

src/leveldb/table/merger.h,46
#define STORAGE_LEVELDB_TABLE_MERGER_H_6,257

src/leveldb/table/block.h,192
#define STORAGE_LEVELDB_TABLE_BLOCK_H_6,256
class Block 17,429
  explicit Block(20,507
  ~Block(22,557
  size_t size(24,570
  Iterator* NewIterator(25,610
  uint32_t NumRestarts(28,676

src/leveldb/table/iterator_wrapper.h,522
#define STORAGE_LEVELDB_TABLE_ITERATOR_WRAPPER_H_6,267
class IteratorWrapper 17,623
  IteratorWrapper(19,656
  explicit IteratorWrapper(20,708
  ~IteratorWrapper(23,785
  Iterator* iter(24,824
  void Set(28,971
  bool Valid(40,1156
  Slice key(41,1203
  Slice value(42,1265
  Status status(44,1379
  void Next(45,1450
  void Prev(46,1529
  void Seek(47,1608
  void SeekToFirst(48,1687
  void SeekToLast(49,1766
  void Update(52,1856
  Iterator* iter_;59,1959
  bool valid_;60,1978
  Slice key_;61,1993

src/leveldb/table/two_level_iterator.h,58
#define STORAGE_LEVELDB_TABLE_TWO_LEVEL_ITERATOR_H_6,269

src/leveldb/db/log_format.h,287
#define STORAGE_LEVELDB_DB_LOG_FORMAT_H_9,361
enum RecordType 14,440
  kZeroType 16,503
  kFullType 18,521
  kFirstType 21,558
  kMiddleType 22,576
  kLastType 23,595
static const int kMaxRecordType 25,614
static const int kBlockSize 27,660
static const int kHeaderSize 30,764

src/leveldb/db/table_cache.h,317
#define STORAGE_LEVELDB_DB_TABLE_CACHE_H_8,313
class TableCache 21,530
  TableCache(23,558
  ~TableCache(24,636
  Iterator* NewIterator(33,1119
  Status Get(40,1438
  void Evict(48,1724
  Env* const env_;51,1771
  const std::string dbname_;52,1790
  const Options* options_;53,1819
  Cache* cache_;54,1846

src/leveldb/db/snapshot.h,417
#define STORAGE_LEVELDB_DB_SNAPSHOT_H_6,256
class SnapshotImpl 17,511
  SequenceNumber number_;19,559
  SnapshotImpl* prev_;25,710
  SnapshotImpl* next_;26,733
  SnapshotList* list_;28,757
class SnapshotList 31,826
  SnapshotList(33,856
  bool empty(38,932
  SnapshotImpl* oldest(39,987
  SnapshotImpl* newest(40,1060
  const SnapshotImpl* New(42,1134
  void Delete(53,1385
  SnapshotImpl list_;62,1598

src/leveldb/db/write_batch_internal.h,392
#define STORAGE_LEVELDB_DB_WRITE_BATCH_INTERNAL_H_6,268
class WriteBatchInternal 17,551
  static int Count(20,635
  static void SetCount(23,740
  static SequenceNumber Sequence(26,852
  static void SetSequence(30,1001
  static Slice Contents(32,1068
  static size_t ByteSize(36,1155
  static void SetContents(40,1243
  static Status InsertInto(42,1313
  static void Append(44,1387

src/leveldb/db/dbformat.h,1496
#define STORAGE_LEVELDB_DB_DBFORMAT_H_6,256
enum ValueType 51,1793
  kTypeDeletion 52,1810
  kTypeValue 53,1833
static const ValueType kValueTypeForSeek 61,2230
typedef uint64_t SequenceNumber;63,2286
static const SequenceNumber kMaxSequenceNumber 67,2427
struct ParsedInternalKey 70,2503
  Slice user_key;71,2530
  SequenceNumber sequence;72,2548
  ValueType type;73,2575
  ParsedInternalKey(75,2594
  ParsedInternalKey(76,2669
inline size_t InternalKeyEncodingLength(82,2879
inline Slice ExtractUserKey(98,3515
inline ValueType ExtractValueType(103,3673
class InternalKeyComparator 113,4086
  const Comparator* user_comparator_;115,4146
  explicit InternalKeyComparator(117,4193
  const Comparator* user_comparator(125,4527
class InternalFilterPolicy 131,4741
  const FilterPolicy* const user_policy_;133,4802
  explicit InternalFilterPolicy(135,4853
class InternalKey 144,5333
  std::string rep_;146,5363
  InternalKey(148,5392
  InternalKey(149,5463
  void DecodeFrom(153,5603
  Slice Encode(154,5674
  Slice user_key(159,5748
  void SetFrom(161,5807
  void Clear(166,5908
inline int InternalKeyComparator::Compare(Compare171,5981
inline bool ParseInternalKey(176,6125
class LookupKey 189,6632
  Slice memtable_key(198,6892
  Slice internal_key(201,7038
  Slice user_key(204,7136
  const char* start_;214,7553
  const char* kstart_;215,7575
  const char* end_;216,7598
  char space_[space_217,7618
inline LookupKey::~LookupKey(~LookupKey224,7774

src/leveldb/db/db_impl.h,1960
#define STORAGE_LEVELDB_DB_DB_IMPL_H_6,255
class DBImpl 26,621
  DBImpl(28,657
  virtual ~DBImpl(29,718
  virtual Status Put(32,781
  virtual Status Delete(33,862
  virtual Status Write(34,926
  virtual Status Get(35,1000
  virtual Iterator* NewIterator(38,1130
  virtual const Snapshot* GetSnapshot(39,1183
  virtual void ReleaseSnapshot(40,1224
  virtual bool GetProperty(41,1282
  virtual void GetApproximateSizes(42,1353
  virtual void CompactRange(43,1433
  void TEST_CompactRange(48,1644
  Status TEST_CompactMemTable(51,1774
  Iterator* TEST_NewInternalIterator(56,2014
  int64_t TEST_MaxNextLevelOverlappingBytes(60,2156
  void RecordReadSample(65,2355
  Iterator* NewInternalIterator(72,2465
  Status NewDB(76,2632
  Status Recover(81,2849
  TableCache* table_cache_;131,4815
  FileLock* db_lock_;134,4921
  port::Mutex mutex_;137,4984
  port::AtomicPointer shutting_down_;138,5006
  port::CondVar bg_cv_;139,5044
  MemTable* mem_;140,5120
  MemTable* imm_;141,5138
  port::AtomicPointer has_imm_;142,5199
  WritableFile* logfile_;143,5273
  uint64_t logfile_number_;144,5299
  log::Writer* log_;145,5327
  uint32_t seed_;146,5348
  std::deque<Writer*> writers_;149,5422
  WriteBatch* tmp_batch_;150,5454
  SnapshotList snapshots_;152,5481
  std::set<uint64_t> pending_outputs_;156,5609
  bool bg_compaction_scheduled_;159,5712
  struct ManualCompaction 162,5787
    int level;163,5815
    bool done;164,5830
    const InternalKey* begin;165,5845
    const InternalKey* end;166,5914
    InternalKey tmp_storage;167,5977
  ManualCompaction* manual_compaction_;169,6059
  VersionSet* versions_;171,6100
  Status bg_error_;174,6188
  struct CompactionStats 178,6341
    int64_t micros;179,6368
    int64_t bytes_read;180,6388
    int64_t bytes_written;181,6412
    CompactionStats(183,6440
    void Add(185,6512
  CompactionStats stats_[stats_191,6682
  const Comparator* user_comparator(197,6812

src/leveldb/db/memtable.h,649
#define STORAGE_LEVELDB_DB_MEMTABLE_H_6,256
class MemTable 20,501
  explicit MemTable(24,653
  void Ref(27,747
  void Unref(30,838
  size_t ApproximateMemoryUsage(40,1088
  Iterator* NewIterator(48,1432
  void Add(53,1641
  bool Get(61,1958
  ~MemTable(64,2034
  struct KeyComparator 66,2109
    const InternalKeyComparator comparator;67,2134
    explicit KeyComparator(68,2178
    int operator(69,2257
  typedef SkipList<const char*char74,2393
  typedef SkipList<const char*, KeyComparator> Table;74,2393
  KeyComparator comparator_;76,2448
  int refs_;77,2477
  Arena arena_;78,2490
  Table table_;79,2506
  MemTable(82,2547

src/leveldb/db/log_writer.h,309
#define STORAGE_LEVELDB_DB_LOG_WRITER_H_6,258
class Writer 19,462
  explicit Writer(24,638
  Writer(29,845
  ~Writer(31,898
  Status AddRecord(33,912
  WritableFile* dest_;36,963
  int block_offset_;37,986
  uint32_t type_crc_[type_crc_42,1211
  Status EmitPhysicalRecord(44,1254
  Writer(47,1357

src/leveldb/db/version_set.h,2130
#define STORAGE_LEVELDB_DB_VERSION_SET_H_16,690
class Version 59,1989
  struct GetStats 69,2429
    FileMetaData* seek_file;70,2449
    int seek_file_level;71,2478
  int NumFiles(111,4140
  VersionSet* vset_;132,4891
  Version* next_;133,4967
  Version* prev_;134,5030
  int refs_;135,5097
  std::vector<FileMetaData*> files_[files_138,5198
  FileMetaData* file_to_compact_;141,5303
  int file_to_compact_level_;142,5337
  double compaction_score_;147,5541
  int compaction_level_;148,5569
  explicit Version(150,5595
class VersionSet 165,5929
  Version* current(185,6676
  uint64_t ManifestFileNumber(188,6770
  uint64_t NewFileNumber(191,6886
  void ReuseFileNumber(196,7114
  uint64_t LastSequence(209,7513
  void SetLastSequence(212,7613
  uint64_t LogNumber(221,7843
  uint64_t PrevLogNumber(225,8024
  bool NeedsCompaction(251,9071
  struct LevelSummaryStorage 266,9650
    char buffer[buffer267,9681
  Env* const env_;297,10454
  const std::string dbname_;298,10473
  const Options* const options_;299,10502
  TableCache* const table_cache_;300,10535
  const InternalKeyComparator icmp_;301,10569
  uint64_t next_file_number_;302,10606
  uint64_t manifest_file_number_;303,10636
  uint64_t last_sequence_;304,10670
  uint64_t log_number_;305,10697
  uint64_t prev_log_number_;306,10721
  WritableFile* descriptor_file_;309,10822
  log::Writer* descriptor_log_;310,10856
  Version dummy_versions_;311,10888
  Version* current_;312,10968
  std::string compact_pointer_[compact_pointer_316,11154
class Compaction 324,11366
  int level(330,11551
  VersionEdit* edit(334,11683
  int num_input_files(337,11760
  FileMetaData* input(340,11910
  uint64_t MaxOutputFileSize(343,12047
  int level_;371,13029
  uint64_t max_output_file_size_;372,13043
  Version* input_version_;373,13077
  VersionEdit edit_;374,13104
  std::vector<FileMetaData*> inputs_[inputs_377,13189
  std::vector<FileMetaData*> grandparents_;381,13386
  size_t grandparent_index_;382,13430
  bool seen_key_;383,13492
  int64_t overlapped_bytes_;384,13555
  size_t level_ptrs_[level_ptrs_393,13965

src/leveldb/db/log_reader.h,768
#define STORAGE_LEVELDB_DB_LOG_READER_H_6,258
class Reader 20,465
  class Reporter 23,526
    virtual ~Reporter(25,556
  Reader(43,1272
  ~Reader(46,1374
  bool ReadRecord(53,1694
  uint64_t LastRecordOffset(58,1884
  SequentialFile* const file_;61,1926
  Reporter* const reporter_;62,1957
  bool const checksum_;63,1986
  char* const backing_store_;64,2010
  Slice buffer_;65,2040
  bool eof_;66,2057
  uint64_t last_record_offset_;69,2183
  uint64_t end_of_buffer_offset_;71,2274
  uint64_t const initial_offset_;74,2378
  bool resyncing_;79,2590
    kEof 83,2678
    kBadRecord 89,3055
  bool SkipToInitialBlock(95,3219
  unsigned int ReadPhysicalRecord(98,3306
  void ReportCorruption(102,3479
  void ReportDrop(103,3540
  Reader(106,3622

src/leveldb/db/filename.h,221
#define STORAGE_LEVELDB_DB_FILENAME_H_8,289
enum FileType 20,479
  kLogFile,21,495
  kDBLockFile,22,507
  kTableFile,23,522
  kDescriptorFile,24,536
  kCurrentFile,25,555
  kTempFile,26,571
  kInfoLogFile 27,584

src/leveldb/db/skiplist.h,2322
#define STORAGE_LEVELDB_DB_SKIPLIST_H_6,256
class SkipList 41,1288
  explicit SkipList(49,1560
  void Insert(53,1719
  bool Contains(56,1825
  class Iterator 59,1913
    explicit Iterator(63,2041
    bool Valid(66,2155
  enum { kMaxHeight 98,2906
  Comparator const compare_;101,2969
  Arena* const arena_;102,2998
  Node* const head_;104,3064
  port::AtomicPointer max_height_;108,3173
  inline int GetMaxHeight(110,3240
  Random rnd_;116,3413
  bool Equal(120,3496
template<typename Key,146,4357
struct SkipList<Key,Comparator>::Node Node147,4398
template<typename Key,182,5470
SkipList<Key,Comparator>::NewNode(NewNode184,5552
template<typename Key,190,5754
inline SkipList<Key,Comparator>::Iterator::Iterator(Iterator191,5795
template<typename Key,196,5906
inline bool SkipList<Key,Comparator>::Iterator::Valid(Valid197,5947
template<typename Key,201,6038
inline const Key& SkipList<Key,Comparator>::Iterator::key(key202,6079
template<typename Key,207,6190
inline void SkipList<Key,Comparator>::Iterator::Next(Next208,6231
template<typename Key,213,6336
inline void SkipList<Key,Comparator>::Iterator::Prev(Prev214,6377
template<typename Key,224,6658
inline void SkipList<Key,Comparator>::Iterator::Seek(Seek225,6699
template<typename Key,229,6827
inline void SkipList<Key,Comparator>::Iterator::SeekToFirst(SeekToFirst230,6868
template<typename Key,234,6968
inline void SkipList<Key,Comparator>::Iterator::SeekToLast(SeekToLast235,7009
template<typename Key,242,7157
int SkipList<Key,Comparator>::RandomHeight(RandomHeight243,7198
template<typename Key,255,7522
bool SkipList<Key,Comparator>::KeyIsAfterNode(KeyIsAfterNode256,7563
template<typename Key,261,7733
typename SkipList<Key,Comparator>::Node* SkipList<Key,Comparator>::FindGreaterOrEqual(FindGreaterOrEqual262,7774
template<typename Key,283,8277
SkipList<Key,Comparator>::FindLessThan(FindLessThan285,8359
template<typename Key,304,8790
typename SkipList<Key,Comparator>::Node* SkipList<Key,Comparator>::FindLast(FindLast305,8831
template<typename Key,324,9203
SkipList<Key,Comparator>::SkipList(SkipList325,9244
template<typename Key,336,9559
void SkipList<Key,Comparator>::Insert(Insert337,9600
template<typename Key,372,10988
bool SkipList<Key,Comparator>::Contains(Contains373,11029

src/leveldb/db/builder.h,44
#define STORAGE_LEVELDB_DB_BUILDER_H_6,255

src/leveldb/db/version_edit.h,1305
#define STORAGE_LEVELDB_DB_VERSION_EDIT_H_6,260
struct FileMetaData 17,422
  int refs;18,444
  int allowed_seeks;19,456
  uint64_t number;20,520
  uint64_t file_size;21,539
  InternalKey smallest;22,591
  InternalKey largest;23,662
  FileMetaData(25,733
class VersionEdit 28,806
  VersionEdit(30,835
  ~VersionEdit(31,864
  void SetComparatorName(35,903
  void SetLogNumber(39,1016
  void SetPrevLogNumber(43,1107
  void SetNextFile(47,1212
  void SetLastSequence(51,1314
  void SetCompactPointer(55,1420
  void AddFile(62,1751
  void DeleteFile(75,2156
  typedef std::set< std::pair<std::pair87,2418
  typedef std::set< std::pair<int, uint64_t> > DeletedFileSet;87,2418
  std::string comparator_;89,2482
  uint64_t log_number_;90,2509
  uint64_t prev_log_number_;91,2533
  uint64_t next_file_number_;92,2562
  SequenceNumber last_sequence_;93,2592
  bool has_comparator_;94,2625
  bool has_log_number_;95,2649
  bool has_prev_log_number_;96,2673
  bool has_next_file_number_;97,2702
  bool has_last_sequence_;98,2732
  std::vector<std::vector100,2760
  std::vector< std::pair<int, InternalKey> > compact_pointers_;100,2760
  DeletedFileSet deleted_files_;101,2824
  std::vector<std::vector102,2857
  std::vector< std::pair<int, FileMetaData> > new_files_;102,2857

src/leveldb/db/db_iter.h,44
#define STORAGE_LEVELDB_DB_DB_ITER_H_6,255

src/leveldb/include/leveldb/cache.h,205
#define STORAGE_LEVELDB_INCLUDE_CACHE_H_19,950
class Cache 32,1247
  Cache(34,1270
  virtual ~Cache(38,1395
  struct Handle 41,1468
  virtual void Prune(89,3626
  virtual size_t TotalCharge(93,3743

src/leveldb/include/leveldb/table.h,287
#define STORAGE_LEVELDB_INCLUDE_TABLE_H_6,258
class Table 24,681
  static Status Open(38,1348
  ~Table(43,1517
  Iterator* NewIterator(48,1718
  static Iterator* BlockReader(63,2290
  Status InternalGet(69,2560
  void ReadMeta(75,2718
  void ReadFilter(76,2757
  Table(79,2835

src/leveldb/include/leveldb/options.h,902
#define STORAGE_LEVELDB_INCLUDE_OPTIONS_H_6,260
enum CompressionType 23,699
  kNoCompression 26,836
  kSnappyCompression 27,864
struct Options 31,965
  const Comparator* comparator;41,1384
  bool create_if_missing;45,1498
  bool error_if_exists;49,1610
  bool paranoid_checks;57,1994
  Env* env;62,2174
  Logger* info_log;68,2410
  size_t write_buffer_size;83,2977
  int max_open_files;90,3213
  Cache* block_cache;98,3507
  size_t block_size;106,3825
  int block_restart_interval;113,4042
  size_t max_file_size;125,4567
  CompressionType compression;141,5272
  bool reuse_logs;147,5508
  const FilterPolicy* filter_policy;154,5721
  Options(157,5825
struct ReadOptions 161,5882
  bool verify_checksums;165,6030
  bool fill_cache;170,6206
  const Snapshot* snapshot;177,6516
  ReadOptions(179,6545
struct WriteOptions 187,6694
  bool sync;204,7425
  WriteOptions(206,7439

src/leveldb/include/leveldb/status.h,806
#define STORAGE_LEVELDB_INCLUDE_STATUS_H_14,637
class Status 21,747
  Status(24,801
  ~Status(25,831
  Status(28,897
  static Status OK(32,990
  static Status NotFound(35,1082
  static Status Corruption(38,1201
  static Status NotSupported(41,1324
  static Status InvalidArgument(44,1451
  static Status IOError(47,1584
  bool ok(52,1754
  bool IsNotFound(55,1863
  bool IsCorruption(58,1985
  bool IsIOError(61,2103
  bool IsNotSupportedError(64,2224
  bool IsInvalidArgument(67,2359
  const char* state_;79,2792
  enum Code 81,2815
    kOk 82,2829
    kNotFound 83,2842
    kCorruption 84,2861
    kNotSupported 85,2882
    kInvalidArgument 86,2905
    kIOError 87,2931
  Code code(90,2954
inline Status::Status(Status98,3156
inline void Status::operator=(operator=101,3259

src/leveldb/include/leveldb/slice.h,535
#define STORAGE_LEVELDB_INCLUDE_SLICE_H_16,713
class Slice 25,855
  Slice(28,906
  Slice(31,988
  Slice(34,1102
  Slice(37,1224
  const char* data(40,1343
  size_t size(43,1446
  bool empty(46,1550
  char operator[operator50,1670
  void clear(56,1806
  void remove_prefix(59,1896
  std::string ToString(66,2059
  bool starts_with(75,2353
  const char* data_;81,2498
  size_t size_;82,2519
inline bool operator==(operator==87,2568
inline bool operator!=(operator!=92,2720
inline int Slice::compare(compare96,2800

src/leveldb/include/leveldb/db.h,250
#define STORAGE_LEVELDB_INCLUDE_DB_H_6,255
namespace leveldb 13,393
class Snapshot 27,788
  virtual ~Snapshot(29,817
struct Range 33,863
  Slice start;34,878
  Slice limit;35,927
  Range(37,981
  Range(38,995
class DB 44,1222
  DB(55,1638

src/leveldb/include/leveldb/write_batch.h,271
#define STORAGE_LEVELDB_INCLUDE_WRITE_BATCH_H_22,875
class WriteBatch 31,1005
  WriteBatch(33,1033
  ~WriteBatch(34,1049
  void Put(37,1120
  void Delete(40,1250
  void Clear(43,1331
  class Handler 46,1405
    virtual ~Handler(48,1434
  Status Iterate(52,1574

src/leveldb/include/leveldb/env.h,1204
#define STORAGE_LEVELDB_INCLUDE_ENV_H_14,662
class Env 31,938
  Env(33,959
  virtual ~Env(34,971
  static Env* Default(41,1275
  virtual Status NewAppendableFile(84,3351
  Env(165,6744
class SequentialFile 170,6859
  SequentialFile(172,6891
class RandomAccessFile 201,7949
  RandomAccessFile(203,7983
class WritableFile 227,8908
  WritableFile(229,8938
class Logger 244,9281
  Logger(246,9305
class FileLock 260,9589
  FileLock(262,9615
class EnvWrapper 288,10517
  explicit EnvWrapper(291,10619
  Env* target(295,10752
  Status NewSequentialFile(298,10872
  Status NewRandomAccessFile(301,10992
  Status NewWritableFile(304,11118
  Status NewAppendableFile(307,11232
  bool FileExists(310,11350
  Status GetChildren(311,11425
  Status DeleteFile(314,11546
  Status CreateDir(315,11623
  Status DeleteDir(316,11698
  Status GetFileSize(317,11773
  Status RenameFile(320,11874
  Status LockFile(323,11982
  Status UnlockFile(326,12078
  void Schedule(327,12146
  void StartThread(330,12231
  virtual Status GetTestDirectory(333,12322
  virtual Status NewLogger(336,12425
  uint64_t NowMicros(339,12547
  void SleepForMicroseconds(342,12609
  Env* target_;346,12708

src/leveldb/include/leveldb/iterator.h,428
#define STORAGE_LEVELDB_INCLUDE_ITERATOR_H_16,757
class Iterator 23,879
  Iterator(25,905
  virtual ~Iterator(26,919
  virtual bool Valid(30,1074
  typedef void (*CleanupFunction)CleanupFunction75,2860
  void RegisterCleanup(76,2919
  struct Cleanup 79,3004
    CleanupFunction function;80,3023
    void* arg1;81,3053
    void* arg2;82,3069
    Cleanup* next;83,3085
  Cleanup cleanup_;85,3109
  Iterator(88,3154

src/leveldb/include/leveldb/comparator.h,137
#define STORAGE_LEVELDB_INCLUDE_COMPARATOR_H_6,263
class Comparator 18,606
  virtual ~Comparator(20,634
  virtual int Compare(26,782

src/leveldb/include/leveldb/table_builder.h,333
#define STORAGE_LEVELDB_INCLUDE_TABLE_BUILDER_H_14,627
class TableBuilder 26,836
  TableBuilder(31,1057
  ~TableBuilder(34,1179
  Status ChangeOptions(42,1579
  void Add(47,1813
  void Flush(53,2132
  Status status(56,2202
  void WriteBlock(79,3045
  void WriteRawBlock(80,3106
  Rep* rep_;83,3200
  TableBuilder(86,3238

src/leveldb/include/leveldb/c.h,1191
#define STORAGE_LEVELDB_INCLUDE_C_H_41,1582
typedef struct leveldb_t               leveldb_t;53,1743
typedef struct leveldb_cache_t         leveldb_cache_t;54,1793
typedef struct leveldb_comparator_t    leveldb_comparator_t;55,1849
typedef struct leveldb_env_t           leveldb_env_t;56,1910
typedef struct leveldb_filelock_t      leveldb_filelock_t;57,1964
typedef struct leveldb_filterpolicy_t  leveldb_filterpolicy_t;58,2023
typedef struct leveldb_iterator_t      leveldb_iterator_t;59,2086
typedef struct leveldb_logger_t        leveldb_logger_t;60,2145
typedef struct leveldb_options_t       leveldb_options_t;61,2202
typedef struct leveldb_randomfile_t    leveldb_randomfile_t;62,2260
typedef struct leveldb_readoptions_t   leveldb_readoptions_t;63,2321
typedef struct leveldb_seqfile_t       leveldb_seqfile_t;64,2383
typedef struct leveldb_snapshot_t      leveldb_snapshot_t;65,2441
typedef struct leveldb_writablefile_t  leveldb_writablefile_t;66,2500
typedef struct leveldb_writebatch_t    leveldb_writebatch_t;67,2563
typedef struct leveldb_writeoptions_t  leveldb_writeoptions_t;68,2624
  leveldb_no_compression 204,7230
  leveldb_snappy_compression 205,7260

src/leveldb/include/leveldb/dumpfile.h,50
#define STORAGE_LEVELDB_INCLUDE_DUMPFILE_H_6,261

src/leveldb/include/leveldb/filter_policy.h,151
#define STORAGE_LEVELDB_INCLUDE_FILTER_POLICY_H_17,796
class FilterPolicy 25,900
  virtual ~FilterPolicy(27,930
  virtual const char* Name(33,1202

src/leveldb/port/port_example.h,360
#define STORAGE_LEVELDB_PORT_PORT_EXAMPLE_H_11,521
class Mutex 26,1027
  Mutex(28,1050
  ~Mutex(29,1061
  void Lock(33,1201
  void Unlock(37,1293
  void AssertHeld(42,1501
class CondVar 45,1526
typedef intptr_t OnceType;69,2204
#define LEVELDB_ONCE_INIT 70,2231
class AtomicPointer 75,2425
  intptr_t rep_;77,2457
  explicit AtomicPointer(83,2564

src/leveldb/port/win/stdint.h,419
#define STORAGE_LEVELDB_PORT_WIN_STDINT_H_8,320
typedef signed char           int8_t;15,494
typedef signed short          int16_t;16,532
typedef signed int            int32_t;17,571
typedef signed long long      int64_t;18,610
typedef unsigned char         uint8_t;19,649
typedef unsigned short        uint16_t;20,688
typedef unsigned int          uint32_t;21,728
typedef unsigned long long    uint64_t;22,768

src/leveldb/port/atomic_pointer.h,2228
#define PORT_ATOMIC_POINTER_H_19,1062
#define ARCH_CPU_X86_FAMILY 33,1309
#define ARCH_CPU_X86_FAMILY 35,1402
#define ARCH_CPU_ARM_FAMILY 37,1457
#define ARCH_CPU_ARM64_FAMILY 39,1514
#define ARCH_CPU_PPC_FAMILY 41,1619
#define ARCH_CPU_MIPS_FAMILY 43,1673
class AtomicPointer 51,1838
  std::atomic<void*> rep_;53,1870
  AtomicPointer(55,1906
  explicit AtomicPointer(56,1928
  inline void* Acquire_Load(57,1976
  inline void Release_Store(60,2067
  inline void* NoBarrier_Load(63,2156
  inline void NoBarrier_Store(66,2249
#define LEVELDB_HAVE_MEMORY_BARRIER78,2610
inline void MemoryBarrier(82,2682
#define LEVELDB_HAVE_MEMORY_BARRIER85,2735
inline void MemoryBarrier(89,2842
#define LEVELDB_HAVE_MEMORY_BARRIER94,3066
inline void MemoryBarrier(98,3176
#define LEVELDB_HAVE_MEMORY_BARRIER103,3392
typedef void (*LinuxKernelMemoryBarrierFunc)LinuxKernelMemoryBarrierFunc107,3499
inline void MemoryBarrier(118,4035
#define LEVELDB_HAVE_MEMORY_BARRIER121,4116
inline void MemoryBarrier(125,4199
#define LEVELDB_HAVE_MEMORY_BARRIER128,4272
inline void MemoryBarrier(132,4372
#define LEVELDB_HAVE_MEMORY_BARRIER137,4585
inline void MemoryBarrier(141,4687
#define LEVELDB_HAVE_MEMORY_BARRIER144,4766
class AtomicPointer 150,4915
  void* rep_;152,4947
  AtomicPointer(154,4970
  explicit AtomicPointer(155,4992
  inline void* NoBarrier_Load(156,5039
  inline void NoBarrier_Store(157,5094
  inline void* Acquire_Load(158,5147
  inline void Release_Store(163,5254
class AtomicPointer 171,5431
  void* rep_;173,5463
  AtomicPointer(175,5486
  explicit AtomicPointer(176,5508
  inline void* Acquire_Load(177,5556
  inline void Release_Store(187,5814
  inline void* NoBarrier_Load(195,6037
  inline void NoBarrier_Store(196,6092
class AtomicPointer 201,6232
  void* rep_;203,6264
  AtomicPointer(205,6287
  explicit AtomicPointer(206,6309
  inline void* Acquire_Load(207,6357
  inline void Release_Store(217,6589
  inline void* NoBarrier_Load(225,6782
  inline void NoBarrier_Store(226,6837
#undef LEVELDB_HAVE_MEMORY_BARRIER236,7022
#undef ARCH_CPU_X86_FAMILY237,7057
#undef ARCH_CPU_ARM_FAMILY238,7084
#undef ARCH_CPU_ARM64_FAMILY239,7111
#undef ARCH_CPU_PPC_FAMILY240,7140

src/leveldb/port/port_posix.h,1122
#define STORAGE_LEVELDB_PORT_PORT_POSIX_H_8,338
#undef PLATFORM_IS_LITTLE_ENDIAN10,382
    #define PLATFORM_IS_LITTLE_ENDIAN 14,538
    #define PLATFORM_IS_LITTLE_ENDIAN 20,721
    #define PLATFORM_IS_LITTLE_ENDIAN 22,772
  #define PLATFORM_IS_LITTLE_ENDIAN 28,982
  #define PLATFORM_IS_LITTLE_ENDIAN 30,1073
  #define PLATFORM_IS_LITTLE_ENDIAN 36,1354
#define PLATFORM_IS_LITTLE_ENDIAN 50,1627
#define fread_unlocked 57,1984
#define fwrite_unlocked 58,2013
#define fflush_unlocked 59,2044
#define fdatasync 65,2211
#define fdatasync(69,2266
#define fdatasync 75,2479
#undef PLATFORM_IS_LITTLE_ENDIAN82,2610
class Mutex 86,2660
  Mutex(88,2683
  ~Mutex(89,2694
  void Lock(91,2707
  void Unlock(92,2722
  void AssertHeld(93,2739
  pthread_mutex_t mu_;97,2798
  Mutex(100,2838
class CondVar 104,2897
  pthread_cond_t cv_;112,3029
  Mutex* mu_;113,3051
typedef pthread_once_t OnceType;116,3069
#define LEVELDB_ONCE_INIT 117,3102
inline bool Snappy_Compress(120,3208
inline bool Snappy_GetUncompressedLength(133,3539
inline bool Snappy_Uncompress(142,3782
inline bool GetHeapProfile(151,3993

src/leveldb/port/port_win.h,873
#define STORAGE_LEVELDB_PORT_PORT_WIN_H_32,1857
#define snprintf 35,1915
#define close 36,1942
#define fread_unlocked 37,1963
class Mutex 54,2224
  Mutex(56,2247
  ~Mutex(57,2258
  void Lock(59,2271
  void Unlock(60,2286
  void AssertHeld(61,2303
  void * cs_;68,2583
  Mutex(71,2614
class CondVar 79,2948
  Mutex* mu_;87,3080
  Mutex wait_mtx_;89,3097
  long waiting_;90,3116
  void * sem1_;92,3136
  void * sem2_;93,3152
class OnceType 98,3178
    OnceType(101,3238
    OnceType(102,3296
    void InitOnce(103,3331
    bool init_;113,3523
    Mutex mutex_;114,3539
#define LEVELDB_ONCE_INIT 117,3561
class AtomicPointer 121,3691
  void * rep_;123,3723
  AtomicPointer(125,3747
inline bool Snappy_Compress(136,3951
inline bool Snappy_GetUncompressedLength(149,4282
inline bool Snappy_Uncompress(158,4525
inline bool GetHeapProfile(167,4736

src/leveldb/port/port.h,43
#define STORAGE_LEVELDB_PORT_PORT_H_6,254

src/leveldb/port/thread_annotations.h,489
#define STORAGE_LEVELDB_PORT_THREAD_ANNOTATIONS_H_6,268
#define EXCLUSIVE_LOCKS_REQUIRED(13,519
#define SHARED_LOCKS_REQUIRED(17,595
#define LOCKS_EXCLUDED(21,661
#define LOCK_RETURNED(25,719
#define LOCKABLE29,769
#define SCOPED_LOCKABLE33,818
#define EXCLUSIVE_LOCK_FUNCTION(37,882
#define SHARED_LOCK_FUNCTION(41,956
#define EXCLUSIVE_TRYLOCK_FUNCTION(45,1033
#define SHARED_TRYLOCK_FUNCTION(49,1113
#define UNLOCK_FUNCTION(53,1182
#define NO_THREAD_SAFETY_ANALYSIS57,1253

src/leveldb/helpers/memenv/memenv.h,55
#define STORAGE_LEVELDB_HELPERS_MEMENV_MEMENV_H_6,266

src/leveldb/util/mutexlock.h,48
#define STORAGE_LEVELDB_UTIL_MUTEXLOCK_H_6,259

src/leveldb/util/random.h,218
#define STORAGE_LEVELDB_UTIL_RANDOM_H_6,256
class Random 15,487
  uint32_t seed_;17,512
  explicit Random(19,539
  uint32_t Next(25,693
  uint32_t Uniform(48,1617
  bool OneIn(52,1756
  uint32_t Skewed(57,2019

src/leveldb/util/coding.h,128
#define STORAGE_LEVELDB_UTIL_CODING_H_11,488
inline uint64_t DecodeFixed64(72,3012
inline const char* GetVarint32Ptr(89,3604

src/leveldb/util/hash.h,43
#define STORAGE_LEVELDB_UTIL_HASH_H_8,315

src/leveldb/util/arena.h,448
#define STORAGE_LEVELDB_UTIL_ARENA_H_6,255
class Arena 16,417
  Arena(18,440
  ~Arena(19,451
  char* Allocate(22,538
  char* AllocateAligned(25,648
  size_t MemoryUsage(29,776
  char* AllocateFallback(34,894
  char* AllocateNewBlock(35,934
  char* alloc_ptr_;38,1003
  size_t alloc_bytes_remaining_;39,1023
  std::vector<char*> blocks_;42,1101
  port::AtomicPointer memory_usage_;45,1170
inline char* Arena::Allocate(Allocate52,1291

src/leveldb/util/testutil.h,255
#define STORAGE_LEVELDB_UTIL_TESTUTIL_H_6,258
class ErrorEnv 30,1099
  bool writable_file_error_;32,1145
  int num_writable_file_errors_;33,1174
  ErrorEnv(35,1208
  virtual Status NewWritableFile(39,1344
  virtual Status NewAppendableFile(49,1665

src/leveldb/util/crc32c.h,148
#define STORAGE_LEVELDB_UTIL_CRC32C_H_6,256
static const uint32_t kMaskDelta 24,737
inline uint32_t Mask(31,1037
inline uint32_t Unmask(37,1238

src/leveldb/util/logging.h,46
#define STORAGE_LEVELDB_UTIL_LOGGING_H_9,351

src/leveldb/util/posix_logger.h,217
#define STORAGE_LEVELDB_UTIL_POSIX_LOGGER_H_9,379
class PosixLogger 19,552
  FILE* file_;21,598
  uint64_t (*gettid_)gettid_22,613
  PosixLogger(24,695
  virtual ~PosixLogger(25,772
  virtual void Logv(28,822

src/leveldb/util/histogram.h,412
#define STORAGE_LEVELDB_UTIL_HISTOGRAM_H_6,259
class Histogram 12,342
  Histogram(14,369
  ~Histogram(15,387
  void Clear(17,407
  void Add(18,423
  void Merge(19,449
  double min_;24,531
  double max_;25,546
  double num_;26,561
  double sum_;27,576
  double sum_squares_;28,591
  enum { kNumBuckets 30,615
  static const double kBucketLimit[kBucketLimit31,645
  double buckets_[buckets_32,694

src/leveldb/util/env_posix_test_helper.h,177
#define STORAGE_LEVELDB_UTIL_ENV_POSIX_TEST_HELPER_H_6,267
class EnvPosixTestHelper 13,417
  static void SetReadOnlyFDLimit(19,596
  static void SetReadOnlyMMapLimit(23,763

src/leveldb/util/testharness.h,643
#define STORAGE_LEVELDB_UTIL_TESTHARNESS_H_6,261
class Tester 42,1444
  bool ok_;44,1469
  const char* fname_;45,1481
  int line_;46,1503
  std::stringstream ss_;47,1516
  Tester(50,1551
  ~Tester(54,1628
  Tester& Is(61,1755
  Tester& IsOk(69,1900
#define BINARY_OP(77,2035
#undef BINARY_OP93,2634
  Tester& operator<<(97,2751
#define ASSERT_TRUE(105,2865
#define ASSERT_OK(106,2944
#define ASSERT_EQ(107,3019
#define ASSERT_NE(108,3100
#define ASSERT_GE(109,3181
#define ASSERT_GT(110,3262
#define ASSERT_LE(111,3343
#define ASSERT_LT(112,3424
#define TCONCAT(114,3506
#define TCONCAT1(115,3541
#define TEST(117,3569

src/chain.h,3525
#define BITCOIN_CHAIN_H7,263
class CBlockFileInfo17,427
    unsigned int nBlocks;20,458
    unsigned int nSize;21,526
    unsigned int nUndoSize;22,597
    unsigned int nHeightFirst;23,671
    unsigned int nHeightLast;24,738
    uint64_t nTimeFirst;25,806
    uint64_t nTimeLast;26,873
    ADD_SERIALIZE_METHODS;28,939
    template <typename Stream,30,967
    inline void SerializationOp(31,1018
     void SetNull(41,1358
     CBlockFileInfo(51,1556
     void AddBlock(58,1698
struct CDiskBlockPos71,2112
    int nFile;73,2135
    unsigned int nPos;74,2150
    ADD_SERIALIZE_METHODS;76,2174
    template <typename Stream,78,2202
    inline void SerializationOp(79,2253
    CDiskBlockPos(84,2394
    CDiskBlockPos(88,2442
    friend bool operator==(operator==93,2551
    friend bool operator!=(operator!=97,2692
    void SetNull(101,2802
    bool IsNull(102,2847
    std::string ToString(104,2898
enum BlockStatus:BlockStatus111,3023
    BLOCK_VALID_UNKNOWN 113,3068
    BLOCK_VALID_HEADER 116,3209
    BLOCK_VALID_TREE 120,3395
    BLOCK_VALID_TRANSACTIONS 127,3760
    BLOCK_VALID_CHAIN 131,3966
    BLOCK_VALID_SCRIPTS 134,4084
    BLOCK_VALID_MASK 137,4149
    BLOCK_HAVE_DATA 140,4324
    BLOCK_HAVE_UNDO 141,4399
    BLOCK_HAVE_MASK 142,4473
    BLOCK_FAILED_VALID 144,4542
    BLOCK_FAILED_CHILD 145,4626
    BLOCK_FAILED_MASK 146,4695
    BLOCK_OPT_WITNESS 148,4770
class CBlockIndex156,5188
    const uint256* phashBlock;160,5302
    CBlockIndex* pprev;163,5396
    CBlockIndex* pnext;166,5482
    CBlockIndex* pskip;169,5578
    int nHeight;172,5676
    int nFile;175,5754
    unsigned int nDataPos;178,5844
    unsigned int nUndoPos;181,5951
    arith_uint256 nChainWork;184,6094
    unsigned int nTx;188,6254
    unsigned int nChainTx;193,6557
    unsigned int nStatus;196,6649
    int nVersion;199,6697
    uint256 hashMerkleRoot;200,6715
    unsigned int nTime;201,6743
    unsigned int nBits;202,6767
    unsigned int nNonce;203,6791
    uint256 hashStateRoot;204,6816
    uint256 hashUTXORoot;205,6851
    std::vector<unsigned char> vchBlockSig;207,6997
    uint256 nStakeModifier;208,7041
    COutPoint prevoutStake;210,7107
    uint256 hashProof;211,7135
    uint64_t nMoneySupply;212,7166
    int32_t nSequenceId;215,7290
    unsigned int nTimeMax;218,7396
    void SetNull(220,7424
    CBlockIndex(251,8169
    CBlockIndex(256,8219
    CDiskBlockPos GetBlockPos(274,8806
    CDiskBlockPos GetUndoPos(283,9016
    CBlockHeader GetBlockHeader(292,9225
    uint256 GetBlockHash(309,9803
    int64_t GetBlockTime(314,9877
    int64_t GetBlockTimeMax(319,9954
    enum { nMedianTimeSpan=324,10037
    int64_t GetMedianTimePast(326,10071
    bool IsProofOfWork(340,10521
    bool IsProofOfStake(345,10607
    std::string ToString(350,10691
    bool IsValid(359,11018
    bool RaiseValidity(369,11416
class CDiskBlockIndex 394,12434
    uint256 hashPrev;397,12487
    CDiskBlockIndex(399,12510
    explicit CDiskBlockIndex(403,12571
    ADD_SERIALIZE_METHODS;407,12723
    template <typename Stream,409,12751
    inline void SerializationOp(410,12802
    uint256 GetBlockHash(441,13825
    std::string ToString(458,14382
class CChain 470,14728
    std::vector<CBlockIndex*> vChain;472,14752
    CBlockIndex *Genesis(Genesis476,14888
    CBlockIndex *Tip(Tip481,15062
    friend bool operator==(operator==493,15490
    bool Contains(499,15763
    CBlockIndex *Next(Next504,15985
    int Height(512,16270

src/protocol.cpp,1635
namespace NetMsgType 15,357
const char *VERSION=VERSION16,380
const char *VERACK=VERACK17,411
const char *ADDR=ADDR18,440
const char *INV=INV19,465
const char *GETDATA=GETDATA20,488
const char *MERKLEBLOCK=MERKLEBLOCK21,519
const char *GETBLOCKS=GETBLOCKS22,558
const char *GETHEADERS=GETHEADERS23,593
const char *TX=TX24,630
const char *HEADERS=HEADERS25,651
const char *BLOCK=BLOCK26,682
const char *GETADDR=GETADDR27,709
const char *MEMPOOL=MEMPOOL28,740
const char *PING=PING29,771
const char *PONG=PONG30,796
const char *NOTFOUND=NOTFOUND31,821
const char *FILTERLOAD=FILTERLOAD32,854
const char *FILTERADD=FILTERADD33,891
const char *FILTERCLEAR=FILTERCLEAR34,926
const char *REJECT=REJECT35,965
const char *SENDHEADERS=SENDHEADERS36,994
const char *FEEFILTER=FEEFILTER37,1033
const char *SENDCMPCT=SENDCMPCT38,1068
const char *CMPCTBLOCK=CMPCTBLOCK39,1103
const char *GETBLOCKTXN=GETBLOCKTXN40,1140
const char *BLOCKTXN=BLOCKTXN41,1179
const static std::string allNetMessageTypes[allNetMessageTypes47,1329
CMessageHeader::CMessageHeader(CMessageHeader77,2176
CMessageHeader::CMessageHeader(CMessageHeader85,2437
std::string CMessageHeader::GetCommand(GetCommand94,2814
bool CMessageHeader::IsValid(IsValid99,2950
CAddress::CAddress(131,3802
CAddress::CAddress(136,3853
void CAddress::Init(Init142,3976
CInv::CInv(CInv148,4053
CInv::CInv(CInv154,4105
bool operator<(160,4194
std::string CInv::GetCommand(GetCommand165,4315
std::string CInv::ToString(ToString182,4897
const std::vector<std::string> &getAllNetMessageTypes(getAllNetMessageTypes191,5122

src/chain.cpp,552
void CChain::SetTip(SetTip11,292
CBlockLocator CChain::GetLocator(GetLocator23,588
const CBlockIndex *CChain::FindFork(FindFork51,1423
CBlockIndex* CChain::FindEarliestAtLeast(FindEarliestAtLeast62,1725
int static inline InvertLowestOne(70,2144
int static inline GetSkipHeight(73,2290
CBlockIndex* CBlockIndex::GetAncestor(GetAncestor83,2707
const CBlockIndex* CBlockIndex::GetAncestor(GetAncestor109,3585
void CBlockIndex::BuildSkip(BuildSkip114,3716
arith_uint256 GetBlockProof(120,3826
int64_t GetBlockProofEquivalentTime(135,4414

src/noui.cpp,156
static bool noui_ThreadSafeMessageBox(15,355
static bool noui_ThreadSafeQuestion(42,1197
static void noui_InitMessage(47,1431
void noui_connect(52,1539

src/pubkey.h,1264
#define BITCOIN_PUBKEY_H7,264
const unsigned int BIP32_EXTKEY_SIZE 26,629
class CKeyID 29,744
    CKeyID(32,784
    CKeyID(33,812
typedef uint256 ChainCode;36,863
class CPubKey39,926
    unsigned char vch[vch47,1075
    unsigned int static GetLen(50,1167
    void Invalidate(60,1444
    CPubKey(67,1551
    void Set(74,1698
    CPubKey(85,2049
    CPubKey(91,2182
    unsigned int size(97,2353
    const unsigned char* begin(98,2410
    const unsigned char* end(99,2465
    std::vector<unsigned char> getvch(101,2608
    friend bool operator==(operator==107,2761
    friend bool operator!=(operator!=112,2927
    friend bool operator<(116,3028
    void Serialize(124,3312
    void Unserialize(131,3496
    CKeyID GetID(146,3910
    uint256 GetHash(152,4048
    bool IsValid(162,4255
    bool IsCompressed(171,4497
struct CExtPubKey 197,5313
    unsigned char nDepth;198,5333
    unsigned char vchFingerprint[vchFingerprint199,5359
    unsigned int nChild;200,5396
    ChainCode chaincode;201,5421
    CPubKey pubkey;202,5446
    friend bool operator==(operator==204,5467
    void Serialize(217,5981
    void Serialize(223,6229
    void Unserialize(232,6505
class ECCVerifyHandle245,6963
    static int refcount;247,6987

src/httprpc.cpp,692
static const char* WWW_AUTH_HEADER_DATA 25,695
class HTTPRPCTimer 30,867
    HTTPRPCTimer(33,918
    HTTPEvent ev;42,1206
class HTTPRPCTimerInterface 45,1228
    HTTPRPCTimerInterface(48,1293
    const char* Name(51,1371
    RPCTimerBase* NewTimer(55,1429
    struct event_base* base;60,1581
static std::string strRPCUserColonPass;65,1661
static HTTPRPCTimerInterface* httpRPCTimerInterface 67,1755
static void JSONErrorReply(69,1813
static bool multiUserAuthorized(96,2680
static bool RPCAuthorized(138,4211
static bool HTTPReq_JSONRPC(158,4956
static bool InitRPCAuthentication(229,7254
bool StartHTTPRPC(247,8098
void InterruptHTTPRPC(261,8444
void StopHTTPRPC(266,8528

src/miner.h,2727
#define BITCOIN_MINER_H7,263
namespace Consensus 25,593
static const bool DEFAULT_PRINTPRIORITY 27,634
static const bool DEFAULT_STAKE 29,684
static const bool DEFAULT_STAKE_CACHE 31,725
static const int32_t MAX_STAKE_LOOKAHEAD 36,1033
static const int32_t BYTECODE_TIME_BUFFER 40,1226
static const int32_t STAKE_TIME_BUFFER 44,1414
static const int32_t STAKER_POLLING_PERIOD 48,1553
static const int32_t POW_MINER_MAX_TIME 51,1716
struct CBlockTemplate53,1763
    CBlock block;55,1787
    std::vector<CAmount> vTxFees;56,1805
    std::vector<int64_t> vTxSigOpsCost;57,1839
    std::vector<unsigned char> vchCoinbaseCommitment;58,1879
struct CTxMemPoolModifiedEntry 63,2041
    CTxMemPoolModifiedEntry(64,2074
    CTxMemPool::txiter iter;72,2359
    uint64_t nSizeWithAncestors;73,2388
    CAmount nModFeesWithAncestors;74,2421
    int64_t nSigOpCostWithAncestors;75,2456
struct CompareCTxMemPoolIter 83,2738
    bool operator()(operator()84,2769
struct modifiedentry_iter 90,2899
    typedef CTxMemPool::txiter result_type;91,2927
    result_type operator() operator()92,2971
struct CompareModifiedEntry 101,3272
    bool operator()(operator()102,3302
struct CompareTxIterByAncestorCount 159,6147
    bool operator()(operator()160,6185
    CTxMemPoolModifiedEntry,169,6527
> indexed_modified_transaction_set;183,7066
typedef indexed_modified_transaction_set::nth_index<0>::type::iterator modtxiter;185,7103
typedef indexed_modified_transaction_set::index<ancestor_score_or_gas_price>::type::iterator modtxscoreiter;186,7185
struct update_for_parent_inclusion188,7295
    update_for_parent_inclusion(190,7332
    void operator() operator()192,7402
    CTxMemPool::txiter iter;199,7625
class BlockAssembler203,7715
    std::unique_ptr<CBlockTemplate> pblocktemplate;207,7785
    CBlock* pblock;209,7917
    bool fIncludeWitness;212,7989
    unsigned int nBlockMaxWeight,213,8015
    unsigned int nBlockMaxWeight, nBlockMaxSize;213,8015
    bool fNeedSizeAccounting;214,8064
    CFeeRate blockMinFeeRate;215,8094
    uint64_t nBlockWeight;218,8179
    uint64_t nBlockSize;219,8206
    uint64_t nBlockTx;220,8231
    uint64_t nBlockSigOpsCost;221,8254
    CAmount nFees;222,8285
    CTxMemPool::setEntries inBlock;223,8304
    int nHeight;226,8376
    int64_t nLockTimeCutoff;227,8393
    const CChainParams& chainparams;228,8422
    int lastFewTxs;231,8501
    bool blockFinished;232,8521
    ByteCodeExecResult bceResult;235,8600
    uint64_t minGasPrice 236,8634
    uint64_t hardBlockGasLimit;237,8664
    uint64_t softBlockGasLimit;238,8696
    uint64_t txGasLimit;239,8728
    CMutableTransaction originalRewardTx;243,8904
    int32_t nTimeLimit;246,9044

src/validationinterface.cpp,207
static CMainSignals g_signals;8,273
CMainSignals& GetMainSignals(10,305
void RegisterValidationInterface(15,363
void UnregisterValidationInterface(28,1519
void UnregisterAllValidationInterfaces(41,2707

src/key.cpp,949
static secp256k1_context* secp256k1_context_sign 22,533
void ECDSA_SIG_get0(26,689
static int ec_privkey_import_der(36,954
static int ec_privkey_export_der(80,2296
const unsigned char vchOrder[vchOrder139,5636
const unsigned char vchHalfOrder[vchHalfOrder143,5841
bool EnsureLowS(147,6050
bool CKey::Check(Check178,6922
void CKey::MakeNewKey(MakeNewKey182,7038
CPrivKey CKey::GetPrivKey(GetPrivKey190,7244
CPubKey CKey::GetPubKey(GetPubKey203,7656
bool CKey::Sign(Sign216,8143
bool CKey::VerifyPubKey(VerifyPubKey231,8791
bool CKey::SignCompact(SignCompact245,9266
bool CKey::Load(Load260,9877
bool CKey::Derive(Derive272,10237
bool CExtKey::Derive(Derive292,11086
void CExtKey::SetMaster(SetMaster300,11361
CExtPubKey CExtKey::Neuter(Neuter311,11886
void CExtKey::Encode(Encode321,12136
void CExtKey::Decode(Decode332,12537
bool ECC_InitSanityCheck(340,12839
void ECC_Start(347,12986
void ECC_Stop(364,13486

src/bitcoin-tx.cpp,1504
static bool fCreateBlank;29,714
static std::map<std::string,UniValue> registers;30,740
static const int CONTINUE_EXECUTION=31,789
static int AppInitRawTx(37,991
static void RegisterSetJson(112,5091
static void RegisterSet(123,5364
static void RegisterLoad(138,5821
static CAmount ExtractAndValidateValue(179,6951
static void MutateTxVersion(187,7160
static void MutateTxLocktime(196,7464
static void MutateTxAddInput(205,7764
static void MutateTxAddOutAddr(239,8972
static void MutateTxAddOutPubKey(261,9771
static void MutateTxAddOutMultiSig(302,11263
static void MutateTxAddOutData(369,13807
static void MutateTxAddOutScript(396,14565
static void MutateTxDelInput(433,15771
static void MutateTxDelOutput(446,16191
static const unsigned int N_SIGHASH_OPTS 459,16624
    const char *flagStr;flagStr461,16692
    int flags;462,16717
} sighashOptions[sighashOptions463,16732
static bool findSighashFlags(472,17047
uint256 ParseHashUO(486,17350
std::vector<unsigned char> ParseHexUO(493,17525
static CAmount AmountFromValue(502,17769
static void MutateTxSign(514,18174
class Secp256k1Init640,23420
    ECCVerifyHandle globalVerifyHandle;642,23442
    Secp256k1Init(645,23491
    ~Secp256k1Init(648,23540
static void MutateTx(653,23593
static void OutputTxJSON(696,24880
static void OutputTxHash(705,25101
static void OutputTxHex(712,25318
static void OutputTx(719,25459
static std::string readStdin(729,25672
static int CommandLineRawTx(749,26063
int main(816,27861

src/pow.h,28
#define BITCOIN_POW_H7,261

src/addrman.cpp,904
int CAddrInfo::GetTriedBucket(GetTriedBucket12,316
int CAddrInfo::GetNewBucket(GetNewBucket19,666
int CAddrInfo::GetBucketPosition(GetBucketPosition27,1135
bool CAddrInfo::IsTerrible(IsTerrible33,1394
double CAddrInfo::GetChance(GetChance53,2074
CAddrInfo* CAddrMan::Find(Find68,2532
CAddrInfo* CAddrMan::Create(Create81,2904
void CAddrMan::SwapRandom(SwapRandom93,3232
void CAddrMan::Delete(Delete113,3714
void CAddrMan::ClearNew(ClearNew127,4023
void CAddrMan::MakeTried(MakeTried142,4504
void CAddrMan::Good_(Good_190,6121
bool CAddrMan::Add_(Add_242,7475
void CAddrMan::Attempt_(Attempt_315,10035
CAddrInfo CAddrMan::Select_(Select_337,10559
int CAddrMan::Check_(Check_385,12437
void CAddrMan::GetAddr_(GetAddr_462,14745
void CAddrMan::Connected_(Connected_483,15393
void CAddrMan::SetServices_(SetServices_503,15850
int CAddrMan::RandomInt(RandomInt521,16237

src/aal/qtumstate.h,2208
using OnOpFunc 14,294
using plusAndMinus 16,462
using valtype 17,516
struct TransferInfo{TransferInfo19,561
    dev::Address from;20,582
    dev::Address to;21,605
    dev::u256 value;22,626
struct Vin{Vin25,651
    dev::h256 hash;26,663
    uint32_t nVout;27,683
    dev::u256 value;28,703
    uint8_t alive;29,724
struct ResultExecute{ResultExecute32,747
    dev::eth::ExecutionResult execRes;33,769
    dev::eth::TransactionReceipt txRec;34,808
    CTransaction tx;35,848
namespace qtum{qtum38,873
    dev::AddressHash commit(40,913
class QtumState 59,1570
    void setRootUTXO(69,2051
    void setCacheUTXO(71,2140
    dev::h256 rootHashUTXO(73,2260
    std::unordered_map<std::unordered_map75,2325
    dev::OverlayDB const& dbUtxo(77,2390
	dev::OverlayDB& dbUtxo(79,2451
    virtual ~QtumState(81,2497
    dev::Address newAddress;107,3195
    std::vector<TransferInfo> transfers;109,3225
    dev::OverlayDB dbUTXO;111,3267
	dev::eth::SecureTrieDB<dev::eth::SecureTrieDB113,3295
	dev::eth::SecureTrieDB<dev::Address, dev::OverlayDB> stateUTXO;113,3295
	std::unordered_map<std::unordered_map115,3361
	std::unordered_map<dev::Address, Vin> cacheUTXO;115,3361
struct TemporaryState{TemporaryState119,3416
    std::unique_ptr<QtumState>& globalStateRef;120,3439
    dev::h256 oldHashStateRoot;121,3487
    dev::h256 oldHashUTXORoot;122,3519
    TemporaryState(124,3551
    void SetRoot(129,3790
    ~TemporaryState(135,3980
class CondensingTX{CondensingTX148,4462
    CondensingTX(152,4492
    std::unordered_map<std::unordered_map156,4822
    bool reachedVoutLimit(158,4900
    std::map<std::map174,5181
    std::map<dev::Address, plusAndMinus> plusMinusInfo;174,5181
    std::map<std::map176,5238
    std::map<dev::Address, dev::u256> balances;176,5238
    std::map<std::map178,5287
    std::map<dev::Address, uint32_t> nVouts;178,5287
    std::map<std::map180,5333
    std::map<dev::Address, Vin> vins;180,5333
    const std::vector<TransferInfo>& transfers;182,5372
    const std::set<dev::Address> deleteAddresses;186,5619
    const QtumTransaction& transaction;188,5670
    QtumState* state;190,5711
    bool voutOverflow 192,5734

src/aal/qtumstate.cpp,1179
QtumState::QtumState(11,179
QtumState::QtumState(17,500
ResultExecute QtumState::execute(execute22,700
std::unordered_map<dev::Address, Vin> QtumState::vins(vins130,5138
void QtumState::transferBalance(transferBalance144,5547
Vin const* QtumState::vin(vin151,5792
Vin* QtumState::vin(vin156,5903
void QtumState::kill(kill189,6937
void QtumState::addBalance(addBalance198,7143
dev::Address QtumState::createEcocAddress(createEcocAddress229,8475
void QtumState::deleteAccounts(deleteAccounts246,9297
void QtumState::updateUTXO(updateUTXO257,9615
void QtumState::printfErrorLog(printfErrorLog272,10046
CTransaction CondensingTX::createCondensingTX(createCondensingTX279,10317
std::unordered_map<dev::Address, Vin> CondensingTX::createVin(createVin290,10644
void CondensingTX::selectionVin(selectionVin305,11111
void CondensingTX::calculatePlusAndMinus(calculatePlusAndMinus322,11647
bool CondensingTX::createNewBalances(createNewBalances338,12258
std::vector<CTxIn> CondensingTX::createVins(createVins353,12730
std::vector<CTxOut> CondensingTX::createVout(createVout362,13086
bool CondensingTX::checkDeleteAddress(checkDeleteAddress387,13938

src/aal/qtumtransaction.h,743
#define QTUMTRANSACTION_H2,26
struct VersionVM{VersionVM6,90
    uint8_t format 9,272
    uint8_t rootVM 10,296
    uint8_t rootVM 12,355
    uint8_t format 13,379
    uint8_t vmVersion;15,410
    uint16_t flagOptions;16,433
    uint32_t toRaw(20,537
    static VersionVM fromRaw(23,598
    static VersionVM GetNoExec(27,707
    static VersionVM GetEVMDefault(35,874
class QtumTransaction 45,1076
    QtumTransaction(49,1140
    QtumTransaction(51,1177
    QtumTransaction(54,1410
    void setHashWith(57,1677
    dev::h256 getHashWith(59,1744
    void setNVout(61,1802
    uint32_t getNVout(63,1854
    void setVersion(65,1903
    VersionVM getVersion(68,1962
    uint32_t nVout;73,2036
    VersionVM version;74,2056

src/aal/storageresults.cpp,705
StorageResults::StorageResults(StorageResults3,33
StorageResults::~StorageResults(~StorageResults11,303
void StorageResults::addResult(addResult17,372
void StorageResults::clearCacheResult(clearCacheResult21,526
void StorageResults::wipeResults(wipeResults25,598
void StorageResults::deleteResults(deleteResults30,759
std::vector<TransactionReceiptInfo> StorageResults::getResult(getResult43,1156
void StorageResults::commitResults(commitResults55,1518
bool StorageResults::readResult(readResult97,3582
logEntriesSerializ StorageResults::logEntriesSerialization(logEntriesSerialization134,5378
dev::eth::LogEntries StorageResults::logEntriesDeserialize(logEntriesDeserialize142,5640

src/aal/storageresults.h,1377
using logEntriesSerializ 7,144
struct TransactionReceiptInfo{TransactionReceiptInfo9,245
    uint256 blockHash;10,276
    uint32_t blockNumber;11,299
    uint256 transactionHash;12,325
    uint32_t transactionIndex;13,354
    dev::Address from;14,385
    dev::Address to;15,408
    uint64_t cumulativeGasUsed;16,429
    uint64_t gasUsed;17,461
    dev::Address contractAddress;18,483
    dev::eth::LogEntries logs;19,517
    dev::eth::TransactionException excepted;20,548
struct TransactionReceiptInfoSerialized{TransactionReceiptInfoSerialized23,597
    std::vector<dev::h256> blockHashes;24,638
    std::vector<uint32_t> blockNumbers;25,678
    std::vector<dev::h256> transactionHashes;26,718
    std::vector<uint32_t> transactionIndexes;27,764
    std::vector<dev::h160> senders;28,810
    std::vector<dev::h160> receivers;29,846
    std::vector<dev::u256> cumulativeGasUsed;30,884
    std::vector<dev::u256> gasUsed;31,930
    std::vector<dev::h160> contractAddresses;32,966
    std::vector<logEntriesSerializ> logs;33,1012
    std::vector<uint32_t> excepted;34,1054
class StorageResults{StorageResults37,1094
	std::string path;64,1754
    leveldb::DB* db;66,1774
    leveldb::Options options;68,1796
	std::unordered_map<std::unordered_map70,1827
	std::unordered_map<dev::h256, std::vector<TransactionReceiptInfo>> m_cache_result;70,1827

src/versionbits.cpp,738
const struct BIP9DeploymentInfo VersionBitsDeploymentInfo[VersionBitsDeploymentInfo9,247
ThresholdState AbstractThresholdConditionChecker::GetStateFor(GetStateFor24,576
int AbstractThresholdConditionChecker::GetStateSinceHeightFor(GetStateSinceHeightFor108,3826
class VersionBitsConditionChecker 143,5592
    const Consensus::DeploymentPos id;145,5680
    int64_t BeginTime(148,5731
    int64_t EndTime(149,5839
    int Period(150,5943
    int Threshold(151,6041
    bool Condition(153,6149
    VersionBitsConditionChecker(159,6383
    uint32_t Mask(160,6458
ThresholdState VersionBitsState(165,6579
int VersionBitsStateSinceHeight(170,6831
uint32_t VersionBitsMask(175,7094
void VersionBitsCache::Clear(Clear180,7245

src/utiltime.h,33
#define BITCOIN_UTILTIME_H7,266

src/txdb.cpp,2550
static const char DB_COIN 18,414
static const char DB_COINS 19,447
static const char DB_BLOCK_FILES 20,481
static const char DB_TXINDEX 21,521
static const char DB_BLOCK_INDEX 22,557
static const char DB_HEIGHTINDEX 25,649
static const char DB_STAKEINDEX 26,689
static const char DB_BEST_BLOCK 29,772
static const char DB_FLAG 30,811
static const char DB_REINDEX_FLAG 31,844
static const char DB_LAST_BLOCK 32,885
struct CoinEntry 36,938
    COutPoint* outpoint;37,957
    char key;38,982
    CoinEntry(39,996
    void Serialize(42,1121
    void Unserialize(49,1277
CCoinsViewDB::CCoinsViewDB(58,1405
bool CCoinsViewDB::GetCoin(GetCoin62,1551
bool CCoinsViewDB::HaveCoin(HaveCoin66,1676
uint256 CCoinsViewDB::GetBestBlock(GetBestBlock70,1786
bool CCoinsViewDB::BatchWrite(BatchWrite77,1961
size_t CCoinsViewDB::EstimateSize(EstimateSize102,2837
CBlockTreeDB::CBlockTreeDB(107,2940
bool CBlockTreeDB::ReadBlockFileInfo(ReadBlockFileInfo110,3093
bool CBlockTreeDB::WriteReindexing(WriteReindexing114,3230
bool CBlockTreeDB::ReadReindexing(ReadReindexing121,3401
bool CBlockTreeDB::ReadLastBlockFile(ReadLastBlockFile126,3519
CCoinsViewCursor *CCoinsViewDB::Cursor(Cursor130,3612
bool CCoinsViewDBCursor::GetKey(GetKey148,4272
bool CCoinsViewDBCursor::GetValue(GetValue158,4465
unsigned int CCoinsViewDBCursor::GetValueSize(GetValueSize163,4558
bool CCoinsViewDBCursor::Valid(Valid168,4653
void CCoinsViewDBCursor::Next(Next173,4733
bool CBlockTreeDB::WriteBatchSync(WriteBatchSync184,5048
bool CBlockTreeDB::ReadTxIndex(ReadTxIndex196,5752
bool CBlockTreeDB::WriteTxIndex(WriteTxIndex200,5882
bool CBlockTreeDB::WriteFlag(WriteFlag207,6213
bool CBlockTreeDB::ReadFlag(ReadFlag211,6354
bool CBlockTreeDB::WriteHeightIndex(WriteHeightIndex220,6616
int CBlockTreeDB::ReadHeightIndex(ReadHeightIndex226,6854
bool CBlockTreeDB::EraseHeightIndex(EraseHeightIndex281,8222
bool CBlockTreeDB::WipeHeightIndex(WipeHeightIndex302,8835
bool CBlockTreeDB::WriteStakeIndex(WriteStakeIndex324,9340
bool CBlockTreeDB::ReadStakeIndex(ReadStakeIndex330,9540
bool CBlockTreeDB::ReadStakeIndex(ReadStakeIndex348,10175
bool CBlockTreeDB::EraseStakeIndex(EraseStakeIndex370,10930
bool CBlockTreeDB::LoadBlockIndexGuts(LoadBlockIndexGuts392,11563
class CCoins448,14114
    bool fCoinBase;452,14179
    bool fCoinStake;453,14199
    std::vector<CTxOut> vout;456,14337
    int nHeight;459,14448
    CCoins(462,14492
    void Unserialize(465,14598
bool CCoinsViewDB::Upgrade(Upgrade506,15895

src/serialize.h,11349
#define BITCOIN_SERIALIZE_H7,267
static const unsigned int MAX_SIZE 26,566
struct deserialize_type 39,1021
constexpr deserialize_type deserialize 40,1049
inline T& REF(47,1255
inline T* NCONST_PTR(57,1467
template<typename Stream> inline void ser_writedata8(66,1648
template<typename Stream> inline void ser_writedata16(70,1758
template<typename Stream> inline void ser_writedata32(75,1894
template<typename Stream> inline void ser_writedata32be(81,2088
template<typename Stream> inline void ser_writedata64(87,2276
template<typename Stream> inline uint8_t ser_readdata8(92,2412
template<typename Stream> inline uint16_t ser_readdata16(98,2543
template<typename Stream> inline uint32_t ser_readdata32(104,2686
template<typename Stream> inline uint32_t ser_readdata32be(111,2906
template<typename Stream> inline uint64_t ser_readdata64(118,3120
inline uint64_t ser_double_to_uint64(124,3263
    union { double x;126,3312
    union { double x; uint64_t y;126,3312
inline uint32_t ser_float_to_uint32(130,3388
    union { float x;132,3435
    union { float x; uint32_t y;132,3435
inline double ser_uint64_to_double(136,3510
    union { double x;138,3559
    union { double x; uint64_t y;138,3559
inline float ser_uint32_to_float(142,3635
    union { float x;144,3682
    union { float x; uint32_t y;144,3682
    SER_NETWORK 161,4029
    SER_DISK 162,4065
    SER_GETHASH 163,4101
#define READWRITE(166,4141
#define READWRITEMANY(167,4208
#define ADD_SERIALIZE_METHODS 175,4586
template<typename Stream> inline void Serialize(185,5169
template<typename Stream> inline void Serialize(186,5295
template<typename Stream> inline void Serialize(187,5392
template<typename Stream> inline void Serialize(188,5489
template<typename Stream> inline void Serialize(189,5587
template<typename Stream> inline void Serialize(190,5685
template<typename Stream> inline void Serialize(191,5783
template<typename Stream> inline void Serialize(192,5881
template<typename Stream> inline void Serialize(193,5979
template<typename Stream> inline void Serialize(194,6077
template<typename Stream> inline void Serialize(195,6196
template<typename Stream> inline void Unserialize(197,6317
template<typename Stream> inline void Unserialize(198,6446
template<typename Stream> inline void Unserialize(199,6546
template<typename Stream> inline void Unserialize(200,6646
template<typename Stream> inline void Unserialize(201,6747
template<typename Stream> inline void Unserialize(202,6848
template<typename Stream> inline void Unserialize(203,6949
template<typename Stream> inline void Unserialize(204,7050
template<typename Stream> inline void Unserialize(205,7151
template<typename Stream> inline void Unserialize(206,7252
template<typename Stream> inline void Unserialize(207,7374
template<typename Stream> inline void Serialize(209,7498
template<typename Stream> inline void Unserialize(210,7604
inline unsigned int GetSizeOfCompactSize(224,7920
void WriteCompactSize(235,8458
uint64_t ReadCompactSize(260,9001
inline unsigned int GetSizeOfVarInt(316,10896
template<typename Stream,331,11156
void WriteVarInt(332,11194
template<typename Stream,348,11517
I ReadVarInt(349,11555
#define FLATDATA(362,11791
#define VARINT(363,11872
#define COMPACTSIZE(364,11918
#define LIMITED_STRING(365,11971
class CFlatData370,12088
    char* pbegin;373,12117
    char* pend;374,12135
    CFlatData(376,12159
    explicit CFlatData(378,12288
    template <unsigned int N,383,12425
    template <unsigned int N, typename T,383,12425
    template <unsigned int N, typename T, typename S,383,12425
    explicit CFlatData(384,12491
    char* begin(389,12631
    const char* begin(390,12668
    char* end(391,12717
    const char* end(392,12750
    void Serialize(395,12826
    void Unserialize(401,12945
class CVarInt408,13053
    I &n;n411,13080
    CVarInt(413,13098
    void Serialize(416,13162
    void Unserialize(421,13274
class CCompactSize426,13355
    uint64_t &n;n429,13387
    CCompactSize(431,13412
    void Serialize(434,13488
    void Unserialize(439,13603
class LimitedString445,13710
    std::string& string;448,13743
    LimitedString(450,13776
    void Unserialize(453,13868
    void Serialize(465,14194
CVarInt<I> WrapVarInt(474,14395
template<typename Stream,483,14502
template<typename Stream,484,14601
template<typename Stream,490,14827
template<typename Stream, unsigned int N,490,14827
template<typename Stream,491,14962
template<typename Stream, unsigned int N,491,14962
template<typename Stream, unsigned int N, typename T,491,14962
template<typename Stream,492,15097
template<typename Stream, unsigned int N,492,15097
template<typename Stream,493,15212
template<typename Stream, unsigned int N,493,15212
template<typename Stream,494,15343
template<typename Stream, unsigned int N,494,15343
template<typename Stream, unsigned int N, typename T,494,15343
template<typename Stream,495,15474
template<typename Stream, unsigned int N,495,15474
template<typename Stream,501,15710
template<typename Stream, typename T,501,15710
template<typename Stream,502,15843
template<typename Stream, typename T,502,15843
template<typename Stream, typename T, typename A,502,15843
template<typename Stream,503,15976
template<typename Stream, typename T,503,15976
template<typename Stream,504,16089
template<typename Stream, typename T,504,16089
template<typename Stream,505,16218
template<typename Stream, typename T,505,16218
template<typename Stream, typename T, typename A,505,16218
template<typename Stream,506,16347
template<typename Stream, typename T,506,16347
template<typename Stream,511,16473
template<typename Stream, typename K,511,16473
template<typename Stream,512,16580
template<typename Stream, typename K,512,16580
template<typename Stream,517,16699
template<typename Stream, typename K,517,16699
template<typename Stream, typename K, typename T,517,16699
template<typename Stream, typename K, typename T, typename Pred,517,16699
template<typename Stream,518,16838
template<typename Stream, typename K,518,16838
template<typename Stream, typename K, typename T,518,16838
template<typename Stream, typename K, typename T, typename Pred,518,16838
template<typename Stream,523,16989
template<typename Stream, typename K,523,16989
template<typename Stream, typename K, typename Pred,523,16989
template<typename Stream,524,17113
template<typename Stream, typename K,524,17113
template<typename Stream, typename K, typename Pred,524,17113
template<typename Stream,529,17256
template<typename Stream,530,17357
template<typename Stream,535,17477
template<typename Stream,536,17578
template<typename Stream,543,17776
inline void Serialize(544,17814
template<typename Stream,549,17886
inline void Unserialize(550,17924
template<typename Stream,562,18016
void Serialize(563,18054
template<typename Stream,570,18242
void Unserialize(571,18280
template<typename Stream,584,18510
template<typename Stream, unsigned int N,584,18510
void Serialize_impl(585,18564
template<typename Stream,592,18759
template<typename Stream, unsigned int N,592,18759
template<typename Stream, unsigned int N, typename T,592,18759
void Serialize_impl(593,18825
template<typename Stream,600,19053
template<typename Stream, unsigned int N,600,19053
inline void Serialize(601,19107
template<typename Stream,607,19205
template<typename Stream, unsigned int N,607,19205
void Unserialize_impl(608,19259
template<typename Stream,623,19714
template<typename Stream, unsigned int N,623,19714
template<typename Stream, unsigned int N, typename T,623,19714
void Unserialize_impl(624,19780
template<typename Stream,641,20176
template<typename Stream, unsigned int N,641,20176
inline void Unserialize(642,20230
template<typename Stream,652,20345
template<typename Stream, typename T,652,20345
void Serialize_impl(653,20395
template<typename Stream,660,20592
template<typename Stream, typename T,660,20592
template<typename Stream, typename T, typename A,660,20592
void Serialize_impl(661,20654
template<typename Stream,668,20886
template<typename Stream, typename T,668,20886
inline void Serialize(669,20936
template<typename Stream,675,21036
template<typename Stream, typename T,675,21036
void Unserialize_impl(676,21086
template<typename Stream,691,21543
template<typename Stream, typename T,691,21543
template<typename Stream, typename T, typename A,691,21543
void Unserialize_impl(692,21605
template<typename Stream,709,22003
template<typename Stream, typename T,709,22003
inline void Unserialize(710,22053
template<typename Stream,720,22168
template<typename Stream, typename K,720,22168
void Serialize(721,22218
template<typename Stream,727,22342
template<typename Stream, typename K,727,22342
void Unserialize(728,22392
template<typename Stream,739,22533
template<typename Stream, typename K,739,22533
template<typename Stream, typename K, typename T,739,22533
template<typename Stream, typename K, typename T, typename Pred,739,22533
void Serialize(740,22610
template<typename Stream,747,22837
template<typename Stream, typename K,747,22837
template<typename Stream, typename K, typename T,747,22837
template<typename Stream, typename K, typename T, typename Pred,747,22837
void Unserialize(748,22914
template<typename Stream,766,23268
template<typename Stream, typename K,766,23268
template<typename Stream, typename K, typename Pred,766,23268
void Serialize(767,23333
template<typename Stream,774,23554
template<typename Stream, typename K,774,23554
template<typename Stream, typename K, typename Pred,774,23554
void Unserialize(775,23619
template<typename Stream,793,23957
Serialize(794,24000
template<typename Stream,799,24085
void Unserialize(800,24123
template<typename Stream,810,24247
Serialize(811,24290
template<typename Stream,816,24375
void Unserialize(817,24413
struct CSerActionSerialize827,24595
    constexpr bool ForRead(829,24624
struct CSerActionUnserialize831,24680
    constexpr bool ForRead(833,24711
template<typename Stream,836,24767
inline void SerReadWrite(837,24805
template<typename Stream,842,24917
inline void SerReadWrite(843,24955
class CSizeComputer867,25541
    size_t nSize;870,25574
    const int nType;872,25593
    const int nVersion;873,25614
    CSizeComputer(875,25646
    void write(877,25746
    void seek(883,25907
    CSizeComputer& operator<<(889,26005
    size_t size(895,26119
    int GetVersion(899,26174
    int GetType(900,26222
void SerializeMany(904,26294
template<typename Stream,908,26329
void SerializeMany(909,26369
template<typename Stream,914,26459
template<typename Stream, typename Arg,914,26459
void SerializeMany(915,26517
inline void UnserializeMany(922,26702
template<typename Stream,926,26746
inline void UnserializeMany(927,26786
template<typename Stream,932,26867
template<typename Stream, typename Arg,932,26867
inline void UnserializeMany(933,26925
template<typename Stream,939,27056
inline void SerReadWriteMany(940,27100
template<typename Stream,945,27246
inline void SerReadWriteMany(946,27290
inline void WriteVarInt(952,27440
inline void WriteCompactSize(957,27527
size_t GetSerializeSize(963,27658
template <typename S,968,27785
size_t GetSerializeSize(969,27819

src/pos.h,204
#define QUANTUM_POS_H5,214
static const uint32_t STAKE_TIMESTAMP_MASK 22,606
struct CStakeCache{CStakeCache24,671
    CStakeCache(25,691
    uint32_t blockFromTime;27,805
    CAmount amount;28,833

src/sync.cpp,1097
void PrintLockContention(16,369
struct CLockLocation 35,993
    CLockLocation(36,1016
    std::string ToString(44,1223
    std::string MutexName(49,1367
    bool fTry;51,1424
    std::string mutexName;53,1448
    std::string sourceFile;54,1475
    int sourceLine;55,1503
typedef std::vector<std::pair<void*, CLockLocation> > LockStack;58,1527
typedef std::map<std::pair<std::pair59,1592
typedef std::map<std::pair<void*, void*>, LockStack> LockOrders;59,1592
typedef std::set<std::pair<void*, void*> > InvLockOrders;60,1657
struct LockData 62,1716
    bool available;67,1994
    LockData(68,2014
    ~LockData(69,2050
    LockOrders lockorders;71,2090
    InvLockOrders invlockorders;72,2117
    boost::mutex dd_mutex;73,2150
} static lockdata;74,2177
boost::thread_specific_ptr<LockStack> lockstack;76,2197
static void potential_deadlock_detected(78,2247
static void push_lock(104,3104
static void pop_lock(129,3939
void EnterCritical(134,3996
void LeaveCritical(139,4165
std::string LocksHeld(144,4207
void AssertLockHeldInternal(152,4411
void DeleteLock(161,4771

src/dbwrapper.h,1772
#define BITCOIN_DBWRAPPER_H6,223
static const size_t DBWRAPPER_PREALLOC_KEY_SIZE 20,489
static const size_t DBWRAPPER_PREALLOC_VALUE_SIZE 21,543
class dbwrapper_error 23,602
    dbwrapper_error(26,662
namespace dbwrapper_private 33,844
class CDBBatch48,1315
    const CDBWrapper &parent;parent53,1371
    leveldb::WriteBatch batch;54,1401
    CDataStream ssKey;56,1433
    CDataStream ssValue;57,1456
    size_t size_estimate;59,1482
    CDBBatch(65,1610
    void Clear(67,1760
    template <typename K,73,1840
    void Write(74,1878
    void Erase(99,2809
    size_t SizeEstimate(115,3290
class CDBIterator118,3352
    const CDBWrapper &parent;parent121,3381
    leveldb::Iterator *piter;piter122,3411
    CDBIterator(130,3596
    template<typename K> void Seek(138,3777
    template<typename K> bool GetKey(148,4066
    unsigned int GetKeySize(159,4404
    template<typename V> bool GetValue(163,4479
    unsigned int GetValueSize(175,4906
class CDBWrapper181,4989
    leveldb::Env* penv;186,5214
    leveldb::Options options;189,5269
    leveldb::ReadOptions readoptions;192,5352
    leveldb::ReadOptions iteroptions;195,5455
    leveldb::WriteOptions writeoptions;198,5544
    leveldb::WriteOptions syncoptions;201,5640
    leveldb::DB* pdb;204,5708
    std::vector<unsigned char> obfuscate_key;207,5795
    static const std::string OBFUSCATE_KEY_KEY;210,5900
    static const unsigned int OBFUSCATE_KEY_NUM_BYTES;213,6008
    template <typename K,229,6756
    bool Read(230,6794
    template <typename K,255,7664
    bool Write(256,7702
    bool Exists(264,7911
    bool Erase(283,8526
    bool Flush(293,8814
    bool Sync(298,8865
    CDBIterator *NewIterator(NewIterator304,8965
    size_t EstimateSize(315,9219

src/scheduler.h,482
#define BITCOIN_SCHEDULER_H6,218
class CScheduler36,1084
    typedef boost::function<void(void)> Function;42,1149
    std::multimap<std::multimap74,2495
    std::multimap<boost::chrono::system_clock::time_point, Function> taskQueue;74,2495
    boost::condition_variable newTaskScheduled;75,2575
    mutable boost::mutex newTaskMutex;76,2623
    int nThreadsServicingQueue;77,2662
    bool stopRequested;78,2694
    bool stopWhenEmpty;79,2718
    bool shouldStop(80,2742

src/base58.cpp,1495
static const char* pszBase58 19,509
bool DecodeBase58(21,603
std::string EncodeBase58(71,2166
std::string EncodeBase58(111,3454
bool DecodeBase58(116,3579
std::string EncodeBase58Check(121,3708
bool DecodeBase58Check(130,4023
bool DecodeBase58Check(147,4524
CBase58Data::CBase58Data(CBase58Data152,4663
void CBase58Data::SetData(SetData158,4740
void CBase58Data::SetData(SetData166,4979
bool CBase58Data::SetString(SetString171,5171
bool CBase58Data::SetString(SetString188,5761
std::string CBase58Data::ToString(ToString193,5853
int CBase58Data::CompareTo(CompareTo200,6043
class CBitcoinAddressVisitor 215,6341
    CBitcoinAddress* addr;218,6418
    CBitcoinAddressVisitor(221,6454
    bool operator()(operator()223,6525
    bool operator()(operator()224,6595
    bool operator()(operator()225,6668
bool CBitcoinAddress::Set(Set230,6763
bool CBitcoinAddress::Set(Set236,6904
bool CBitcoinAddress::Set(Set242,7048
bool CBitcoinAddress::IsValid(IsValid247,7176
bool CBitcoinAddress::IsValid(IsValid252,7249
CTxDestination CBitcoinAddress::Get(Get260,7588
bool CBitcoinAddress::GetKeyID(GetKeyID274,7994
bool CBitcoinAddress::IsScript(IsScript284,8253
bool CBitcoinAddress::IsPubKeyHash(IsPubKeyHash289,8388
void CBitcoinSecret::SetKey(SetKey294,8527
CKey CBitcoinSecret::GetKey(GetKey302,8779
bool CBitcoinSecret::IsValid(IsValid310,8971
bool CBitcoinSecret::SetString(SetString317,9245
bool CBitcoinSecret::SetString(SetString322,9363

src/script/bitcoinconsensus.h,1120
#define BITCOIN_BITCOINCONSENSUS_H7,274
        #define EXPORT_SYMBOL 16,527
        #define EXPORT_SYMBOL18,591
    #define EXPORT_SYMBOL 22,693
  #define EXPORT_SYMBOL 25,832
  #define EXPORT_SYMBOL29,908
#define BITCOINCONSENSUS_API_VER 36,980
typedef enum bitcoinconsensus_error_t38,1016
    bitcoinconsensus_ERR_OK 40,1056
    bitcoinconsensus_ERR_TX_INDEX,41,1089
    bitcoinconsensus_ERR_TX_SIZE_MISMATCH,42,1124
    bitcoinconsensus_ERR_TX_DESERIALIZE,43,1167
    bitcoinconsensus_ERR_AMOUNT_REQUIRED,44,1208
    bitcoinconsensus_ERR_INVALID_FLAGS,45,1250
} bitcoinconsensus_error;46,1290
    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE 51,1357
    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH 52,1423
    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG 53,1533
    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY 54,1648
    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY 55,1752
    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY 56,1864
    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS 57,1978
    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL 58,2080
#undef EXPORT_SYMBOL81,3628

src/script/bitcoinconsensus.cpp,671
class TxInputStream16,458
    TxInputStream(19,488
    void read(26,679
    TxInputStream& operator>>(43,1202
    int GetVersion(49,1310
    int GetType(50,1359
    const int m_type;52,1411
    const int m_version;53,1433
    const unsigned char* m_data;54,1458
    size_t m_remaining;55,1491
inline int set_error(58,1519
struct ECCryptoClosure65,1655
    ECCVerifyHandle handle;67,1680
ECCryptoClosure instance_of_eccryptoclosure;70,1712
static bool verify_flags(74,1838
static int verify_script(79,1959
int bitcoinconsensus_verify_script_with_amount(104,3245
int bitcoinconsensus_verify_script(113,3694
unsigned int bitcoinconsensus_version(125,4247

src/script/interpreter.h,1832
#define BITCOIN_SCRIPT_INTERPRETER_H7,276
typedef std::vector<unsigned char> valtype;21,500
    SIGHASH_ALL 26,586
    SIGHASH_NONE 27,607
    SIGHASH_SINGLE 28,629
    SIGHASH_ANYONECANPAY 29,653
    SCRIPT_VERIFY_NONE 35,730
    SCRIPT_VERIFY_P2SH 38,820
    SCRIPT_VERIFY_STRICTENC 43,1173
    SCRIPT_VERIFY_DERSIG 46,1333
    SCRIPT_VERIFY_LOW_S 50,1525
    SCRIPT_VERIFY_NULLDUMMY 53,1673
    SCRIPT_VERIFY_SIGPUSHONLY 56,1818
    SCRIPT_VERIFY_MINIMALDATA 63,2279
    SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS 73,2845
    SCRIPT_VERIFY_CLEANSTACK 80,3329
    SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY 85,3443
    SCRIPT_VERIFY_CHECKSEQUENCEVERIFY 90,3574
    SCRIPT_VERIFY_WITNESS 94,3668
    SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM 98,3766
    SCRIPT_VERIFY_MINIMALIF 102,3942
    SCRIPT_VERIFY_NULLFAIL 106,4072
    SCRIPT_VERIFY_WITNESS_PUBKEYTYPE 110,4189
    SCRIPT_EXEC_BYTE_CODE 114,4287
struct PrecomputedTransactionData119,4444
    uint256 hashPrevouts,121,4480
    uint256 hashPrevouts, hashSequence,121,4480
    uint256 hashPrevouts, hashSequence, hashOutputs;121,4480
enum SigVersion126,4594
    SIGVERSION_BASE 128,4612
    SIGVERSION_WITNESS_V0 129,4637
class BaseSignatureChecker134,4876
    virtual bool CheckSig(137,4913
    virtual bool CheckLockTime(142,5120
    virtual bool CheckSequence(147,5222
    virtual ~BaseSignatureChecker(152,5324
class TransactionSignatureChecker 155,5367
    const CTransaction* txTo;158,5442
    unsigned int nIn;159,5472
    const CAmount amount;160,5494
    const PrecomputedTransactionData* txdata;161,5520
    TransactionSignatureChecker(167,5719
    TransactionSignatureChecker(168,5886
class MutableTransactionSignatureChecker 174,6389
    const CTransaction txTo;177,6478
    MutableTransactionSignatureChecker(180,6516

src/script/ismine.h,272
#define BITCOIN_SCRIPT_ISMINE_H7,271
enum isminetype17,417
    ISMINE_NO 19,435
    ISMINE_WATCH_UNSOLVABLE 21,585
    ISMINE_WATCH_SOLVABLE 23,743
    ISMINE_WATCH_ONLY 24,774
    ISMINE_SPENDABLE 25,847
    ISMINE_ALL 26,873
typedef uint8_t isminefilter;29,969

src/script/script_error.h,1789
#define BITCOIN_SCRIPT_SCRIPT_ERROR_H7,277
typedef enum ScriptError_t9,316
    SCRIPT_ERR_OK 11,345
    SCRIPT_ERR_UNKNOWN_ERROR,12,368
    SCRIPT_ERR_EVAL_FALSE,13,398
    SCRIPT_ERR_OP_RETURN,14,425
    SCRIPT_ERR_SCRIPT_SIZE,17,472
    SCRIPT_ERR_PUSH_SIZE,18,500
    SCRIPT_ERR_OP_COUNT,19,526
    SCRIPT_ERR_STACK_SIZE,20,551
    SCRIPT_ERR_SIG_COUNT,21,578
    SCRIPT_ERR_PUBKEY_COUNT,22,604
    SCRIPT_ERR_VERIFY,25,669
    SCRIPT_ERR_EQUALVERIFY,26,692
    SCRIPT_ERR_CHECKMULTISIGVERIFY,27,720
    SCRIPT_ERR_CHECKSIGVERIFY,28,756
    SCRIPT_ERR_NUMEQUALVERIFY,29,787
    SCRIPT_ERR_BAD_OPCODE,32,861
    SCRIPT_ERR_DISABLED_OPCODE,33,888
    SCRIPT_ERR_INVALID_STACK_OPERATION,34,920
    SCRIPT_ERR_INVALID_ALTSTACK_OPERATION,35,960
    SCRIPT_ERR_UNBALANCED_CONDITIONAL,36,1003
    SCRIPT_ERR_NEGATIVE_LOCKTIME,39,1097
    SCRIPT_ERR_UNSATISFIED_LOCKTIME,40,1131
    SCRIPT_ERR_SIG_HASHTYPE,43,1192
    SCRIPT_ERR_SIG_DER,44,1221
    SCRIPT_ERR_MINIMALDATA,45,1245
    SCRIPT_ERR_SIG_PUSHONLY,46,1273
    SCRIPT_ERR_SIG_HIGH_S,47,1302
    SCRIPT_ERR_SIG_NULLDUMMY,48,1329
    SCRIPT_ERR_PUBKEYTYPE,49,1359
    SCRIPT_ERR_CLEANSTACK,50,1386
    SCRIPT_ERR_MINIMALIF,51,1413
    SCRIPT_ERR_SIG_NULLFAIL,52,1439
    SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS,55,1497
    SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM,56,1540
    SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH,59,1624
    SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY,60,1669
    SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH,61,1715
    SCRIPT_ERR_WITNESS_MALLEATED,62,1756
    SCRIPT_ERR_WITNESS_MALLEATED_P2SH,63,1790
    SCRIPT_ERR_WITNESS_UNEXPECTED,64,1829
    SCRIPT_ERR_WITNESS_PUBKEYTYPE,65,1864
    SCRIPT_ERR_ERROR_COUNT67,1900
} ScriptError;68,1927
#define SCRIPT_ERR_LAST 70,1943

src/script/ismine.cpp,182
typedef vector<unsigned char> valtype;18,433
unsigned int HaveKeys(20,473
isminetype IsMine(32,779
isminetype IsMine(38,975
isminetype IsMine(44,1162
isminetype IsMine(50,1392

src/script/script.h,6361
#define BITCOIN_SCRIPT_SCRIPT_H7,271
static const unsigned int MAX_SCRIPT_ELEMENT_SIZE 22,559
static const int MAX_OPS_PER_SCRIPT 25,691
static const int MAX_PUBKEYS_PER_MULTISIG 28,781
static const int MAX_SCRIPT_SIZE 31,864
static const unsigned int LOCKTIME_THRESHOLD 35,1040
std::vector<unsigned char> ToByteVector(38,1153
enum opcodetype44,1294
    OP_0 47,1330
    OP_FALSE 48,1347
    OP_PUSHDATA1 49,1368
    OP_PUSHDATA2 50,1393
    OP_PUSHDATA4 51,1418
    OP_1NEGATE 52,1443
    OP_RESERVED 53,1466
    OP_1 54,1490
    OP_TRUE=55,1507
    OP_2 56,1525
    OP_3 57,1542
    OP_4 58,1559
    OP_5 59,1576
    OP_6 60,1593
    OP_7 61,1610
    OP_8 62,1627
    OP_9 63,1644
    OP_10 64,1661
    OP_11 65,1679
    OP_12 66,1697
    OP_13 67,1715
    OP_14 68,1733
    OP_15 69,1751
    OP_16 70,1769
    OP_NOP 73,1803
    OP_VER 74,1822
    OP_IF 75,1841
    OP_NOTIF 76,1859
    OP_VERIF 77,1880
    OP_VERNOTIF 78,1901
    OP_ELSE 79,1925
    OP_ENDIF 80,1945
    OP_VERIFY 81,1966
    OP_RETURN 82,1988
    OP_TOALTSTACK 85,2028
    OP_FROMALTSTACK 86,2054
    OP_2DROP 87,2082
    OP_2DUP 88,2103
    OP_3DUP 89,2123
    OP_2OVER 90,2143
    OP_2ROT 91,2164
    OP_2SWAP 92,2184
    OP_IFDUP 93,2205
    OP_DEPTH 94,2226
    OP_DROP 95,2247
    OP_DUP 96,2267
    OP_NIP 97,2286
    OP_OVER 98,2305
    OP_PICK 99,2325
    OP_ROLL 100,2345
    OP_ROT 101,2365
    OP_SWAP 102,2384
    OP_TUCK 103,2404
    OP_CAT 106,2443
    OP_SUBSTR 107,2462
    OP_LEFT 108,2484
    OP_RIGHT 109,2504
    OP_SIZE 110,2525
    OP_INVERT 113,2563
    OP_AND 114,2585
    OP_OR 115,2604
    OP_XOR 116,2622
    OP_EQUAL 117,2641
    OP_EQUALVERIFY 118,2662
    OP_RESERVED1 119,2689
    OP_RESERVED2 120,2714
    OP_1ADD 123,2755
    OP_1SUB 124,2775
    OP_2MUL 125,2795
    OP_2DIV 126,2815
    OP_NEGATE 127,2835
    OP_ABS 128,2857
    OP_NOT 129,2876
    OP_0NOTEQUAL 130,2895
    OP_ADD 132,2921
    OP_SUB 133,2940
    OP_MUL 134,2959
    OP_DIV 135,2978
    OP_MOD 136,2997
    OP_LSHIFT 137,3016
    OP_RSHIFT 138,3038
    OP_BOOLAND 140,3061
    OP_BOOLOR 141,3084
    OP_NUMEQUAL 142,3106
    OP_NUMEQUALVERIFY 143,3130
    OP_NUMNOTEQUAL 144,3160
    OP_LESSTHAN 145,3187
    OP_GREATERTHAN 146,3211
    OP_LESSTHANOREQUAL 147,3238
    OP_GREATERTHANOREQUAL 148,3269
    OP_MIN 149,3303
    OP_MAX 150,3322
    OP_WITHIN 152,3342
    OP_RIPEMD160 155,3379
    OP_SHA1 156,3404
    OP_SHA256 157,3424
    OP_HASH160 158,3446
    OP_HASH256 159,3469
    OP_CODESEPARATOR 160,3492
    OP_CHECKSIG 161,3521
    OP_CHECKSIGVERIFY 162,3545
    OP_CHECKMULTISIG 163,3575
    OP_CHECKMULTISIGVERIFY 164,3604
    OP_NOP1 167,3657
    OP_CHECKLOCKTIMEVERIFY 168,3677
    OP_NOP2 169,3712
    OP_CHECKSEQUENCEVERIFY 170,3750
    OP_NOP3 171,3785
    OP_NOP4 172,3823
    OP_NOP5 173,3843
    OP_NOP6 174,3863
    OP_NOP7 175,3883
    OP_NOP8 176,3903
    OP_NOP9 177,3923
    OP_NOP10 178,3943
    OP_CREATE 181,3995
    OP_CALL 182,4017
    OP_SPEND 183,4037
    OP_GAS_PRICE 186,4091
    OP_VERSION 187,4116
    OP_GAS_LIMIT 188,4139
    OP_DATA 189,4164
    OP_SMALLINTEGER 190,4184
    OP_PUBKEYS 191,4212
    OP_PUBKEYHASH 192,4235
    OP_PUBKEY 193,4261
    OP_INVALIDOPCODE 195,4284
class scriptnum_error 200,4360
    explicit scriptnum_error(203,4420
class CScriptNum206,4506
    explicit CScriptNum(218,5058
    static const size_t nDefaultMaxNumSize 223,5134
    explicit CScriptNum(225,5183
    inline bool operator==(operator==252,6453
    inline bool operator!=(operator!=253,6536
    inline bool operator<=(operator<=254,6619
    inline bool operator< 255,6702
    inline bool operator>=(operator>=256,6785
    inline bool operator> 257,6868
    inline bool operator==(operator==259,6952
    inline bool operator!=(operator!=260,7044
    inline bool operator<=(operator<=261,7136
    inline bool operator< 262,7228
    inline bool operator>=(operator>=263,7320
    inline bool operator> 264,7412
    inline CScriptNum operator+(266,7505
    inline CScriptNum operator-(267,7606
    inline CScriptNum operator+(268,7707
    inline CScriptNum operator-(269,7808
    inline CScriptNum& operator+=(operator+=271,7910
    inline CScriptNum& operator-=(operator-=272,8011
    inline CScriptNum operator&(274,8113
    inline CScriptNum operator&(275,8214
    inline CScriptNum& operator&=(operator&=277,8316
    inline CScriptNum operator-(279,8418
    inline CScriptNum& operator=(operator=285,8596
    inline CScriptNum& operator+=(operator+=291,8708
    inline CScriptNum& operator-=(operator-=299,9013
    inline CScriptNum& operator&=(operator&=307,9318
    int getint(313,9432
    std::vector<unsigned char> getvch(322,9711
    static uint64_t vch_to_uint64(328,9848
    static std::vector<unsigned char> serialize(351,10588
    static int64_t set_vch(385,11662
    int64_t m_value;402,12171
typedef prevector<28, unsigned char> CScriptBase;405,12196
class CScript 408,12316
    CScript& push_int64(411,12364
    CScript(428,12698
    CScript(429,12716
    CScript(430,12804
    CScript(431,12948
    CScript& operator+=(operator+=433,13049
    friend CScript operator+(439,13169
    CScript(446,13310
    explicit CScript(448,13360
    explicit CScript(449,13418
    explicit CScript(450,13479
    CScript& operator<<(453,13558
    CScript& operator<<(455,13620
    CScript& operator<<(463,13864
    CScript& operator<<(469,13973
    CScript& operator<<(498,14785
    bool GetOp(507,15151
    bool GetOp(516,15482
    bool GetOp(524,15695
    bool GetOp(529,15855
    bool GetOp2(534,15976
    static int DecodeOP_N(587,17468
    static opcodetype EncodeOP_N(594,17672
    int FindAndDelete(602,17844
    int Find(629,18539
    bool IsUnspendable(671,20034
    bool HasOpCreate(677,20213
    bool HasOpCall(682,20296
    bool HasOpSpend(686,20370
    void clear(692,20507
struct CScriptWitness699,20644
    std::vector<std::vector<unsigned char> > stack;703,20794
    CScriptWitness(706,20908
    bool IsNull(708,20934
    void SetNull(710,20985
class CReserveScript715,21085
    CScript reserveScript;718,21116
    virtual void KeepScript(719,21143
    CReserveScript(720,21176
    virtual ~CReserveScript(721,21200

src/script/standard.h,1005
#define BITCOIN_SCRIPT_STANDARD_H7,273
static const bool DEFAULT_ACCEPT_DATACARRIER 16,413
static const uint64_t STANDARD_MINIMUM_GAS_LIMIT 20,663
static const uint64_t STANDARD_MINIMUM_GAS_PRICE 22,805
class CScriptID 28,971
    CScriptID(31,1014
    CScriptID(33,1079
static const unsigned int MAX_OP_RETURN_RELAY 36,1133
static const unsigned int MANDATORY_SCRIPT_VERIFY_FLAGS 49,1676
enum txnouttype51,1755
    TX_NONSTANDARD,53,1773
    TX_PUBKEY,55,1830
    TX_PUBKEYHASH,56,1845
    TX_SCRIPTHASH,57,1864
    TX_MULTISIG,58,1883
    TX_NULL_DATA,59,1900
    TX_WITNESS_V0_SCRIPTHASH,60,1918
    TX_WITNESS_V0_KEYHASH,61,1948
    TX_CREATE,62,1975
    TX_CALL,63,1990
class CNoDestination 66,2007
    friend bool operator==(operator==68,2038
    friend bool operator<(69,2132
typedef boost::variant<CNoDestination,CNoDestination79,2508
typedef boost::variant<CNoDestination, CKeyID,79,2508
typedef boost::variant<CNoDestination, CKeyID, CScriptID> CTxDestination;79,2508

src/script/sign.h,857
#define BITCOIN_SCRIPT_SIGN_H7,269
class BaseSignatureCreator 20,498
    const CKeyStore* keystore;22,538
    BaseSignatureCreator(25,578
    const CKeyStore& KeyStore(26,658
    virtual ~BaseSignatureCreator(27,719
class TransactionSignatureCreator 35,1065
    const CTransaction* txTo;36,1131
    unsigned int nIn;37,1161
    int nHashType;38,1183
    CAmount amount;39,1202
    const TransactionSignatureChecker checker;40,1222
    const BaseSignatureChecker& Checker(44,1442
class MutableTransactionSignatureCreator 48,1647
    CTransaction tx;49,1727
    MutableTransactionSignatureCreator(52,1757
class DummySignatureCreator 56,2087
    DummySignatureCreator(58,2155
struct SignatureData 63,2434
    CScript scriptSig;64,2457
    CScriptWitness scriptWitness;65,2480
    SignatureData(67,2515
    explicit SignatureData(68,2538

src/script/sigcache.cpp,637
class SignatureCacheHasher27,758
    uint32_t operator()(operator()31,830
class CSignatureCache45,1283
    uint256 nonce;49,1397
    typedef CuckooCache::cache<uint256,uint25650,1416
    typedef CuckooCache::cache<uint256, SignatureCacheHasher> map_type;50,1416
    map_type setValid;51,1488
    boost::shared_mutex cs_sigcache;52,1511
    CSignatureCache(55,1557
    ComputeEntry(61,1642
    Get(67,1941
    void Set(73,2117
    uint32_t setup_bytes(78,2257
static CSignatureCache signatureCache;90,2711
void InitSignatureCache(94,2832
bool CachingTransactionSignatureChecker::VerifySignature(VerifySignature104,3397

src/script/script.cpp,606
const char* GetOpName(13,337
unsigned int CScript::GetSigOpCount(GetSigOpCount161,7326
unsigned int CScript::GetSigOpCount(GetSigOpCount185,8013
bool CScript::IsPayToScriptHash(IsPayToScriptHash209,8672
bool CScript::IsPayToPubkey(IsPayToPubkey219,8985
bool CScript::IsPayToPubkeyHash(IsPayToPubkeyHash232,9386
bool CScript::IsPayToWitnessScriptHash(IsPayToWitnessScriptHash244,9774
bool CScript::IsWitnessProgram(IsWitnessProgram254,10122
bool CScript::IsPushOnly(IsPushOnly270,10624
bool CScript::IsPushOnly(IsPushOnly287,11152
std::string CScriptWitness::ToString(ToString292,11228

src/script/sigcache.h,272
#define BITCOIN_SCRIPT_SIGCACHE_H7,273
static const unsigned int DEFAULT_MAX_SIG_CACHE_SIZE 16,533
static const int64_t MAX_MAX_SIG_CACHE_SIZE 18,626
class CachingTransactionSignatureChecker 22,696
    bool store;25,785
    CachingTransactionSignatureChecker(28,810

src/script/interpreter.cpp,1728
inline bool set_success(20,487
inline bool set_error(27,594
bool CastToBool(36,740
#define stacktop(55,1193
#define altstacktop(56,1243
static inline void popstack(57,1302
bool IsCompressedOrUncompressedPubKey(64,1460
bool static IsCompressedPubKey(86,2167
bool static IsValidSignatureEncoding(108,3025
bool IsLowDERSignature(173,5667
bool IsDERSignature(184,6116
bool static IsDefinedHashtypeSignature(191,6340
bool CheckSignatureEncoding(202,6653
bool static CheckPubKeyEncoding(219,7480
bool static CheckMinimalPush(230,8046
bool EvalScript(253,8930
class CTransactionSignatureSerializer 1075,42510
    const CTransaction& txTo;1077,42559
    const CScript& scriptCode;1078,42660
    const unsigned int nIn;1079,42725
    const bool fAnyoneCanPay;1080,42794
    const bool fHashSingle;1081,42889
    const bool fHashNone;1082,42964
    CTransactionSignatureSerializer(1085,43046
    void SerializeScriptCode(1093,43518
    void SerializeInput(1116,44329
    void SerializeOutput(1138,45124
    void Serialize(1148,45456
uint256 GetPrevoutHash(1166,46147
uint256 GetSequenceHash(1174,46360
uint256 GetOutputsHash(1182,46576
PrecomputedTransactionData::PrecomputedTransactionData(PrecomputedTransactionData1192,46804
uint256 SignatureHash(1199,47013
bool TransactionSignatureChecker::VerifySignature(VerifySignature1269,49583
bool TransactionSignatureChecker::CheckSig(CheckSig1274,49776
bool TransactionSignatureChecker::CheckLockTime(CheckLockTime1295,50454
bool TransactionSignatureChecker::CheckSequence(CheckSequence1331,51877
static bool VerifyWitnessProgram(1377,53879
bool VerifyScript(1430,56446
size_t static WitnessSigOps(1549,61505
size_t CountWitnessSigOps(1565,62011

src/script/standard.cpp,663
typedef vector<unsigned char> valtype;21,524
bool fAcceptDatacarrier 23,564
unsigned nMaxDatacarrierBytes 24,618
CScriptID::CScriptID(26,672
const char* GetTxnOutputType(28,757
bool Solver(49,1397
bool ExtractDestination(273,10241
bool ExtractDestinations(307,11062
class CScriptVisitor 349,12121
    CScript *script;script352,12190
    CScriptVisitor(354,12219
    bool operator()(operator()356,12281
    bool operator()(operator()361,12391
    bool operator()(operator()367,12590
CScript GetScriptForDestination(375,12772
CScript GetScriptForRawPubKey(383,12934
CScript GetScriptForMultisig(388,13089
CScript GetScriptForWitness(399,13407

src/script/sign.cpp,1153
typedef std::vector<unsigned char> valtype;20,489
TransactionSignatureCreator::TransactionSignatureCreator(22,534
bool TransactionSignatureCreator::CreateSig(CreateSig24,847
static bool Sign1(41,1458
static bool SignN(50,1787
static bool SignStep(70,2659
static CScript PushAll(129,4509
bool ProduceSignature(144,4880
SignatureData DataFromTransaction(193,6981
void UpdateTransaction(202,7239
bool SignSignature(209,7466
bool SignSignature(222,7935
bool VerifySignature(232,8339
static vector<valtype> CombineMultisig(249,8886
struct Stacks306,10708
    std::vector<valtype> script;308,10724
    std::vector<valtype> witness;309,10757
    Stacks(311,10792
    explicit Stacks(312,10808
    explicit Stacks(313,10913
    SignatureData Output(317,11115
static Stacks CombineSignatures(326,11305
SignatureData CombineSignatures(400,14266
class DummySignatureChecker 412,14790
    DummySignatureChecker(415,14858
    bool CheckSig(417,14890
const DummySignatureChecker dummyChecker;422,15090
const BaseSignatureChecker& DummySignatureCreator::Checker(Checker425,15135
bool DummySignatureCreator::CreateSig(CreateSig430,15232

src/script/script_error.cpp,37
const char* ScriptErrorString(8,266

src/bloom.h,905
#define BITCOIN_BLOOM_H6,219
static const unsigned int MAX_BLOOM_FILTER_SIZE 17,406
static const unsigned int MAX_HASH_FUNCS 18,472
enum bloomflags24,645
    BLOOM_UPDATE_NONE 26,663
    BLOOM_UPDATE_ALL 27,690
    BLOOM_UPDATE_P2PUBKEY_ONLY 29,813
    BLOOM_UPDATE_MASK 30,849
class CBloomFilter44,1369
    std::vector<unsigned char> vData;47,1399
    bool isFull;48,1437
    bool isEmpty;49,1454
    unsigned int nHashFuncs;50,1472
    unsigned int nTweak;51,1501
    unsigned char nFlags;52,1526
    CBloomFilter(71,2643
    ADD_SERIALIZE_METHODS;73,2734
    template <typename Stream,75,2762
    inline void SerializationOp(76,2813
class CRollingBloomFilter119,4571
    int nEntriesPerGeneration;135,5108
    int nEntriesThisGeneration;136,5139
    int nGeneration;137,5171
    std::vector<uint64_t> data;138,5192
    unsigned int nTweak;139,5224
    int nHashFuncs;140,5249

src/obj/build.h,26
#define BUILD_SUFFIX 1,0

src/checkqueue.h,776
#define BITCOIN_CHECKQUEUE_H6,224
class CCheckQueue30,951
    boost::mutex mutex;34,1021
    boost::condition_variable condWorker;37,1100
    boost::condition_variable condMaster;40,1197
    std::vector<T> queue;44,1365
    int nIdle;47,1460
    int nTotal;50,1536
    bool fAllOk;53,1594
    unsigned int nTodo;60,1790
    bool fQuit;63,1852
    unsigned int nBatchSize;66,1937
    bool Loop(69,2037
    CCheckQueue(131,4748
    void Thread(134,4903
    bool Wait(140,5041
    void Add(146,5140
    ~CCheckQueue(160,5548
    bool IsIdle(164,5580
class CCheckQueueControl177,5883
    CCheckQueue<T>* pqueue;180,5919
    bool fDone;181,5947
    CCheckQueueControl(184,5972
    bool Wait(193,6237
    void Add(202,6398
    ~CCheckQueueControl(208,6511

src/chainparams.cpp,622
static CBlock CreateGenesisBlock(28,697
static CBlock CreateGenesisBlock(63,2524
class CMainParams 81,3324
    CMainParams(83,3374
static CMainParams mainParams;176,8631
class CTestNetParams 181,8687
    CTestNetParams(183,8740
static CTestNetParams testNetParams;272,13428
class CRegTestParams 277,13493
    CRegTestParams(279,13546
    void UpdateBIP9Parameters(361,17710
static CRegTestParams regTestParams;367,17935
static CChainParams* pCurrentParams 369,17973
const CChainParams& Params(371,18015
CChainParams& Params(377,18105
void SelectParams(389,18479
void UpdateRegtestBIP9Parameters(395,18600

src/chainparamsbase.h,354
#define BITCOIN_CHAINPARAMSBASE_H6,229
class CBaseChainParams15,445
    static const std::string MAIN;19,538
    static const std::string TESTNET;20,573
    static const std::string REGTEST;21,611
    const std::string& DataDir(23,650
    int RPCPort(24,712
    CBaseChainParams(27,769
    int nRPCPort;29,796
    std::string strDataDir;30,814

src/warnings.cpp,366
CCriticalSection cs_warnings;11,325
std::string strMiscWarning;12,355
bool fLargeWorkForkFound 13,383
bool fLargeWorkInvalidChainFound 14,417
void SetMiscWarning(16,460
void SetfLargeWorkForkFound(22,572
bool GetfLargeWorkForkFound(28,671
void SetfLargeWorkInvalidChainFound(34,761
bool GetfLargeWorkInvalidChainFound(40,876
std::string GetWarnings(46,982

src/hash.h,1316
#define BITCOIN_HASH_H7,262
typedef uint256 ChainCode;18,451
class CHash256 21,546
    CSHA256 sha;23,572
    static const size_t OUTPUT_SIZE 25,597
    void Finalize(27,658
    CHash256& Write(33,863
    CHash256& Reset(38,983
class CHash160 45,1133
    CSHA256 sha;47,1159
    static const size_t OUTPUT_SIZE 49,1184
    void Finalize(51,1248
    CHash160& Write(57,1454
    CHash160& Reset(62,1574
inline uint256 Hash(70,1719
template<typename T1,80,2099
inline uint256 Hash(81,2134
template<typename T1,92,2702
template<typename T1, typename T2,92,2702
inline uint256 Hash(93,2750
inline uint160 Hash160(107,3490
inline uint160 Hash160(117,3843
inline uint160 Hash160(124,4024
class CHashWriter130,4209
    CHash256 ctx;133,4238
    const int nType;135,4257
    const int nVersion;136,4278
    CHashWriter(139,4311
    int GetType(141,4399
    int GetVersion(142,4441
    void write(144,4490
    uint256 GetHash(149,4626
    CHashWriter& operator<<(156,4776
class CHashVerifier 165,5023
    Source* source;168,5075
    CHashVerifier(171,5104
    void read(173,5217
    void ignore(179,5336
    CHashVerifier<Source>& operator>>(190,5578
uint256 SerializeHash(200,5822
class CSipHasher212,6255
    uint64_t v[v215,6283
    uint64_t tmp;216,6302
    int count;217,6320

src/test/serialize_tests.cpp,1001
class CSerializeMethodsTestSingle16,409
    int intval;19,456
    bool boolval;20,472
    std::string stringval;21,490
    const char* charstrval;22,517
    CTransactionRef txval;23,545
    CSerializeMethodsTestSingle(26,625
    ADD_SERIALIZE_METHODS;27,898
    template <typename Stream,29,926
    inline void SerializationOp(30,977
    bool operator==(operator==38,1203
class CSerializeMethodsTestMany 48,1512
    using CSerializeMethodsTestSingle::CSerializeMethodsTestSingle;51,1591
    ADD_SERIALIZE_METHODS;52,1659
    template <typename Stream,54,1687
    inline void SerializationOp(55,1738
BOOST_AUTO_TEST_CASE(60,1895
BOOST_AUTO_TEST_CASE(91,3585
BOOST_AUTO_TEST_CASE(110,4524
BOOST_AUTO_TEST_CASE(139,6111
BOOST_AUTO_TEST_CASE(156,6551
BOOST_AUTO_TEST_CASE(173,6994
BOOST_AUTO_TEST_CASE(205,7844
BOOST_AUTO_TEST_CASE(226,9295
static bool isCanonicalException(245,9801
BOOST_AUTO_TEST_CASE(257,10316
BOOST_AUTO_TEST_CASE(294,11739
BOOST_AUTO_TEST_CASE(342,13001

src/test/limitedmap_tests.cpp,33
BOOST_FIXTURE_TEST_SUITE(11,289

src/test/arith_uint256_tests.cpp,1168
BOOST_FIXTURE_TEST_SUITE(17,443
const unsigned char R1Array[R1Array25,684
const char R1ArrayHex[R1ArrayHex28,859
const double R1Ldouble 29,953
const arith_uint256 R1L 30,1041
const uint64_t R1LLow64 31,1131
const unsigned char R2Array[R2Array33,1181
const arith_uint256 R2L 36,1356
const char R1LplusR2L[R1LplusR2L38,1447
const unsigned char ZeroArray[ZeroArray40,1542
const arith_uint256 ZeroL 43,1719
const unsigned char OneArray[OneArray45,1816
const arith_uint256 OneL 48,1992
const unsigned char MaxArray[MaxArray50,2086
const arith_uint256 MaxL 53,2262
const arith_uint256 HalfL 55,2356
std::string ArrayToString(56,2399
BOOST_AUTO_TEST_CASE(67,2688
void shiftArrayRight(125,5136
void shiftArrayLeft(139,5567
BOOST_AUTO_TEST_CASE(156,6041
BOOST_AUTO_TEST_CASE(199,7800
#define CHECKBITWISEOPERATOR(223,8602
#define CHECKASSIGNMENTOPERATOR(227,8880
BOOST_AUTO_TEST_CASE(230,9038
BOOST_AUTO_TEST_CASE(274,10536
BOOST_AUTO_TEST_CASE(288,11189
BOOST_AUTO_TEST_CASE(332,12926
BOOST_AUTO_TEST_CASE(353,13915
bool almostEqual(372,14788
BOOST_AUTO_TEST_CASE(377,14909
BOOST_AUTO_TEST_CASE(412,16315
BOOST_AUTO_TEST_CASE(541,22269

src/test/base58_tests.cpp,625
BOOST_FIXTURE_TEST_SUITE(25,636
BOOST_AUTO_TEST_CASE(48,1618
class TestAddrTypeVisitor 77,3012
    std::string exp_addrType;80,3086
    TestAddrTypeVisitor(82,3124
    bool operator()(operator()83,3216
    bool operator()(operator()87,3315
    bool operator()(operator()91,3417
class TestPayloadVisitor 98,3562
    std::vector<unsigned char> exp_payload;101,3635
    TestPayloadVisitor(103,3687
    bool operator()(operator()104,3784
    bool operator()(operator()109,3908
    bool operator()(operator()114,4035
BOOST_AUTO_TEST_CASE(121,4194
BOOST_AUTO_TEST_CASE(178,7083
BOOST_AUTO_TEST_CASE(245,9637

src/test/test_random.h,127
#define BITCOIN_TEST_RANDOM_H7,269
static inline void seed_insecure_rand(13,366
static inline uint32_t insecure_rand(18,497

src/test/bloom_tests.cpp,436
BOOST_FIXTURE_TEST_SUITE(24,558
BOOST_AUTO_TEST_CASE(57,2284
BOOST_AUTO_TEST_CASE(85,3749
BOOST_AUTO_TEST_CASE(112,4703
BOOST_AUTO_TEST_CASE(181,11102
BOOST_AUTO_TEST_CASE(227,19493
BOOST_AUTO_TEST_CASE(282,25231
BOOST_AUTO_TEST_CASE(334,30823
BOOST_AUTO_TEST_CASE(373,33473
BOOST_AUTO_TEST_CASE(419,40848
BOOST_AUTO_TEST_CASE(442,47308
static std::vector<unsigned char> RandomData(464,53694
BOOST_AUTO_TEST_CASE(470,53836

src/test/allocator_tests.cpp,346
BOOST_FIXTURE_TEST_SUITE(12,322
class TestLockedPageAllocator:TestLockedPageAllocator130,3851
    TestLockedPageAllocator(133,3919
    void* AllocateLocked(134,4030
    void FreeLocked(149,4449
    size_t GetLimit(152,4505
    int count;157,4599
    int lockedcount;158,4614
BOOST_AUTO_TEST_CASE(161,4639
BOOST_AUTO_TEST_CASE(210,6533

src/test/merkle_tests.cpp,152
BOOST_FIXTURE_TEST_SUITE(11,324
static std::vector<uint256> BlockGetMerkleBranch(43,1699
static inline int ctz(57,2133
BOOST_AUTO_TEST_CASE(67,2286

src/test/hash_tests.cpp,156
BOOST_FIXTURE_TEST_SUITE(13,331
#define T(18,425
#undef T45,1504
uint64_t siphash_4_2_testvec[siphash_4_2_testvec61,1761
BOOST_AUTO_TEST_CASE(80,3143

src/test/skiplist_tests.cpp,126
#define SKIPLIST_LENGTH 14,350
BOOST_FIXTURE_TEST_SUITE(16,382
BOOST_AUTO_TEST_CASE(47,1359
BOOST_AUTO_TEST_CASE(103,4157

src/test/versionbits_tests.cpp,1066
int32_t TestTime(16,506
static const Consensus::Params paramsDummy 18,576
class TestConditionChecker 20,643
    mutable ThresholdConditionCache cache;23,724
    int64_t BeginTime(26,776
    int64_t EndTime(27,865
    int Period(28,952
    int Threshold(29,1023
    bool Condition(30,1096
    ThresholdState GetStateFor(32,1221
    int GetStateSinceHeightFor(33,1380
#define CHECKERS 36,1554
class VersionBitsTester38,1574
    std::vector<CBlockIndex*> vpblock;41,1625
    TestConditionChecker checker[checker46,1888
    int num;49,1976
    VersionBitsTester(52,1998
    VersionBitsTester& Reset(54,2035
    ~VersionBitsTester(65,2337
    VersionBitsTester& Mine(69,2389
    VersionBitsTester& TestStateSinceHeight(82,2873
    VersionBitsTester& TestDefined(92,3274
    VersionBitsTester& TestStarted(102,3647
    VersionBitsTester& TestLockedIn(112,4020
    VersionBitsTester& TestActive(122,4398
    VersionBitsTester& TestFailed(132,4768
    CBlockIndex * Tip(142,5138
BOOST_FIXTURE_TEST_SUITE(145,5217
BOOST_AUTO_TEST_CASE(234,12326

src/test/pmt_tests.cpp,127
class CPartialMerkleTreeTester 20,517
    void Damage(24,666
BOOST_FIXTURE_TEST_SUITE(31,848
BOOST_AUTO_TEST_CASE(111,3896

src/test/mempool_tests.cpp,153
BOOST_FIXTURE_TEST_SUITE(15,367
void CheckSort(109,3985
BOOST_AUTO_TEST_CASE(119,4401
BOOST_AUTO_TEST_CASE(321,12614
BOOST_AUTO_TEST_CASE(433,16888

src/test/univalue_tests.cpp,228
BOOST_FIXTURE_TEST_SUITE(15,391
BOOST_AUTO_TEST_CASE(65,1616
BOOST_AUTO_TEST_CASE(107,3128
BOOST_AUTO_TEST_CASE(166,4769
BOOST_AUTO_TEST_CASE(204,5689
static const char *json1 json1287,8244
BOOST_AUTO_TEST_CASE(290,8375

src/test/data/base58_keys_invalid.json.h,37
namespace json_tests{json_tests1,0

src/test/data/base58_encode_decode.json.h,37
namespace json_tests{json_tests1,0

src/test/data/sighash.json.h,37
namespace json_tests{json_tests1,0

src/test/data/base58_keys_valid.json.h,37
namespace json_tests{json_tests1,0

src/test/data/tx_valid.json.h,37
namespace json_tests{json_tests1,0

src/test/data/script_tests.json.h,37
namespace json_tests{json_tests1,0

src/test/data/tx_invalid.json.h,37
namespace json_tests{json_tests1,0

src/test/dbwrapper_tests.cpp,634
bool is_null_key(15,474
BOOST_FIXTURE_TEST_SUITE(24,669
BOOST_AUTO_TEST_CASE(47,1507
BOOST_AUTO_TEST_CASE(84,2600
BOOST_AUTO_TEST_CASE(126,3931
BOOST_AUTO_TEST_CASE(167,5440
BOOST_AUTO_TEST_CASE(203,6672
struct StringContentsSerializer 237,7811
    std::string str;240,7972
    StringContentsSerializer(241,7993
    StringContentsSerializer(242,8027
    StringContentsSerializer& operator+=(operator+=244,8095
    StringContentsSerializer& operator+=(operator+=248,8206
    ADD_SERIALIZE_METHODS;250,8310
    template <typename Stream,252,8338
    inline void SerializationOp(253,8389
BOOST_AUTO_TEST_CASE(272,8905

src/test/net_tests.cpp,328
class CAddrManSerializationMock 15,426
    void MakeDeterministic(21,619
class CAddrManUncorrupted 28,737
    void Serialize(31,808
class CAddrManCorrupted 37,897
    void Serialize(40,966
CDataStream AddrmanToStream(63,1640
BOOST_FIXTURE_TEST_SUITE(73,2004
BOOST_AUTO_TEST_CASE(120,3469
BOOST_AUTO_TEST_CASE(151,4496

src/test/testutil.cpp,44
boost::filesystem::path GetTempPath(13,292

src/test/scriptnum10.h,1465
#define BITCOIN_TEST_SCRIPTNUM10_H7,274
class scriptnum10_error 17,447
    explicit scriptnum10_error(20,509
class CScriptNum1023,597
    explicit CScriptNum10(30,715
    static const size_t nDefaultMaxNumSize 35,793
    explicit CScriptNum10(37,842
    inline bool operator==(operator==64,2118
    inline bool operator!=(operator!=65,2201
    inline bool operator<=(operator<=66,2284
    inline bool operator< 67,2367
    inline bool operator>=(operator>=68,2450
    inline bool operator> 69,2533
    inline bool operator==(operator==71,2617
    inline bool operator!=(operator!=72,2711
    inline bool operator<=(operator<=73,2805
    inline bool operator< 74,2899
    inline bool operator>=(operator>=75,2993
    inline bool operator> 76,3087
    inline CScriptNum10 operator+(78,3182
    inline CScriptNum10 operator-(79,3287
    inline CScriptNum10 operator+(80,3392
    inline CScriptNum10 operator-(81,3497
    inline CScriptNum10& operator+=(operator+=83,3603
    inline CScriptNum10& operator-=(operator-=84,3708
    inline CScriptNum10 operator-(86,3814
    inline CScriptNum10& operator=(operator=92,3996
    inline CScriptNum10& operator+=(operator+=98,4110
    inline CScriptNum10& operator-=(operator-=106,4417
    int getint(114,4724
    std::vector<unsigned char> getvch(123,5003
    static std::vector<unsigned char> serialize(128,5097
    static int64_t set_vch(162,6171
    int64_t m_value;179,6680

src/test/addrman_tests.cpp,721
class CAddrManTest 13,361
    uint64_t state;15,400
    CAddrManTest(18,429
    void MakeDeterministic(24,558
    int RandomInt(30,673
    CAddrInfo* Find(36,840
    CAddrInfo* Create(41,956
    void Delete(46,1116
static CNetAddr ResolveIP(52,1188
static CNetAddr ResolveIP(59,1365
static CService ResolveService(64,1446
static CService ResolveService(71,1653
BOOST_FIXTURE_TEST_SUITE(76,1764
BOOST_AUTO_TEST_CASE(119,3245
BOOST_AUTO_TEST_CASE(151,4355
BOOST_AUTO_TEST_CASE(212,6778
BOOST_AUTO_TEST_CASE(241,7627
BOOST_AUTO_TEST_CASE(271,8535
BOOST_AUTO_TEST_CASE(310,9803
BOOST_AUTO_TEST_CASE(333,10423
BOOST_AUTO_TEST_CASE(356,11034
BOOST_AUTO_TEST_CASE(421,13655
BOOST_AUTO_TEST_CASE(478,15749

src/test/blockencodings_tests.cpp,782
std::vector<std::pair<uint256, CTransactionRef>> extra_txn;14,368
struct RegtestingSetup 16,429
    RegtestingSetup(17,476
BOOST_FIXTURE_TEST_SUITE(20,547
#define SHARED_TX_OFFSET 56,1636
BOOST_AUTO_TEST_CASE(58,1664
class TestHeaderAndShortIDs 113,3775
    CBlockHeader header;116,3871
    uint64_t nonce;117,3896
    std::vector<uint64_t> shorttxids;118,3916
    std::vector<PrefilledTransaction> prefilledtxn;119,3954
    TestHeaderAndShortIDs(121,4007
    TestHeaderAndShortIDs(126,4188
    uint64_t GetShortID(129,4311
    ADD_SERIALIZE_METHODS;137,4561
    template <typename Stream,139,4589
    inline void SerializationOp(140,4640
BOOST_AUTO_TEST_CASE(157,5247
BOOST_AUTO_TEST_CASE(223,7978
BOOST_AUTO_TEST_CASE(273,10105
BOOST_AUTO_TEST_CASE(317,11620

src/test/cuckoocache_tests.cpp,555
void insecure_GetRandHash(32,1106
class uint256Hasher41,1326
    uint32_t operator()(operator()45,1391
BOOST_AUTO_TEST_CASE(59,1796
double test_cache(79,2365
double normalize_hit_rate(126,4028
BOOST_AUTO_TEST_CASE(132,4183
void test_cache_erase(149,4809
BOOST_AUTO_TEST_CASE(205,7110
void test_cache_erase_parallel(212,7288
BOOST_AUTO_TEST_CASE(292,10410
void test_cache_generations(300,10607
    struct block_activity 324,11895
        std::vector<uint256> reads;325,11923
        block_activity(326,11959
BOOST_AUTO_TEST_CASE(389,14797

src/test/coins_tests.cpp,1770
bool operator==(operator==26,708
class CCoinsViewTest 34,957
    uint256 hashBestBlock_;36,1000
    std::map<std::map37,1028
    std::map<COutPoint, Coin> map_;37,1028
    bool GetCoin(40,1073
    bool HaveCoin(54,1498
    uint256 GetBestBlock(60,1621
    bool BatchWrite(62,1682
class CCoinsViewCacheTest 81,2403
    CCoinsViewCacheTest(84,2464
    void SelfTest(86,2536
    CCoinsMap& map(99,3023
    size_t& usage(100,3067
BOOST_AUTO_TEST_CASE(118,3715
typedef std::map<COutPoint,COutPoint252,9195
typedef std::map<COutPoint, std::tuple<CTransaction,CTxUndo,Coin>> UtxoData;252,9195
UtxoData utxoData;253,9272
UtxoData::iterator FindRandomFrom(255,9292
BOOST_AUTO_TEST_CASE(272,10004
BOOST_AUTO_TEST_CASE(469,18316
const static COutPoint OUTPOINT;521,20369
const static CAmount PRUNED 522,20402
const static CAmount ABSENT 523,20436
const static CAmount FAIL 524,20470
const static CAmount VALUE1 525,20502
const static CAmount VALUE2 526,20537
const static CAmount VALUE3 527,20572
const static char DIRTY 528,20607
const static char FRESH 529,20658
const static char NO_ENTRY 530,20709
const static auto FLAGS 532,20743
const static auto CLEAN_FLAGS 533,20815
const static auto ABSENT_FLAGS 534,20865
void SetCoinsValue(536,20911
size_t InsertCoinsMapEntry(548,21162
void GetCoinsMapEntry(563,21596
void WriteCoinsViewEntry(580,22017
class SingleEntryCacheTest587,22185
    SingleEntryCacheTest(590,22222
    CCoinsView root;596,22492
void CheckAccessCoin(601,22592
BOOST_AUTO_TEST_CASE(614,23079
void CheckSpendCoins(652,25360
BOOST_AUTO_TEST_CASE(665,25847
void CheckAddCoinBase(703,28145
void CheckAddCoin(730,29266
BOOST_AUTO_TEST_CASE(736,29428
void CheckWriteCoins(766,31280
BOOST_AUTO_TEST_CASE(785,31939

src/test/miner_tests.cpp,276
    unsigned char extranonce;32,776
    unsigned int nonce;33,806
} blockinfo[blockinfo34,830
CBlockIndex CreateBlockIndex(175,11306
bool TestSequenceLocks(183,11460
void TestPackageSelection(193,11847
CAmount calculateReward(295,17090
BOOST_AUTO_TEST_CASE(305,17405

src/test/key_tests.cpp,60
void dumpKeyInfo(33,1233
BOOST_FIXTURE_TEST_SUITE(60,2141

src/test/uint256_tests.cpp,728
const char R1ArrayHex[R1ArrayHex23,697
const uint256 R1L 24,791
const uint160 R1S 25,868
const unsigned char R2Array[R2Array27,946
const uint256 R2L 30,1121
const uint160 R2S 31,1198
const unsigned char ZeroArray[ZeroArray33,1276
const uint256 ZeroL 36,1453
const uint160 ZeroS 37,1536
const unsigned char OneArray[OneArray39,1620
const uint256 OneL 42,1796
const uint160 OneS 43,1876
const unsigned char MaxArray[MaxArray45,1957
const uint256 MaxL 48,2133
const uint160 MaxS 49,2213
std::string ArrayToString(51,2294
inline uint160 uint160S(62,2583
inline uint160 uint160S(68,2679
BOOST_AUTO_TEST_CASE(75,2783
BOOST_AUTO_TEST_CASE(127,5156
BOOST_AUTO_TEST_CASE(159,5975
BOOST_AUTO_TEST_CASE(253,9596

src/test/getarg_tests.cpp,185
BOOST_FIXTURE_TEST_SUITE(15,386
BOOST_AUTO_TEST_CASE(34,923
BOOST_AUTO_TEST_CASE(86,2479
BOOST_AUTO_TEST_CASE(110,3170
BOOST_AUTO_TEST_CASE(129,3699
BOOST_AUTO_TEST_CASE(139,3957

src/test/base32_tests.cpp,33
BOOST_FIXTURE_TEST_SUITE(10,294

src/test/sighash_tests.cpp,179
uint256 static SignatureHashOld(28,739
void static RandomScript(90,2820
void static RandomTransaction(98,3167
BOOST_FIXTURE_TEST_SUITE(121,4029
BOOST_AUTO_TEST_CASE(170,5575

src/test/util_tests.cpp,812
BOOST_FIXTURE_TEST_SUITE(22,541
static const unsigned char ParseHex_expected[ParseHex_expected44,921
BOOST_AUTO_TEST_CASE(51,1386
BOOST_AUTO_TEST_CASE(72,2447
BOOST_AUTO_TEST_CASE(94,3122
BOOST_AUTO_TEST_CASE(103,3669
BOOST_AUTO_TEST_CASE(127,4746
BOOST_AUTO_TEST_CASE(151,5686
BOOST_AUTO_TEST_CASE(176,6915
BOOST_AUTO_TEST_CASE(229,8867
BOOST_AUTO_TEST_CASE(244,9262
BOOST_AUTO_TEST_CASE(269,10005
#define B 282,10719
#define E 283,10744
BOOST_AUTO_TEST_CASE(284,10770
#undef B304,11879
#undef E305,11888
BOOST_AUTO_TEST_CASE(310,12018
BOOST_AUTO_TEST_CASE(315,12104
BOOST_AUTO_TEST_CASE(344,13345
BOOST_AUTO_TEST_CASE(374,14755
BOOST_AUTO_TEST_CASE(405,16127
BOOST_AUTO_TEST_CASE(437,17638
BOOST_AUTO_TEST_CASE(465,18837
BOOST_AUTO_TEST_CASE(492,21928
BOOST_AUTO_TEST_CASE(504,22682

src/test/crypto_tests.cpp,695
template<typename Hasher,25,685
template<typename Hasher, typename In,25,685
void TestVector(26,738
void TestSHA1(54,1839
void TestSHA256(55,1949
void TestSHA512(56,2063
void TestRIPEMD160(57,2177
void TestHMACSHA256(59,2298
void TestHMACSHA512(64,2544
void TestAES128(69,2790
void TestAES256(89,3510
void TestAES128CBC(108,4146
void TestAES256CBC(149,6155
std::string LongTestString(190,8164
const std::string test1 202,8477
BOOST_AUTO_TEST_CASE(204,8522
BOOST_AUTO_TEST_CASE(220,9576
BOOST_AUTO_TEST_CASE(236,10555
BOOST_AUTO_TEST_CASE(258,12047
BOOST_AUTO_TEST_CASE(295,14536
BOOST_AUTO_TEST_CASE(332,17117
BOOST_AUTO_TEST_CASE(375,20214
BOOST_AUTO_TEST_CASE(391,21746

src/test/bip32_tests.cpp,437
struct TestDerivation 17,407
    std::string pub;18,431
    std::string prv;19,452
    unsigned int nChild;20,473
struct TestVector 23,502
    std::string strHexMaster;24,522
    std::vector<TestDerivation> vDerive;25,552
    TestVector(27,594
    TestVector& operator()(operator()29,672
TestVector test1 39,954
TestVector test2 60,2539
void RunTest(81,4211
BOOST_FIXTURE_TEST_SUITE(139,6169
BOOST_AUTO_TEST_CASE(145,6286

src/test/scheduler_tests.cpp,92
BOOST_AUTO_TEST_SUITE(16,460
static void MicroSleep(31,1051
BOOST_AUTO_TEST_CASE(43,1394

src/test/sigopcount_tests.cpp,141
Serialize(20,496
BOOST_FIXTURE_TEST_SUITE(26,617
ScriptError VerifyWithFlag(70,2133
void BuildTxs(85,2772
BOOST_AUTO_TEST_CASE(108,3630

src/test/main_tests.cpp,220
BOOST_FIXTURE_TEST_SUITE(14,368
static void TestBlockSubsidyHalvings(33,1271
BOOST_AUTO_TEST_CASE(40,1499
BOOST_AUTO_TEST_CASE(47,1749
bool ReturnFalse(87,3498
bool ReturnTrue(88,3535
BOOST_AUTO_TEST_CASE(90,3571

src/test/base64_tests.cpp,33
BOOST_FIXTURE_TEST_SUITE(10,294

src/test/pow_tests.cpp,153
BOOST_FIXTURE_TEST_SUITE(14,362
BOOST_AUTO_TEST_CASE(31,1054
BOOST_AUTO_TEST_CASE(45,1624
BOOST_AUTO_TEST_CASE(59,2209
BOOST_AUTO_TEST_CASE(72,2745

src/test/raii_event_tests.cpp,251
static std::map<void*, short> tags;21,598
static std::map<void*, uint16_t> orders;22,634
static uint16_t tagSequence 23,675
static void* tag_malloc(25,709
static void tag_free(33,869
BOOST_FIXTURE_TEST_SUITE(39,971
BOOST_AUTO_TEST_CASE(70,1795

src/test/policyestimator_tests.cpp,33
BOOST_FIXTURE_TEST_SUITE(15,379

src/test/scriptnum_tests.cpp,405
static const int64_t offsets[offsets19,669
static bool verify(21,766
static void CheckCreateVch(26,938
static void CheckCreateInt(44,1484
static void CheckAdd(55,1950
static void CheckNegate(77,2763
static void CheckSubtract(87,3019
static void CheckCompare(113,3978
static void RunCreate(149,5798
static void RunOperators(161,6088
BOOST_AUTO_TEST_CASE(169,6270
BOOST_AUTO_TEST_CASE(182,6606

src/test/ecoctests/ecoctxconverter_tests.cpp,458
CMutableTransaction createTX(15,562
void checkResult(26,872
void runTest(45,1707
void runFailingTest(79,3046
BOOST_FIXTURE_TEST_SUITE(106,4146
BOOST_AUTO_TEST_CASE(113,4451
BOOST_AUTO_TEST_CASE(118,4701
BOOST_AUTO_TEST_CASE(124,5010
BOOST_AUTO_TEST_CASE(128,5263
BOOST_AUTO_TEST_CASE(134,5576
BOOST_AUTO_TEST_CASE(139,5838
BOOST_AUTO_TEST_CASE(145,6294
BOOST_AUTO_TEST_CASE(151,6730
BOOST_AUTO_TEST_CASE(157,7203
BOOST_AUTO_TEST_CASE(163,7653

src/test/ecoctests/condensingtransaction_tests.cpp,271
std::vector<valtype> code 4,71
dev::h256 hash 181,18831
void checkRes(183,18938
void checkTx(197,19546
BOOST_FIXTURE_TEST_SUITE(206,19839
BOOST_AUTO_TEST_CASE(257,22020
BOOST_AUTO_TEST_CASE(282,23178
BOOST_AUTO_TEST_CASE(301,24003
BOOST_AUTO_TEST_CASE(323,25040

src/test/ecoctests/bytecodeexec_tests.cpp,623
dev::u256 GASLIMIT 5,102
dev::Address SENDERADDRESS 6,142
dev::h256 HASHTX 7,229
std::vector<valtype> CODE 8,337
void checkExecResult(80,4735
void checkBCEResult(106,6108
BOOST_FIXTURE_TEST_SUITE(117,6739
BOOST_AUTO_TEST_CASE(126,6980
BOOST_AUTO_TEST_CASE(138,7675
BOOST_AUTO_TEST_CASE(149,8186
BOOST_AUTO_TEST_CASE(160,8711
BOOST_AUTO_TEST_CASE(179,9684
BOOST_AUTO_TEST_CASE(198,10632
BOOST_AUTO_TEST_CASE(216,11500
BOOST_AUTO_TEST_CASE(230,12297
BOOST_AUTO_TEST_CASE(245,13163
BOOST_AUTO_TEST_CASE(260,14049
BOOST_AUTO_TEST_CASE(288,15246
BOOST_AUTO_TEST_CASE(316,16473
BOOST_AUTO_TEST_CASE(353,18044

src/test/ecoctests/test_utils.cpp,213
void initState(4,58
CBlock generateBlock(15,629
dev::Address createEcocAddress(24,990
QtumTransaction createEcocTransaction(42,1822
std::pair<std::vector<ResultExecute>, ByteCodeExecResult> executeBC(56,2471

src/test/rpc_tests.cpp,353
UniValue CallRPC(19,452
BOOST_FIXTURE_TEST_SUITE(41,1099
BOOST_AUTO_TEST_CASE(85,4255
BOOST_AUTO_TEST_CASE(107,4988
BOOST_AUTO_TEST_CASE(126,6146
BOOST_AUTO_TEST_CASE(144,7683
static UniValue ValueFromString(180,10001
BOOST_AUTO_TEST_CASE(187,10139
BOOST_AUTO_TEST_CASE(221,12820
BOOST_AUTO_TEST_CASE(242,14003
BOOST_AUTO_TEST_CASE(325,17733

src/test/DoS_tests.cpp,328
struct COrphanTx 30,922
    CTransactionRef tx;31,941
    NodeId fromPeer;32,965
    int64_t nTimeExpire;33,986
CService ip(37,1074
static NodeId id 44,1204
BOOST_FIXTURE_TEST_SUITE(46,1227
BOOST_AUTO_TEST_CASE(79,2656
BOOST_AUTO_TEST_CASE(103,3657
CTransactionRef RandomOrphan(129,4485
BOOST_AUTO_TEST_CASE(138,4740

src/test/timedata_tests.cpp,33
BOOST_FIXTURE_TEST_SUITE(10,288

src/test/multisig_tests.cpp,208
typedef std::vector<unsigned char> valtype;20,525
BOOST_FIXTURE_TEST_SUITE(22,570
BOOST_AUTO_TEST_CASE(41,1159
BOOST_AUTO_TEST_CASE(141,5279
BOOST_AUTO_TEST_CASE(177,7168
BOOST_AUTO_TEST_CASE(266,10544

src/test/script_tests.cpp,2851
static const unsigned int flags 35,808
read_json(41,1003
struct ScriptErrorDesc53,1223
    ScriptError_t err;55,1248
    const char *name;name56,1271
static ScriptErrorDesc script_errors[script_errors59,1297
const char *FormatScriptError(FormatScriptError103,3511
ScriptError_t ParseScriptError(112,3823
BOOST_FIXTURE_TEST_SUITE(121,4143
CMutableTransaction BuildSpendingTransaction(139,4725
void DoTest(157,5371
void static NegateSignatureS(185,7320
const unsigned char vchKey0[vchKey0227,8800
const unsigned char vchKey1[vchKey1228,8901
const unsigned char vchKey2[vchKey2229,9002
struct KeyData231,9104
    CKey key0,233,9121
    CKey key0, key0C,233,9121
    CKey key0, key0C, key1,233,9121
    CKey key0, key0C, key1, key1C,233,9121
    CKey key0, key0C, key1, key1C, key2,233,9121
    CKey key0, key0C, key1, key1C, key2, key2C;233,9121
    CPubKey pubkey0,234,9169
    CPubKey pubkey0, pubkey0C,234,9169
    CPubKey pubkey0, pubkey0C, pubkey0H;234,9169
    CPubKey pubkey1,235,9210
    CPubKey pubkey1, pubkey1C;235,9210
    CPubKey pubkey2,236,9241
    CPubKey pubkey2, pubkey2C;236,9241
    KeyData(238,9273
enum WitnessMode 260,9932
    WITNESS_NONE,261,9951
    WITNESS_PKH,262,9969
    WITNESS_SH263,9986
class TestBuilder266,10005
    CScript script;270,10067
    CScript redeemscript;272,10117
    CScript witscript;274,10179
    CScriptWitness scriptWitness;275,10202
    CTransactionRef creditTx;276,10236
    CMutableTransaction spendTx;277,10266
    bool havePush;278,10299
    std::vector<unsigned char> push;279,10318
    std::string comment;280,10355
    int flags;281,10380
    int scriptError;282,10395
    CAmount nValue;283,10416
    void DoPush(285,10437
    void DoPush(293,10578
    TestBuilder(301,10722
    TestBuilder& ScriptError(323,12020
    TestBuilder& Add(329,12130
    TestBuilder& Num(336,12273
    TestBuilder& Push(343,12397
    TestBuilder& Push(349,12509
    TestBuilder& PushSig(354,12663
    TestBuilder& PushWitSig(372,13594
    TestBuilder& Push(379,13932
    TestBuilder& PushRedeem(385,14086
    TestBuilder& PushWitRedeem(391,14237
    TestBuilder& EditPush(397,14387
    TestBuilder& DamagePush(409,15002
    TestBuilder& Test(417,15168
    TestBuilder& AsWit(426,15471
    UniValue GetJSON(434,15628
    std::string GetComment(454,16368
    const CScript& GetScriptPubKey(459,16434
std::string JSONPrettyPrint(465,16534
BOOST_AUTO_TEST_CASE(478,16889
BOOST_AUTO_TEST_CASE(953,63481
BOOST_AUTO_TEST_CASE(996,65329
sign_multisig(1027,67133
sign_multisig(1051,67948
BOOST_AUTO_TEST_CASE(1058,68144
BOOST_AUTO_TEST_CASE(1088,69788
BOOST_AUTO_TEST_CASE(1157,73742
BOOST_AUTO_TEST_CASE(1267,80647
BOOST_AUTO_TEST_CASE(1309,83184
BOOST_AUTO_TEST_CASE(1320,83751
ScriptFromHex(1351,86722
BOOST_AUTO_TEST_CASE(1358,86858

src/test/testutil.h,38
#define BITCOIN_TEST_TESTUTIL_H9,277

src/test/txvalidationcache_tests.cpp,62
BOOST_AUTO_TEST_SUITE(18,472
BOOST_FIXTURE_TEST_CASE(29,720

src/test/reverselock_tests.cpp,62
BOOST_FIXTURE_TEST_SUITE(10,289
BOOST_AUTO_TEST_CASE(25,665

src/test/streams_tests.cpp,63
BOOST_FIXTURE_TEST_SUITE(15,487
BOOST_AUTO_TEST_CASE(75,3074

src/test/compress_tests.cpp,264
#define NUM_MULTIPLES_UNIT 14,363
#define NUM_MULTIPLES_CENT 17,424
#define NUM_MULTIPLES_1BTC 20,480
#define NUM_MULTIPLES_50BTC 23,541
BOOST_FIXTURE_TEST_SUITE(25,578
bool static TestDecode(31,771
bool static TestPair(35,903
BOOST_AUTO_TEST_CASE(40,1075

src/test/test_bitcoin_fuzzy.cpp,715
enum TEST_ID 29,636
    CBLOCK_DESERIALIZE=30,651
    CTRANSACTION_DESERIALIZE,31,677
    CBLOCKLOCATOR_DESERIALIZE,32,707
    CBLOCKMERKLEROOT,33,738
    CADDRMAN_DESERIALIZE,34,760
    CBLOCKHEADER_DESERIALIZE,35,786
    CBANENTRY_DESERIALIZE,36,816
    CTXUNDO_DESERIALIZE,37,843
    CBLOCKUNDO_DESERIALIZE,38,868
    CCOINS_DESERIALIZE,39,896
    CNETADDR_DESERIALIZE,40,920
    CSERVICE_DESERIALIZE,41,946
    CMESSAGEHEADER_DESERIALIZE,42,972
    CADDRESS_DESERIALIZE,43,1004
    CINV_DESERIALIZE,44,1030
    CBLOOMFILTER_DESERIALIZE,45,1052
    CDISKBLOCKINDEX_DESERIALIZE,46,1082
    CTXOUTCOMPRESSOR_DESERIALIZE,47,1115
    TEST_ID_END48,1149
bool read_stdin(51,1169
int main(62,1455

src/test/test_bitcoin.h,1123
#define BITCOIN_TEST_TEST_BITCOIN_H6,231
struct BasicTestingSetup 20,520
    ECCVerifyHandle globalVerifyHandle;21,547
    BasicTestingSetup(23,588
    ~BasicTestingSetup(24,666
struct TestingSetup:TestingSetup31,850
    CCoinsViewDB *pcoinsdbview;pcoinsdbview32,898
    boost::filesystem::path pathTemp;33,930
    boost::thread_group threadGroup;34,968
    CConnman* connman;35,1005
struct TestChain100Setup 49,1267
    std::vector<CTransaction> coinbaseTxns;59,1648
    CKey coinbaseKey;60,1734
struct TestMemPoolEntryHelper66,1862
    CAmount nFee;69,1916
    int64_t nTime;70,1934
    double dPriority;71,1953
    unsigned int nHeight;72,1975
    bool spendsCoinbase;73,2001
    unsigned int sigOpCost;74,2026
    LockPoints lp;75,2054
    TestMemPoolEntryHelper(77,2074
    TestMemPoolEntryHelper &Fee(Fee85,2407
    TestMemPoolEntryHelper &Time(Time86,2484
    TestMemPoolEntryHelper &Priority(Priority87,2565
    TestMemPoolEntryHelper &Height(Height88,2661
    TestMemPoolEntryHelper &SpendsCoinbase(SpendsCoinbase89,2755
    TestMemPoolEntryHelper &SigOpsCost(SigOpsCost90,2852

src/test/amount_tests.cpp,33
BOOST_FIXTURE_TEST_SUITE(10,279

src/test/sanity_tests.cpp,33
BOOST_FIXTURE_TEST_SUITE(11,308

src/test/netbase_tests.cpp,349
BOOST_FIXTURE_TEST_SUITE(13,340
static CSubNet ResolveSubNet(22,516
BOOST_AUTO_TEST_CASE(29,634
BOOST_AUTO_TEST_CASE(39,1165
bool static TestSplitHost(65,2278
BOOST_AUTO_TEST_CASE(73,2492
bool static TestParse(92,3531
BOOST_AUTO_TEST_CASE(98,3685
BOOST_AUTO_TEST_CASE(109,4134
BOOST_AUTO_TEST_CASE(122,4584
BOOST_AUTO_TEST_CASE(269,12928

src/test/script_P2SH_tests.cpp,222
Serialize(22,552
Verify(29,685
BOOST_FIXTURE_TEST_SUITE(48,1345
BOOST_AUTO_TEST_CASE(125,4366
BOOST_AUTO_TEST_CASE(152,5357
BOOST_AUTO_TEST_CASE(207,7215
BOOST_AUTO_TEST_CASE(238,8843
BOOST_AUTO_TEST_CASE(258,9482

src/test/test_bitcoin.cpp,695
#define BOOST_TEST_MODULE 5,195
std::unique_ptr<CConnman> g_connman;33,779
BasicTestingSetup::BasicTestingSetup(BasicTestingSetup39,918
BasicTestingSetup::~BasicTestingSetup(~BasicTestingSetup51,1261
TestingSetup::TestingSetup(57,1353
TestingSetup::~TestingSetup(~TestingSetup102,3767
TestChain100Setup::TestChain100Setup(120,4257
TestChain100Setup::CreateAndProcessBlock(CreateAndProcessBlock138,4864
TestChain100Setup::~TestChain100Setup(~TestChain100Setup162,5922
CTxMemPoolEntry TestMemPoolEntryHelper::FromTx(FromTx167,5968
CTxMemPoolEntry TestMemPoolEntryHelper::FromTx(FromTx172,6125
void Shutdown(180,6554
void StartShutdown(185,6596
bool ShutdownRequested(190,6633

src/test/transaction_tests.cpp,584
typedef std::vector<unsigned char> valtype;35,950
static std::map<std::string, unsigned int> mapFlagNames 40,1075
unsigned int ParseScriptFlags(59,2470
std::string FormatScriptFlags(78,2955
BOOST_FIXTURE_TEST_SUITE(94,3342
BOOST_AUTO_TEST_CASE(181,6906
BOOST_AUTO_TEST_CASE(265,10362
SetupDummyInputs(288,12853
BOOST_AUTO_TEST_CASE(319,14049
void CreateCreditAndSpend(345,15057
void CheckWithFlag(383,16460
static CScript PushAll(391,16851
void ReplaceRedeemScript(406,17227
BOOST_AUTO_TEST_CASE(415,17580
BOOST_AUTO_TEST_CASE(496,20532
BOOST_AUTO_TEST_CASE(671,31213

src/test/prevector_tests.cpp,1131
template<unsigned int N,18,437
class prevector_tester 19,474
    typedef std::vector<T> realtype;20,499
    realtype real_vector;21,536
    realtype real_vector_alt;22,562
    typedef prevector<N,N24,593
    typedef prevector<N, T> pretype;24,593
    pretype pre_vector;25,630
    pretype pre_vector_alt;26,654
    typedef typename pretype::size_type Size;28,683
    bool passed 29,729
    FastRandomContext rand_cache;30,753
    template <typename A,33,789
        void local_check_equal(34,827
    void local_check(38,921
    void test(42,984
    void resize(79,2573
    void reserve(87,2782
    void insert(95,2994
    void insert(101,3198
    void insert_range(108,3453
    void erase(114,3676
    void erase(120,3847
    void update(126,4075
    void push_back(132,4209
    void pop_back(138,4344
    void clear(144,4452
    void assign(149,4535
    Size size(154,4659
    Size capacity(158,4719
    void shrink_to_fit(162,4786
    void swap(167,4872
    void move(173,4997
    void copy(180,5185
    ~prevector_tester(185,5286
    prevector_tester(191,5485
BOOST_AUTO_TEST_CASE(197,5590

src/test/bswap_tests.cpp,33
BOOST_FIXTURE_TEST_SUITE(10,288

src/miner.cpp,1755
uint64_t nLastBlockTx 47,1288
uint64_t nLastBlockSize 48,1315
uint64_t nLastBlockWeight 49,1344
int64_t nLastCoinStakeSearchInterval 50,1375
unsigned int nMinerSleep 51,1417
class ScoreCompare53,1468
    ScoreCompare(56,1497
    bool operator()(operator()58,1520
int64_t UpdateTime(64,1690
BlockAssembler::BlockAssembler(79,2251
void BlockAssembler::resetBlock(resetBlock116,3858
void BlockAssembler::RebuildRefundTransaction(RebuildRefundTransaction134,4192
std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(CreateNewBlock154,4903
std::unique_ptr<CBlockTemplate> BlockAssembler::CreateEmptyBlock(CreateEmptyBlock305,11073
bool BlockAssembler::isStillDependent(isStillDependent412,15278
void BlockAssembler::onlyUnconfirmed(onlyUnconfirmed423,15527
bool BlockAssembler::TestPackage(TestPackage436,15871
bool BlockAssembler::TestPackageTransactions(TestPackageTransactions451,16522
bool BlockAssembler::TestForBlock(TestForBlock470,17245
bool BlockAssembler::CheckBlockBeyondFull(CheckBlockBeyondFull522,19093
bool BlockAssembler::AttemptToAddContractToBlock(AttemptToAddContractToBlock534,19334
void BlockAssembler::AddToBlock(AddToBlock681,25260
void BlockAssembler::UpdatePackagesForAdded(UpdatePackagesForAdded708,26259
bool BlockAssembler::SkipMapTxEntry(SkipMapTxEntry741,27938
void BlockAssembler::SortForBlock(SortForBlock749,28240
void BlockAssembler::addPackageTxs(addPackageTxs770,29499
void BlockAssembler::addPriorityTxs(addPriorityTxs911,35573
    typedef std::map<CTxMemPool::txiter, double, CTxMemPool::CompareIteratorByHash>::iterator iterator929,36303
void IncrementExtraNonce(1006,39446
bool CheckStake(1034,40369
void ThreadStakeMiner(1073,42031
void StakeECOs(1204,49270

src/addrman.h,1954
#define BITCOIN_ADDRMAN_H7,257
class CAddrInfo 24,526
    int64_t nLastTry;30,620
    int64_t nLastCountAttempt;33,686
    CNetAddr source;37,786
    int64_t nLastSuccess;40,849
    int nAttempts;43,934
    int nRefCount;46,1004
    bool fInTried;49,1060
    int nRandomPos;52,1108
    ADD_SERIALIZE_METHODS;58,1166
    template <typename Stream,60,1194
    inline void SerializationOp(61,1245
    void Init(68,1446
    CAddrInfo(79,1651
    CAddrInfo(84,1785
    int GetNewBucket(96,2205
#define ADDRMAN_TRIED_BUCKET_COUNT 139,4589
#define ADDRMAN_NEW_BUCKET_COUNT 142,4675
#define ADDRMAN_BUCKET_SIZE 145,4791
#define ADDRMAN_TRIED_BUCKETS_PER_GROUP 148,4924
#define ADDRMAN_NEW_BUCKETS_PER_SOURCE_GROUP 151,5063
#define ADDRMAN_NEW_BUCKETS_PER_ADDRESS 154,5194
#define ADDRMAN_HORIZON_DAYS 157,5276
#define ADDRMAN_RETRIES 160,5369
#define ADDRMAN_MAX_FAILURES 163,5445
#define ADDRMAN_MIN_FAIL_DAYS 166,5513
#define ADDRMAN_GETADDR_MAX_PCT 169,5610
#define ADDRMAN_GETADDR_MAX 172,5706
class CAddrMan177,5787
    mutable CCriticalSection cs;181,5875
    int nIdCount;184,5931
    std::map<std::map187,5996
    std::map<int, CAddrInfo> mapInfo;187,5996
    std::map<std::map190,6084
    std::map<CNetAddr, int> mapAddr;190,6084
    std::vector<int> vRandom;193,6166
    int nTried;196,6230
    int vvTried[vvTried199,6279
    int nNew;202,6387
    int vvNew[vvNew205,6432
    int64_t nLastGood;208,6543
    uint256 nKey;212,6629
    FastRandomContext insecure_rand;215,6714
    void Serialize(296,9862
    void Unserialize(346,11516
    void Clear(451,15491
    CAddrMan(472,16175
    ~CAddrMan(477,16220
    size_t size(483,16336
    void Check(490,16504
    bool Add(503,16767
    bool Add(516,17194
    void Good(530,17739
    void Attempt(539,17953
    CAddrInfo Select(550,18214
    std::vector<CAddress> GetAddr(563,18502
    void Connected(576,18764
    void SetServices(584,18938

src/pow.cpp,204
const CBlockIndex* GetLastBlockIndex(16,425
inline arith_uint256 GetLimit(24,726
unsigned int GetNextWorkRequired(29,908
unsigned int CalculateNextWorkRequired(68,2450
bool CheckProofOfWork(102,3691

src/reverselock.h,171
#define BITCOIN_REVERSELOCK_H6,225
class reverse_lock12,369
    explicit reverse_lock(16,399
    ~reverse_lock(21,515
    Lock& lock;30,697
    Lock templock;31,713

src/coins.h,1554
#define BITCOIN_COINS_H7,263
class Coin27,661
    CTxOut out;31,713
     unsigned int fCoinBase 33,771
     unsigned int fCoinStake 34,804
    uint32_t nHeight 37,928
    Coin(40,1028
    Coin(41,1202
    void Clear(43,1371
    Coin(51,1522
    bool IsCoinBase(53,1588
    bool IsCoinStake(56,1650
    void Serialize(61,1745
    void Unserialize(69,2023
    bool IsSpent(78,2282
    size_t DynamicMemoryUsage(82,2345
class SaltedOutpointHasher87,2452
    const uint64_t k0,91,2506
    const uint64_t k0, k1;91,2506
    size_t operator()(operator()101,2808
struct CCoinsCacheEntry106,2928
    Coin coin;108,2954
    unsigned char flags;109,2996
    enum Flags 111,3022
        DIRTY 112,3039
        FRESH 113,3147
    CCoinsCacheEntry(121,3539
    explicit CCoinsCacheEntry(122,3576
typedef std::unordered_map<COutPoint,COutPoint125,3662
typedef std::unordered_map<COutPoint, CCoinsCacheEntry,125,3662
typedef std::unordered_map<COutPoint, CCoinsCacheEntry, SaltedOutpointHasher> CCoinsMap;125,3662
class CCoinsViewCursor128,3801
    CCoinsViewCursor(131,3834
    virtual ~CCoinsViewCursor(132,3910
    const uint256 &GetBestBlock(GetBestBlock142,4223
    uint256 hashBlock;144,4294
class CCoinsView148,4369
    virtual ~CCoinsView(169,5232
    virtual size_t EstimateSize(172,5316
class CCoinsViewBacked 177,5422
    CCoinsView *base;base180,5478
class CCoinsViewCache 195,6021
    mutable uint256 hashBlock;202,6202
    mutable CCoinsMap cacheCoins;203,6233
    mutable size_t cachedCoinsUsage;206,6336

src/compat.h,743
#define BITCOIN_COMPAT_H7,264
#undef _WIN32_WINNT15,393
#define _WIN32_WINNT 17,420
#define WIN32_LEAN_AND_MEAN 19,476
#define NOMINMAX22,530
#undef FD_SETSIZE 25,572
#define FD_SETSIZE 27,638
#define MSG_DONTWAIT 51,1151
typedef u_int SOCKET;53,1187
#define WSAGetLastError(55,1228
#define WSAEINVAL 56,1262
#define WSAEALREADY 57,1297
#define WSAEWOULDBLOCK 58,1334
#define WSAEMSGSIZE 59,1374
#define WSAEINTR 60,1411
#define WSAEINPROGRESS 61,1445
#define WSAEADDRINUSE 62,1485
#define WSAENOTSOCK 63,1524
#define INVALID_SOCKET 64,1558
#define SOCKET_ERROR 65,1599
#define S_IRUSR 70,1667
#define S_IWUSR 71,1700
#define MAX_PATH 74,1746
#define MSG_NOSIGNAL 79,1935
bool static inline IsSelectableSocket(86,2074

src/cryptopp/regtest.cpp,70
#define CRYPTOPP_ENABLE_NAMESPACE_WEAK 3,71
USING_NAMESPACE(69,1430

src/cryptopp/twofish.h,524
#define CRYPTOPP_TWOFISH_H7,169
NAMESPACE_BEGIN(12,245
struct Twofish_Info 16,344
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(18,454
class Twofish 24,676
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION55,1568
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;55,1568
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION56,1624
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;56,1624
typedef Twofish::Encryption TwofishEncryption;59,1686
typedef Twofish::Decryption TwofishDecryption;60,1734

src/cryptopp/3way.h,531
#define CRYPTOPP_THREEWAY_H7,162
NAMESPACE_BEGIN(13,260
struct ThreeWay_Info 17,361
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(19,468
class ThreeWay 25,686
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION59,1938
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;59,1938
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION60,1994
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;60,1994
typedef ThreeWay::Encryption ThreeWayEncryption;63,2056
typedef ThreeWay::Decryption ThreeWayDecryption;64,2106

src/cryptopp/datatest.cpp,1334
#define CRYPTOPP_DEFAULT_NO_DLL3,72
#define CRYPTOPP_ENABLE_NAMESPACE_WEAK 4,105
typedef std::map<std::string,std::string33,734
typedef std::map<std::string, std::string> TestData;33,734
static bool s_thorough 34,788
class TestFailure 36,823
	TestFailure(39,873
static const TestData *s_currentTestData s_currentTestData42,949
static void OutputTestData(44,1001
static void SignalTestFailure(52,1180
static void SignalUnknownAlgorithmError(58,1282
static void SignalTestError(64,1500
bool DataExists(70,1663
const std::string & GetRequiredDatum(76,1804
void RandomizedTransfer(84,2003
void PutDecodedDatumInto(96,2476
std::string GetDecodedDatum(146,3611
std::string GetOptionalDecodedDatum(153,3773
class TestDataNameValuePairs 161,3974
	TestDataNameValuePairs(164,4040
	virtual bool GetVoidValue(166,4107
	const TestData &m_data;m_data207,5381
	mutable std::string m_temp;208,5407
void TestKeyPairValidAndConsistent(211,5443
void TestSignatureScheme(227,5857
void TestAsymmetricCipher(314,8819
void TestSymmetricCipher(354,10165
void TestAuthenticatedSymmetricCipher(487,14725
void TestDigestOrMAC(573,17917
void TestKeyDerivationFunction(617,19316
bool GetField(647,20450
void OutputPair(723,22046
void OutputNameValuePairs(733,22342
void TestDataFile(754,22753
bool RunTestDataFile(841,25217

src/cryptopp/seal.cpp,532
NAMESPACE_BEGIN(11,210
struct SEAL_Gamma20,381
	SEAL_Gamma(22,403
	SecBlock<word32> H,31,594
	SecBlock<word32> H, Z,31,594
	SecBlock<word32> H, Z, D;31,594
	word32 lastIndex;32,622
word32 SEAL_Gamma::Apply(Apply35,648
void SEAL_Policy<B>::CipherSetKey(CipherSetKey49,882
void SEAL_Policy<B>::CipherResynchronize(CipherResynchronize73,1478
void SEAL_Policy<B>::SeekToIteration(SeekToIteration84,1850
void SEAL_Policy<B>::OperateKeystream(OperateKeystream91,2104
		#define Ttab(99,2436
#define SEAL_OUTPUT(182,4004

src/cryptopp/ecpoint.h,154
#define CRYPTOPP_ECPOINT_H9,288
NAMESPACE_BEGIN(16,406
struct CRYPTOPP_DLL EC2NPoint55,1632
class EncodedPoint93,3018
	virtual ~EncodedPoint(96,3050

src/cryptopp/md2.cpp,198
#define CRYPTOPP_ENABLE_NAMESPACE_WEAK 18,481
namespace Weak1 22,570
MD2::MD2(24,591
void MD2::Init(Init30,653
void MD2::Update(Update38,762
void MD2::TruncatedFinal(TruncatedFinal102,2753

src/cryptopp/rc6.h,529
#define CRYPTOPP_RC6_H7,153
NAMESPACE_BEGIN(12,225
struct RC6_Info 16,316
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(18,432
	typedef word32 RC6_WORD;19,510
class RC6 25,661
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION50,1351
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;50,1351
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION51,1407
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;51,1407
typedef RC6::Encryption RC6Encryption;54,1469
typedef RC6::Decryption RC6Decryption;55,1509

src/cryptopp/keccak.h,807
#define CRYPTOPP_KECCAK_H13,540
NAMESPACE_BEGIN(18,617
class Keccak 41,1686
	Keccak(50,2069
	unsigned int DigestSize(51,2143
	std::string AlgorithmName(52,2200
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(53,2286
	unsigned int OptimalDataAlignment(54,2369
	inline unsigned int r(63,2661
	FixedSizeSecBlock<FixedSizeSecBlock65,2728
	FixedSizeSecBlock<word64, 25> m_state;65,2728
	unsigned int m_digestSize,66,2769
	unsigned int m_digestSize, m_counter;66,2769
class Keccak_Final 74,3084
	CRYPTOPP_CONSTANT(77,3132
	static std::string StaticAlgorithmName(82,3326
	unsigned int BlockSize(83,3421
typedef Keccak_Final<28> Keccak_224;92,3768
typedef Keccak_Final<32> Keccak_256;96,3894
typedef Keccak_Final<48> Keccak_384;100,4020
typedef Keccak_Final<64> Keccak_512;104,4146

src/cryptopp/elgamal.h,1866
#define CRYPTOPP_ELGAMAL_H7,203
NAMESPACE_BEGIN(17,384
class ElGamalObjectImpl 100,3476
	virtual ~ElGamalObjectImpl(103,3587
	size_t FixedMaxPlaintextLength(105,3623
	size_t FixedCiphertextLength(106,3724
	const DL_GroupParameters_GFP & GetGroupParameters(108,3801
	DecodingResult FixedLengthDecrypt(110,3909
	const DL_KeyAgreementAlgorithm<Integer> & GetKeyAgreementAlgorithm(114,4108
	const DL_KeyDerivationAlgorithm<Integer> & GetKeyDerivationAlgorithm(115,4201
	const DL_SymmetricEncryptionAlgorithm & GetSymmetricEncryptionAlgorithm(116,4296
struct ElGamalKeys121,4486
	typedef DL_CryptoKeys_GFP::GroupParameters GroupParameters;123,4509
	typedef DL_PrivateKey_GFP_OldFormat<DL_CryptoKeys_GFP::PrivateKey> PrivateKey;124,4571
	typedef DL_PublicKey_GFP_OldFormat<DL_CryptoKeys_GFP::PublicKey> PublicKey;125,4652
struct ElGamal131,4845
	typedef DL_CryptoSchemeOptions<ElGamal,ElGamal133,4864
	typedef DL_CryptoSchemeOptions<ElGamal, ElGamalKeys,133,4864
	typedef DL_CryptoSchemeOptions<ElGamal, ElGamalKeys, int,133,4864
	typedef DL_CryptoSchemeOptions<ElGamal, ElGamalKeys, int, int,133,4864
	typedef DL_CryptoSchemeOptions<ElGamal, ElGamalKeys, int, int, int> SchemeOptions;133,4864
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(135,4951
	typedef SchemeOptions::GroupParameters GroupParameters;137,5054
	typedef PK_FinalTemplate<ElGamalObjectImpl<ElGamalObjectImpl139,5152
	typedef PK_FinalTemplate<ElGamalObjectImpl<DL_EncryptorBase<Integer>, SchemeOptions, SchemeOptions::PublicKey> > Encryptor;139,5152
	typedef PK_FinalTemplate<ElGamalObjectImpl<ElGamalObjectImpl141,5318
	typedef PK_FinalTemplate<ElGamalObjectImpl<DL_DecryptorBase<Integer>, SchemeOptions, SchemeOptions::PrivateKey> > Decryptor;141,5318
typedef ElGamal::Encryptor ElGamalEncryptor;144,5451
typedef ElGamal::Decryptor ElGamalDecryptor;145,5497

src/cryptopp/nr.h,27
#define CRYPTOPP_NR_H2,23

src/cryptopp/vmac.h,643
#define CRYPTOPP_VMAC_H8,197
# define CRYPTOPP_DISABLE_VMAC_ASM17,501
NAMESPACE_BEGIN(20,547
class VMAC_Base 25,679
	std::string AlgorithmName(28,769
	unsigned int IVSize(29,903
	unsigned int MinIVLength(30,967
	unsigned int DigestSize(33,1126
	unsigned int BlockSize(36,1334
	ByteOrder GetByteOrder(37,1391
	const BlockCipher & GetCipher(43,1600
	void Init(46,1814
	word64* StateBuf(47,1831
	word64* DataBuf(48,1867
	CRYPTOPP_BLOCK_1(55,2205
	bool m_is128, m_padCached,63,2538
	bool m_is128, m_padCached, m_isFirstBlock;63,2538
	unsigned int m_L1KeyLength;64,2583
template <class T_BlockCipher, int T_DigestBitSize 78,3290

src/cryptopp/twofish.cpp,609
NAMESPACE_BEGIN(9,225
static word32 ReedSolomon(23,743
inline word32 Twofish::Base::h0(h033,924
#define Q(38,1065
inline word32 Twofish::Base::h(h47,1375
void Twofish::Base::UncheckedSetKey(UncheckedSetKey53,1587
#define G1(83,2442
#define G2(84,2561
#define ENCROUND(86,2682
#define ENCCYCLE(93,2866
#define DECROUND(97,2964
#define DECCYCLE(105,3160
typedef BlockGetAndPut<word32,word32109,3258
typedef BlockGetAndPut<word32, LittleEndian> Block;109,3258
void Twofish::Enc::ProcessAndXorBlock(ProcessAndXorBlock111,3313
void Twofish::Dec::ProcessAndXorBlock(ProcessAndXorBlock140,3818

src/cryptopp/ecp.h,727
#define CRYPTOPP_ECP_H7,166
NAMESPACE_BEGIN(18,373
	typedef ModularArithmetic Field;25,574
	typedef Integer FieldElement;26,609
	typedef ECPPoint Point;27,641
CRYPTOPP_DLL_TEMPLATE_CLASS DL_GroupPrecomputation<DL_GroupPrecomputation100,3946
template<> class EcPrecomputation<EcPrecomputation112,4481
	typedef ECP EllipticCurve;115,4577
	virtual ~EcPrecomputation(117,4608
	bool NeedConversions(120,4671
	Element ConvertIn(121,4717
	Element ConvertOut(123,4869
	const AbstractGroup<Element> & GetGroup(125,5023
	Element BERDecodeElement(126,5089
	void DEREncodeElement(127,5185
	void SetCurve(130,5320
	const ECP & GetCurve(135,5415
	value_ptr<ECP> m_ec,138,5482
	value_ptr<ECP> m_ec, m_ecOriginal;138,5482

src/cryptopp/test.cpp,1238
#define CRYPTOPP_DEFAULT_NO_DLL3,68
#define CRYPTOPP_ENABLE_NAMESPACE_WEAK 4,101
#define WIN32_LEAN_AND_MEAN38,757
namespace { OFB_Mode<AES>::Encryption s_globalRNG;122,3705
RandomNumberGenerator & GlobalRNG(123,3759
static const SignalHandler<SIGTRAP, false> s_dummyHandler;130,3977
int CRYPTOPP_API main(134,4097
void FIPS140_GenerateRandomFiles(422,13586
T StringToValue(437,13959
int StringToValue<StringToValue458,14520
void PrintSeedAndThreads(470,14768
SecByteBlock HexDecodeString(485,15064
void GenerateRSAKey(493,15267
string RSAEncryptString(509,15770
string RSADecryptString(522,16195
void RSASignFile(532,16533
bool RSAVerifyFile(539,16876
void DigestFile(557,17561
void HmacFile(588,18429
void AES_CTR_Encrypt(605,18963
string EncryptString(613,19305
string DecryptString(624,19578
void EncryptFile(635,19851
void DecryptFile(640,20020
void SecretShareFile(645,20189
void SecretRecoverFile(675,21212
void InformationDisperseFile(702,22093
void InformationRecoverFile(729,23051
void GzipFile(756,23928
void GunzipFile(788,24763
void Base64Encode(793,24876
void Base64Decode(798,24998
void HexEncode(803,25120
void HexDecode(808,25236
void ForwardTcpPort(813,25352
bool Validate(884,27557

src/cryptopp/ttmac.cpp,481
NAMESPACE_BEGIN(7,135
void TTMAC_Base::Init(Init19,406
void TTMAC_Base::TruncatedFinal(TruncatedFinal28,639
#define F(81,1856
#define G(82,1888
#define H(83,1926
#define I(84,1961
#define J(85,1999
#define k0 87,2036
#define k1 88,2050
#define k2 89,2075
#define k3 90,2100
#define k4 91,2125
#define k5 92,2150
#define k6 93,2175
#define k7 94,2200
#define k8 95,2225
#define k9 96,2250
void TTMAC_Base::Transform(Transform98,2266
#define Subround(100,2341

src/cryptopp/panama.cpp,1123
void Panama<B>::Reset(Reset21,413
	save_xmm128 xmm6,41,976
	save_xmm128 xmm7,42,999
void CRYPTOPP_NOINLINE Panama_SSE2_Pull(45,1043
	#define REG_loopEnd	61,1446
	#define REG_loopEnd	63,1499
	#define REG_loopEnd	65,1572
	#define REG_loopEnd	67,1607
#define SSE2_Index(118,2865
#define pi(120,2915
#define pi4(125,3110
void Panama<B>::Iterate(Iterate327,8587
#define bPtr 334,8859
#define a(339,9022
#define c(340,9089
#define b(342,9155
#define US(345,9214
#define UL(346,9318
#define GP(348,9404
#define T(350,9528
#define TS1S(351,9588
#define TS1L(352,9655
#define TS2(353,9687
#define PANAMA_OUTPUT(359,9763
			typedef word32 WordType;369,10288
namespace Weak 423,11360
size_t PanamaHash<B>::HashMultipleBlocks(HashMultipleBlocks425,11398
void PanamaHash<B>::TruncatedFinal(TruncatedFinal432,11589
void PanamaCipherPolicy<B>::CipherSetKey(CipherSetKey452,12005
void PanamaCipherPolicy<B>::CipherResynchronize(CipherResynchronize460,12246
unsigned int PanamaCipherPolicy<B>::GetAlignment(GetAlignment489,13144
void PanamaCipherPolicy<B>::OperateKeystream(OperateKeystream500,13448

src/cryptopp/eccrypto.cpp,3176
NAMESPACE_BEGIN(31,604
Integer ConvertToInteger(50,1019
inline Integer ConvertToInteger(58,1184
bool CheckMOVCondition(63,1255
template<> struct EcRecommendedParameters<EcRecommendedParameters86,1833
	EcRecommendedParameters(88,1885
	EcRecommendedParameters(90,2139
	EC2N *NewEC(NewEC92,2429
	OID oid;102,2887
	unsigned int t0,103,2898
	unsigned int t0, t1,103,2898
	unsigned int t0, t1, t2,103,2898
	unsigned int t0, t1, t2, t3,103,2898
	unsigned int t0, t1, t2, t3, t4;103,2898
	const char *a,a104,2933
	const char *a, *b,b104,2933
	const char *a, *b, *g,g104,2933
	const char *a, *b, *g, *n;n104,2933
	unsigned int h;105,2962
template<> struct EcRecommendedParameters<EcRecommendedParameters108,2986
	EcRecommendedParameters(110,3037
	ECP *NewEC(NewEC112,3223
	OID oid;120,3564
	const char *p;p121,3575
	const char *a,a122,3592
	const char *a, *b,b122,3592
	const char *a, *b, *g,g122,3592
	const char *a, *b, *g, *n;n122,3592
	unsigned int h;123,3621
struct OIDLessThan126,3645
	inline bool operator()(operator()129,3692
	inline bool operator()(operator()131,3812
	inline bool operator()(operator()133,3932
static void GetRecommendedParameters(136,4061
static void GetRecommendedParameters(271,12244
template <class EC> OID DL_GroupParameters_EC<EC>::GetNextRecommendedParametersOID(GetNextRecommendedParametersOID434,22698
template <class EC> void DL_GroupParameters_EC<EC>::Initialize(Initialize442,23050
bool DL_GroupParameters_EC<EC>::GetVoidValue(GetVoidValue469,23993
void DL_GroupParameters_EC<EC>::AssignFrom(AssignFrom486,24508
void DL_GroupParameters_EC<EC>::GenerateRandom(GenerateRandom507,25118
void DL_GroupParameters_EC<EC>::BERDecode(BERDecode521,25440
void DL_GroupParameters_EC<EC>::DEREncode(DEREncode549,26067
Integer DL_GroupParameters_EC<EC>::GetCofactor(GetCofactor567,26537
Integer DL_GroupParameters_EC<EC>::ConvertElementToInteger(ConvertElementToInteger580,26760
bool DL_GroupParameters_EC<EC>::ValidateGroup(ValidateGroup586,26918
bool DL_GroupParameters_EC<EC>::ValidateElement(ValidateElement606,27438
void DL_GroupParameters_EC<EC>::SimultaneousExponentiate(SimultaneousExponentiate624,28031
typename DL_GroupParameters_EC<EC>::Element DL_GroupParameters_EC<EC>::MultiplyElements(MultiplyElements630,28295
typename DL_GroupParameters_EC<EC>::Element DL_GroupParameters_EC<EC>::CascadeExponentiate(CascadeExponentiate636,28486
OID DL_GroupParameters_EC<EC>::GetAlgorithmID(GetAlgorithmID642,28794
void DL_PublicKey_EC<EC>::BERDecodePublicKey(BERDecodePublicKey650,28984
void DL_PublicKey_EC<EC>::DEREncodePublicKey(DEREncodePublicKey661,29309
void DL_PrivateKey_EC<EC>::BERDecodePrivateKey(BERDecodePrivateKey669,29624
void DL_PrivateKey_EC<EC>::DEREncodePrivateKey(DEREncodePrivateKey708,30984
void DL_PublicKey_ECGDSA_ISO15946<EC>::BERDecodePublicKey(BERDecodePublicKey721,31567
void DL_PublicKey_ECGDSA_ISO15946<EC>::DEREncodePublicKey(DEREncodePublicKey732,31905
void DL_PrivateKey_ECGDSA_ISO15946<EC>::BERDecodePrivateKey(BERDecodePrivateKey740,32233
void DL_PrivateKey_ECGDSA_ISO15946<EC>::DEREncodePrivateKey(DEREncodePrivateKey779,33606

src/cryptopp/sha3.cpp,236
static void KeccakF1600(34,1490
        typedef BlockGetAndPut<word64, LittleEndian, true, true> Block;51,2064
void SHA3::Update(Update252,8988
void SHA3::Restart(Restart273,9564
void SHA3::TruncatedFinal(TruncatedFinal279,9662

src/cryptopp/cbcmac.cpp,170
NAMESPACE_BEGIN(7,71
void CBC_MAC_Base::Update(Update16,321
void CBC_MAC_Base::TruncatedFinal(TruncatedFinal43,960
void CBC_MAC_Base::ProcessBuf(ProcessBuf54,1178

src/cryptopp/oaep.h,162
#define CRYPTOPP_OAEP_H2,25
NAMESPACE_BEGIN(8,116
	typedef OAEP<H, MGF> EncryptionMessageEncodingMethod;32,1288
CRYPTOPP_DLL_TEMPLATE_CLASS OAEP<OAEP40,1537

src/cryptopp/TestScripts/cryptest-coverity.cpp,27
void special_abort(11,420

src/cryptopp/randpool.h,61
#define CRYPTOPP_RANDPOOL_H29,1261
NAMESPACE_BEGIN(37,1403

src/cryptopp/seed.h,407
#define CRYPTOPP_SEED_H8,184
NAMESPACE_BEGIN(13,257
struct SEED_Info 18,377
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(20,477
class SEED 27,702
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION40,1106
	typedef BlockCipherFinal<ENCRYPTION, Base> Encryption;40,1106
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION41,1163
	typedef BlockCipherFinal<DECRYPTION, Base> Decryption;41,1163

src/cryptopp/pubkey.cpp,708
NAMESPACE_BEGIN(12,206
bool PK_DeterministicSignatureMessageEncodingMethod::VerifyMessageRepresentative(VerifyMessageRepresentative28,833
bool PK_RecoverableSignatureMessageEncodingMethod::VerifyMessageRepresentative(VerifyMessageRepresentative37,1375
void TF_SignerBase::InputRecoverableMessage(InputRecoverableMessage47,1945
size_t TF_SignerBase::SignAndRestart(SignAndRestart70,3196
void TF_VerifierBase::InputSignature(InputSignature94,4270
bool TF_VerifierBase::VerifyAndRestart(VerifyAndRestart110,5141
DecodingResult TF_VerifierBase::RecoverAndRestart(RecoverAndRestart125,5804
DecodingResult TF_DecryptorBase::Decrypt(Decrypt140,6535
void TF_EncryptorBase::Encrypt(Encrypt153,7405

src/cryptopp/squaretb.cpp,29094
const byte Square::Dec::Sd[Square::Dec::Sd25,1409
const word32 Square::Enc::Te[Square::Enc::Te44,2748
0x2697b1b1UL,x2697b1b1UL113,6450
0x2697b1b1UL, 0xa769ceceUL,xa769ceceUL113,6450
0x2697b1b1UL, 0xa769ceceUL, 0xb073c3c3UL,xb073c3c3UL113,6450
0x2697b1b1UL, 0xa769ceceUL, 0xb073c3c3UL, 0x4adf9595UL,x4adf9595UL113,6450
0xeeb45a5aUL,xeeb45a5aUL114,6507
0xeeb45a5aUL, 0x02afadadUL,x02afadadUL114,6507
0xeeb45a5aUL, 0x02afadadUL, 0xdc3be7e7UL,xdc3be7e7UL114,6507
0xeeb45a5aUL, 0x02afadadUL, 0xdc3be7e7UL, 0x06040202UL,x06040202UL114,6507
0xd79a4d4dUL,xd79a4d4dUL115,6564
0xd79a4d4dUL, 0xcc884444UL,xcc884444UL115,6564
0xd79a4d4dUL, 0xcc884444UL, 0xf803fbfbUL,xf803fbfbUL115,6564
0xd79a4d4dUL, 0xcc884444UL, 0xf803fbfbUL, 0x46d79191UL,x46d79191UL115,6564
0x14180c0cUL,x14180c0cUL116,6621
0x14180c0cUL, 0x7cfb8787UL,x7cfb8787UL116,6621
0x14180c0cUL, 0x7cfb8787UL, 0x16b7a1a1UL,x16b7a1a1UL116,6621
0x14180c0cUL, 0x7cfb8787UL, 0x16b7a1a1UL, 0xf0a05050UL,xf0a05050UL116,6621
0xa863cbcbUL,xa863cbcbUL117,6678
0xa863cbcbUL, 0xa9ce6767UL,xa9ce6767UL117,6678
0xa863cbcbUL, 0xa9ce6767UL, 0xfca85454UL,xfca85454UL117,6678
0xa863cbcbUL, 0xa9ce6767UL, 0xfca85454UL, 0x924fddddUL,x924fddddUL117,6678
0xca8c4646UL,xca8c4646UL118,6735
0xca8c4646UL, 0x64eb8f8fUL,x64eb8f8fUL118,6735
0xca8c4646UL, 0x64eb8f8fUL, 0xd637e1e1UL,xd637e1e1UL118,6735
0xca8c4646UL, 0x64eb8f8fUL, 0xd637e1e1UL, 0xd29c4e4eUL,xd29c4e4eUL118,6735
0xe515f0f0UL,xe515f0f0UL119,6792
0xe515f0f0UL, 0xf20ffdfdUL,xf20ffdfdUL119,6792
0xe515f0f0UL, 0xf20ffdfdUL, 0xf10dfcfcUL,xf10dfcfcUL119,6792
0xe515f0f0UL, 0xf20ffdfdUL, 0xf10dfcfcUL, 0xc823ebebUL,xc823ebebUL119,6792
0xfe07f9f9UL,xfe07f9f9UL120,6849
0xfe07f9f9UL, 0xb97dc4c4UL,xb97dc4c4UL120,6849
0xfe07f9f9UL, 0xb97dc4c4UL, 0x2e341a1aUL,x2e341a1aUL120,6849
0xfe07f9f9UL, 0xb97dc4c4UL, 0x2e341a1aUL, 0xb2dc6e6eUL,xb2dc6e6eUL120,6849
0xe2bc5e5eUL,xe2bc5e5eUL121,6906
0xe2bc5e5eUL, 0xea1ff5f5UL,xea1ff5f5UL121,6906
0xe2bc5e5eUL, 0xea1ff5f5UL, 0xa16dccccUL,xa16dccccUL121,6906
0xe2bc5e5eUL, 0xea1ff5f5UL, 0xa16dccccUL, 0x62ef8d8dUL,x62ef8d8dUL121,6906
0x24381c1cUL,x24381c1cUL122,6963
0x24381c1cUL, 0xfaac5656UL,xfaac5656UL122,6963
0x24381c1cUL, 0xfaac5656UL, 0xc5864343UL,xc5864343UL122,6963
0x24381c1cUL, 0xfaac5656UL, 0xc5864343UL, 0xf709fefeUL,xf709fefeUL122,6963
0x090e0707UL,x090e0707UL123,7020
0x090e0707UL, 0xa3c26161UL,xa3c26161UL123,7020
0x090e0707UL, 0xa3c26161UL, 0xfd05f8f8UL,xfd05f8f8UL123,7020
0x090e0707UL, 0xa3c26161UL, 0xfd05f8f8UL, 0x9fea7575UL,x9fea7575UL123,7020
0xebb25959UL,xebb25959UL124,7077
0xebb25959UL, 0xf40bffffUL,xf40bffffUL124,7077
0xebb25959UL, 0xf40bffffUL, 0x05060303UL,x05060303UL124,7077
0xebb25959UL, 0xf40bffffUL, 0x05060303UL, 0x66442222UL,x66442222UL124,7077
0x6be18a8aUL,x6be18a8aUL125,7134
0x6be18a8aUL, 0x8657d1d1UL,x8657d1d1UL125,7134
0x6be18a8aUL, 0x8657d1d1UL, 0x35261313UL,x35261313UL125,7134
0x6be18a8aUL, 0x8657d1d1UL, 0x35261313UL, 0xc729eeeeUL,xc729eeeeUL125,7134
0x6de58888UL,x6de58888UL126,7191
0x6de58888UL, 0x00000000UL,x00000000UL126,7191
0x6de58888UL, 0x00000000UL, 0x121c0e0eUL,x121c0e0eUL126,7191
0x6de58888UL, 0x00000000UL, 0x121c0e0eUL, 0x5c683434UL,x5c683434UL126,7191
0x3f2a1515UL,x3f2a1515UL127,7248
0x3f2a1515UL, 0x75f58080UL,x75f58080UL127,7248
0x3f2a1515UL, 0x75f58080UL, 0x49dd9494UL,x49dd9494UL127,7248
0x3f2a1515UL, 0x75f58080UL, 0x49dd9494UL, 0xd033e3e3UL,xd033e3e3UL127,7248
0xc22fededUL,xc22fededUL128,7305
0xc22fededUL, 0x2a9fb5b5UL,x2a9fb5b5UL128,7305
0xc22fededUL, 0x2a9fb5b5UL, 0xf5a65353UL,xf5a65353UL128,7305
0xc22fededUL, 0x2a9fb5b5UL, 0xf5a65353UL, 0x65462323UL,x65462323UL128,7305
0xdd964b4bUL,xdd964b4bUL129,7362
0xdd964b4bUL, 0xc98e4747UL,xc98e4747UL129,7362
0xdd964b4bUL, 0xc98e4747UL, 0x392e1717UL,x392e1717UL129,7362
0xdd964b4bUL, 0xc98e4747UL, 0x392e1717UL, 0x1cbba7a7UL,x1cbba7a7UL129,7362
0x45d59090UL,x45d59090UL130,7419
0x45d59090UL, 0x5f6a3535UL,x5f6a3535UL130,7419
0x45d59090UL, 0x5f6a3535UL, 0x08a3ababUL,x08a3ababUL130,7419
0x45d59090UL, 0x5f6a3535UL, 0x08a3ababUL, 0x9d45d8d8UL,x9d45d8d8UL130,7419
0x3d85b8b8UL,x3d85b8b8UL131,7476
0x3d85b8b8UL, 0x944bdfdfUL,x944bdfdfUL131,7476
0x3d85b8b8UL, 0x944bdfdfUL, 0xd19e4f4fUL,xd19e4f4fUL131,7476
0x3d85b8b8UL, 0x944bdfdfUL, 0xd19e4f4fUL, 0xf9ae5757UL,xf9ae5757UL131,7476
0x5bc19a9aUL,x5bc19a9aUL132,7533
0x5bc19a9aUL, 0x43d19292UL,x43d19292UL132,7533
0x5bc19a9aUL, 0x43d19292UL, 0x9843dbdbUL,x9843dbdbUL132,7533
0x5bc19a9aUL, 0x43d19292UL, 0x9843dbdbUL, 0x2d361b1bUL,x2d361b1bUL132,7533
0x44783c3cUL,x44783c3cUL133,7590
0x44783c3cUL, 0xad65c8c8UL,xad65c8c8UL133,7590
0x44783c3cUL, 0xad65c8c8UL, 0x5ec79999UL,x5ec79999UL133,7590
0x44783c3cUL, 0xad65c8c8UL, 0x5ec79999UL, 0x0c080404UL,x0c080404UL133,7590
0x67e98e8eUL,x67e98e8eUL134,7647
0x67e98e8eUL, 0xd535e0e0UL,xd535e0e0UL134,7647
0x67e98e8eUL, 0xd535e0e0UL, 0x8c5bd7d7UL,x8c5bd7d7UL134,7647
0x67e98e8eUL, 0xd535e0e0UL, 0x8c5bd7d7UL, 0x87fa7d7dUL,x87fa7d7dUL134,7647
0x7aff8585UL,x7aff8585UL135,7704
0x7aff8585UL, 0x3883bbbbUL,x3883bbbbUL135,7704
0x7aff8585UL, 0x3883bbbbUL, 0xc0804040UL,xc0804040UL135,7704
0x7aff8585UL, 0x3883bbbbUL, 0xc0804040UL, 0x74582c2cUL,x74582c2cUL135,7704
0x4e743a3aUL,x4e743a3aUL136,7761
0x4e743a3aUL, 0xcf8a4545UL,xcf8a4545UL136,7761
0x4e743a3aUL, 0xcf8a4545UL, 0xe617f1f1UL,xe617f1f1UL136,7761
0x4e743a3aUL, 0xcf8a4545UL, 0xe617f1f1UL, 0xc6844242UL,xc6844242UL136,7761
0xafca6565UL,xafca6565UL137,7818
0xafca6565UL, 0x60402020UL,x60402020UL137,7818
0xafca6565UL, 0x60402020UL, 0xc3824141UL,xc3824141UL137,7818
0xafca6565UL, 0x60402020UL, 0xc3824141UL, 0x28301818UL,x28301818UL137,7818
0x96e47272UL,x96e47272UL138,7875
0x96e47272UL, 0x6f4a2525UL,x6f4a2525UL138,7875
0x96e47272UL, 0x6f4a2525UL, 0x40d39393UL,x40d39393UL138,7875
0x96e47272UL, 0x6f4a2525UL, 0x40d39393UL, 0x90e07070UL,x90e07070UL138,7875
0x5a6c3636UL,x5a6c3636UL139,7932
0x5a6c3636UL, 0x0f0a0505UL,x0f0a0505UL139,7932
0x5a6c3636UL, 0x0f0a0505UL, 0xe311f2f2UL,xe311f2f2UL139,7932
0x5a6c3636UL, 0x0f0a0505UL, 0xe311f2f2UL, 0x1d160b0bUL,x1d160b0bUL139,7932
0x10b3a3a3UL,x10b3a3a3UL140,7989
0x10b3a3a3UL, 0x8bf27979UL,x8bf27979UL140,7989
0x10b3a3a3UL, 0x8bf27979UL, 0xc12dececUL,xc12dececUL140,7989
0x10b3a3a3UL, 0x8bf27979UL, 0xc12dececUL, 0x18100808UL,x18100808UL140,7989
0x694e2727UL,x694e2727UL141,8046
0x694e2727UL, 0x53623131UL,x53623131UL141,8046
0x694e2727UL, 0x53623131UL, 0x56643232UL,x56643232UL141,8046
0x694e2727UL, 0x53623131UL, 0x56643232UL, 0x2f99b6b6UL,x2f99b6b6UL141,8046
0x84f87c7cUL,x84f87c7cUL142,8103
0x84f87c7cUL, 0x2595b0b0UL,x2595b0b0UL142,8103
0x84f87c7cUL, 0x2595b0b0UL, 0x1e140a0aUL,x1e140a0aUL142,8103
0x84f87c7cUL, 0x2595b0b0UL, 0x1e140a0aUL, 0x95e67373UL,x95e67373UL142,8103
0xedb65b5bUL,xedb65b5bUL143,8160
0xedb65b5bUL, 0x8df67b7bUL,x8df67b7bUL143,8160
0xedb65b5bUL, 0x8df67b7bUL, 0x2c9bb7b7UL,x2c9bb7b7UL143,8160
0xedb65b5bUL, 0x8df67b7bUL, 0x2c9bb7b7UL, 0x76f78181UL,x76f78181UL143,8160
0x8351d2d2UL,x8351d2d2UL144,8217
0x8351d2d2UL, 0x171a0d0dUL,x171a0d0dUL144,8217
0x8351d2d2UL, 0x171a0d0dUL, 0xbed46a6aUL,xbed46a6aUL144,8217
0x8351d2d2UL, 0x171a0d0dUL, 0xbed46a6aUL, 0x6a4c2626UL,x6a4c2626UL144,8217
0x57c99e9eUL,x57c99e9eUL145,8274
0x57c99e9eUL, 0xe8b05858UL,xe8b05858UL145,8274
0x57c99e9eUL, 0xe8b05858UL, 0x51cd9c9cUL,x51cd9c9cUL145,8274
0x57c99e9eUL, 0xe8b05858UL, 0x51cd9c9cUL, 0x70f38383UL,x70f38383UL145,8274
0x9ce87474UL,x9ce87474UL146,8331
0x9ce87474UL, 0x2093b3b3UL,x2093b3b3UL146,8331
0x9ce87474UL, 0x2093b3b3UL, 0x01adacacUL,x01adacacUL146,8331
0x9ce87474UL, 0x2093b3b3UL, 0x01adacacUL, 0x50603030UL,x50603030UL146,8331
0x8ef47a7aUL,x8ef47a7aUL147,8388
0x8ef47a7aUL, 0xbbd26969UL,xbbd26969UL147,8388
0x8ef47a7aUL, 0xbbd26969UL, 0x99ee7777UL,x99ee7777UL147,8388
0x8ef47a7aUL, 0xbbd26969UL, 0x99ee7777UL, 0x111e0f0fUL,x111e0f0fUL147,8388
0x07a9aeaeUL,x07a9aeaeUL148,8445
0x07a9aeaeUL, 0x63422121UL,x63422121UL148,8445
0x07a9aeaeUL, 0x63422121UL, 0x9749dedeUL,x9749dedeUL148,8445
0x07a9aeaeUL, 0x63422121UL, 0x9749dedeUL, 0x8555d0d0UL,x8555d0d0UL148,8445
0x725c2e2eUL,x725c2e2eUL149,8502
0x725c2e2eUL, 0x4cdb9797UL,x4cdb9797UL149,8502
0x725c2e2eUL, 0x4cdb9797UL, 0x30201010UL,x30201010UL149,8502
0x725c2e2eUL, 0x4cdb9797UL, 0x30201010UL, 0x19bda4a4UL,x19bda4a4UL149,8502
0x5dc59898UL,x5dc59898UL150,8559
0x5dc59898UL, 0x0da5a8a8UL,x0da5a8a8UL150,8559
0x5dc59898UL, 0x0da5a8a8UL, 0x895dd4d4UL,x895dd4d4UL150,8559
0x5dc59898UL, 0x0da5a8a8UL, 0x895dd4d4UL, 0xb8d06868UL,xb8d06868UL150,8559
0x775a2d2dUL,x775a2d2dUL151,8616
0x775a2d2dUL, 0xa6c46262UL,xa6c46262UL151,8616
0x775a2d2dUL, 0xa6c46262UL, 0x7b522929UL,x7b522929UL151,8616
0x775a2d2dUL, 0xa6c46262UL, 0x7b522929UL, 0xb7da6d6dUL,xb7da6d6dUL151,8616
0x3a2c1616UL,x3a2c1616UL152,8673
0x3a2c1616UL, 0xdb924949UL,xdb924949UL152,8673
0x3a2c1616UL, 0xdb924949UL, 0x9aec7676UL,x9aec7676UL152,8673
0x3a2c1616UL, 0xdb924949UL, 0x9aec7676UL, 0xbc7bc7c7UL,xbc7bc7c7UL152,8673
0xcd25e8e8UL,xcd25e8e8UL153,8730
0xcd25e8e8UL, 0xb677c1c1UL,xb677c1c1UL153,8730
0xcd25e8e8UL, 0xb677c1c1UL, 0x4fd99696UL,x4fd99696UL153,8730
0xcd25e8e8UL, 0xb677c1c1UL, 0x4fd99696UL, 0x596e3737UL,x596e3737UL153,8730
0xda3fe5e5UL,xda3fe5e5UL154,8787
0xda3fe5e5UL, 0xab61cacaUL,xab61cacaUL154,8787
0xda3fe5e5UL, 0xab61cacaUL, 0xe91df4f4UL,xe91df4f4UL154,8787
0xda3fe5e5UL, 0xab61cacaUL, 0xe91df4f4UL, 0xce27e9e9UL,xce27e9e9UL154,8787
0xa5c66363UL,xa5c66363UL155,8844
0xa5c66363UL, 0x36241212UL,x36241212UL155,8844
0xa5c66363UL, 0x36241212UL, 0xb371c2c2UL,xb371c2c2UL155,8844
0xa5c66363UL, 0x36241212UL, 0xb371c2c2UL, 0x1fb9a6a6UL,x1fb9a6a6UL155,8844
0x3c281414UL,x3c281414UL156,8901
0x3c281414UL, 0x318dbcbcUL,x318dbcbcUL156,8901
0x3c281414UL, 0x318dbcbcUL, 0x8053d3d3UL,x8053d3d3UL156,8901
0x3c281414UL, 0x318dbcbcUL, 0x8053d3d3UL, 0x78502828UL,x78502828UL156,8901
0x04abafafUL,x04abafafUL157,8958
0x04abafafUL, 0x715e2f2fUL,x715e2f2fUL157,8958
0x04abafafUL, 0x715e2f2fUL, 0xdf39e6e6UL,xdf39e6e6UL157,8958
0x04abafafUL, 0x715e2f2fUL, 0xdf39e6e6UL, 0x6c482424UL,x6c482424UL157,8958
0xf6a45252UL,xf6a45252UL158,9015
0xf6a45252UL, 0xbf79c6c6UL,xbf79c6c6UL158,9015
0xf6a45252UL, 0xbf79c6c6UL, 0x15b5a0a0UL,x15b5a0a0UL158,9015
0xf6a45252UL, 0xbf79c6c6UL, 0x15b5a0a0UL, 0x1b120909UL,x1b120909UL158,9015
0x328fbdbdUL,x328fbdbdUL159,9072
0x328fbdbdUL, 0x61ed8c8cUL,x61ed8c8cUL159,9072
0x328fbdbdUL, 0x61ed8c8cUL, 0xa46bcfcfUL,xa46bcfcfUL159,9072
0x328fbdbdUL, 0x61ed8c8cUL, 0xa46bcfcfUL, 0xe7ba5d5dUL,xe7ba5d5dUL159,9072
0x33221111UL,x33221111UL160,9129
0x33221111UL, 0xe1be5f5fUL,xe1be5f5fUL160,9129
0x33221111UL, 0xe1be5f5fUL, 0x03020101UL,x03020101UL160,9129
0x33221111UL, 0xe1be5f5fUL, 0x03020101UL, 0xba7fc5c5UL,xba7fc5c5UL160,9129
0x54cb9f9fUL,x54cb9f9fUL161,9186
0x54cb9f9fUL, 0x477a3d3dUL,x477a3d3dUL161,9186
0x54cb9f9fUL, 0x477a3d3dUL, 0x13b1a2a2UL,x13b1a2a2UL161,9186
0x54cb9f9fUL, 0x477a3d3dUL, 0x13b1a2a2UL, 0x58c39b9bUL,x58c39b9bUL161,9186
0xae67c9c9UL,xae67c9c9UL162,9243
0xae67c9c9UL, 0x4d763b3bUL,x4d763b3bUL162,9243
0xae67c9c9UL, 0x4d763b3bUL, 0x3789bebeUL,x3789bebeUL162,9243
0xae67c9c9UL, 0x4d763b3bUL, 0x3789bebeUL, 0xf3a25151UL,xf3a25151UL162,9243
0x2b321919UL,x2b321919UL163,9300
0x2b321919UL, 0x213e1f1fUL,x213e1f1fUL163,9300
0x2b321919UL, 0x213e1f1fUL, 0x417e3f3fUL,x417e3f3fUL163,9300
0x2b321919UL, 0x213e1f1fUL, 0x417e3f3fUL, 0xe4b85c5cUL,xe4b85c5cUL163,9300
0x2391b2b2UL,x2391b2b2UL164,9357
0x2391b2b2UL, 0xc42befefUL,xc42befefUL164,9357
0x2391b2b2UL, 0xc42befefUL, 0xde944a4aUL,xde944a4aUL164,9357
0x2391b2b2UL, 0xc42befefUL, 0xde944a4aUL, 0xa26fcdcdUL,xa26fcdcdUL164,9357
0x348bbfbfUL,x348bbfbfUL165,9414
0x348bbfbfUL, 0x3b81babaUL,x3b81babaUL165,9414
0x348bbfbfUL, 0x3b81babaUL, 0xb1de6f6fUL,xb1de6f6fUL165,9414
0x348bbfbfUL, 0x3b81babaUL, 0xb1de6f6fUL, 0xacc86464UL,xacc86464UL165,9414
0x9e47d9d9UL,x9e47d9d9UL166,9471
0x9e47d9d9UL, 0xe013f3f3UL,xe013f3f3UL166,9471
0x9e47d9d9UL, 0xe013f3f3UL, 0x427c3e3eUL,x427c3e3eUL166,9471
0x9e47d9d9UL, 0xe013f3f3UL, 0x427c3e3eUL, 0x299db4b4UL,x299db4b4UL166,9471
0x0ba1aaaaUL,x0ba1aaaaUL167,9528
0x0ba1aaaaUL, 0x914ddcdcUL,x914ddcdcUL167,9528
0x0ba1aaaaUL, 0x914ddcdcUL, 0x8a5fd5d5UL,x8a5fd5d5UL167,9528
0x0ba1aaaaUL, 0x914ddcdcUL, 0x8a5fd5d5UL, 0x0a0c0606UL,x0a0c0606UL167,9528
0xb575c0c0UL,xb575c0c0UL168,9585
0xb575c0c0UL, 0x82fc7e7eUL,x82fc7e7eUL168,9585
0xb575c0c0UL, 0x82fc7e7eUL, 0xef19f6f6UL,xef19f6f6UL168,9585
0xb575c0c0UL, 0x82fc7e7eUL, 0xef19f6f6UL, 0xaacc6666UL,xaacc6666UL168,9585
0xb4d86c6cUL,xb4d86c6cUL169,9642
0xb4d86c6cUL, 0x79fd8484UL,x79fd8484UL169,9642
0xb4d86c6cUL, 0x79fd8484UL, 0x93e27171UL,x93e27171UL169,9642
0xb4d86c6cUL, 0x79fd8484UL, 0x93e27171UL, 0x48703838UL,x48703838UL169,9642
0x3e87b9b9UL,x3e87b9b9UL170,9699
0x3e87b9b9UL, 0x273a1d1dUL,x273a1d1dUL170,9699
0x3e87b9b9UL, 0x273a1d1dUL, 0x81fe7f7fUL,x81fe7f7fUL170,9699
0x3e87b9b9UL, 0x273a1d1dUL, 0x81fe7f7fUL, 0x52cf9d9dUL,x52cf9d9dUL170,9699
0xd8904848UL,xd8904848UL171,9756
0xd8904848UL, 0x68e38b8bUL,x68e38b8bUL171,9756
0xd8904848UL, 0x68e38b8bUL, 0x7e542a2aUL,x7e542a2aUL171,9756
0xd8904848UL, 0x68e38b8bUL, 0x7e542a2aUL, 0x9b41dadaUL,x9b41dadaUL171,9756
0x1abfa5a5UL,x1abfa5a5UL172,9813
0x1abfa5a5UL, 0x55663333UL,x55663333UL172,9813
0x1abfa5a5UL, 0x55663333UL, 0x73f18282UL,x73f18282UL172,9813
0x1abfa5a5UL, 0x55663333UL, 0x73f18282UL, 0x4b723939UL,x4b723939UL172,9813
0x8f59d6d6UL,x8f59d6d6UL173,9870
0x8f59d6d6UL, 0x88f07878UL,x88f07878UL173,9870
0x8f59d6d6UL, 0x88f07878UL, 0x7ff98686UL,x7ff98686UL173,9870
0x8f59d6d6UL, 0x88f07878UL, 0x7ff98686UL, 0xfb01fafaUL,xfb01fafaUL173,9870
0xd93de4e4UL,xd93de4e4UL174,9927
0xd93de4e4UL, 0x7d562b2bUL,x7d562b2bUL174,9927
0xd93de4e4UL, 0x7d562b2bUL, 0x0ea7a9a9UL,x0ea7a9a9UL174,9927
0xd93de4e4UL, 0x7d562b2bUL, 0x0ea7a9a9UL, 0x223c1e1eUL,x223c1e1eUL174,9927
0x6ee78989UL,x6ee78989UL175,9984
0x6ee78989UL, 0xa0c06060UL,xa0c06060UL175,9984
0x6ee78989UL, 0xa0c06060UL, 0xbdd66b6bUL,xbdd66b6bUL175,9984
0x6ee78989UL, 0xa0c06060UL, 0xbdd66b6bUL, 0xcb21eaeaUL,xcb21eaeaUL175,9984
0xffaa5555UL,xffaa5555UL176,10041
0xffaa5555UL, 0xd4984c4cUL,xd4984c4cUL176,10041
0xffaa5555UL, 0xd4984c4cUL, 0xec1bf7f7UL,xec1bf7f7UL176,10041
0xffaa5555UL, 0xd4984c4cUL, 0xec1bf7f7UL, 0xd331e2e2UL,xd331e2e2UL176,10041
const word32 Square::Dec::Td[Square::Dec::Td313,17419
0x02e368bcUL,x02e368bcUL382,21121
0x02e368bcUL, 0x0c558562UL,x0c558562UL382,21121
0x02e368bcUL, 0x0c558562UL, 0x312a3f23UL,x312a3f23UL382,21121
0x02e368bcUL, 0x0c558562UL, 0x312a3f23UL, 0xf761ab13UL,xf761ab13UL382,21121
0x7298d46dUL,x7298d46dUL383,21178
0x7298d46dUL, 0x1921cb9aUL,x1921cb9aUL383,21178
0x7298d46dUL, 0x1921cb9aUL, 0x613c22a4UL,x613c22a4UL383,21178
0x7298d46dUL, 0x1921cb9aUL, 0x613c22a4UL, 0xcd459d3dUL,xcd459d3dUL383,21178
0x2305fdb4UL,x2305fdb4UL384,21235
0x2305fdb4UL, 0x5f2bc407UL,x5f2bc407UL384,21235
0x2305fdb4UL, 0x5f2bc407UL, 0xc09b2c01UL,xc09b2c01UL384,21235
0x2305fdb4UL, 0x5f2bc407UL, 0xc09b2c01UL, 0x0f3dd980UL,x0f3dd980UL384,21235
0x74486c5cUL,x74486c5cUL385,21292
0x74486c5cUL, 0x85f97f7eUL,x85f97f7eUL385,21292
0x74486c5cUL, 0x85f97f7eUL, 0x1ff173abUL,x1ff173abUL385,21292
0x74486c5cUL, 0x85f97f7eUL, 0x1ff173abUL, 0x0eb6eddeUL,x0eb6eddeUL385,21292
0xed283c6bUL,xed283c6bUL386,21349
0xed283c6bUL, 0x1a499778UL,x1a499778UL386,21349
0xed283c6bUL, 0x1a499778UL, 0x8d9f2a91UL,x8d9f2a91UL386,21349
0xed283c6bUL, 0x1a499778UL, 0x8d9f2a91UL, 0x33c9579fUL,x33c9579fUL386,21349
0xaaa907a8UL,xaaa907a8UL387,21406
0xaaa907a8UL, 0x7da50dedUL,x7da50dedUL387,21406
0xaaa907a8UL, 0x7da50dedUL, 0x8f7c422dUL,x8f7c422dUL387,21406
0xaaa907a8UL, 0x7da50dedUL, 0x8f7c422dUL, 0xc9764db0UL,xc9764db0UL387,21406
0x574d91e8UL,x574d91e8UL388,21463
0x574d91e8UL, 0xcccea963UL,xcccea963UL388,21463
0x574d91e8UL, 0xcccea963UL, 0xd2b4ee96UL,xd2b4ee96UL388,21463
0x574d91e8UL, 0xcccea963UL, 0xd2b4ee96UL, 0xb63028e1UL,xb63028e1UL388,21463
0xb90df161UL,xb90df161UL389,21520
0xb90df161UL, 0x26bd1967UL,x26bd1967UL389,21520
0xb90df161UL, 0x26bd1967UL, 0x80419badUL,x80419badUL389,21520
0xb90df161UL, 0x26bd1967UL, 0x80419badUL, 0xc7c0a06eUL,xc7c0a06eUL389,21520
0x415183f2UL,x415183f2UL390,21577
0x415183f2UL, 0x3492dbf0UL,x3492dbf0UL390,21577
0x415183f2UL, 0x3492dbf0UL, 0xfc6fa21eUL,xfc6fa21eUL390,21577
0x415183f2UL, 0x3492dbf0UL, 0xfc6fa21eUL, 0x4c8f32ceUL,x4c8f32ceUL390,21577
0x7313e033UL,x7313e033UL391,21634
0x7313e033UL, 0x6d69a7c6UL,x6d69a7c6UL391,21634
0x7313e033UL, 0x6d69a7c6UL, 0x93e56d64UL,x93e56d64UL391,21634
0x7313e033UL, 0x6d69a7c6UL, 0x93e56d64UL, 0xfabf1a2fUL,xfabf1a2fUL391,21634
0xb7bb1cbfUL,xb7bb1cbfUL392,21691
0xb7bb1cbfUL, 0xb5587403UL,xb5587403UL392,21691
0xb7bb1cbfUL, 0xb5587403UL, 0x4fe76e2cUL,x4fe76e2cUL392,21691
0xb7bb1cbfUL, 0xb5587403UL, 0x4fe76e2cUL, 0x965d89b7UL,x965d89b7UL392,21691
0x2ae89c05UL,x2ae89c05UL393,21748
0x2ae89c05UL, 0xa3446619UL,xa3446619UL393,21748
0x2ae89c05UL, 0xa3446619UL, 0xfb342e71UL,xfb342e71UL393,21748
0x2ae89c05UL, 0xa3446619UL, 0xfb342e71UL, 0x650ff229UL,x650ff229UL393,21748
0x7afe8182UL,x7afe8182UL394,21805
0x7afe8182UL, 0xf1b11322UL,xf1b11322UL394,21805
0x7afe8182UL, 0xf1b11322UL, 0xeca30835UL,xeca30835UL394,21805
0x7afe8182UL, 0xf1b11322UL, 0xeca30835UL, 0x7ecd510fUL,x7ecd510fUL394,21805
0x14ff7aa6UL,x14ff7aa6UL395,21862
0x14ff7aa6UL, 0xf85c7293UL,xf85c7293UL395,21862
0x14ff7aa6UL, 0xf85c7293UL, 0x122fc297UL,x122fc297UL395,21862
0x14ff7aa6UL, 0xf85c7293UL, 0x122fc297UL, 0xc3f370e3UL,xc3f370e3UL395,21862
0x1c992f49UL,x1c992f49UL396,21919
0x1c992f49UL, 0x68d14315UL,x68d14315UL396,21919
0x1c992f49UL, 0x68d14315UL, 0x1bc2a326UL,x1bc2a326UL396,21919
0x1c992f49UL, 0x68d14315UL, 0x1bc2a326UL, 0xb388cc32UL,xb388cc32UL396,21919
0x6f8acf7aUL,x6f8acf7aUL397,21976
0x6f8acf7aUL, 0x9fb0e806UL,x9fb0e806UL397,21976
0x6f8acf7aUL, 0x9fb0e806UL, 0x1e7a47f5UL,x1e7a47f5UL397,21976
0x6f8acf7aUL, 0x9fb0e806UL, 0x1e7a47f5UL, 0xdad2bb79UL,xdad2bb79UL397,21976
0x21e69508UL,x21e69508UL398,22033
0x21e69508UL, 0x5c4398e5UL,x5c4398e5UL398,22033
0x21e69508UL, 0x5c4398e5UL, 0x06d0b831UL,x06d0b831UL398,22033
0x21e69508UL, 0x5c4398e5UL, 0x06d0b831UL, 0xaf11e37bUL,xaf11e37bUL398,22033
0x537e4165UL,x537e4165UL399,22090
0x537e4165UL, 0x10ccaa2bUL,x10ccaa2bUL399,22090
0x537e4165UL, 0x10ccaa2bUL, 0x9cd8b4e4UL,x9cd8b4e4UL399,22090
0x537e4165UL, 0x10ccaa2bUL, 0x9cd8b4e4UL, 0xd46456a7UL,xd46456a7UL399,22090
0x59fb7c36UL,x59fb7c36UL400,22147
0x59fb7c36UL, 0x84724b20UL,x84724b20UL400,22147
0x59fb7c36UL, 0x84724b20UL, 0xf6ea9f4dUL,xf6ea9f4dUL400,22147
0x59fb7c36UL, 0x84724b20UL, 0xf6ea9f4dUL, 0xdf6a5faaUL,xdf6a5faaUL400,22147
0xce2dc1dfUL,xce2dc1dfUL401,22204
0xce2dc1dfUL, 0x58704868UL,x58704868UL401,22204
0xce2dc1dfUL, 0x58704868UL, 0x81caaff3UL,x81caaff3UL401,22204
0xce2dc1dfUL, 0x58704868UL, 0x81caaff3UL, 0x910605d8UL,x910605d8UL401,22204
0x695a774bUL,x695a774bUL402,22261
0x695a774bUL, 0xa594de28UL,xa594de28UL402,22261
0x695a774bUL, 0xa594de28UL, 0x4239df10UL,x4239df10UL402,22261
0x695a774bUL, 0xa594de28UL, 0x4239df10UL, 0x47813bc3UL,x47813bc3UL402,22261
0xa6fc82caUL,xa6fc82caUL403,22318
0xa6fc82caUL, 0xc523c8d2UL,xc523c8d2UL403,22318
0xa6fc82caUL, 0xc523c8d2UL, 0xb203f86cUL,xb203f86cUL403,22318
0xa6fc82caUL, 0xc523c8d2UL, 0xb203f86cUL, 0x9a080cd5UL,x9a080cd5UL403,22318
0x40dab7acUL,x40dab7acUL404,22375
0x40dab7acUL, 0xe17db909UL,xe17db909UL404,22375
0x40dab7acUL, 0xe17db909UL, 0x2c382434UL,x2c382434UL404,22375
0x40dab7acUL, 0xe17db909UL, 0x2c382434UL, 0xa2cf5247UL,xa2cf5247UL404,22375
0xd1dcb274UL,xd1dcb274UL405,22432
0xd1dcb274UL, 0x2b63a85bUL,x2b63a85bUL405,22432
0xd1dcb274UL, 0x2b63a85bUL, 0x9535d555UL,x9535d555UL405,22432
0xd1dcb274UL, 0x2b63a85bUL, 0x9535d555UL, 0x11479e75UL,x11479e75UL405,22432
0xe215e5ebUL,xe215e5ebUL406,22489
0xe215e5ebUL, 0xc64b9430UL,xc64b9430UL406,22489
0xe215e5ebUL, 0xc64b9430UL, 0xa84a6f14UL,xa84a6f14UL406,22489
0xe215e5ebUL, 0xc64b9430UL, 0xa84a6f14UL, 0x8691239cUL,x8691239cUL406,22489
0x394c6accUL,x394c6accUL407,22546
0x394c6accUL, 0x4a5f8affUL,x4a5f8affUL407,22546
0x394c6accUL, 0x4a5f8affUL, 0x4d040690UL,x4d040690UL407,22546
0x394c6accUL, 0x4a5f8affUL, 0x4d040690UL, 0xbbee99ddUL,xbbee99ddUL407,22546
0xca1e1152UL,xca1e1152UL408,22603
0xca1e1152UL, 0x18aaffc4UL,x18aaffc4UL408,22603
0xca1e1152UL, 0x18aaffc4UL, 0x98eb6469UL,x98eb6469UL408,22603
0xca1e1152UL, 0x18aaffc4UL, 0x98eb6469UL, 0xff07fefcUL,xff07fefcUL408,22603
0x018b345eUL,x018b345eUL409,22660
0x018b345eUL, 0xbe567d0eUL,xbe567d0eUL409,22660
0x018b345eUL, 0xbe567d0eUL, 0xd9bae79bUL,xd9bae79bUL409,22660
0x018b345eUL, 0xbe567d0eUL, 0xd9bae79bUL, 0x324263c1UL,x324263c1UL409,22660
0x7b75b5dcUL,x7b75b5dcUL410,22717
0x7b75b5dcUL, 0x17972644UL,x17972644UL410,22717
0x7b75b5dcUL, 0x17972644UL, 0x6667aecbUL,x6667aecbUL410,22717
0x7b75b5dcUL, 0x17972644UL, 0x6667aecbUL, 0xcb95250cUL,xcb95250cUL410,22717
0x67ec9a95UL,x67ec9a95UL411,22774
0x67ec9a95UL, 0xd057862aUL,xd057862aUL411,22774
0x67ec9a95UL, 0xd057862aUL, 0x99605037UL,x99605037UL411,22774
0x67ec9a95UL, 0xd057862aUL, 0x99605037UL, 0x05b8e4d3UL,x05b8e4d3UL411,22774
0xba65ad83UL,xba65ad83UL412,22831
0xba65ad83UL, 0x3519efaeUL,x3519efaeUL412,22831
0xba65ad83UL, 0x3519efaeUL, 0x13a4f6c9UL,x13a4f6c9UL412,22831
0xba65ad83UL, 0x3519efaeUL, 0x13a4f6c9UL, 0xa9c15b4aUL,xa9c15b4aUL412,22831
0xd6873e1bUL,xd6873e1bUL413,22888
0xd6873e1bUL, 0x5ea0f059UL,x5ea0f059UL413,22888
0xd6873e1bUL, 0x5ea0f059UL, 0x5b18148aUL,x5b18148aUL413,22888
0xd6873e1bUL, 0x5ea0f059UL, 0x5b18148aUL, 0x3baf0270UL,x3baf0270UL413,22888
0x76ab04e0UL,x76ab04e0UL414,22945
0x76ab04e0UL, 0xbfdd4950UL,xbfdd4950UL414,22945
0x76ab04e0UL, 0xbfdd4950UL, 0x63df4a18UL,x63df4a18UL414,22945
0x76ab04e0UL, 0xbfdd4950UL, 0x63df4a18UL, 0x56c6a5b6UL,x56c6a5b6UL414,22945
0x0a853d53UL,x0a853d53UL415,23002
0x0a853d53UL, 0x37fa8712UL,x37fa8712UL415,23002
0x0a853d53UL, 0x37fa8712UL, 0xa777b694UL,xa777b694UL415,23002
0x0a853d53UL, 0x37fa8712UL, 0xa777b694UL, 0x7f466551UL,x7f466551UL415,23002
0x09ed61b1UL,x09ed61b1UL416,23059
0x09ed61b1UL, 0xe91bece6UL,xe91bece6UL416,23059
0x09ed61b1UL, 0xe91bece6UL, 0x25d54585UL,x25d54585UL416,23059
0x09ed61b1UL, 0xe91bece6UL, 0x25d54585UL, 0x52f5753bUL,x52f5753bUL416,23059
0x3d7fba41UL,x3d7fba41UL417,23116
0x3d7fba41UL, 0x8827ce42UL,x8827ce42UL417,23116
0x3d7fba41UL, 0x8827ce42UL, 0x43b2eb4eUL,x43b2eb4eUL417,23116
0x3d7fba41UL, 0x8827ce42UL, 0x43b2eb4eUL, 0x97d6bde9UL,x97d6bde9UL417,23116
0xf3527b9eUL,xf3527b9eUL418,23173
0xf3527b9eUL, 0x4562537fUL,x4562537fUL418,23173
0xf3527b9eUL, 0x4562537fUL, 0xa02c3afbUL,xa02c3afbUL418,23173
0xf3527b9eUL, 0x4562537fUL, 0xa02c3afbUL, 0x707bbcd1UL,x707bbcd1UL418,23173
0x6bb91ff7UL,x6bb91ff7UL419,23230
0x6bb91ff7UL, 0x1d121b17UL,x1d121b17UL419,23230
0x6bb91ff7UL, 0x1d121b17UL, 0xc8fd79eeUL,xc8fd79eeUL419,23230
0x6bb91ff7UL, 0x1d121b17UL, 0xc8fd79eeUL, 0xf03a277cUL,xf03a277cUL419,23230
0xd70c0a45UL,xd70c0a45UL420,23287
0xd70c0a45UL, 0x7996dd60UL,x7996dd60UL420,23287
0xd70c0a45UL, 0x7996dd60UL, 0xab2233f6UL,xab2233f6UL420,23287
0xd70c0a45UL, 0x7996dd60UL, 0xab2233f6UL, 0x89acfa1cUL,x89acfa1cUL420,23287
0x5dc8acbbUL,x5dc8acbbUL421,23344
0x5dc8acbbUL, 0x30a10b7dUL,x30a10b7dUL421,23344
0x5dc8acbbUL, 0x30a10b7dUL, 0x4bd4bea1UL,x4bd4bea1UL421,23344
0x5dc8acbbUL, 0x30a10b7dUL, 0x4bd4bea1UL, 0x94bee10bUL,x94bee10bUL421,23344
0x5425cd0aUL,x5425cd0aUL422,23401
0x5425cd0aUL, 0x62547e46UL,x62547e46UL422,23401
0x5425cd0aUL, 0x62547e46UL, 0x82a2f311UL,x82a2f311UL422,23401
0x5425cd0aUL, 0x62547e46UL, 0x82a2f311UL, 0x3e17e6a3UL,x3e17e6a3UL422,23401
0xe6263566UL,xe6263566UL423,23458
0xe6263566UL, 0x75c35802UL,x75c35802UL423,23458
0xe6263566UL, 0x75c35802UL, 0x9b83388bUL,x9b83388bUL423,23458
0xe6263566UL, 0x75c35802UL, 0x9b83388bUL, 0xc27844bdUL,xc27844bdUL423,23458
0xdc020348UL,xdc020348UL424,23515
0xdc020348UL, 0x8b4f92a0UL,x8b4f92a0UL424,23515
0xdc020348UL, 0x8b4f92a0UL, 0x7c2e39b3UL,x7c2e39b3UL424,23515
0xdc020348UL, 0x8b4f92a0UL, 0x7c2e39b3UL, 0xe54e6984UL,xe54e6984UL424,23515
0x71f0888fUL,x71f0888fUL425,23572
0x71f0888fUL, 0x27362d39UL,x27362d39UL425,23572
0x71f0888fUL, 0x27362d39UL, 0x3f9cd2fdUL,x3f9cd2fdUL425,23572
0x71f0888fUL, 0x27362d39UL, 0x3f9cd2fdUL, 0x6e01fb24UL,x6e01fb24UL425,23572
0xdd893716UL,xdd893716UL426,23629
0xdd893716UL, 0x00000000UL,x00000000UL426,23629
0xdd893716UL, 0x00000000UL, 0xe0f68d57UL,xe0f68d57UL426,23629
0xdd893716UL, 0x00000000UL, 0xe0f68d57UL, 0x6ce29398UL,x6ce29398UL426,23629
0x15744ef8UL,x15744ef8UL427,23686
0x15744ef8UL, 0x5a9320d4UL,x5a9320d4UL427,23686
0x15744ef8UL, 0x5a9320d4UL, 0xe7ad0138UL,xe7ad0138UL427,23686
0x15744ef8UL, 0x5a9320d4UL, 0xe7ad0138UL, 0xb4d3405dUL,xb4d3405dUL427,23686
0x871a17c2UL,x871a17c2UL428,23743
0x871a17c2UL, 0x2db3106aUL,x2db3106aUL428,23743
0x871a17c2UL, 0x2db3106aUL, 0x2f5078d6UL,x2f5078d6UL428,23743
0x871a17c2UL, 0x2db3106aUL, 0x2f5078d6UL, 0x3cf48e1fUL,x3cf48e1fUL428,23743
0xa1a70ea5UL,xa1a70ea5UL429,23800
0xa1a70ea5UL, 0x3671b34cUL,x3671b34cUL429,23800
0xa1a70ea5UL, 0x3671b34cUL, 0xae9ad725UL,xae9ad725UL429,23800
0xa1a70ea5UL, 0x3671b34cUL, 0xae9ad725UL, 0x245e71dbUL,x245e71dbUL429,23800
0x50161d87UL,x50161d87UL430,23857
0x50161d87UL, 0xd5ef62f9UL,xd5ef62f9UL430,23857
0x50161d87UL, 0xd5ef62f9UL, 0x908d3186UL,x908d3186UL430,23857
0x50161d87UL, 0xd5ef62f9UL, 0x908d3186UL, 0x161c121aUL,x161c121aUL430,23857
0xcfa6f581UL,xcfa6f581UL431,23914
0xcfa6f581UL, 0x075b8c6fUL,x075b8c6fUL431,23914
0xcfa6f581UL, 0x075b8c6fUL, 0x4937d61dUL,x4937d61dUL431,23914
0xcfa6f581UL, 0x075b8c6fUL, 0x4937d61dUL, 0x926e593aUL,x926e593aUL431,23914
0x6484c677UL,x6484c677UL432,23971
0x6484c677UL, 0xb886c53fUL,xb886c53fUL432,23971
0x6484c677UL, 0xb886c53fUL, 0xf9d746cdUL,xf9d746cdUL432,23971
0x6484c677UL, 0xb886c53fUL, 0xf9d746cdUL, 0xb0e090d0UL,xb0e090d0UL432,23971
0x8329c74fUL,x8329c74fUL433,24028
0x8329c74fUL, 0xfde49640UL,xfde49640UL433,24028
0x8329c74fUL, 0xfde49640UL, 0x0b0e090dUL,x0b0e090dUL433,24028
0x8329c74fUL, 0xfde49640UL, 0x0b0e090dUL, 0x206da156UL,x206da156UL433,24028
0x228ec9eaUL,x228ec9eaUL434,24085
0x228ec9eaUL, 0x2edb4c88UL,x2edb4c88UL434,24085
0x228ec9eaUL, 0x2edb4c88UL, 0x8ef77673UL,x8ef77673UL434,24085
0x228ec9eaUL, 0x2edb4c88UL, 0x8ef77673UL, 0xbcb515b2UL,xbcb515b2UL434,24085
0xc110185fUL,xc110185fUL435,24142
0xc110185fUL, 0x6a322ba9UL,x6a322ba9UL435,24142
0xc110185fUL, 0x6a322ba9UL, 0xb16ba48eUL,xb16ba48eUL435,24142
0xc110185fUL, 0x6a322ba9UL, 0xb16ba48eUL, 0x55aef954UL,x55aef954UL435,24142
0xee406089UL,xee406089UL436,24199
0xee406089UL, 0x086655efUL,x086655efUL436,24199
0xee406089UL, 0x086655efUL, 0x44e96721UL,x44e96721UL436,24199
0xee406089UL, 0x086655efUL, 0x44e96721UL, 0xbd3e21ecUL,xbd3e21ecUL436,24199
0x772030beUL,x772030beUL437,24256
0x772030beUL, 0xadf28bc7UL,xadf28bc7UL437,24256
0x772030beUL, 0xadf28bc7UL, 0x2980c0e7UL,x2980c0e7UL437,24256
0x772030beUL, 0xadf28bc7UL, 0x2980c0e7UL, 0x8c141ecfUL,x8c141ecfUL437,24256
0x48bce243UL,x48bce243UL438,24313
0x48bce243UL, 0x8ac4a6feUL,x8ac4a6feUL438,24313
0x48bce243UL, 0x8ac4a6feUL, 0xd831d3c5UL,xd831d3c5UL438,24313
0x48bce243UL, 0x8ac4a6feUL, 0xd831d3c5UL, 0x60b716faUL,x60b716faUL438,24313
0x9d5380baUL,x9d5380baUL439,24370
0x9d5380baUL, 0xf2d94fc0UL,xf2d94fc0UL439,24370
0x9d5380baUL, 0xf2d94fc0UL, 0x781de93eUL,x781de93eUL439,24370
0x9d5380baUL, 0xf2d94fc0UL, 0x781de93eUL, 0x3a24362eUL,x3a24362eUL439,24370
0xdee16bf4UL,xdee16bf4UL440,24427
0xdee16bf4UL, 0xefcb54d7UL,xefcb54d7UL440,24427
0xdee16bf4UL, 0xefcb54d7UL, 0xf409f7f1UL,xf409f7f1UL440,24427
0xdee16bf4UL, 0xefcb54d7UL, 0xf409f7f1UL, 0xf582c3afUL,xf582c3afUL440,24427
0x280bf4b9UL,x280bf4b9UL441,24484
0x280bf4b9UL, 0x519d29d9UL,x519d29d9UL441,24484
0x280bf4b9UL, 0x519d29d9UL, 0x38c75e92UL,x38c75e92UL441,24484
0x280bf4b9UL, 0x519d29d9UL, 0x38c75e92UL, 0xebf8845aUL,xebf8845aUL441,24484
0xe890d8b8UL,xe890d8b8UL442,24541
0xe890d8b8UL, 0x0ddeb13cUL,x0ddeb13cUL442,24541
0xe890d8b8UL, 0x0ddeb13cUL, 0x0433d08dUL,x0433d08dUL442,24541
0xe890d8b8UL, 0x0ddeb13cUL, 0x0433d08dUL, 0x03685ce2UL,x03685ce2UL442,24541
0xe4c55ddaUL,xe4c55ddaUL443,24598
0xe4c55ddaUL, 0x9e3bdc58UL,x9e3bdc58UL443,24598
0xe4c55ddaUL, 0x9e3bdc58UL, 0x460a0f9dUL,x460a0f9dUL443,24598
0xe4c55ddaUL, 0x9e3bdc58UL, 0x460a0f9dUL, 0xd33fdac8UL,xd33fdac8UL443,24598
0xdb598f27UL,xdb598f27UL444,24655
0xdb598f27UL, 0xc4a8fc8cUL,xc4a8fc8cUL444,24655
0xdb598f27UL, 0xc4a8fc8cUL, 0xac79bf99UL,xac79bf99UL444,24655
0xdb598f27UL, 0xc4a8fc8cUL, 0xac79bf99UL, 0x4e6c5a72UL,x4e6c5a72UL444,24655
0xfe8ccaa2UL,xfe8ccaa2UL445,24712
0xfe8ccaa2UL, 0xe39ed1b5UL,xe39ed1b5UL445,24712
0xfe8ccaa2UL, 0xe39ed1b5UL, 0xa41fea76UL,xa41fea76UL445,24712
0xfe8ccaa2UL, 0xe39ed1b5UL, 0xa41fea76UL, 0xea73b004UL,xea73b004UL445,24712

src/cryptopp/base64.h,282
#define CRYPTOPP_BASE64_H7,213
NAMESPACE_BEGIN(12,290
class Base64Encoder 17,502
	Base64Encoder(27,1115
class Base64Decoder 59,3192
	Base64Decoder(65,3450
class Base64URLEncoder 97,5299
	Base64URLEncoder(112,6374
class Base64URLDecoder 135,7765
	Base64URLDecoder(142,8101

src/cryptopp/default.h,5554
#define CRYPTOPP_DEFAULT_H7,232
NAMESPACE_BEGIN(17,402
typedef DES_EDE2 LegacyBlockCipher;20,551
typedef SHA LegacyHashModule;22,675
typedef HMAC<LegacyHashModule> LegacyMAC;24,792
typedef AES DefaultBlockCipher;27,962
typedef SHA256 DefaultHashModule;29,1085
typedef HMAC<DefaultHashModule> DefaultMAC;31,1209
class DataDecryptorErr 35,1401
	DataDecryptorErr(38,1456
class KeyBadErr 44,1688
	public: KeyBadErr(46,1734
class MACBadErr 52,1991
	public: MACBadErr(54,2037
template <unsigned int BlockSize,60,2242
template <unsigned int BlockSize, unsigned int KeyLength,60,2242
template <unsigned int BlockSize, unsigned int KeyLength, unsigned int DigestSize,60,2242
template <unsigned int BlockSize, unsigned int KeyLength, unsigned int DigestSize, unsigned int SaltSize,60,2242
struct DataParametersInfo61,2374
typedef DataParametersInfo<LegacyBlockCipher::BLOCKSIZE,LegacyBlockCipher::BLOCKSIZE70,2631
typedef DataParametersInfo<LegacyBlockCipher::BLOCKSIZE, LegacyBlockCipher::DEFAULT_KEYLENGTH,70,2631
typedef DataParametersInfo<LegacyBlockCipher::BLOCKSIZE, LegacyBlockCipher::DEFAULT_KEYLENGTH, LegacyHashModule::DIGESTSIZE,70,2631
typedef DataParametersInfo<LegacyBlockCipher::BLOCKSIZE, LegacyBlockCipher::DEFAULT_KEYLENGTH, LegacyHashModule::DIGESTSIZE, 8, 200> LegacyParametersInfo;70,2631
typedef DataParametersInfo<DefaultBlockCipher::BLOCKSIZE,DefaultBlockCipher::BLOCKSIZE71,2787
typedef DataParametersInfo<DefaultBlockCipher::BLOCKSIZE, DefaultBlockCipher::DEFAULT_KEYLENGTH,71,2787
typedef DataParametersInfo<DefaultBlockCipher::BLOCKSIZE, DefaultBlockCipher::DEFAULT_KEYLENGTH, DefaultHashModule::DIGESTSIZE,71,2787
typedef DataParametersInfo<DefaultBlockCipher::BLOCKSIZE, DefaultBlockCipher::DEFAULT_KEYLENGTH, DefaultHashModule::DIGESTSIZE, 8, 2500> DefaultParametersInfo;71,2787
class DataEncryptor 83,3478
	SecByteBlock m_passphrase;108,4491
	typename CBC_Mode<BC>::Encryption m_cipher;109,4520
class DataDecryptor 122,5100
	enum State 144,6247
	enum State {WAITING_FOR_KEYCHECK,WAITING_FOR_KEYCHECK144,6247
	enum State {WAITING_FOR_KEYCHECK, KEY_GOOD,144,6247
	enum State {WAITING_FOR_KEYCHECK, KEY_GOOD, KEY_BAD}KEY_BAD144,6247
	State CurrentState(145,6303
	State m_state;151,6458
	SecByteBlock m_passphrase;156,6546
	typename CBC_Mode<BC>::Decryption m_cipher;157,6575
	member_ptr<FilterWithBufferedInput> m_decryptor;158,6621
	bool m_throwException;159,6672
class DataEncryptorWithMAC 180,7878
	void FirstPut(195,8564
	member_ptr<MAC> m_mac;199,8696
class DataDecryptorWithMAC 220,9902
	typename DataDecryptor<DataDecryptor236,10802
	void FirstPut(240,10910
	member_ptr<MAC> m_mac;244,11042
	HashVerificationFilter *m_hashVerifier;m_hashVerifier245,11067
	bool m_throwException;246,11109
struct LegacyEncryptor 255,11558
struct LegacyDecryptor 261,12042
struct DefaultEncryptor 267,12514
struct DefaultDecryptor 273,12990
struct LegacyEncryptorWithMAC 279,13494
struct LegacyDecryptorWithMAC 285,14019
struct DefaultEncryptorWithMAC 291,14532
struct DefaultDecryptorWithMAC 297,15049
typedef DataEncryptor<LegacyBlockCipher,LegacyBlockCipher299,15193
typedef DataEncryptor<LegacyBlockCipher,LegacyHashModule,299,15193
typedef DataEncryptor<LegacyBlockCipher,LegacyHashModule,LegacyParametersInfo> LegacyEncryptor;299,15193
typedef DataDecryptor<LegacyBlockCipher,LegacyBlockCipher300,15290
typedef DataDecryptor<LegacyBlockCipher,LegacyHashModule,300,15290
typedef DataDecryptor<LegacyBlockCipher,LegacyHashModule,LegacyParametersInfo> LegacyDecryptor;300,15290
typedef DataEncryptor<DefaultBlockCipher,DefaultBlockCipher302,15389
typedef DataEncryptor<DefaultBlockCipher,DefaultHashModule,302,15389
typedef DataEncryptor<DefaultBlockCipher,DefaultHashModule,DefaultParametersInfo> DefaultEncryptor;302,15389
typedef DataDecryptor<DefaultBlockCipher,DefaultBlockCipher303,15490
typedef DataDecryptor<DefaultBlockCipher,DefaultHashModule,303,15490
typedef DataDecryptor<DefaultBlockCipher,DefaultHashModule,DefaultParametersInfo> DefaultDecryptor;303,15490
typedef DataEncryptorWithMAC<LegacyBlockCipher,LegacyBlockCipher305,15593
typedef DataEncryptorWithMAC<LegacyBlockCipher,LegacyHashModule,305,15593
typedef DataEncryptorWithMAC<LegacyBlockCipher,LegacyHashModule,DefaultMAC,305,15593
typedef DataEncryptorWithMAC<LegacyBlockCipher,LegacyHashModule,DefaultMAC,LegacyParametersInfo> LegacyEncryptorWithMAC;305,15593
typedef DataDecryptorWithMAC<LegacyBlockCipher,LegacyBlockCipher306,15715
typedef DataDecryptorWithMAC<LegacyBlockCipher,LegacyHashModule,306,15715
typedef DataDecryptorWithMAC<LegacyBlockCipher,LegacyHashModule,DefaultMAC,306,15715
typedef DataDecryptorWithMAC<LegacyBlockCipher,LegacyHashModule,DefaultMAC,LegacyParametersInfo> LegacyDecryptorWithMAC;306,15715
typedef DataEncryptorWithMAC<DefaultBlockCipher,DefaultBlockCipher308,15839
typedef DataEncryptorWithMAC<DefaultBlockCipher,DefaultHashModule,308,15839
typedef DataEncryptorWithMAC<DefaultBlockCipher,DefaultHashModule,DefaultMAC,308,15839
typedef DataEncryptorWithMAC<DefaultBlockCipher,DefaultHashModule,DefaultMAC,DefaultParametersInfo> DefaultEncryptorWithMAC;308,15839
typedef DataDecryptorWithMAC<DefaultBlockCipher,DefaultBlockCipher309,15965
typedef DataDecryptorWithMAC<DefaultBlockCipher,DefaultHashModule,309,15965
typedef DataDecryptorWithMAC<DefaultBlockCipher,DefaultHashModule,DefaultMAC,309,15965
typedef DataDecryptorWithMAC<DefaultBlockCipher,DefaultHashModule,DefaultMAC,DefaultParametersInfo> DefaultDecryptorWithMAC;309,15965

src/cryptopp/rw.cpp,1084
static const bool CRYPTOPP_RW_USE_OMP 15,259
static const bool CRYPTOPP_RW_USE_OMP 17,313
NAMESPACE_BEGIN(20,371
void RWFunction::DEREncode(DEREncode29,536
Integer RWFunction::ApplyFunction(ApplyFunction36,678
bool RWFunction::Validate(Validate73,1396
bool RWFunction::GetVoidValue(GetVoidValue81,1621
void RWFunction::AssignFrom(AssignFrom88,1844
void InvertibleRWFunction::GenerateRandom(GenerateRandom99,2135
void InvertibleRWFunction::Initialize(Initialize117,2845
void InvertibleRWFunction::PrecomputeTweakedRoots(PrecomputeTweakedRoots124,3020
void InvertibleRWFunction::LoadPrecomputation(LoadPrecomputation141,3451
void InvertibleRWFunction::SavePrecomputation(SavePrecomputation152,3695
void InvertibleRWFunction::BERDecode(BERDecode164,3959
void InvertibleRWFunction::DEREncode(DEREncode176,4197
Integer InvertibleRWFunction::CalculateInverse(CalculateInverse187,4519
bool InvertibleRWFunction::Validate(Validate252,6394
bool InvertibleRWFunction::GetVoidValue(GetVoidValue268,6940
void InvertibleRWFunction::AssignFrom(AssignFrom277,7294

src/cryptopp/des.cpp,1266
typedef BlockGetAndPut<word32,word3223,740
typedef BlockGetAndPut<word32, BigEndian> Block;23,740
static inline void IPERM(76,2069
static inline void FPERM(98,2637
void DES::Base::UncheckedSetKey(UncheckedSetKey120,3201
static byte ip[ip139,3876
static byte fp[fp151,4230
static byte ei[ei162,4585
static byte sbox[sbox173,4866
	const byte p32i[p32i225,7267
	const byte pc1[pc1240,7515
	const byte totrot[totrot255,7856
	const byte pc2[pc2262,7988
	const int bytebit[bytebit278,8331
void RawDES::RawSetKey(RawSetKey284,8450
# define register 287,8561
void RawDES::RawProcessBlock(RawProcessBlock336,10186
void DES_EDE2::Base::UncheckedSetKey(UncheckedSetKey369,11095
void DES_EDE2::Base::ProcessAndXorBlock(ProcessAndXorBlock377,11363
void DES_EDE3::Base::UncheckedSetKey(UncheckedSetKey389,11684
void DES_EDE3::Base::ProcessAndXorBlock(ProcessAndXorBlock398,12083
static inline bool CheckParity(412,12442
bool DES::CheckKeyParityBits(CheckKeyParityBits418,12575
void DES::CorrectKeyParityBits(CorrectKeyParityBits426,12727
void DES::Base::ProcessAndXorBlock(ProcessAndXorBlock434,12910
void DES_XEX3::Base::UncheckedSetKey(UncheckedSetKey444,13155
void DES_XEX3::Base::ProcessAndXorBlock(ProcessAndXorBlock456,13549

src/cryptopp/square.h,517
#define CRYPTOPP_SQUARE_H7,165
NAMESPACE_BEGIN(12,240
struct Square_Info 16,337
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(18,431
class Square 24,648
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION54,1457
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;54,1457
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION55,1513
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;55,1513
typedef Square::Encryption SquareEncryption;58,1575
typedef Square::Decryption SquareDecryption;59,1621

src/cryptopp/modes.h,9879
#define CRYPTOPP_MODES_H7,161
NAMESPACE_BEGIN(23,519
struct CipherModeDocumentation 37,1441
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE CipherModeBase : public SymmetricCipher43,1602
class CRYPTOPP_NO_VTABLE ModePolicyCommonTemplate : public CipherModeBase,94,3390
class CRYPTOPP_NO_VTABLE ModePolicyCommonTemplate : public CipherModeBase, public POLICY_INTERFACE94,3390
void ModePolicyCommonTemplate<POLICY_INTERFACE>::CipherSetKey(CipherSetKey101,3696
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE CFB_ModePolicy : public ModePolicyCommonTemplate<ModePolicyCommonTemplate111,4073
inline void CopyOrZero(133,4922
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE OFB_ModePolicy : public ModePolicyCommonTemplate<ModePolicyCommonTemplate143,5138
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE CTR_ModePolicy : public ModePolicyCommonTemplate<ModePolicyCommonTemplate160,5878
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE BlockOrientedCipherModeBase : public CipherModeBase186,7108
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE ECB_OneWay : public BlockOrientedCipherModeBase206,7942
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE CBC_ModeBase : public BlockOrientedCipherModeBase220,8674
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE CBC_CTS_Encryption : public CBC_Encryption240,9416
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE CBC_Decryption : public CBC_ModeBase261,10167
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE CBC_CTS_Decryption : public CBC_Decryption275,10547
class CipherModeFinalTemplate_CipherHolder 285,10929
	static std::string CRYPTOPP_API StaticAlgorithmName(288,11099
	CipherModeFinalTemplate_CipherHolder(291,11236
	CipherModeFinalTemplate_CipherHolder(296,11348
	CipherModeFinalTemplate_CipherHolder(301,11494
	CipherModeFinalTemplate_CipherHolder(306,11742
class CipherModeFinalTemplate_ExternalCipher 317,12204
	CipherModeFinalTemplate_ExternalCipher(320,12276
	CipherModeFinalTemplate_ExternalCipher(321,12322
	CipherModeFinalTemplate_ExternalCipher(323,12414
	std::string AlgorithmName(326,12570
CRYPTOPP_DLL_TEMPLATE_CLASS CFB_CipherTemplate<CFB_CipherTemplate330,12730
CRYPTOPP_DLL_TEMPLATE_CLASS CFB_EncryptionTemplate<CFB_EncryptionTemplate331,12844
CRYPTOPP_DLL_TEMPLATE_CLASS CFB_DecryptionTemplate<CFB_DecryptionTemplate332,12962
struct CFB_Mode 337,13176
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption,339,13229
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, ConcretePolicyHolder<ConcretePolicyHolder339,13229
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, ConcretePolicyHolder<Empty, CFB_EncryptionTemplate<AbstractPolicyHolder<CFB_CipherAbstractPolicy, CFB_ModePolicy> > > > Encryption;339,13229
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption,340,13437
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, ConcretePolicyHolder<ConcretePolicyHolder340,13437
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, ConcretePolicyHolder<Empty, CFB_DecryptionTemplate<AbstractPolicyHolder<CFB_CipherAbstractPolicy, CFB_ModePolicy> > > > Decryption;340,13437
struct CFB_Mode_ExternalCipher 345,13726
	typedef CipherModeFinalTemplate_ExternalCipher<ConcretePolicyHolder<ConcretePolicyHolder347,13794
	typedef CipherModeFinalTemplate_ExternalCipher<ConcretePolicyHolder<Empty, CFB_EncryptionTemplate<AbstractPolicyHolder<CFB_CipherAbstractPolicy, CFB_ModePolicy> > > > Encryption;347,13794
	typedef CipherModeFinalTemplate_ExternalCipher<ConcretePolicyHolder<ConcretePolicyHolder348,13975
	typedef CipherModeFinalTemplate_ExternalCipher<ConcretePolicyHolder<Empty, CFB_DecryptionTemplate<AbstractPolicyHolder<CFB_CipherAbstractPolicy, CFB_ModePolicy> > > > Decryption;348,13975
struct CFB_FIPS_Mode 355,14369
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption,357,14427
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, ConcretePolicyHolder<ConcretePolicyHolder357,14427
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, ConcretePolicyHolder<Empty, CFB_RequireFullDataBlocks<CFB_EncryptionTemplate<AbstractPolicyHolder<CFB_CipherAbstractPolicy, CFB_ModePolicy> > > > > Encryption;357,14427
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption,358,14663
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, ConcretePolicyHolder<ConcretePolicyHolder358,14663
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, ConcretePolicyHolder<Empty, CFB_RequireFullDataBlocks<CFB_DecryptionTemplate<AbstractPolicyHolder<CFB_CipherAbstractPolicy, CFB_ModePolicy> > > > > Decryption;358,14663
struct CFB_FIPS_Mode_ExternalCipher 364,15094
	typedef CipherModeFinalTemplate_ExternalCipher<ConcretePolicyHolder<ConcretePolicyHolder366,15167
	typedef CipherModeFinalTemplate_ExternalCipher<ConcretePolicyHolder<Empty, CFB_RequireFullDataBlocks<CFB_EncryptionTemplate<AbstractPolicyHolder<CFB_CipherAbstractPolicy, CFB_ModePolicy> > > > > Encryption;366,15167
	typedef CipherModeFinalTemplate_ExternalCipher<ConcretePolicyHolder<ConcretePolicyHolder367,15376
	typedef CipherModeFinalTemplate_ExternalCipher<ConcretePolicyHolder<Empty, CFB_RequireFullDataBlocks<CFB_DecryptionTemplate<AbstractPolicyHolder<CFB_CipherAbstractPolicy, CFB_ModePolicy> > > > > Decryption;367,15376
CRYPTOPP_DLL_TEMPLATE_CLASS AdditiveCipherTemplate<AdditiveCipherTemplate370,15591
struct OFB_Mode 375,15809
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption,377,15862
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, ConcretePolicyHolder<ConcretePolicyHolder377,15862
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, ConcretePolicyHolder<Empty, AdditiveCipherTemplate<AbstractPolicyHolder<AdditiveCipherAbstractPolicy, OFB_ModePolicy> > > > Encryption;377,15862
	typedef Encryption Decryption;378,16074
struct OFB_Mode_ExternalCipher 383,16188
	typedef CipherModeFinalTemplate_ExternalCipher<ConcretePolicyHolder<ConcretePolicyHolder385,16256
	typedef CipherModeFinalTemplate_ExternalCipher<ConcretePolicyHolder<Empty, AdditiveCipherTemplate<AbstractPolicyHolder<AdditiveCipherAbstractPolicy, OFB_ModePolicy> > > > Encryption;385,16256
	typedef Encryption Decryption;386,16441
CRYPTOPP_DLL_TEMPLATE_CLASS AdditiveCipherTemplate<AdditiveCipherTemplate389,16480
CRYPTOPP_DLL_TEMPLATE_CLASS CipherModeFinalTemplate_ExternalCipher<CipherModeFinalTemplate_ExternalCipher390,16602
struct CTR_Mode 395,16891
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption,397,16944
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, ConcretePolicyHolder<ConcretePolicyHolder397,16944
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, ConcretePolicyHolder<Empty, AdditiveCipherTemplate<AbstractPolicyHolder<AdditiveCipherAbstractPolicy, CTR_ModePolicy> > > > Encryption;397,16944
	typedef Encryption Decryption;398,17156
struct CTR_Mode_ExternalCipher 403,17270
	typedef CipherModeFinalTemplate_ExternalCipher<ConcretePolicyHolder<ConcretePolicyHolder405,17338
	typedef CipherModeFinalTemplate_ExternalCipher<ConcretePolicyHolder<Empty, AdditiveCipherTemplate<AbstractPolicyHolder<AdditiveCipherAbstractPolicy, CTR_ModePolicy> > > > Encryption;405,17338
	typedef Encryption Decryption;406,17523
struct ECB_Mode 412,17656
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption,414,17709
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, ECB_OneWay> Encryption;414,17709
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Decryption,415,17809
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Decryption, ECB_OneWay> Decryption;415,17809
CRYPTOPP_DLL_TEMPLATE_CLASS CipherModeFinalTemplate_ExternalCipher<CipherModeFinalTemplate_ExternalCipher418,17915
struct ECB_Mode_ExternalCipher 422,18073
	typedef CipherModeFinalTemplate_ExternalCipher<ECB_OneWay> Encryption;424,18141
	typedef Encryption Decryption;425,18214
struct CBC_Mode 430,18292
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption,432,18345
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, CBC_Encryption> Encryption;432,18345
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Decryption,433,18449
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Decryption, CBC_Decryption> Decryption;433,18449
CRYPTOPP_DLL_TEMPLATE_CLASS CipherModeFinalTemplate_ExternalCipher<CipherModeFinalTemplate_ExternalCipher436,18559
CRYPTOPP_DLL_TEMPLATE_CLASS CipherModeFinalTemplate_ExternalCipher<CipherModeFinalTemplate_ExternalCipher437,18644
struct CBC_Mode_ExternalCipher 440,18762
	typedef CipherModeFinalTemplate_ExternalCipher<CBC_Encryption> Encryption;442,18830
	typedef CipherModeFinalTemplate_ExternalCipher<CBC_Decryption> Decryption;443,18907
struct CBC_CTS_Mode 448,19054
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption,450,19111
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Encryption, CBC_CTS_Encryption> Encryption;450,19111
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Decryption,451,19219
	typedef CipherModeFinalTemplate_CipherHolder<typename CIPHER::Decryption, CBC_CTS_Decryption> Decryption;451,19219
CRYPTOPP_DLL_TEMPLATE_CLASS CipherModeFinalTemplate_ExternalCipher<CipherModeFinalTemplate_ExternalCipher454,19333
CRYPTOPP_DLL_TEMPLATE_CLASS CipherModeFinalTemplate_ExternalCipher<CipherModeFinalTemplate_ExternalCipher455,19422
struct CBC_CTS_Mode_ExternalCipher 459,19616
	typedef CipherModeFinalTemplate_ExternalCipher<CBC_CTS_Encryption> Encryption;461,19688
	typedef CipherModeFinalTemplate_ExternalCipher<CBC_CTS_Decryption> Decryption;462,19769

src/cryptopp/zdeflate.h,3651
#define CRYPTOPP_ZDEFLATE_H7,184
NAMESPACE_BEGIN(13,281
class LowFirstBitWriter 18,399
	LowFirstBitWriter(23,546
	void PutBits(25,605
	void FlushBitBuffer(26,663
	void ClearBitBuffer(27,688
	void StartCounting(29,715
	unsigned long FinishCounting(30,739
	bool m_counting;33,787
	unsigned long m_bitCount;34,806
	unsigned long m_buffer;35,834
	unsigned int m_bitsBuffered,36,860
	unsigned int m_bitsBuffered, m_bytesBuffered;36,860
	FixedSizeSecBlock<byte,byte37,908
	FixedSizeSecBlock<byte, 256> m_outputBuffer;37,908
class HuffmanEncoder43,1041
	typedef unsigned int code_t;46,1075
	typedef unsigned int value_t;47,1106
	HuffmanEncoder(50,1180
	struct Code66,1830
		unsigned int code;68,1848
		unsigned int len;69,1870
	SecBlock<Code> m_valueToCode;72,1898
class Deflator 78,2024
		MIN_DEFLATE_LEVEL 84,2194
		DEFAULT_DEFLATE_LEVEL 86,2288
		MAX_DEFLATE_LEVEL 88,2375
		MIN_LOG2_WINDOW_SIZE 93,2515
		DEFAULT_LOG2_WINDOW_SIZE 95,2583
		MAX_LOG2_WINDOW_SIZE 97,2671
	int GetDeflateLevel(121,4010
	int GetLog2WindowSize(125,4138
	virtual void WritePrestreamHeader(132,4410
	virtual void ProcessUncompressedData(133,4451
	virtual void WritePoststreamTail(135,4580
	enum {STORED STORED137,4622
	enum {STORED = 0, STATIC 137,4622
	enum {STORED = 0, STATIC = 1, DYNAMIC 137,4622
	enum {MIN_MATCH MIN_MATCH138,4668
	enum {MIN_MATCH = 3, MAX_MATCH 138,4668
	struct EncodedMatch153,5196
		unsigned literalCode 155,5222
		unsigned literalExtra 156,5251
		unsigned distanceCode 157,5281
		unsigned distanceExtra 158,5311
	int m_deflateLevel,161,5350
	int m_deflateLevel, m_log2WindowSize,161,5350
	int m_deflateLevel, m_log2WindowSize, m_compressibleDeflateLevel;161,5350
	unsigned int m_detectSkip,162,5418
	unsigned int m_detectSkip, m_detectCount;162,5418
	unsigned int DSIZE,163,5462
	unsigned int DSIZE, DMASK,163,5462
	unsigned int DSIZE, DMASK, HSIZE,163,5462
	unsigned int DSIZE, DMASK, HSIZE, HMASK,163,5462
	unsigned int DSIZE, DMASK, HSIZE, HMASK, GOOD_MATCH,163,5462
	unsigned int DSIZE, DMASK, HSIZE, HMASK, GOOD_MATCH, MAX_LAZYLENGTH,163,5462
	unsigned int DSIZE, DMASK, HSIZE, HMASK, GOOD_MATCH, MAX_LAZYLENGTH, MAX_CHAIN_LENGTH;163,5462
	bool m_headerWritten,164,5551
	bool m_headerWritten, m_matchAvailable;164,5551
	unsigned int m_dictionaryEnd,165,5593
	unsigned int m_dictionaryEnd, m_stringStart,165,5593
	unsigned int m_dictionaryEnd, m_stringStart, m_lookahead,165,5593
	unsigned int m_dictionaryEnd, m_stringStart, m_lookahead, m_minLookahead,165,5593
	unsigned int m_dictionaryEnd, m_stringStart, m_lookahead, m_minLookahead, m_previousMatch,165,5593
	unsigned int m_dictionaryEnd, m_stringStart, m_lookahead, m_minLookahead, m_previousMatch, m_previousLength;165,5593
	HuffmanEncoder m_staticLiteralEncoder,166,5704
	HuffmanEncoder m_staticLiteralEncoder, m_staticDistanceEncoder,166,5704
	HuffmanEncoder m_staticLiteralEncoder, m_staticDistanceEncoder, m_dynamicLiteralEncoder,166,5704
	HuffmanEncoder m_staticLiteralEncoder, m_staticDistanceEncoder, m_dynamicLiteralEncoder, m_dynamicDistanceEncoder;166,5704
	SecByteBlock m_byteBuffer;167,5821
	SecBlock<word16> m_head,168,5850
	SecBlock<word16> m_head, m_prev;168,5850
	FixedSizeSecBlock<FixedSizeSecBlock169,5885
	FixedSizeSecBlock<unsigned int, 286> m_literalCounts;169,5885
	FixedSizeSecBlock<FixedSizeSecBlock170,5941
	FixedSizeSecBlock<unsigned int, 30> m_distanceCounts;170,5941
	SecBlock<EncodedMatch> m_matchBuffer;171,5997
	unsigned int m_matchBufferEnd,172,6037
	unsigned int m_matchBufferEnd, m_blockStart,172,6037
	unsigned int m_matchBufferEnd, m_blockStart, m_blockLength;172,6037

src/cryptopp/dh.h,1684
#define CRYPTOPP_DH_H7,157
NAMESPACE_BEGIN(13,252
class DH_Domain 25,873
	typedef DL_SimpleKeyAgreementDomainBase<typename GROUP_PARAMETERS::Element> Base;27,970
	typedef GROUP_PARAMETERS GroupParameters;30,1065
	typedef typename GroupParameters::Element Element;31,1109
	typedef DL_KeyAgreementAlgorithm_DH<Element,Element32,1162
	typedef DL_KeyAgreementAlgorithm_DH<Element, COFACTOR_OPTION> DH_Algorithm;32,1162
	typedef DH_Domain<GROUP_PARAMETERS,GROUP_PARAMETERS33,1240
	typedef DH_Domain<GROUP_PARAMETERS, COFACTOR_OPTION> Domain;33,1240
	virtual ~DH_Domain(35,1305
	DH_Domain(38,1380
	DH_Domain(42,1495
	DH_Domain(47,1694
	DH_Domain(56,2070
	DH_Domain(67,2578
	DH_Domain(80,3219
	DH_Domain(90,3710
	DH_Domain(102,4266
	DH_Domain(116,4955
	const GroupParameters & GetGroupParameters(121,5208
	GroupParameters & AccessGroupParameters(124,5425
	void GeneratePublicKey(135,6156
	static std::string CRYPTOPP_API StaticAlgorithmName(156,6984
	std::string AlgorithmName(158,7136
	const DL_KeyAgreementAlgorithm<Element> & GetKeyAgreementAlgorithm(161,7216
	DL_GroupParameters<Element> & AccessAbstractGroupParameters(163,7338
	GroupParameters m_groupParameters;166,7435
CRYPTOPP_DLL_TEMPLATE_CLASS DH_Domain<DH_Domain169,7478
struct DH 211,9518
	typedef DH_Domain<DL_GroupParameters_GFP_DefaultSafePrime> GroupParameters;213,9592
	typedef GroupParameters::Element Element;214,9670
	virtual ~DH(216,9716
	DH(219,9796
	DH(223,9943
	DH(227,10094
	DH(234,10469
	DH(239,10667
	DH(245,10869
	void Initialize(252,11269
	void Initialize(258,11506
	void Initialize(265,11747
typedef DH_Domain<DL_GroupParameters_GFP_DefaultSafePrime> DH;270,11916

src/cryptopp/whrlpool.h,239
#define CRYPTOPP_WHIRLPOOL_H2,30
NAMESPACE_BEGIN(7,108
class Whirlpool 10,209
	static void InitState(13,317
	static void Transform(14,363
	void TruncatedFinal(15,424
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(16,472

src/cryptopp/rabin.h,1410
#define CRYPTOPP_RABIN_H7,177
NAMESPACE_BEGIN(14,290
class RabinFunction 19,427
	typedef RabinFunction ThisClass;21,495
	void Initialize(29,663
	void BERDecode(32,769
	void DEREncode(33,815
	Integer ImageBound(37,964
	bool Validate(39,1009
	const Integer& GetModulus(43,1223
	const Integer& GetQuadraticResidueModPrime1(44,1273
	const Integer& GetQuadraticResidueModPrime2(45,1341
	void SetModulus(47,1411
	void SetQuadraticResidueModPrime1(48,1458
	void SetQuadraticResidueModPrime2(49,1523
	Integer m_n,52,1602
	Integer m_n, m_r,52,1602
	Integer m_n, m_r, m_s;52,1602
class InvertibleRabinFunction 58,1752
	typedef InvertibleRabinFunction ThisClass;60,1860
	void Initialize(72,2243
	void Initialize(81,2813
	const Integer& GetPrime1(95,3438
	const Integer& GetPrime2(96,3487
	const Integer& GetMultiplicativeInverseOfPrime2ModPrime1(97,3536
	void SetPrime1(99,3619
	void SetPrime2(100,3665
	void SetMultiplicativeInverseOfPrime2ModPrime1(101,3711
	Integer m_p,104,3803
	Integer m_p, m_q,104,3803
	Integer m_p, m_q, m_u;104,3803
struct Rabin108,3857
	static std::string StaticAlgorithmName(110,3874
	typedef RabinFunction PublicKey;111,3951
	typedef InvertibleRabinFunction PrivateKey;112,3986
struct RabinES 118,4143
struct RabinSS 126,4347
typedef RabinES<OAEP<SHA1> >::Decryptor RabinDecryptor;132,4466
typedef RabinES<OAEP<SHA1> >::Encryptor RabinEncryptor;133,4523

src/cryptopp/siphash.h,1767
#define CRYPTOPP_SIPHASH_H28,1254
NAMESPACE_BEGIN(34,1351
class SipHash_Info 40,1578
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(43,1638
template <unsigned int C,52,2048
template <unsigned int C, unsigned int D,52,2048
class SipHash_Base 53,2106
	static std::string StaticAlgorithmName(56,2204
	virtual unsigned int DigestSize(60,2363
	virtual size_t MinKeyLength(62,2453
	virtual size_t MaxKeyLength(64,2542
	virtual size_t DefaultKeyLength(66,2631
	virtual size_t GetValidKeyLength(68,2728
	virtual IV_Requirement IVRequirement(70,2870
	virtual unsigned int IVSize(72,2974
	virtual unsigned int OptimalBlockSize(74,3027
	virtual unsigned int OptimalDataAlignment 76,3103
	inline void SIPROUND(87,3461
	FixedSizeSecBlock<FixedSizeSecBlock106,3890
	FixedSizeSecBlock<word64, 4> m_v;106,3890
	FixedSizeSecBlock<FixedSizeSecBlock107,3926
	FixedSizeSecBlock<word64, 2> m_k;107,3926
	FixedSizeSecBlock<FixedSizeSecBlock108,3962
	FixedSizeSecBlock<word64, 2> m_b;108,3962
	FixedSizeSecBlock<FixedSizeSecBlock111,4016
	FixedSizeSecBlock<byte, 8> m_acc;111,4016
	size_t m_idx;112,4052
template <unsigned int C=140,5340
template <unsigned int C,154,5831
template <unsigned int C, unsigned int D,154,5831
void SipHash_Base<C,D,T_128bit>::Update(Update155,5889
template <unsigned int C,203,6802
template <unsigned int C, unsigned int D,203,6802
void SipHash_Base<C,D,T_128bit>::TruncatedFinal(TruncatedFinal204,6860
template <unsigned int C,265,8221
template <unsigned int C, unsigned int D,265,8221
void SipHash_Base<C,D,T_128bit>::UncheckedSetKey(UncheckedSetKey266,8279
template <unsigned int C,282,8668
template <unsigned int C, unsigned int D,282,8668
void SipHash_Base<C,D,T_128bit>::Restart Restart283,8726

src/cryptopp/sosemanuk.cpp,1248
NAMESPACE_BEGIN(20,422
void SosemanukPolicy::CipherResynchronize(CipherResynchronize28,639
	typedef BlockGetAndPut<word32, LittleEndian> Block;35,880
#define XMUX(86,1827
word32 s_sosemanukMulTables[s_sosemanukMulTables92,2013
unsigned int SosemanukPolicy::GetAlignment(GetAlignment292,11896
unsigned int SosemanukPolicy::GetOptimalBlockSize(GetOptimalBlockSize306,12256
void SosemanukPolicy::OperateKeystream(OperateKeystream327,12813
	#define SSE2_workspace 373,14105
	#define SSE2_workspace 375,14140
#define SSE2_output	378,14188
#define SSE2_input	379,14247
#define SSE2_wordsLeft	380,14305
#define SSE2_diEnd	381,14366
#define SSE2_pMulTables	382,14424
#define SSE2_state	383,14486
#define SSE2_wordsLeft2	384,14544
#define SSE2_stateCopy	385,14606
#define	SSE2_uvStart	386,14658
#define s(416,15802
#define u(417,15849
#define v(418,15908
#define R10 420,15976
#define R11 421,15993
#define R20 422,16010
#define R21 423,16027
#define R20r 425,16075
#define R21r 426,16102
#define SSE2_STEP(428,16131
#define MUL_A(629,22059
#define MUL_A(631,22144
#define DIV_A(634,22222
#define r1(636,22296
#define r2(637,22333
#define STEP(639,22372
#define SOSEMANUK_OUTPUT(646,22625
#define OUTPUT4	652,22941

src/cryptopp/wait.cpp,1378
#  define USE_WINDOWS8_API21,624
NAMESPACE_BEGIN(36,882
WaitObjectContainer::WaitObjectContainer(47,1099
void WaitObjectContainer::Clear(Clear59,1462
inline void WaitObjectContainer::SetLastResult(SetLastResult76,1815
void WaitObjectContainer::DetectNoWait(DetectNoWait87,2015
void WaitObjectContainer::SetNoWait(SetNoWait109,2691
void WaitObjectContainer::ScheduleEvent(ScheduleEvent115,2893
struct WaitingThreadData126,3344
	bool waitingToWait,128,3373
	bool waitingToWait, terminate;128,3373
	HANDLE startWaiting,129,3406
	HANDLE startWaiting, stopWaiting;129,3406
	const HANDLE *waitHandles;waitHandles130,3442
	unsigned int count;131,3471
	HANDLE threadHandle;132,3493
	DWORD threadId;133,3516
	DWORD* error;134,3534
WaitObjectContainer::~WaitObjectContainer(~WaitObjectContainer137,3556
void WaitObjectContainer::AddHandle(AddHandle192,5117
DWORD WINAPI WaitingThread(198,5329
void WaitObjectContainer::CreateThreads(CreateThreads246,6886
bool WaitObjectContainer::Wait(Wait274,7669
void WaitObjectContainer::AddReadFd(AddReadFd403,11939
void WaitObjectContainer::AddWriteFd(AddWriteFd410,12146
bool WaitObjectContainer::Wait(Wait417,12355
std::string CallStack::Format(Format459,13343
std::string CallStackWithNr::Format(Format464,13407
std::string CallStackWithStr::Format(Format469,13522
bool Waitable::Wait(Wait474,13633

src/cryptopp/zlib.h,861
#define CRYPTOPP_ZLIB_H2,25
NAMESPACE_BEGIN(9,145
class ZlibCompressor 12,206
	ZlibCompressor(15,258
	ZlibCompressor(17,532
	unsigned int GetCompressionLevel(20,667
class ZlibDecompressor 31,916
	typedef Inflator::Err Err;34,970
	class HeaderErr 35,999
	class HeaderErr : public Err {public: HeaderErr(35,999
	class Adler32Err 36,1126
	class Adler32Err : public Err {public: Adler32Err(36,1126
	class UnsupportedAlgorithm 37,1261
	class UnsupportedAlgorithm : public Err {public: UnsupportedAlgorithm(37,1261
	class UnsupportedPresetDictionary 38,1410
	class UnsupportedPresetDictionary : public Err {public: UnsupportedPresetDictionary(38,1410
	unsigned int GetLog2WindowSize(45,1953
	unsigned int MaxPrestreamHeaderSize(48,2033
	unsigned int MaxPoststreamTailSize(51,2191
	unsigned int m_log2WindowSize;54,2282
	Adler32 m_adler32;55,2315

src/cryptopp/gf2_32.cpp,99
NAMESPACE_BEGIN(7,130
GF2_32::Element GF2_32::MultiplicativeInverse(MultiplicativeInverse46,869

src/cryptopp/blake2.h,2044
#define CRYPTOPP_BLAKE2_H19,1227
NAMESPACE_BEGIN(25,1325
struct BLAKE2_Info 32,1510
	typedef VariableKeyLength<(T_64bit ? 64 : 32),0,(T_64bit ? 64 : 32),1,SimpleKeyingInterface::NOT_RESYNCHRONIZABLE> KeyBase;34,1649
	CRYPTOPP_CONSTANT(35,1775
struct CRYPTOPP_NO_VTABLE BLAKE2_ParameterBlock54,2577
struct CRYPTOPP_NO_VTABLE BLAKE2_ParameterBlock<BLAKE2_ParameterBlock60,2698
struct CRYPTOPP_NO_VTABLE BLAKE2_ParameterBlock<BLAKE2_ParameterBlock95,3725
struct CRYPTOPP_NO_VTABLE BLAKE2_State136,4986
class BLAKE2_Base 162,5701
	typedef BLAKE2_State<W,W174,6328
	typedef BLAKE2_State<W, T_64bit> State;174,6328
	typedef BLAKE2_ParameterBlock<T_64bit> ParameterBlock;175,6370
	typedef SecBlock<State,State176,6427
	typedef SecBlock<State, AllocatorWithCleanup<AllocatorWithCleanup176,6427
	typedef SecBlock<State, AllocatorWithCleanup<State, true> > AlignedState;176,6427
	typedef SecBlock<ParameterBlock,ParameterBlock177,6503
	typedef SecBlock<ParameterBlock, AllocatorWithCleanup<AllocatorWithCleanup177,6503
	typedef SecBlock<ParameterBlock, AllocatorWithCleanup<ParameterBlock, true> > AlignedParameterBlock;177,6503
	virtual ~BLAKE2_Base(179,6608
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(183,6741
	std::string AlgorithmName(190,7228
	unsigned int DigestSize(192,7353
	unsigned int OptimalDataAlignment(193,7410
	void SetTreeMode(210,8239
	bool GetTreeMode(215,8419
	AlignedState m_state;233,9099
	AlignedParameterBlock m_block;234,9123
	AlignedSecByteBlock m_key;235,9156
	word32 m_digestSize;236,9185
	bool m_treeMode;237,9208
class BLAKE2b 249,9908
	typedef BLAKE2_Base<word64,word64252,9970
	typedef BLAKE2_Base<word64, true> ThisBase;252,9970
	typedef BLAKE2_ParameterBlock<true> ParameterBlock;253,10050
	BLAKE2b(259,10299
	BLAKE2b(270,10874
class BLAKE2s 285,11896
	typedef BLAKE2_Base<word32,word32288,11959
	typedef BLAKE2_Base<word32, false> ThisBase;288,11959
	typedef BLAKE2_ParameterBlock<false> ParameterBlock;289,12040
	BLAKE2s(295,12290
	BLAKE2s(306,12865

src/cryptopp/gf2n.cpp,3075
NAMESPACE_BEGIN(27,534
PolynomialMod2::PolynomialMod2(33,605
PolynomialMod2::PolynomialMod2(45,840
void PolynomialMod2::Randomize(Randomize51,964
PolynomialMod2 PolynomialMod2::AllOnes(AllOnes60,1210
void PolynomialMod2::SetBit(SetBit69,1527
byte PolynomialMod2::GetByte(GetByte83,1793
void PolynomialMod2::SetByte(SetByte91,1955
PolynomialMod2 PolynomialMod2::Monomial(Monomial98,2163
PolynomialMod2 PolynomialMod2::Trinomial(Trinomial105,2283
PolynomialMod2 PolynomialMod2::Pentanomial(Pentanomial114,2461
struct NewPolynomialMod2126,2714
	PolynomialMod2 * operator()(operator()128,2743
const PolynomialMod2 &PolynomialMod2::Zero(Zero134,2828
const PolynomialMod2 &PolynomialMod2::One(One139,2926
void PolynomialMod2::Decode(Decode144,3046
void PolynomialMod2::Encode(Encode150,3184
void PolynomialMod2::Decode(Decode156,3323
void PolynomialMod2::Encode(Encode168,3577
void PolynomialMod2::DEREncodeAsOctetString(DEREncodeAsOctetString174,3730
void PolynomialMod2::BERDecodeAsOctetString(BERDecodeAsOctetString181,3918
unsigned int PolynomialMod2::WordCount(WordCount190,4187
unsigned int PolynomialMod2::ByteCount(ByteCount195,4295
unsigned int PolynomialMod2::BitCount(BitCount204,4493
unsigned int PolynomialMod2::Parity(Parity213,4689
PolynomialMod2& PolynomialMod2::operator=(operator=222,4854
PolynomialMod2& PolynomialMod2::operator^=(operator^=228,4967
PolynomialMod2 PolynomialMod2::Xor(Xor235,5129
PolynomialMod2 PolynomialMod2::And(And253,5675
PolynomialMod2 PolynomialMod2::Times(Times260,5900
PolynomialMod2 PolynomialMod2::Squared(Squared273,6174
void PolynomialMod2::Divide(Divide293,6664
PolynomialMod2 PolynomialMod2::DividedBy(DividedBy318,7331
PolynomialMod2 PolynomialMod2::Modulo(Modulo325,7526
PolynomialMod2& PolynomialMod2::operator<<=(operator<<=332,7719
PolynomialMod2& PolynomialMod2::operator>>=(operator>>=403,8954
PolynomialMod2 PolynomialMod2::operator<<(operator<<439,9529
PolynomialMod2 PolynomialMod2::operator>>(operator>>445,9655
bool PolynomialMod2::operator!(operator!451,9781
bool PolynomialMod2::Equals(Equals458,9913
std::ostream& operator<<(474,10301
PolynomialMod2 PolynomialMod2::Gcd(Gcd526,11300
PolynomialMod2 PolynomialMod2::InverseMod(InverseMod531,11450
	typedef EuclideanDomainOf<PolynomialMod2> Domain;533,11533
bool PolynomialMod2::IsIrreducible(IsIrreducible537,11669
GF2NP::GF2NP(555,12005
GF2NP::Element GF2NP::SquareRoot(SquareRoot560,12178
GF2NP::Element GF2NP::HalfTrace(HalfTrace568,12326
GF2NP::Element GF2NP::SolveQuadraticEquation(SolveQuadraticEquation577,12525
GF2NT::GF2NT(604,13048
const GF2NT::Element& GF2NT::MultiplicativeInverse(MultiplicativeInverse612,13260
const GF2NT::Element& GF2NT::Multiply(Multiply757,16470
const GF2NT::Element& GF2NT::Reduced(Reduced783,17136
void GF2NP::DEREncodeElement(DEREncodeElement837,18449
void GF2NP::BERDecodeElement(BERDecodeElement842,18597
void GF2NT::DEREncode(DEREncode847,18737
void GF2NPP::DEREncode(DEREncode859,19091
GF2NP * BERDecodeGF2NP(875,19608

src/cryptopp/fipsalgt.cpp,2669
#define CRYPTOPP_DEFAULT_NO_DLL8,281
class LineBreakParser 20,482
	LineBreakParser(23,561
	size_t Put2(26,687
	byte m_lineEnd;53,1409
class TestDataParser 56,1433
	enum DataType 59,1510
	enum DataType {OTHER,OTHER59,1510
	enum DataType {OTHER, COUNT,59,1510
	enum DataType {OTHER, COUNT, KEY_T,59,1510
	enum DataType {OTHER, COUNT, KEY_T, IV,59,1510
	enum DataType {OTHER, COUNT, KEY_T, IV, INPUT,59,1510
	enum DataType {OTHER, COUNT, KEY_T, IV, INPUT, OUTPUT}OUTPUT59,1510
	TestDataParser(61,1570
	void SetEncrypt(112,3127
	void OutputData(147,3816
	void OutputData(155,3989
	void OutputData(160,4119
	void OutputData(168,4343
	void OutputData(175,4570
	void OutputData(182,4804
	void OutputData(221,5686
	void OutputData(226,5796
	void OutputGivenData(233,6040
		BlockCipher * NewBT(246,6395
		SymmetricCipher * NewMode(255,6599
	static inline void Xor(263,6833
	SecByteBlock UpdateKey(270,7026
	static inline void AssignLeftMostBits(296,7720
	void EC_KeyPair(302,7869
	void EC_SigGen(319,8441
	void EC_SigVer(339,9292
	static bool EC_PKV(369,10257
	Result * CreateRSA2(382,10690
	Result * CreateRSA(407,11448
	virtual void DoTest(423,11929
	std::vector<std::string> Tokenize(1054,31206
	bool IsolatedMessageEnd(1075,31640
	inline const SecByteBlock & GetData(1180,34301
	static SecByteBlock DecodeHex(1185,34411
	std::string m_algorithm,1192,34616
	std::string m_algorithm, m_test,1192,34616
	std::string m_algorithm, m_test, m_mode,1192,34616
	std::string m_algorithm, m_test, m_mode, m_line,1192,34616
	std::string m_algorithm, m_test, m_mode, m_line, m_bracketString,1192,34616
	std::string m_algorithm, m_test, m_mode, m_line, m_bracketString, m_trigger;1192,34616
	unsigned int m_feedbackSize,1193,34695
	unsigned int m_feedbackSize, m_blankLineTransition;1193,34695
	bool m_encrypt,1194,34749
	bool m_encrypt, m_firstLine;1194,34749
	typedef std::map<std::string,std::string1196,34782
	typedef std::map<std::string, DataType> NameToTypeMap;1196,34782
	NameToTypeMap m_nameToType;1197,34839
	typedef std::map<DataType,DataType1198,34869
	typedef std::map<DataType, std::string> TypeToNameMap;1198,34869
	TypeToNameMap m_typeToName;1199,34926
	typedef std::map<std::string,std::string1201,34958
	typedef std::map<std::string, std::string> Map;1201,34958
	Map m_data;1202,35008
	typedef std::map<DataType,DataType1203,35035
	typedef std::map<DataType, SecByteBlock> Map2;1203,35035
	Map2 m_data2;1204,35084
	int m_count;1205,35100
	AutoSeededX917RNG<AES> m_rng;1207,35117
	std::vector<unsigned int> m_compactString;1208,35149
int FIPS_140_AlgorithmTest(1211,35200
static int s_i 1293,37600

src/cryptopp/argnames.h,102
#define CRYPTOPP_ARGNAMES_H7,216
NAMESPACE_BEGIN(11,272
#define CRYPTOPP_DEFINE_NAME_STRING(15,337

src/cryptopp/bench1.cpp,552
const double CLOCK_TICKS_PER_SECOND 34,760
const double CLOCK_TICKS_PER_SECOND 36,823
double logtotal 39,883
unsigned int logcount 40,941
static const byte defaultKey[defaultKey42,971
void OutputResultBytes(45,1183
void OutputResultKeying(66,1950
void OutputResultOperations(80,2476
void BenchMark(121,3859
void BenchMark(142,4452
void BenchMark(150,4735
void BenchMark(171,5263
void BenchMarkKeying(192,5792
void BenchMarkByName2(210,6299
void BenchMarkByName(230,7271
void BenchMarkByNameKeyLess(237,7577
void BenchmarkAll(248,7962

src/cryptopp/panama.h,615
#define CRYPTOPP_PANAMA_H7,171
# define CRYPTOPP_DISABLE_PANAMA_ASM15,435
NAMESPACE_BEGIN(18,483
	typedef word32 Stage[Stage29,784
namespace Weak 113,3085
struct PanamaCipherInfo 129,3488
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(131,3582
class PanamaCipherPolicy 137,3814
	bool CipherIsRandomAccess(144,4163
	FixedSizeSecBlock<FixedSizeSecBlock148,4336
	FixedSizeSecBlock<word32, 8> m_key;148,4336
	typedef SymmetricCipherFinal<ConcretePolicyHolder<PanamaCipherPolicy<B>, AdditiveCipherTemplate<> >, PanamaCipherInfo<B> > Encryption;157,4647
	typedef Encryption Decryption;158,4784

src/cryptopp/gost.cpp,479
volatile bool GOST::Base::sTableCalculated 30,1376
word32 GOST::Base::sTable[GOST::Base::sTable31,1429
void GOST::Base::UncheckedSetKey(UncheckedSetKey33,1467
void GOST::Base::PrecalculateSTable(PrecalculateSTable42,1708
#define f(57,2009
typedef BlockGetAndPut<word32,word3261,2167
typedef BlockGetAndPut<word32, LittleEndian> Block;61,2167
void GOST::Enc::ProcessAndXorBlock(ProcessAndXorBlock63,2222
void GOST::Dec::ProcessAndXorBlock(ProcessAndXorBlock93,2867

src/cryptopp/fhmqv.h,1696
#define CRYPTOPP_FHMQV_H5,196
NAMESPACE_BEGIN(15,417
class FHMQV_Domain 24,1022
  typedef GROUP_PARAMETERS GroupParameters;27,1095
  typedef typename GroupParameters::Element Element;28,1140
  typedef FHMQV_Domain<GROUP_PARAMETERS,GROUP_PARAMETERS29,1194
  typedef FHMQV_Domain<GROUP_PARAMETERS, COFACTOR_OPTION,29,1194
  typedef FHMQV_Domain<GROUP_PARAMETERS, COFACTOR_OPTION, HASH> Domain;29,1194
  virtual ~FHMQV_Domain(31,1269
  FHMQV_Domain(33,1301
  FHMQV_Domain(35,1392
  FHMQV_Domain(38,1547
  FHMQV_Domain(43,1730
  FHMQV_Domain(48,1903
  FHMQV_Domain(53,2097
  FHMQV_Domain(58,2312
  const GroupParameters & GetGroupParameters(64,2496
  GroupParameters & AccessGroupParameters(65,2578
  CryptoParameters & AccessCryptoParameters(67,2652
  unsigned int AgreedValueLength(70,2788
  unsigned int StaticPrivateKeyLength(72,2957
  unsigned int StaticPublicKeyLength(74,3132
  void GenerateStaticPrivateKey(78,3343
  void GenerateStaticPublicKey(86,3671
  unsigned int EphemeralPrivateKeyLength(95,4042
  unsigned int EphemeralPublicKeyLength(96,4153
  void GenerateEphemeralPrivateKey(99,4299
  void GenerateEphemeralPublicKey(109,4772
  bool Agree(124,5626
  inline void Hash(242,9924
  enum KeyAgreementRole{KeyAgreementRole283,11099
  enum KeyAgreementRole{ RoleServer 283,11099
  enum KeyAgreementRole{ RoleServer = 1, RoleClient 283,11099
  DL_GroupParameters<Element> & AccessAbstractGroupParameters(285,11157
  const DL_GroupParameters<Element> & GetAbstractGroupParameters(286,11250
  GroupParameters m_groupParameters;288,11353
  KeyAgreementRole m_role;289,11391
typedef FHMQV_Domain<DL_GroupParameters_GFP_DefaultSafePrime> FHMQV;298,11881

src/cryptopp/adler32.cpp,75
NAMESPACE_BEGIN(6,113
void Adler32::TruncatedFinal(TruncatedFinal56,956

src/cryptopp/pch.h,29
#define CRYPTOPP_PCH_H7,150

src/cryptopp/xtr.h,1210
#define CRYPTOPP_XTR_H2,24
NAMESPACE_BEGIN(13,279
class GFP2Element17,366
	GFP2Element(20,397
	GFP2Element(21,416
	GFP2Element(22,488
	void Encode(25,621
	bool operator=31,769
	void swap(34,933
	static const GFP2Element & Zero(40,1007
	Integer c1,42,1046
	Integer c1, c2;42,1046
class GFP2_ONB 48,1153
	typedef F BaseField;51,1216
	GFP2_ONB(53,1241
	const Integer& GetModulus(59,1385
	GFP2Element ConvertIn(61,1451
	GFP2Element ConvertIn(67,1578
	GFP2Element ConvertOut(70,1701
	bool Equal(73,1827
	const Element& Identity(78,1960
	const Element& Add(83,2035
	const Element& Inverse(90,2200
	const Element& Double(97,2347
	const Element& Subtract(104,2491
	Element& Accumulate(111,2671
	Element& Reduce(118,2816
	bool IsUnit(125,2949
	const Element& MultiplicativeIdentity(130,3041
	const Element& Multiply(136,3189
	const Element& MultiplicativeInverse(150,3595
	const Element& Square(155,3725
	Element Exponentiate(163,4028
	const Element & PthPower(171,4290
	void RaiseToPthPower(178,4414
	const Element & SpecialOperation1(184,4501
	const Element & SpecialOperation2(196,4800
	BaseField modp;209,5335
	mutable GFP2Element result;210,5353
	mutable Integer t;211,5383

src/cryptopp/cryptlib.h,6624
#define CRYPTOPP_CRYPTLIB_H84,4778
NAMESPACE_BEGIN(95,4975
enum CipherDir 104,5303
	ENCRYPTION,106,5370
	DECRYPTION}DECRYPTION108,5433
const unsigned long INFINITE_TIME 111,5487
template <typename ENUM_TYPE,115,5696
struct EnumToType116,5738
	static ENUM_TYPE ToEnum(118,5760
enum ByteOrder 124,5981
	LITTLE_ENDIAN_ORDER 126,6040
	BIG_ENDIAN_ORDER 128,6105
typedef EnumToType<ByteOrder,ByteOrder131,6181
typedef EnumToType<ByteOrder, LITTLE_ENDIAN_ORDER> LittleEndian;131,6181
typedef EnumToType<ByteOrder,ByteOrder133,6293
typedef EnumToType<ByteOrder, BIG_ENDIAN_ORDER> BigEndian;133,6293
	enum ErrorType 145,6794
		NOT_IMPLEMENTED,147,6873
		INVALID_ARGUMENT,149,6940
		CANNOT_FLUSH,151,7052
		DATA_INTEGRITY_CHECK_FAILED,153,7133
		INVALID_DATA_FORMAT,155,7243
		IO_ERROR,157,7341
		OTHER_ERROR159,7428
class CRYPTOPP_DLL InvalidArgument : public Exception184,8308
class CRYPTOPP_DLL InvalidDataFormat : public Exception191,8542
class CRYPTOPP_DLL InvalidCiphertext : public InvalidDataFormat198,8770
class CRYPTOPP_DLL NotImplemented : public Exception205,8988
class CRYPTOPP_DLL CannotFlush : public Exception212,9220
class CRYPTOPP_DLL OS_Error : public Exception219,9417
struct CRYPTOPP_DLL DecodingResult238,10078
	bool operator==(operator==251,10707
	bool operator!=(operator!=256,11066
class CRYPTOPP_NO_VTABLE NameValuePairs279,12379
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE Clonable482,21582
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE Algorithm : public Clonable497,22035
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE SimpleKeyingInterface524,23424
	enum IV_Requirement 598,27409
		UNIQUE_IV 600,27469
		RANDOM_IV,602,27548
		UNPREDICTABLE_RANDOM_IV,604,27616
		INTERNALLY_GENERATED_IV,606,27686
		NOT_RESYNCHRONIZABLE608,27758
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE BlockTransformation : public Algorithm734,34475
	enum FlagsForAdvancedProcessBlocks 792,37697
		BT_InBlockIsCounter=794,37771
		BT_DontIncrementInOutPointers=796,37844
		BT_XorInput=798,37894
		BT_ReverseDirection=800,37964
		BT_AllowParallel=802,38004
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE StreamTransformation : public Algorithm823,39142
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE HashTransformation : public Algorithm930,44519
typedef HashTransformation HashFunction;1091,54166
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE BlockCipher : public SimpleKeyingInterface,1095,54402
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE SymmetricCipher : public SimpleKeyingInterface,1103,54799
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE MessageAuthenticationCode : public SimpleKeyingInterface,1111,55153
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE AuthenticatedSymmetricCipher : public MessageAuthenticationCode,1121,55772
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE AuthenticatedSymmetricCipher : public MessageAuthenticationCode, public StreamTransformation1121,55772
	class BadState 1129,56213
		explicit BadState(1132,56263
		explicit BadState(1133,56381
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE RandomNumberGenerator : public Algorithm1188,59939
class CRYPTOPP_NO_VTABLE Waitable1295,65303
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE BufferedTransformation : public Algorithm,1352,68834
		struct BlockingInputOnly 1470,75687
			{BlockingInputOnly(BlockingInputOnly1471,75739
		struct NoChannelSupport 1852,98907
			{NoChannelSupport(NoChannelSupport1853,98958
		struct InvalidChannelName 1855,99165
			{InvalidChannelName(InvalidChannelName1856,99219
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE GeneratableCryptoMaterial : virtual public CryptoMaterial2155,117494
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE PublicKey : virtual public CryptoMaterial2181,118826
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE PrivateKey : public GeneratableCryptoMaterial2186,118955
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE CryptoParameters : public GeneratableCryptoMaterial2191,119092
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE AsymmetricAlgorithm : public Algorithm2196,119240
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE PublicKeyAlgorithm : public AsymmetricAlgorithm2223,120298
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE PrivateKeyAlgorithm : public AsymmetricAlgorithm2249,121249
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE KeyAgreementAlgorithm : public AsymmetricAlgorithm2270,122137
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE PK_CryptoSystem2293,123268
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE PK_Encryptor : public PK_CryptoSystem,2336,125499
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE PK_Decryptor : public PK_CryptoSystem,2372,127338
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE PK_Decryptor : public PK_CryptoSystem, public PrivateKeyAlgorithm2372,127338
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE PK_MessageAccumulator : public HashTransformation2510,135230
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE PK_Signer : public PK_SignatureScheme,2527,135888
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE PK_Signer : public PK_SignatureScheme, public PrivateKeyAlgorithm2527,135888
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE PK_Verifier : public PK_SignatureScheme,2592,139919
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE PK_Verifier : public PK_SignatureScheme, public PublicKeyAlgorithm2592,139919
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE SimpleKeyAgreementDomain : public KeyAgreementAlgorithm2664,144439
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE AuthenticatedKeyAgreementDomain : public KeyAgreementAlgorithm2727,147997
class ProtocolSession2844,154254
	class ProtocolError 2848,154358
		ProtocolError(2851,154413
	class UnexpectedMethodCall 2856,154661
		UnexpectedMethodCall(2859,154723
	virtual ~ProtocolSession(2862,154807
	ProtocolSession(2864,154841
	bool GetThrowOnProtocolError(2868,155032
	void SetThrowOnProtocolError(2869,155104
	bool HasValidState(2871,155213
	void SetValidState(2883,155718
	RandomNumberGenerator *m_rng;m_rng2885,155777
	bool m_throwOnProtocolError,2888,155821
	bool m_throwOnProtocolError, m_validState;2888,155821
class KeyAgreementSession 2891,155872
	virtual ~KeyAgreementSession(2894,155936
class PasswordAuthenticatedKeyAgreementSession 2900,156095
	virtual ~PasswordAuthenticatedKeyAgreementSession(2903,156184
class PasswordAuthenticatedKeyAgreementDomain 2911,156522
	virtual ~PasswordAuthenticatedKeyAgreementDomain(2914,156612
	virtual bool ValidateDomainParameters(2917,156745
	enum RoleFlags 2923,157177
	enum RoleFlags {CLIENT=CLIENT2923,157177
	enum RoleFlags {CLIENT=1, SERVER=2923,157177
	enum RoleFlags {CLIENT=1, SERVER=2, INITIATOR=2923,157177
	enum RoleFlags {CLIENT=1, SERVER=2, INITIATOR=4, RESPONDER=2923,157177
class CRYPTOPP_DLL BERDecodeErr : public InvalidArgument2931,157488
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE ASN1Object2942,157972

src/cryptopp/iterhash.cpp,651
#define CRYPTOPP_MANUALLY_INSTANTIATE_TEMPLATES4,90
template <class T, class BASE> void IteratedHashBase<T, BASE>::Update(Update12,222
template <class T, class BASE> byte * IteratedHashBase<T, BASE>::CreateUpdateSpace(CreateUpdateSpace75,2015
template <class T, class BASE> size_t IteratedHashBase<T, BASE>::HashMultipleBlocks(HashMultipleBlocks83,2283
template <class T, class BASE> void IteratedHashBase<T, BASE>::PadLastBlock(PadLastBlock108,3105
template <class T, class BASE> void IteratedHashBase<T, BASE>::Restart(Restart125,3608
template <class T, class BASE> void IteratedHashBase<T, BASE>::TruncatedFinal(TruncatedFinal131,3729

src/cryptopp/rng.cpp,552
const word32 LC_RNG::q=27,616
const word16 LC_RNG::a=29,650
const word16 LC_RNG::r=30,696
const word32 LC_RNG::m=32,733
const word32 LC_RNG::q=33,770
const word16 LC_RNG::a=35,805
const word16 LC_RNG::r=36,836
void LC_RNG::GenerateBlock(GenerateBlock39,876
X917RNG::X917RNG(61,1295
void X917RNG::GenerateIntoBufferedTransformation(GenerateIntoBufferedTransformation91,2268
MaurerRandomnessTest::MaurerRandomnessTest(132,3547
size_t MaurerRandomnessTest::Put2(Put2139,3666
double MaurerRandomnessTest::GetTestValue(GetTestValue152,3938

src/cryptopp/algebra.h,2201
#define CRYPTOPP_ALGEBRA_H7,189
NAMESPACE_BEGIN(13,283
	typedef T Element;29,895
	typedef T Element;121,4699
	AbstractRing& operator=(operator=133,5057
	class MultiplicativeGroupT 198,7779
		const AbstractRing<T>& GetRing(201,7848
		bool Equal(204,7915
		const Element& Identity(207,8009
		const Element& Add(210,8095
		Element& Accumulate(213,8200
		const Element& Inverse(216,8304
		const Element& Subtract(219,8405
		Element& Reduce(222,8513
		const Element& Double(225,8611
		Element ScalarMultiply(228,8696
		Element CascadeScalarMultiply(231,8809
		void SimultaneousMultiply(234,8982
		const AbstractRing<T> *m_pRing;m_pRing237,9197
	bool operator<(254,9625
	typedef T Element;279,10774
template <class T> class EuclideanDomainOf 315,12190
	typedef T Element;318,12282
	EuclideanDomainOf(320,12305
	bool Equal(322,12332
	const Element& Identity(325,12407
	const Element& Add(328,12472
	Element& Accumulate(331,12563
	const Element& Inverse(334,12641
	const Element& Subtract(337,12717
	Element& Reduce(340,12813
	const Element& Double(343,12887
	const Element& MultiplicativeIdentity(346,12971
	const Element& Multiply(349,13049
	const Element& Square(352,13145
	bool IsUnit(355,13229
	const Element& MultiplicativeInverse(358,13293
	const Element& Divide(361,13406
	const Element& Mod(364,13500
	void DivisionAlgorithm(367,13591
	bool operator==(operator==370,13718
	mutable Element result;374,13827
template <class T> class QuotientRing 386,14352
	typedef T EuclideanDomain;389,14446
	typedef typename T::Element Element;390,14475
	QuotientRing(392,14516
	const EuclideanDomain & GetDomain(395,14633
	const Element& GetModulus(398,14701
	bool Equal(401,14762
	const Element& Identity(404,14918
	const Element& Add(407,14987
	Element& Accumulate(410,15084
	const Element& Inverse(413,15183
	const Element& Subtract(416,15267
	Element& Reduce(419,15374
	const Element& Double(422,15465
	bool IsUnit(425,15547
	const Element& MultiplicativeIdentity(428,15644
	const Element& Multiply(431,15741
	const Element& Square(434,15873
	bool operator==(operator==439,16046
	EuclideanDomain m_domain;443,16180
	Element m_modulus;444,16208

src/cryptopp/xtrcrypt.h,699
#define CRYPTOPP_XTRCRYPT_H2,29
NAMESPACE_BEGIN(12,212
class XTR_DH 16,275
	typedef XTR_DH ThisClass;18,351
	XTR_DH(21,390
	XTR_DH(22,458
	XTR_DH(23,536
	void DEREncode(25,586
	CryptoParameters & AccessCryptoParameters(30,862
	unsigned int AgreedValueLength(31,924
	unsigned int PrivateKeyLength(32,993
	unsigned int PublicKeyLength(33,1059
	const Integer &GetModulus(GetModulus39,1435
	const Integer &GetSubgroupOrder(GetSubgroupOrder40,1485
	const GFP2Element &GetSubgroupGenerator(GetSubgroupGenerator41,1541
	void SetModulus(43,1607
	void SetSubgroupOrder(44,1654
	void SetSubgroupGenerator(45,1707
	Integer m_p,50,1824
	Integer m_p, m_q;50,1824
	GFP2Element m_g;51,1844

src/cryptopp/misc.h,8703
#define CRYPTOPP_MISC_H8,169
		#define _interlockedbittestandset 36,820
		#define _interlockedbittestandreset 37,887
		#define _interlockedbittestandset64 38,956
		#define _interlockedbittestandreset64 39,1025
		#undef _interlockedbittestandset41,1119
		#undef _interlockedbittestandreset42,1155
		#undef _interlockedbittestandset6443,1193
		#undef _interlockedbittestandreset6444,1231
		#define CRYPTOPP_FAST_ROTATE(45,1271
		#define CRYPTOPP_FAST_ROTATE(47,1333
		#define CRYPTOPP_FAST_ROTATE(49,1400
	#define CRYPTOPP_FAST_ROTATE(53,1645
	#define CRYPTOPP_FAST_ROTATE(55,1854
	#define CRYPTOPP_FAST_ROTATE(57,1897
#define CRYPTOPP_BYTESWAP_AVAILABLE66,2058
#   define _tzcnt_u32(74,2243
#    define  _blsr_u32(77,2315
#    define _tzcnt_u64(81,2411
#     define  _blsr_u64(84,2486
#  define SIZE_MAX 102,3359
#  define SIZE_MAX 109,3710
#  define SIZE_MAX 111,3791
#  define SIZE_MAX 113,3830
NAMESPACE_BEGIN(119,3949
#define CRYPTOPP_COMPILE_ASSERT(130,4288
struct CompileAssert133,4392
	static char dummy[dummy135,4417
#define CRYPTOPP_COMPILE_ASSERT(139,4463
#define CRYPTOPP_COMPILE_ASSERT_INSTANCE(141,4621
#  define CRYPTOPP_COMPILE_ASSERT_INSTANCE(144,4715
#  define CRYPTOPP_COMPILE_ASSERT_INSTANCE(148,4915
#define CRYPTOPP_ASSERT_JOIN(153,5111
#define CRYPTOPP_DO_ASSERT_JOIN(154,5177
# define COUNTOF(168,5879
#  define COUNTOF(173,5998
#  define COUNTOF(175,6040
class CRYPTOPP_DLL Empty184,6340
class CRYPTOPP_NO_VTABLE TwoBases : public BASE1,190,6455
class CRYPTOPP_NO_VTABLE TwoBases : public BASE1, public BASE2190,6455
class CRYPTOPP_NO_VTABLE ThreeBases : public BASE1,195,6578
class CRYPTOPP_NO_VTABLE ThreeBases : public BASE1, public BASE2,195,6578
class CRYPTOPP_NO_VTABLE ThreeBases : public BASE1, public BASE2, public BASE3195,6578
class ObjectHolder205,6903
	T m_object;208,6938
class NotCopyable217,7225
	NotCopyable(220,7256
struct NewObject230,7501
	T* operator()(operator()232,7522
#define MEMORY_BARRIER 244,8180
# define MEMORY_BARRIER(247,8252
# define MEMORY_BARRIER(250,8396
# define MEMORY_BARRIER(252,8476
# define MEMORY_BARRIER(254,8569
# define MEMORY_BARRIER(256,8642
  const T & Singleton<T, F, instance>::Ref(Ref292,10561
const T & Singleton<T, F, instance>::Ref(Ref318,11244
inline void memcpy_s(366,13110
inline void memmove_s(408,15160
# define memcpy_s 434,16029
# define memmove_s 435,16067
inline void vec_swap(449,16712
inline void * memset_z(461,17198
template <class T> inline const T& STDMIN(477,17824
template <class T> inline const T& STDMAX(487,18252
template <class T1, class T2> inline const T1 UnsignedMin(512,19154
inline bool SafeConvert(526,19692
std::string IntToString(539,20048
#define RETURN_IF_NONZERO(607,22140
#define GETBYTE(610,22340
#define CRYPTOPP_GET_BYTE_AS_BYTE(615,22553
unsigned int Parity(621,22797
unsigned int BytePrecision(632,23164
unsigned int BitPrecision(654,23592
inline unsigned int TrailingZeros(679,24344
inline unsigned int TrailingZeros(710,25834
inline T Crop(737,27064
inline size_t BitsToBytes(749,27508
inline size_t BytesToWords(759,27917
inline size_t BitsToWords(769,28340
inline size_t BitsToDwords(779,28779
inline bool IsPowerOf2(818,30968
inline bool IsPowerOf2<IsPowerOf2825,31120
inline bool IsPowerOf2<IsPowerOf2832,31265
inline T1 SaturatingSubtract(847,31890
inline T1 SaturatingSubtract1(862,32591
inline T2 ModPowerOf2(875,33105
inline T1 RoundDownToMultipleOf(889,33744
inline T1 RoundUpToMultipleOf(905,34401
inline unsigned int GetAlignmentOf(922,35347
inline bool IsAlignedOn(954,36405
inline bool IsAligned(964,36903
	typedef LittleEndian NativeByteOrder;970,37030
	typedef BigEndian NativeByteOrder;972,37100
inline ByteOrder GetNativeByteOrder(985,37846
inline bool NativeByteOrderIs(993,38142
inline CipherDir GetCipherDir(1008,38889
inline void IncrementCounterByOne(1029,40078
inline void IncrementCounterByOne(1043,40805
inline void ConditionalSwap(1058,41368
inline void ConditionalSwapPointers(1070,41681
void SecureWipeBuffer(1085,42328
template<> inline void SecureWipeBuffer(1099,42882
template<> inline void SecureWipeBuffer(1113,43389
template<> inline void SecureWipeBuffer(1127,43902
template<> inline void SecureWipeBuffer(1141,44422
template<> inline void SecureWipeBuffer(1158,44882
template<> inline void SecureWipeBuffer(1165,45044
template<> inline void SecureWipeBuffer(1172,45211
template<> inline void SecureWipeBuffer(1179,45374
inline void SecureWipeArray(1192,45837
template <class T> inline T rotlFixed(1263,49769
template <class T> inline T rotrFixed(1285,50887
template <class T> inline T rotlVariable(1307,52009
template <class T> inline T rotrVariable(1325,52906
template <class T> inline T rotlMod(1340,53597
template <class T> inline T rotrMod(1354,54257
template<> inline word32 rotlFixed<rotlFixed1371,54972
template<> inline word32 rotrFixed<rotrFixed1386,55692
template<> inline word32 rotlVariable<rotlVariable1401,56414
template<> inline word32 rotrVariable<rotrVariable1415,57064
template<> inline word32 rotlMod<rotlMod1428,57628
template<> inline word32 rotrMod<rotrMod1441,58172
template<> inline word64 rotlFixed<rotlFixed1460,59008
template<> inline word64 rotrFixed<rotrFixed1475,59729
template<> inline word64 rotlVariable<rotlVariable1490,60452
template<> inline word64 rotrVariable<rotrVariable1504,61103
template<> inline word64 rotlMod<rotlMod1517,61676
template<> inline word64 rotrMod<rotrMod1530,62245
template<> inline word16 rotlFixed<rotlFixed1541,62561
template<> inline word16 rotrFixed<rotrFixed1547,62733
template<> inline word16 rotlVariable<rotlVariable1553,62905
template<> inline word16 rotrVariable<rotrVariable1558,63029
template<> inline word16 rotlMod<rotlMod1563,63153
template<> inline word16 rotrMod<rotrMod1568,63272
template<> inline byte rotlFixed<rotlFixed1573,63391
template<> inline byte rotrFixed<rotrFixed1579,63556
template<> inline byte rotlVariable<rotlVariable1585,63721
template<> inline byte rotrVariable<rotrVariable1590,63838
template<> inline byte rotlMod<rotlMod1595,63955
template<> inline byte rotrMod<rotrMod1600,64067
template<> inline word32 rotlFixed<rotlFixed1609,64260
template<> inline word32 rotrFixed<rotrFixed1615,64402
template<> inline word32 rotlVariable<rotlVariable1621,64547
template<> inline word32 rotrVariable<rotrVariable1627,64685
template<> inline word32 rotlMod<rotlMod1633,64826
template<> inline word32 rotrMod<rotrMod1638,64932
inline unsigned int GetByte(1652,65357
inline byte ByteReverse(1663,65738
inline word16 ByteReverse(1672,66043
inline word32 ByteReverse(1687,66551
inline word64 ByteReverse(1712,67574
inline byte BitReverse(1733,68476
inline word16 BitReverse(1743,68843
inline word32 BitReverse(1754,69301
inline word64 BitReverse(1765,69783
inline T BitReverse(1784,70696
inline T ConditionalByteReverse(1807,71478
void ByteReverse(1848,73000
inline void ConditionalByteReverse(1870,73969
inline void GetUserKey(1879,74224
inline byte UnalignedGetWordNonTemplate(1889,74602
inline word16 UnalignedGetWordNonTemplate(1895,74746
inline word32 UnalignedGetWordNonTemplate(1902,74951
inline word64 UnalignedGetWordNonTemplate(1909,75296
inline void UnalignedbyteNonTemplate(1932,75911
inline void UnalignedbyteNonTemplate(1938,76110
inline void UnalignedbyteNonTemplate(1968,76840
inline void UnalignedbyteNonTemplate(2006,78042
inline T GetWord(2078,81055
inline void GetWord(2107,82229
inline void PutWord(2123,82959
template <class T, class B, bool A=2152,84292
	inline GetBlock<T, B, A> & operator()(operator()2166,84693
template <class T, class B, bool A=2194,85745
	inline PutBlock<T, B, A> & operator()(operator()2209,86229
template <class T, class B, bool GA=2232,87001
	typedef PutBlock<T, B, PA> Put;2237,87285
std::string WordToString(2241,87345
T StringToWord(2250,87563
template<> struct SafeShifter<SafeShifter2272,88615
	static inline T RightShift(2280,88875
	static inline T LeftShift(2292,89225
template<> struct SafeShifter<SafeShifter2303,89587
	static inline T RightShift(2311,89872
	static inline T LeftShift(2322,90208
template <unsigned int bits,2337,90797
inline T SafeRightShift(2338,90836
template <unsigned int bits,2352,91436
inline T SafeLeftShift(2353,91475
#define CRYPTOPP_BLOCK_1(2360,91663
#define CRYPTOPP_BLOCK_2(2361,91830
#define CRYPTOPP_BLOCK_3(2362,91997
#define CRYPTOPP_BLOCK_4(2363,92164
#define CRYPTOPP_BLOCK_5(2364,92331
#define CRYPTOPP_BLOCK_6(2365,92498
#define CRYPTOPP_BLOCK_7(2366,92665
#define CRYPTOPP_BLOCK_8(2367,92832
#define CRYPTOPP_BLOCKS_END(2368,92999

src/cryptopp/serpent.h,524
#define CRYPTOPP_SERPENT_H7,169
NAMESPACE_BEGIN(12,245
struct Serpent_Info 16,344
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(18,461
class Serpent 24,683
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION48,1329
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;48,1329
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION49,1385
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;49,1385
typedef Serpent::Encryption SerpentEncryption;52,1447
typedef Serpent::Decryption SerpentDecryption;53,1495

src/cryptopp/3way.cpp,532
NAMESPACE_BEGIN(8,190
	const word32 START_E 20,409
	const word32 START_D 21,486
static inline word32 reverseBits(24,568
#define mu(31,794
#define pi_gamma_pi(39,948
#define theta(50,1250
#define rho(62,1646
void ThreeWay::Base::UncheckedSetKey(UncheckedSetKey68,1746
void ThreeWay::Enc::ProcessAndXorBlock(ProcessAndXorBlock87,2299
	typedef BlockGetAndPut<word32, BigEndian> Block;89,2407
void ThreeWay::Dec::ProcessAndXorBlock(ProcessAndXorBlock114,2862
	typedef BlockGetAndPut<word32, LittleEndian> Block;116,2970

src/cryptopp/resource.h,159
#define _APS_NEXT_RESOURCE_VALUE 10,212
#define _APS_NEXT_COMMAND_VALUE 11,257
#define _APS_NEXT_CONTROL_VALUE 12,304
#define _APS_NEXT_SYMED_VALUE 13,350

src/cryptopp/gfpcrypt.h,4991
#define CRYPTOPP_GFPCRYPT_H8,276
NAMESPACE_BEGIN(28,634
	typedef DL_GroupParameters_IntegerBased ThisClass;36,956
	typedef DL_GroupParameters_IntegerBasedImpl<GROUP_PRECOMP, BASE_PRECOMP> ThisClass;122,4921
	typedef typename GROUP_PRECOMP::Element 125,5018
	bool operator==(operator==148,6179
	bool operator!=(operator!=150,6420
CRYPTOPP_DLL_TEMPLATE_CLASS DL_GroupParameters_IntegerBasedImpl<DL_GroupParameters_IntegerBasedImpl154,6557
class CRYPTOPP_DLL DL_GroupParameters_GFP : public DL_GroupParameters_IntegerBasedImpl<DL_GroupParameters_IntegerBasedImpl158,6717
	typedef NoCofactorMultiplication DefaultCofactorOption;186,7844
class DL_Algorithm_GDSA 198,8198
	CRYPTOPP_STATIC_CONSTEXPR const char* CRYPTOPP_API StaticAlgorithmName(201,8280
	virtual ~DL_Algorithm_GDSA(203,8378
	void Sign(205,8414
	bool Verify(214,8715
class DL_Algorithm_DSA_RFC6979 236,9651
	CRYPTOPP_STATIC_CONSTEXPR const char* CRYPTOPP_API StaticAlgorithmName(239,9765
	virtual ~DL_Algorithm_DSA_RFC6979(241,9866
	bool IsProbabilistic(243,9909
	bool IsDeterministic(245,9959
	Integer GenerateRandom(249,10031
	inline unsigned int BitCount(336,12287
	Integer bits2int(344,12509
	SecByteBlock int2octets(357,12850
	SecByteBlock bits2octets(384,13551
	mutable H m_hash;392,13777
	mutable HMAC<H> m_hmac;393,13797
class DL_Algorithm_GDSA_ISO15946 402,14172
	CRYPTOPP_STATIC_CONSTEXPR const char* CRYPTOPP_API StaticAlgorithmName(405,14263
	virtual ~DL_Algorithm_GDSA_ISO15946(407,14366
	void Sign(409,14411
	bool Verify(419,14798
CRYPTOPP_DLL_TEMPLATE_CLASS DL_Algorithm_GDSA<DL_Algorithm_GDSA433,15313
CRYPTOPP_DLL_TEMPLATE_CLASS DL_Algorithm_DSA_RFC6979<DL_Algorithm_DSA_RFC6979434,15370
CRYPTOPP_DLL_TEMPLATE_CLASS DL_Algorithm_DSA_RFC6979<DL_Algorithm_DSA_RFC6979435,15440
CRYPTOPP_DLL_TEMPLATE_CLASS DL_Algorithm_DSA_RFC6979<DL_Algorithm_DSA_RFC6979436,15512
CRYPTOPP_DLL_TEMPLATE_CLASS DL_Algorithm_DSA_RFC6979<DL_Algorithm_DSA_RFC6979437,15584
CRYPTOPP_DLL_TEMPLATE_CLASS DL_Algorithm_DSA_RFC6979<DL_Algorithm_DSA_RFC6979438,15656
class DL_Algorithm_NR 444,15845
	CRYPTOPP_STATIC_CONSTEXPR const char* CRYPTOPP_API StaticAlgorithmName(447,15925
	virtual ~DL_Algorithm_NR(449,16017
	void Sign(451,16051
	bool Verify(459,16310
class DL_PublicKey_GFP 475,17008
	virtual ~DL_PublicKey_GFP(478,17074
	void Initialize(483,17232
	void Initialize(490,17537
	void Initialize(498,17863
	void BERDecodePublicKey(502,18057
	void DEREncodePublicKey(504,18167
class DL_PrivateKey_GFP 512,18433
	virtual ~DL_PrivateKey_GFP(515,18501
	void Initialize(523,18922
	void Initialize(533,19435
	void Initialize(544,20022
	void Initialize(550,20356
	void Initialize(557,20666
	void Initialize(565,20997
struct DL_SignatureKeys_GFP571,21283
	typedef DL_GroupParameters_GFP GroupParameters;573,21315
	typedef DL_PublicKey_GFP<GroupParameters> PublicKey;574,21365
	typedef DL_PrivateKey_GFP<GroupParameters> PrivateKey;575,21420
struct DL_CryptoKeys_GFP580,21586
	typedef DL_GroupParameters_GFP_DefaultSafePrime GroupParameters;582,21615
	typedef DL_PublicKey_GFP<GroupParameters> PublicKey;583,21682
	typedef DL_PrivateKey_GFP<GroupParameters> PrivateKey;584,21737
class DL_PublicKey_GFP_OldFormat 593,22122
	virtual ~DL_PublicKey_GFP_OldFormat(596,22182
	void BERDecode(598,22227
	void DEREncode(620,22668
class DL_PrivateKey_GFP_OldFormat 638,23398
	virtual ~DL_PrivateKey_GFP_OldFormat(641,23459
	void BERDecode(643,23505
	void DEREncode(666,24013
struct GDSA 685,24773
struct NR 698,25098
class CRYPTOPP_DLL DL_GroupParameters_DSA : public DL_GroupParameters_GFP710,25404
	enum {MIN_PRIME_LENGTH MIN_PRIME_LENGTH724,26156
	enum {MIN_PRIME_LENGTH = 1024, MAX_PRIME_LENGTH 724,26156
	enum {MIN_PRIME_LENGTH = 1024, MAX_PRIME_LENGTH = 3072, PRIME_LENGTH_MULTIPLE 724,26156
struct DL_Keys_DSA733,26363
	typedef DL_PublicKey_GFP<DL_GroupParameters_DSA> PublicKey;735,26386
	typedef DL_PrivateKey_WithSignaturePairwiseConsistencyTest<DL_PrivateKey_GFP<DL_PrivateKey_GFP736,26448
	typedef DL_PrivateKey_WithSignaturePairwiseConsistencyTest<DL_PrivateKey_GFP<DL_GroupParameters_DSA>, DSA2<SHA> > PrivateKey;736,26448
class DSA2 746,26989
	static std::string CRYPTOPP_API StaticAlgorithmName(754,27132
struct DSA_RFC6979 763,27532
	static std::string CRYPTOPP_API StaticAlgorithmName(770,27700
typedef DSA2<SHA1> DSA;774,27886
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PublicKey_GFP<DL_PublicKey_GFP776,27913
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PrivateKey_GFP<DL_PrivateKey_GFP777,27984
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PrivateKey_WithSignaturePairwiseConsistencyTest<DL_PrivateKey_WithSignaturePairwiseConsistencyTest778,28056
template <class MAC, bool DHAES_MODE,794,29406
template <class MAC, bool DHAES_MODE, bool LABEL_OCTETS=794,29406
template <class T, bool DHAES_MODE,877,32313
class DL_KeyDerivationAlgorithm_P1363 878,32361
	virtual ~DL_KeyDerivationAlgorithm_P1363(881,32450
	bool ParameterSupported(883,32500
	void Derive(884,32611

src/cryptopp/nbtheory.cpp,1623
struct NewPrimeTable25,409
	std::vector<word16> * operator()(operator()27,434
const word16 * GetPrimeTable(55,1113
bool IsSmallPrime(62,1335
bool TrialDivision(73,1653
bool SmallDivisorsTest(91,2061
bool IsFermatProbablePrime(98,2261
bool IsStrongProbablePrime(107,2451
bool RabinMillerTest(140,3082
bool IsLucasProbablePrime(157,3405
bool IsStrongLucasProbablePrime(184,3823
struct NewLastSmallPrimeSquared231,4582
	Integer * operator()(operator()233,4618
bool IsPrime(239,4723
bool VerifyPrime(249,5024
unsigned int PrimeSearchInterval(257,5252
static inline bool FastProbablePrimeTest(262,5339
AlgorithmParameters MakeParametersForTwoPrimesOfEqualSize(267,5444
class PrimeSieve288,5990
	Integer m_first,298,6358
	Integer m_first, m_last,298,6358
	Integer m_first, m_last, m_step;298,6358
	signed int m_delta;299,6393
	word m_next;300,6415
	std::vector<bool> m_sieve;301,6430
PrimeSieve::PrimeSieve(304,6465
bool PrimeSieve::NextCandidate(NextCandidate310,6666
void PrimeSieve::SieveSingle(SieveSingle334,7162
void PrimeSieve::DoSieve(DoSieve348,7576
bool FirstPrime(381,8544
static bool ProvePrime(445,10153
Integer MihailescuProvablePrime(472,10978
Integer MaurerProvablePrime(512,12170
Integer CRT(555,13456
Integer ModularSquareRoot(574,13926
bool SolveModularQuadraticEquation(623,14703
Integer ModularRoot(648,15422
Integer ModularRoot(663,15819
int Jacobi(787,17733
Integer Lucas(814,18138
Integer InverseLucas(1000,21687
unsigned int FactoringWorkFactor(1021,22180
unsigned int DiscreteLogWorkFactor(1029,22488
void PrimeAndGenerator::Generate(Generate1038,22794

src/cryptopp/poly1305.cpp,478
#define CONSTANT_TIME_CARRY(13,398
void Poly1305_Base<T>::UncheckedSetKey(UncheckedSetKey16,511
void Poly1305_Base<T>::Update(Update52,1679
void Poly1305_Base<T>::HashBlocks(HashBlocks93,2423
void Poly1305_Base<T>::TruncatedFinal(TruncatedFinal166,4455
void Poly1305_Base<T>::HashFinal(HashFinal190,4917
void Poly1305_Base<T>::Resynchronize(Resynchronize243,6508
void Poly1305_Base<T>::GetNextIV(GetNextIV251,6849
void Poly1305_Base<T>::Restart(Restart257,6985

src/cryptopp/misc.cpp,276
NAMESPACE_BEGIN(26,538
void xorbuf(61,1290
bool VerifyBufsEqual(96,2217
std::string StringNarrow(136,3205
void CallNewHandler(200,4809
void * AlignedAllocate(217,5098
void AlignedDeallocate(243,5804
void * UnalignedAllocate(257,6021
void UnalignedDeallocate(265,6149

src/cryptopp/emsa2.cpp,23
NAMESPACE_BEGIN(8,137

src/cryptopp/asn.h,3115
#define CRYPTOPP_ASN_H7,173
NAMESPACE_BEGIN(23,523
enum ASNTag27,625
	BOOLEAN 29,641
	INTEGER 30,662
	BIT_STRING	31,683
	OCTET_STRING	32,706
	TAG_NULL	33,730
	OBJECT_IDENTIFIER	34,751
	OBJECT_DESCRIPTOR	35,779
	EXTERNAL	36,807
	REAL	37,828
	ENUMERATED	38,846
	UTF8_STRING	39,869
	SEQUENCE	40,893
	SET 41,914
	NUMERIC_STRING	42,932
	PRINTABLE_STRING 43,958
	T61_STRING	44,986
	VIDEOTEXT_STRING 45,1009
	IA5_STRING	46,1037
	UTC_TIME 47,1060
	GENERALIZED_TIME 48,1082
	GRAPHIC_STRING	49,1110
	VISIBLE_STRING	50,1136
	GENERAL_STRING	51,1162
enum ASNIdFlag56,1266
	UNIVERSAL 58,1285
	PRIMITIVE 61,1379
	CONSTRUCTED 62,1409
	APPLICATION 63,1439
	CONTEXT_SPECIFIC 64,1469
	PRIVATE 65,1499
inline void BERDecodeError(69,1568
class CRYPTOPP_DLL UnknownOID : public BERDecodeErr72,1702
class CRYPTOPP_DLL OID166,6203
	inline OID & operator+=(operator+=182,6615
class EncodedObjectFilter 212,7661
	enum Flag 215,7716
	enum Flag {PUT_OBJECTS=PUT_OBJECTS215,7716
	enum Flag {PUT_OBJECTS=1, PUT_MESSANGE_END_AFTER_EACH_OBJECT=215,7716
	enum Flag {PUT_OBJECTS=1, PUT_MESSANGE_END_AFTER_EACH_OBJECT=2, PUT_MESSANGE_END_AFTER_ALL_OBJECTS=215,7716
	enum Flag {PUT_OBJECTS=1, PUT_MESSANGE_END_AFTER_EACH_OBJECT=2, PUT_MESSANGE_END_AFTER_ALL_OBJECTS=4, PUT_MESSANGE_SERIES_END_AFTER_ALL_OBJECTS=215,7716
	virtual ~EncodedObjectFilter(217,7868
	unsigned int GetNumberOfCompletedObjects(230,8420
	unsigned long GetPositionOfObject(231,8498
	word32 m_flags;236,8639
	unsigned int m_nObjects,237,8657
	unsigned int m_nObjects, m_nCurrentObject,237,8657
	unsigned int m_nObjects, m_nCurrentObject, m_level;237,8657
	std::vector<unsigned int> m_positions;238,8711
	ByteQueue m_queue;239,8752
	enum State 240,8773
	enum State {IDENTIFIER,IDENTIFIER240,8773
	enum State {IDENTIFIER, LENGTH,240,8773
	enum State {IDENTIFIER, LENGTH, BODY,240,8773
	enum State {IDENTIFIER, LENGTH, BODY, TAIL,240,8773
	enum State {IDENTIFIER, LENGTH, BODY, TAIL, ALL_DONE}ALL_DONE240,8773
	enum State {IDENTIFIER, LENGTH, BODY, TAIL, ALL_DONE} m_state;240,8773
	byte m_id;241,8838
	lword m_lengthRemaining;242,8851
class CRYPTOPP_DLL BERSequenceDecoder : public BERGeneralDecoder303,10961
class CRYPTOPP_DLL DERSequenceEncoder : public DERGeneralEncoder313,11362
class CRYPTOPP_DLL BERSetDecoder : public BERGeneralDecoder323,11762
class CRYPTOPP_DLL DERSetEncoder : public DERGeneralEncoder333,12128
class ASNOptional 345,12565
	void BERDecode(353,12861
	void DEREncode(362,13130
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE ASN1CryptoMaterial : public ASN1Object,374,13517
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE ASN1CryptoMaterial : public ASN1Object, public BASE374,13517
class CRYPTOPP_DLL X509PublicKey : public ASN1CryptoMaterial<ASN1CryptoMaterial392,14178
class CRYPTOPP_DLL PKCS8PrivateKey : public ASN1CryptoMaterial<ASN1CryptoMaterial415,15186
size_t DEREncodeUnsigned(455,16910
void BERDecodeUnsigned(491,17971
inline bool operator==(operator==558,20306
inline bool operator!=(operator!=560,20427
inline bool operator<(562,20548
inline ::CryptoPP::OID operator+(564,20752

src/cryptopp/shacal2.cpp,469
#define S0(16,340
#define S1(17,404
#define s0(18,468
#define s1(19,523
#define Ch(21,582
#define Maj(22,615
#define R(26,757
#define P(31,960
NAMESPACE_BEGIN(P12,265
typedef BlockGetAndPut<word32,word3253,1471
typedef BlockGetAndPut<word32, BigEndian> Block;53,1471
void SHACAL2::Enc::ProcessAndXorBlock(ProcessAndXorBlock55,1523
void SHACAL2::Dec::ProcessAndXorBlock(ProcessAndXorBlock87,2256
const word32 SHACAL2::Base::K[SHACAL2::Base::K120,3081

src/cryptopp/shacal2.h,524
#define CRYPTOPP_SHACAL2_H7,169
NAMESPACE_BEGIN(12,245
struct SHACAL2_Info 16,344
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(18,434
class SHACAL2 24,659
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION50,1335
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;50,1335
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION51,1391
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;51,1391
typedef SHACAL2::Encryption SHACAL2Encryption;54,1453
typedef SHACAL2::Decryption SHACAL2Decryption;55,1501

src/cryptopp/blowfish.h,533
#define CRYPTOPP_BLOWFISH_H7,173
NAMESPACE_BEGIN(12,250
struct Blowfish_Info 16,351
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(18,464
class Blowfish 26,713
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION48,1547
	typedef BlockCipherFinal<ENCRYPTION, Base> Encryption;48,1547
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION49,1604
	typedef BlockCipherFinal<DECRYPTION, Base> Decryption;49,1604
typedef Blowfish::Encryption BlowfishEncryption;52,1667
typedef Blowfish::Decryption BlowfishDecryption;53,1717

src/cryptopp/seal.h,316
#define CRYPTOPP_SEAL_H7,154
NAMESPACE_BEGIN(12,229
struct SEAL_Info 18,402
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(20,502
	typedef SymmetricCipherFinal<ConcretePolicyHolder<SEAL_Policy<B>, AdditiveCipherTemplate<> >, SEAL_Info<B> > Encryption;52,1782
	typedef Encryption Decryption;53,1905

src/cryptopp/algparam.h,2766
#define CRYPTOPP_ALGPARAM_H9,194
NAMESPACE_BEGIN(25,516
class ConstByteArrayParameter29,658
	ConstByteArrayParameter(37,973
	ConstByteArrayParameter(49,1498
	template <class T> ConstByteArrayParameter(61,2012
	void Assign(74,2613
	const byte *begin(begin89,3005
	const byte *end(end91,3143
	size_t size(93,3264
	bool m_deepCopy;96,3345
	const byte *m_data;m_data97,3364
	size_t m_size;98,3386
	SecByteBlock m_block;99,3403
class ByteArrayParameter104,3541
	ByteArrayParameter(110,3707
	ByteArrayParameter(115,3885
	byte *begin(begin119,4040
	byte *end(end121,4141
	size_t size(123,4227
	byte *m_data;m_data126,4278
	size_t m_size;127,4294
class CRYPTOPP_DLL CombinedNameValuePairs : public NameValuePairs135,4670
class GetValueHelperClass152,5282
	GetValueHelperClass(155,5321
	operator bool(operator bool184,6537
	GetValueHelperClass<GetValueHelperClass187,6602
	GetValueHelperClass<T,BASE> & operator()(operator()187,6602
	GetValueHelperClass<GetValueHelperClass200,7014
	GetValueHelperClass<T,BASE> &Assignable(Assignable200,7014
	const T *m_pObject;m_pObject216,7588
	const char *m_name;m_name217,7610
	const std::type_info *m_valueType;m_valueType218,7632
	void *m_pValue;m_pValue219,7669
	bool m_found,220,7687
	bool m_found, m_getValueNames;220,7687
GetValueHelperClass<T, BASE> GetValueHelper(224,7758
GetValueHelperClass<T, T> GetValueHelper(230,8040
class AssignFromHelperClass238,8391
	AssignFromHelperClass(241,8432
	AssignFromHelperClass & operator()(operator()251,8722
	AssignFromHelperClass & operator()(operator()264,9075
	T *m_pObject;m_pObject280,9616
	const NameValuePairs &m_source;m_source281,9632
	bool m_done;282,9666
AssignFromHelperClass<T, BASE> AssignFromHelper(286,9719
AssignFromHelperClass<T, T> AssignFromHelper(292,9896
typedef bool (CRYPTOPP_API * PAssignIntToInteger)302,10214
	class ParameterNotUsed 314,10704
		ParameterNotUsed(317,10762
class AlgorithmParametersTemplate 373,12686
	AlgorithmParametersTemplate(382,13143
	void AssignValue(387,13305
# undef new399,13808
	void MoveInto(402,13831
	T m_value;413,14104
CRYPTOPP_DLL_TEMPLATE_CLASS AlgorithmParametersTemplate<AlgorithmParametersTemplate416,14123
CRYPTOPP_DLL_TEMPLATE_CLASS AlgorithmParametersTemplate<AlgorithmParametersTemplate417,14187
CRYPTOPP_DLL_TEMPLATE_CLASS AlgorithmParametersTemplate<AlgorithmParametersTemplate418,14250
	AlgorithmParameters & operator()(operator()456,15925
	AlgorithmParameters & operator()(operator()470,16517
typedef AlgorithmParameters MakeParameters;495,17664
AlgorithmParameters MakeParameters(498,17736
#define CRYPTOPP_GET_FUNCTION_ENTRY(504,17911
#define CRYPTOPP_SET_FUNCTION_ENTRY(505,17993
#define CRYPTOPP_SET_FUNCTION_ENTRY2(506,18075

src/cryptopp/eccrypto.h,7839
#define CRYPTOPP_ECCRYPTO_H8,274
NAMESPACE_BEGIN(25,583
class DL_GroupParameters_EC 32,858
	typedef DL_GroupParameters_EC<EC> ThisClass;34,945
	typedef EC EllipticCurve;37,1003
	typedef typename EllipticCurve::Point Point;38,1031
	typedef Point Element;39,1078
	typedef IncompatibleCofactorMultiplication DefaultCofactorOption;40,1103
	virtual ~DL_GroupParameters_EC(42,1173
	DL_GroupParameters_EC(45,1258
	DL_GroupParameters_EC(49,1411
	DL_GroupParameters_EC(57,1697
	DL_GroupParameters_EC(62,1995
	void Initialize(71,2415
	const DL_FixedBasePrecomputation<Element> & GetBasePrecomputation(94,3403
	DL_FixedBasePrecomputation<Element> & AccessBasePrecomputation(95,3501
	const Integer & GetSubgroupOrder(96,3590
	bool FastSubgroupCheckAvailable(100,3880
	void EncodeElement(101,3938
	virtual unsigned int GetEncodedElementSize(108,4175
	Element DecodeElement(115,4387
	Integer GetMaxExponent(125,4777
	bool IsIdentity(126,4841
	static std::string CRYPTOPP_API StaticAlgorithmNamePrefix(128,5049
	void SetPointCompression(145,5674
	bool GetPointCompression(146,5741
	void SetEncodeAsOID(148,5799
	bool GetEncodeAsOID(149,5870
	const EllipticCurve& GetCurve(151,5926
	bool operator==(operator==153,6017
	unsigned int FieldElementLength(163,6562
	unsigned int ExponentLength(164,6659
	OID m_oid;166,6725
	Integer m_n;167,6793
	mutable Integer m_k;168,6832
	mutable bool m_compress,169,6868
	mutable bool m_compress, m_encodeAsOID;169,6868
class DL_PublicKey_EC 176,7083
	typedef typename EC::Point Element;179,7172
	virtual ~DL_PublicKey_EC(181,7212
	void Initialize(187,7471
	void Initialize(196,7922
class DL_PrivateKey_EC 208,8416
	typedef typename EC::Point Element;211,8507
	virtual ~DL_PrivateKey_EC(213,8547
	void Initialize(219,8813
	void Initialize(228,9272
	void Initialize(237,9821
	void Initialize(248,10389
	typedef DH_Domain<DL_GroupParameters_EC<EC>, COFACTOR_OPTION> Domain;264,11160
	typedef MQV_Domain<DL_GroupParameters_EC<EC>, COFACTOR_OPTION> Domain;275,11674
	typedef HMQV_Domain<DL_GroupParameters_EC<EC>, COFACTOR_OPTION, HASH> Domain;287,12349
typedef ECHMQV< ECP,290,12435
typedef ECHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption,DefaultCofactorOption290,12435
typedef ECHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption,   SHA1 >::Domain ECHMQV160;290,12435
typedef ECHMQV< ECP,291,12538
typedef ECHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption,DefaultCofactorOption291,12538
typedef ECHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption, SHA256 >::Domain ECHMQV256;291,12538
typedef ECHMQV< ECP,292,12641
typedef ECHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption,DefaultCofactorOption292,12641
typedef ECHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption, SHA384 >::Domain ECHMQV384;292,12641
typedef ECHMQV< ECP,293,12744
typedef ECHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption,DefaultCofactorOption293,12744
typedef ECHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption, SHA512 >::Domain ECHMQV512;293,12744
	typedef FHMQV_Domain<DL_GroupParameters_EC<EC>, COFACTOR_OPTION, HASH> Domain;305,13508
typedef ECFHMQV< ECP,308,13595
typedef ECFHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption,DefaultCofactorOption308,13595
typedef ECFHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption,   SHA1 >::Domain ECFHMQV160;308,13595
typedef ECFHMQV< ECP,309,13700
typedef ECFHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption,DefaultCofactorOption309,13700
typedef ECFHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption, SHA256 >::Domain ECFHMQV256;309,13700
typedef ECFHMQV< ECP,310,13805
typedef ECFHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption,DefaultCofactorOption310,13805
typedef ECFHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption, SHA384 >::Domain ECFHMQV384;310,13805
typedef ECFHMQV< ECP,311,13910
typedef ECFHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption,DefaultCofactorOption311,13910
typedef ECFHMQV< ECP, DL_GroupParameters_EC< ECP >::DefaultCofactorOption, SHA512 >::Domain ECFHMQV512;311,13910
struct DL_Keys_EC317,14148
	typedef DL_PublicKey_EC<EC> PublicKey;319,14170
	typedef DL_PrivateKey_EC<EC> PrivateKey;320,14211
struct DL_Keys_ECDSA331,14469
	typedef DL_PublicKey_EC<EC> PublicKey;333,14494
	typedef DL_PrivateKey_WithSignaturePairwiseConsistencyTest<DL_PrivateKey_EC<DL_PrivateKey_EC334,14535
	typedef DL_PrivateKey_WithSignaturePairwiseConsistencyTest<DL_PrivateKey_EC<EC>, ECDSA<ECDSA334,14535
	typedef DL_PrivateKey_WithSignaturePairwiseConsistencyTest<DL_PrivateKey_EC<EC>, ECDSA<EC, SHA256> > PrivateKey;334,14535
class DL_Algorithm_ECDSA 341,14804
  CRYPTOPP_STATIC_CONSTEXPR const char* CRYPTOPP_API StaticAlgorithmName(344,14889
class DL_Algorithm_ECDSA_RFC6979 354,15391
  CRYPTOPP_STATIC_CONSTEXPR const char* CRYPTOPP_API StaticAlgorithmName(357,15494
class DL_Algorithm_ECNR 364,15747
  CRYPTOPP_STATIC_CONSTEXPR const char* CRYPTOPP_API StaticAlgorithmName(367,15829
struct ECDSA 376,16195
struct ECDSA_RFC6979 387,16713
	static std::string CRYPTOPP_API StaticAlgorithmName(394,16882
class DL_PrivateKey_ECGDSA_ISO15946 419,17698
	typedef typename EC::Point Element;422,17802
	virtual ~DL_PrivateKey_ECGDSA_ISO15946(424,17842
	void Initialize(430,18121
	void Initialize(439,18580
	void Initialize(448,19129
	void Initialize(459,19697
	virtual void MakePublicKey(462,19864
	virtual bool GetVoidValue(470,20234
	virtual void AssignFrom(476,20488
class DL_PublicKey_ECGDSA_ISO15946 493,21055
	typedef DL_PublicKey_ECGDSA_ISO15946<EC> ThisClass;495,21148
	typedef typename EC::Point Element;498,21213
	virtual ~DL_PublicKey_ECGDSA_ISO15946(500,21253
	void Initialize(506,21525
	void Initialize(515,21976
	virtual void AssignFrom(518,22148
	virtual void SetPublicElement(532,22539
struct DL_Keys_ECGDSA_ISO15946546,23087
	typedef DL_PublicKey_ECGDSA_ISO15946<EC> PublicKey;548,23122
	typedef DL_PrivateKey_ECGDSA_ISO15946<EC> PrivateKey;549,23176
class DL_Algorithm_ECGDSA_ISO15946 558,23445
  CRYPTOPP_STATIC_CONSTEXPR const char* CRYPTOPP_API StaticAlgorithmName(561,23549
struct ECGDSA 572,24083
	static std::string CRYPTOPP_API StaticAlgorithmName(578,24230
CRYPTOPP_DLL_TEMPLATE_CLASS DL_GroupParameters_EC<DL_GroupParameters_EC639,28282
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PublicKeyImpl<DL_PublicKeyImpl640,28340
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PublicKeyImpl<DL_PublicKeyImpl641,28416
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PublicKey_EC<DL_PublicKey_EC642,28493
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PublicKey_EC<DL_PublicKey_EC643,28544
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PublicKey_ECGDSA_ISO15946<DL_PublicKey_ECGDSA_ISO15946644,28596
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PublicKey_ECGDSA_ISO15946<DL_PublicKey_ECGDSA_ISO15946645,28660
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PrivateKeyImpl<DL_PrivateKeyImpl646,28725
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PrivateKeyImpl<DL_PrivateKeyImpl647,28802
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PrivateKey_EC<DL_PrivateKey_EC648,28880
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PrivateKey_EC<DL_PrivateKey_EC649,28932
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PrivateKey_ECGDSA_ISO15946<DL_PrivateKey_ECGDSA_ISO15946650,28985
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PrivateKey_ECGDSA_ISO15946<DL_PrivateKey_ECGDSA_ISO15946651,29050
CRYPTOPP_DLL_TEMPLATE_CLASS DL_Algorithm_GDSA<DL_Algorithm_GDSA652,29116
CRYPTOPP_DLL_TEMPLATE_CLASS DL_Algorithm_GDSA<DL_Algorithm_GDSA653,29176
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PrivateKey_WithSignaturePairwiseConsistencyTest<DL_PrivateKey_WithSignaturePairwiseConsistencyTest654,29237
CRYPTOPP_DLL_TEMPLATE_CLASS DL_PrivateKey_WithSignaturePairwiseConsistencyTest<DL_PrivateKey_WithSignaturePairwiseConsistencyTest655,29362

src/cryptopp/trdlocal.h,192
#define CRYPTOPP_TRDLOCAL_H2,29
typedef unsigned long ThreadLocalIndexType;11,191
typedef pthread_key_t ThreadLocalIndexType;14,265
NAMESPACE_BEGIN(17,320
	class Err 24,498
		Err(27,542

src/cryptopp/zinflate.cpp,1536
struct CodeLessThan16,474
	inline bool operator()(operator()18,498
	inline bool operator()(operator()21,667
inline bool LowFirstBitReader::FillBuffer(FillBuffer25,825
inline unsigned long LowFirstBitReader::PeekBits(PeekBits39,1144
inline void LowFirstBitReader::SkipBits(SkipBits46,1367
inline unsigned long LowFirstBitReader::GetBits(GetBits53,1533
inline HuffmanDecoder::code_t HuffmanDecoder::NormalizeCode(NormalizeCode60,1691
void HuffmanDecoder::Initialize(Initialize65,1857
void HuffmanDecoder::FillCacheEntry(FillCacheEntry155,5002
inline unsigned int HuffmanDecoder::Decode(Decode182,5742
bool HuffmanDecoder::Decode(Decode209,6470
Inflator::Inflator(223,6894
void Inflator::IsolatedInitialize(IsolatedInitialize232,7263
void Inflator::OutputByte(OutputByte240,7474
void Inflator::OutputString(OutputString252,7738
void Inflator::OutputPast(OutputPast271,8203
size_t Inflator::Put2(Put2300,8890
bool Inflator::IsolatedFlush(IsolatedFlush316,9292
void Inflator::ProcessInput(ProcessInput328,9495
void Inflator::DecodeHeader(DecodeHeader373,10645
bool Inflator::DecodeBody(DecodeBody475,13394
void Inflator::FlushOutput(FlushOutput590,16437
struct NewFixedLiteralDecoder600,16663
	HuffmanDecoder * operator()(operator()602,16697
struct NewFixedDistanceDecoder615,17134
	HuffmanDecoder * operator()(operator()617,17169
const HuffmanDecoder& Inflator::GetLiteralDecoder(GetLiteralDecoder627,17438
const HuffmanDecoder& Inflator::GetDistanceDecoder(GetDistanceDecoder632,17618

src/cryptopp/arc4.h,359
#define CRYPTOPP_ARC4_H7,147
NAMESPACE_BEGIN(14,268
	typedef SymmetricCipherFinal<ARC4_Base> Encryption;38,1091
	typedef SymmetricCipherFinal<ARC4_Base> Decryption;39,1145
DOCUMENTED_TYPEDEF(53,1589
	typedef SymmetricCipherFinal<MARC4_Base> Encryption;64,2061
	typedef SymmetricCipherFinal<MARC4_Base> Decryption;65,2116
using namespace Weak1;81,2600

src/cryptopp/queue.h,578
#define CRYPTOPP_QUEUE_H8,189
NAMESPACE_BEGIN(13,263
	bool operator!=(operator!=73,2371
	class Walker 79,2563
		Walker(84,2715
		lword GetCurrentPosition(88,2872
		lword MaxRetrievable(90,2925
		const ByteQueue &m_queue;m_queue105,3560
		const ByteQueueNode *m_node;m_node106,3589
		lword m_position;107,3621
		size_t m_offset;108,3642
		const byte *m_lazyString;m_lazyString109,3662
		size_t m_lazyLength;110,3691
class CRYPTOPP_DLL LazyPutter129,4074
class LazyPutterModifiable 143,4469
	LazyPutterModifiable(146,4529
template<> inline void swap(154,4723

src/cryptopp/validat0.cpp,672
struct ASN1_TestTuple30,719
	int disposition;32,745
	int identifier;33,764
	const char* name;34,782
	const char* data;35,802
	size_t len;36,822
bool RunASN1TestSet(39,842
	enum {REJECT=REJECT44,957
	enum {REJECT=3, ACCEPT=44,957
bool TestASN1Parse(106,2459
	enum {REJECT=REJECT113,2573
	enum {REJECT=3, ACCEPT=113,2573
bool TestSecBlock(281,16639
bool TestHuffmanCodes(1215,36445
bool TestIntegerBitops(1253,37363
	struct Bitops_TestTuple1257,37447
	    const char *m,m1260,37533
	    const char *m, *n,n1260,37533
	    const char *m, *n, *a,a1260,37533
	    const char *m, *n, *a, *o,o1260,37533
	    const char *m, *n, *a, *o, *x;x1260,37533

src/cryptopp/tiger.h,316
#define CRYPTOPP_TIGER_H2,26
# define CRYPTOPP_DISABLE_TIGER_ASM10,285
NAMESPACE_BEGIN(13,332
class Tiger 16,425
	static void InitState(19,528
	static void Transform(20,574
	void TruncatedFinal(21,635
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(22,683
	static const word64 table[table25,777

src/cryptopp/integer.cpp,16258
# define MAYBE_CONST51,1196
# define MAYBE_UNCONST_CAST 52,1218
# define MAYBE_CONST 54,1272
# define MAYBE_UNCONST_CAST55,1300
# undef CRYPTOPP_X86_ASM_AVAILABLE61,1512
# undef CRYPTOPP_X32_ASM_AVAILABLE62,1548
# undef CRYPTOPP_X64_ASM_AVAILABLE63,1584
# undef CRYPTOPP_BOOL_SSE2_ASM_AVAILABLE64,1620
# undef CRYPTOPP_BOOL_SSSE3_ASM_AVAILABLE65,1662
# define CRYPTOPP_BOOL_SSE2_ASM_AVAILABLE 66,1705
# define CRYPTOPP_BOOL_SSSE3_ASM_AVAILABLE 67,1750
# define CRYPTOPP_INTEGER_SSE2 69,1803
NAMESPACE_BEGIN(72,1903
inline static int Compare(82,2181
inline static int Increment(93,2358
inline static int Decrement(106,2579
static void TwosComplement(119,2800
static word AtomicInverseModPower2(126,2922
	#define Declare2Words(142,3292
	#define AssignWord(143,3338
	#define Add2WordsBy1(144,3387
	#define LowWord(145,3463
	#define HighWord(146,3493
		#define MultiplyWordsLoHi(148,3542
			#define Double3Words(150,3640
		#define MultiplyWordsLoHi(153,3789
			#define MultiplyWordsLoHi(157,4091
			#define MultiplyWordsLoHi(159,4207
			#define MulAcc(160,4314
			#define Double3Words(161,4481
			#define Acc2WordsBy1(162,4604
			#define Acc2WordsBy2(163,4712
			#define Acc3WordsBy2(164,4834
	#define MultiplyWords(167,5021
		#define Double3Words(169,5114
		#define Acc2WordsBy2(172,5260
	#define AddWithCarry(174,5349
	#define SubtractWithBorrow(175,5440
	#define GetCarry(176,5536
	#define GetBorrow(177,5567
	#define Declare2Words(179,5605
		#define MultiplyWords(181,5716
		#define MultiplyWords(183,5778
	#define AssignWord(185,5838
	#define Add2WordsBy1(186,5874
	#define Acc2WordsBy2(187,5918
	#define LowWord(188,5957
	#define HighWord(189,5990
	#define Double3Words(190,6035
	#define AddWithCarry(191,6104
	#define SubtractWithBorrow(192,6169
	#define GetCarry(193,6240
	#define GetBorrow(194,6278
	#define MulAcc(197,6353
	#define Acc2WordsBy1(200,6504
	#define Acc3WordsBy2(203,6587
class DWord206,6699
	DWord(210,6770
	DWord(212,6803
	explicit DWord(216,6879
	explicit DWord(218,6932
	DWord(225,7057
	static DWord Multiply(244,7473
	static DWord MultiplyAndAdd(257,7759
	DWord & operator+=(operator+=263,7870
	DWord operator+(274,8075
	DWord operator-(286,8320
	DWord operator-(298,8613
	bool operator!(315,8978
	word GetLowHalf(326,9300
	word GetHighHalf(327,9348
	word GetHighHalfAsBorrow(328,9398
    struct half_words334,9657
        word low;337,9716
        word high;338,9735
        word high;340,9766
        word low;341,9786
       dword m_whole;347,9883
       half_words m_halfs;349,9917
class Word353,9958
	Word(359,10138
	Word(362,10252
	Word(364,10324
	Word(367,10346
	Word(368,10385
	static Word Multiply(370,10467
	Word operator-(377,10570
	Word operator-(384,10665
	hword operator/(392,10801
	bool operator!(397,10880
	word GetWhole(402,10935
	hword GetLowHalf(403,10977
	hword GetHighHalf(404,11029
	hword GetHighHalfAsBorrow(405,11097
	word m_whole;408,11187
S DivideThreeWordsByTwo(413,11315
inline D DivideFourWordsByTwo(457,12572
inline word DWord::operator/(operator/480,13308
inline word DWord::operator%(operator%490,13545
	#define AddPrologue 515,14230
	#define AddEpilogue 520,14323
	#define MulPrologue 527,14490
	#define MulEpilogue 533,14613
	#define SquPrologue	540,14773
	#define SquEpilogue	541,14808
	#define TopPrologue	548,14967
	#define TopEpilogue	549,15002
	#define AddPrologue 557,15170
	#define AddEpilogue 562,15292
	#define SaveEBX566,15369
	#define RestoreEBX567,15387
	#define SquPrologue	568,15408
	#define MulPrologue	573,15536
	#define TopPrologue	579,15689
	#define SquEpilogue	586,15867
	#define MulEpilogue	587,15901
	#define TopEpilogue	588,15935
int Baseline_Add(597,16271
int Baseline_Sub(629,16923
CRYPTOPP_NAKED int CRYPTOPP_FASTCALL Baseline_Add(661,17637
CRYPTOPP_NAKED int CRYPTOPP_FASTCALL Baseline_Sub(702,18733
CRYPTOPP_NAKED int CRYPTOPP_FASTCALL SSE2_Add(744,19856
CRYPTOPP_NAKED int CRYPTOPP_FASTCALL SSE2_Sub(800,21269
int CRYPTOPP_FASTCALL Baseline_Add(858,22760
int CRYPTOPP_FASTCALL Baseline_Sub(874,23104
static word LinearMultiply(891,23469
#define Mul_2 910,23883
#define Mul_4 915,23974
#define Mul_8 924,24280
#define Mul_16 941,25349
#define Squ_2 974,29489
#define Squ_4 978,29538
#define Squ_8 986,29749
#define Squ_16 1002,30456
#define Bot_2 1034,32932
#define Bot_4 1039,33020
#define Bot_8 1046,33230
#define Bot_16 1057,33848
#define Mul_Begin(1079,36019
#define Mul_Acc(1087,36213
#define Mul_SaveAcc(1092,36340
#define Mul_End(1099,36533
#define Bot_SaveAcc(1107,36740
#define Bot_Acc(1112,36860
#define Bot_End(1115,36907
#define Mul_Begin(1118,36951
#define Mul_Acc(1126,37123
#define Mul_SaveAcc(1129,37180
#define Mul_End(1135,37311
#define Bot_SaveAcc(1142,37468
#define Bot_Acc(1147,37560
#define Bot_End(1150,37607
#define Squ_Begin(1154,37654
#define Squ_NonDiag	1167,37968
#define Squ_SaveAcc(1170,38017
#define Squ_Acc(1177,38184
#define Squ_Diag(1180,38241
#define Squ_End(1184,38318
void Baseline_Multiply2(1193,38513
void Baseline_Multiply4(1202,38745
void Baseline_Multiply8(1211,38977
void Baseline_Square2(1220,39209
void Baseline_Square4(1228,39375
void Baseline_Square8(1236,39541
void Baseline_MultiplyBottom2(1244,39707
void Baseline_MultiplyBottom4(1253,39945
void Baseline_MultiplyBottom8(1262,40183
#define Top_Begin(1271,40421
#define Top_Acc(1278,40575
#define Top_SaveAcc0(1282,40667
#define Top_SaveAcc1(1287,40779
void Baseline_MultiplyTop2(1294,40928
void Baseline_MultiplyTop4(1303,41107
void Baseline_MultiplyTop8(1317,41563
void Baseline_Multiply16(1336,42579
void Baseline_Square16(1345,42813
void Baseline_MultiplyBottom16(1353,42981
void Baseline_MultiplyTop16(1362,43221
#undef Mul_Begin1395,46134
#undef Mul_Acc1396,46152
#undef Top_Begin1397,46168
#undef Top_Acc1398,46186
#undef Squ_Acc1399,46202
#undef Squ_NonDiag1400,46218
#undef Squ_Diag1401,46238
#undef Squ_SaveAcc1402,46255
#undef Squ_Begin1403,46275
#undef Mul_SaveAcc1404,46293
#undef Bot_Acc1405,46313
#undef Bot_SaveAcc1406,46329
#undef Bot_End1407,46349
#undef Squ_End1408,46365
#undef Mul_End1409,46381
#define SSE2_FinalSave(1411,46399
#define SSE2_SaveShift(1416,46528
#define Squ_SSE2_SaveShift(1438,47161
#define SSE2_FirstMultiply(1459,47791
#define Squ_Begin(1471,48135
#define Squ_Acc(1495,48839
#define Squ_Acc1(1512,49333
#define Squ_Acc2(1513,49354
#define Squ_Acc3(1514,49395
#define Squ_Acc4(1515,49429
#define Squ_Acc5(1516,49463
#define Squ_Acc6(1517,49497
#define Squ_Acc7(1518,49531
#define Squ_Acc8(1519,49565
#define SSE2_End(1521,49601
#define Squ_End(1540,50112
#define Mul_End(1541,50158
#define Top_End(1542,50204
#define Squ_Column1(1544,50252
#define Squ_Column0(1572,51049
#define SSE2_MulAdd45	1587,51450
#define Mul_Begin(1601,51844
#define Mul_Acc(1629,52727
#define Mul_Acc1(1646,53277
#define Mul_Acc2(1647,53298
#define Mul_Acc3(1648,53339
#define Mul_Acc4(1649,53373
#define Mul_Acc5(1650,53407
#define Mul_Acc6(1651,53441
#define Mul_Acc7(1652,53475
#define Mul_Acc8(1653,53509
#define Mul_Acc9(1654,53543
#define Mul_Acc10(1655,53577
#define Mul_Acc11(1656,53611
#define Mul_Acc12(1657,53645
#define Mul_Acc13(1658,53679
#define Mul_Acc14(1659,53713
#define Mul_Acc15(1660,53747
#define Mul_Acc16(1661,53781
#define Mul_Column1(1663,53817
#define Mul_Column0(1669,53933
#define Bot_Acc(1676,54073
#define Bot_SaveAcc(1684,54360
#define Bot_End(1696,54681
#define Top_Begin(1705,54911
#define Top_Acc(1735,55877
#define Top_Column0(1741,56084
#define Top_Column1(1748,56224
void SSE2_Square4(1761,56521
void SSE2_Square8(1768,56620
void SSE2_Square16(1784,56875
void SSE2_Square32(1808,57316
void SSE2_Multiply4(1846,58113
void SSE2_Multiply8(1858,58305
void SSE2_Multiply16(1874,58599
void SSE2_Multiply32(1898,59101
void SSE2_MultiplyBottom4(1936,60023
void SSE2_MultiplyBottom8(1943,60153
void SSE2_MultiplyBottom16(1957,60432
void SSE2_MultiplyBottom32(1975,60880
void SSE2_MultiplyTop8(2001,61690
void SSE2_MultiplyTop16(2016,61984
void SSE2_MultiplyTop32(2035,62447
typedef int (CRYPTOPP_FASTCALL * PAdd)2066,63372
typedef void (* PMul)2067,63462
typedef void (* PSqu)2068,63525
typedef void (* PMulTop)2069,63573
static PAdd s_pAdd 2072,63676
static size_t s_recursionLimit 2073,63737
static const size_t s_recursionLimit 2075,63781
static PMul s_pMul[s_pMul2078,63861
static PMul s_pMul[9], s_pBot[s_pBot2078,63861
static PSqu s_pSqu[s_pSqu2079,63896
static PMulTop s_pTop[s_pTop2080,63920
static void SetFunctionPointers(2082,63949
inline int Add(2143,65391
inline int Subtract(2152,65596
#define A0	2164,65871
#define A1	2165,65886
#define B0	2166,65906
#define B1	2167,65921
#define T0	2169,65943
#define T1	2170,65958
#define T2	2171,65978
#define T3	2172,65997
#define R0	2174,66021
#define R1	2175,66036
#define R2	2176,66056
#define R3	2177,66075
void RecursiveMultiply(2184,66211
void RecursiveSquare(2226,67239
void RecursiveMultiplyBottom(2251,67766
void MultiplyTop(2275,68328
inline void Multiply(2324,69458
inline void Square(2329,69582
inline void MultiplyBottom(2334,69684
void AsymmetricMultiply(2344,69940
void RecursiveInverseModPower2(2413,71443
void MontgomeryReduce(2446,72361
void HalfMontgomeryReduce(2520,74367
#define M0	2524,74522
#define M1	2525,74537
#define V0	2526,74557
#define V1	2527,74572
#define X0	2529,74594
#define X1	2530,74609
#define X2	2531,74629
#define X3	2532,74648
#undef M02557,75240
#undef M12558,75251
#undef V02559,75262
#undef V12560,75273
#undef X02562,75286
#undef X12563,75297
#undef X22564,75308
#undef X32565,75319
#undef A02568,75335
#undef A12569,75346
#undef B02570,75357
#undef B12571,75368
#undef T02573,75381
#undef T12574,75392
#undef T22575,75403
#undef T32576,75414
#undef R02578,75427
#undef R12579,75438
#undef R22580,75449
#undef R32581,75460
static inline void AtomicDivide(2647,77255
static void CorrectQuotientEstimate(2668,77916
void Divide(2692,78518
static inline size_t EvenWordCount(2747,79985
unsigned int AlmostInverse(2760,80263
void DivideByPower2Mod(2835,81774
void MultiplyByPower2Mod(2856,82161
InitializeInteger::InitializeInteger(InitializeInteger2867,82452
static const unsigned int RoundupSizeTable[RoundupSizeTable2876,82642
static inline size_t RoundupSize(2878,82721
Integer::Integer(2892,82961
Integer::Integer(2898,83039
Integer::Integer(2904,83170
Integer::Integer(2911,83312
Integer::Integer(2925,83550
bool Integer::IsConvertableToLong(IsConvertableToLong2932,83658
signed long Integer::ConvertToLong(ConvertToLong2946,83985
Integer::Integer(Integer2955,84258
Integer::Integer(Integer2972,84717
Integer::Integer(Integer2992,85322
Integer::Integer(Integer2997,85393
Integer::Integer(Integer3002,85492
Integer Integer::Power2(Power23008,85748
struct NewInteger3016,85877
	Integer * operator()(operator()3018,85899
namespace { const Integer& s_zero 3026,86114
const Integer &Integer::Zero(Zero3027,86181
namespace { const Integer& s_one 3034,86382
const Integer &Integer::One(One3035,86464
namespace { const Integer& s_two 3042,86663
const Integer &Integer::Two(Two3043,86745
bool Integer::operator!(operator!3048,86800
Integer& Integer::operator=(operator=3053,86904
bool Integer::GetBit(GetBit3065,87163
void Integer::SetBit(SetBit3075,87480
byte Integer::GetByte(GetByte3089,87754
void Integer::SetByte(SetByte3099,88068
lword Integer::GetBits(GetBits3106,88282
Integer Integer::operator-(operator-3115,88472
Integer Integer::AbsoluteValue(AbsoluteValue3122,88577
void Integer::swap(swap3129,88693
Integer::Integer(3135,88779
static Integer StringToInteger(3143,88951
Integer::Integer(3279,91582
Integer::Integer(3285,91707
unsigned int Integer::WordCount(WordCount3291,91835
unsigned int Integer::ByteCount(ByteCount3296,91936
unsigned int Integer::BitCount(BitCount3305,92127
void Integer::Decode(Decode3314,92316
void Integer::Decode(Decode3320,92464
size_t Integer::MinEncodedSize(MinEncodedSize3354,93298
void Integer::Encode(Encode3369,93829
void Integer::Encode(Encode3376,94036
void Integer::DEREncode(DEREncode3391,94440
void Integer::BERDecode(BERDecode3398,94612
void Integer::BERDecode(BERDecode3404,94729
void Integer::DEREncodeAsOctetString(DEREncodeAsOctetString3413,95002
void Integer::BERDecodeAsOctetString(BERDecodeAsOctetString3420,95183
size_t Integer::OpenPGPEncode(OpenPGPEncode3429,95445
size_t Integer::OpenPGPEncode(OpenPGPEncode3435,95577
void Integer::OpenPGPDecode(OpenPGPDecode3444,95809
void Integer::OpenPGPDecode(OpenPGPDecode3450,95934
void Integer::Randomize(Randomize3458,96166
void Integer::Randomize(Randomize3468,96430
bool Integer::Randomize(Randomize3485,96780
class KDF2_RNG 3490,97088
	KDF2_RNG(3493,97147
	void GenerateBlock(3499,97302
	word32 m_counter;3507,97550
	SecByteBlock m_counterAndSeed;3508,97570
bool Integer::GenerateRandomNoThrow(GenerateRandomNoThrow3511,97609
std::istream& operator>>(3604,100236
std::ostream& operator<<(3629,100761
Integer& Integer::operator++(operator++3696,102000
Integer& Integer::operator--(operator--3718,102350
Integer Integer::And(And3738,102761
Integer Integer::Or(Or3764,103343
Integer Integer::Xor(Xor3790,103922
void PositiveAdd(3814,104350
void PositiveSubtract(3844,105358
template <class T> inline const T& STDMAX2(3885,106533
Integer Integer::Plus(Plus3890,106633
Integer& Integer::operator+=(operator+=3913,107051
Integer Integer::Minus(Minus3936,107448
Integer& Integer::operator-=(operator-=3959,107874
Integer& Integer::operator<<=(operator<<=3982,108271
Integer& Integer::operator>>=(operator>>=3994,108692
Integer& Integer::operator&=(operator&=4008,109125
Integer& Integer::operator|=(operator|=4020,109351
Integer& Integer::operator^=(operator^=4041,109786
void PositiveMultiply(4066,110257
void Multiply(4078,110640
Integer Integer::Times(Times4086,110817
void PositiveDivide(4115,111545
void Integer::Divide(Divide4144,112267
void Integer::DivideByPowerOf2(DivideByPowerOf24162,112663
Integer Integer::DividedBy(DividedBy4190,113288
Integer Integer::Modulo(Modulo4197,113448
void Integer::Divide(Divide4204,113606
Integer Integer::DividedBy(DividedBy4238,114379
word Integer::Modulo(Modulo4246,114536
void Integer::Negate(Negate4285,115485
int Integer::PositiveCompare(PositiveCompare4291,115589
int Integer::Compare(Compare4302,115979
Integer Integer::SquareRoot(SquareRoot4320,116233
bool Integer::IsSquare(IsSquare4338,116504
bool Integer::IsUnit(IsUnit4344,116603
Integer Integer::MultiplicativeInverse(MultiplicativeInverse4349,116687
Integer a_times_b_mod_c(4354,116779
Integer a_exp_b_mod_c(4359,116882
Integer Integer::Gcd(Gcd4365,117026
Integer Integer::InverseMod(InverseMod4370,117141
word Integer::InverseMod(InverseMod4395,117746
ModularArithmetic::ModularArithmetic(ModularArithmetic4422,118153
void ModularArithmetic::DEREncode(DEREncode4433,118421
void ModularArithmetic::DEREncodeElement(DEREncodeElement4441,118614
void ModularArithmetic::BERDecodeElement(BERDecodeElement4446,118774
const Integer& ModularArithmetic::Half(Half4451,118926
const Integer& ModularArithmetic::Add(Add4462,119238
Integer& ModularArithmetic::Accumulate(Accumulate4482,119784
const Integer& ModularArithmetic::Subtract(Subtract4502,120223
Integer& ModularArithmetic::Reduce(Reduce4519,120701
const Integer& ModularArithmetic::Inverse(Inverse4536,121072
Integer ModularArithmetic::CascadeExponentiate(CascadeExponentiate4548,121432
void ModularArithmetic::SimultaneousExponentiate(SimultaneousExponentiate4559,121810
MontgomeryRepresentation::MontgomeryRepresentation(4572,122326
const Integer& MontgomeryRepresentation::Multiply(Multiply4583,122754
const Integer& MontgomeryRepresentation::Square(Square4596,123260
Integer MontgomeryRepresentation::ConvertOut(ConvertOut4609,123682
const Integer& MontgomeryRepresentation::MultiplicativeInverse(MultiplicativeInverse4622,124083
std::string IntToString<IntToString4648,125039
std::string IntToString<IntToString4714,126406

src/cryptopp/basecode.h,201
#define CRYPTOPP_BASECODE_H7,177
NAMESPACE_BEGIN(14,301
class CRYPTOPP_DLL BaseN_Decoder : public Unflushable<Unflushable58,1990
class CRYPTOPP_DLL Grouper : public Bufferless<Bufferless110,4375

src/cryptopp/channels.h,1946
#define CRYPTOPP_CHANNELS_H8,188
NAMESPACE_BEGIN(15,309
class MessageSwitch 19,452
	void AddDefaultRoute(22,499
	void AddRoute(23,588
	void Put(25,710
	void Put(26,735
	void Flush(28,792
	void MessageEnd(29,846
	void PutMessageEnd(30,885
	void MessageSeriesEnd(31,970
	typedef std::pair<BufferedTransformation BufferedTransformation34,1027
	typedef std::pair<BufferedTransformation *, std::string> Route;34,1027
	struct RangeRoute35,1093
		RangeRoute(37,1117
		bool operator<(39,1235
		unsigned int begin,40,1310
		unsigned int begin, end;40,1310
		Route route;41,1338
	typedef std::list<RangeRoute> RouteList;44,1361
	typedef std::list<Route> DefaultRouteList;45,1404
	RouteList m_routes;47,1451
	DefaultRouteList m_defaultRoutes;48,1473
	unsigned int m_nCurrentMessage;49,1509
class ChannelSwitchTypedefs53,1557
	typedef std::pair<BufferedTransformation BufferedTransformation56,1598
	typedef std::pair<BufferedTransformation *, std::string> Route;56,1598
	typedef std::multimap<std::string,std::string57,1664
	typedef std::multimap<std::string, Route> RouteMap;57,1664
	typedef std::pair<BufferedTransformation BufferedTransformation59,1720
	typedef std::pair<BufferedTransformation *, value_ptr<std::string> > DefaultRoute;59,1720
	typedef std::list<DefaultRoute> DefaultRouteList;60,1805
	typedef RouteMap::iterator MapIterator;63,1912
	typedef DefaultRouteList::iterator ListIterator;64,1954
class ChannelRouteIterator 69,2035
	ChannelRouteIterator(72,2106
	ChannelSwitch& m_cs;80,2339
	std::string m_channel;81,2362
	bool m_useDefault;82,2387
	MapIterator m_itMapCurrent,83,2408
	MapIterator m_itMapCurrent, m_itMapEnd;83,2408
	ListIterator m_itListCurrent,84,2450
	ListIterator m_itListCurrent, m_itListEnd;84,2450
class CRYPTOPP_DLL ChannelSwitch : public Multichannel<Multichannel92,2663
class CRYPTOPP_DLL ChannelSwitch : public Multichannel<Sink>, public ChannelSwitchTypedefs92,2663

src/cryptopp/rijndael.cpp,3938
# define CRYPTOPP_ALLOW_RIJNDAEL_UNALIGNED_DATA_ACCESS 82,3331
# define MAYBE_CONST87,3495
# define MAYBE_CONST 89,3524
namespace rdtable 94,3795
static word64 Te[Te97,3892
static word64 Td[Td99,3925
namespace rdtable 103,4112
static volatile bool s_TeFilled 109,4334
#define QUARTER_ROUND(113,4481
#define QUARTER_ROUND_LE(119,4653
	#define QUARTER_ROUND_LD(126,5007
	#define QUARTER_ROUND_LD(132,5346
#define QUARTER_ROUND_E(139,5548
#define QUARTER_ROUND_D(140,5628
	#define QUARTER_ROUND_FE(143,5735
	#define QUARTER_ROUND_FD(144,5817
		#define TL_F(146,6009
		#define TL_M(147,6085
		#define TL_F(149,6169
		#define TL_M(150,6219
	#define QUARTER_ROUND_FE(153,6273
	#define QUARTER_ROUND_FD(154,6355
		#define TL_F(156,6547
		#define TL_M	157,6621
		#define TL_F(159,6652
		#define TL_M(160,6698
#define f2(165,6757
#define f4(166,6802
#define f8(167,6866
#define f3(169,6951
#define f9(170,6980
#define fb(171,7009
#define fd(172,7046
#define fe(173,7083
void Rijndael::Base::FillEncTable(FillEncTable175,7126
void Rijndael::Base::FillDecTable(FillDecTable198,7784
void Rijndael::Base::UncheckedSetKey(UncheckedSetKey218,8307
#define InverseMixColumn(362,12859
void Rijndael::Enc::ProcessAndXorBlock(ProcessAndXorBlock389,14412
	typedef BlockGetAndPut<word32, NativeByteOrder> Block;402,14923
void Rijndael::Dec::ProcessAndXorBlock(ProcessAndXorBlock470,16779
	typedef BlockGetAndPut<word32, NativeByteOrder> Block;480,17057
CRYPTOPP_NAKED void CRYPTOPP_FASTCALL Rijndael_Enc_AdvancedProcessBlocks(569,19755
#define L_REG	575,19958
#define L_INDEX(576,19979
#define L_INXORBLOCKS	577,20014
#define L_OUTXORBLOCKS	578,20050
#define L_OUTBLOCKS	579,20087
#define L_INCREMENTS	580,20123
#define L_SP	581,20160
#define L_LENGTH	582,20191
#define L_KEYS_BEGIN	583,20227
#define MOVD	585,20268
#define MM(586,20289
#define MXOR(588,20314
#define MMOV(593,20452
#define L_REG	599,20576
#define L_INDEX(600,20596
#define L_INXORBLOCKS	601,20627
#define L_OUTXORBLOCKS	602,20663
#define L_OUTBLOCKS	603,20701
#define L_INCREMENTS	604,20737
#define L_LENGTH	605,20774
#define L_KEYS_BEGIN	606,20810
#define MOVD	608,20849
#define MM_0	609,20869
#define MM_1	610,20889
#define MM_2	612,20927
#define MM_2	614,20955
#define MM(616,20984
#define MXOR(618,21010
#define MMOV(622,21125
#define L_SUBKEYS	628,21250
#define L_SAVED_X	629,21281
#define L_KEY12	630,21311
#define L_LASTROUND	631,21345
#define L_INBLOCKS	632,21382
#define MAP0TO4(633,21418
#define XOR(635,21460
#define MOV(639,21570
#define ROUND(884,28447
#define LAST(932,29688
static inline bool AliasedWithTable(1076,33152
inline void AESNI_Enc_Block(1088,33560
inline void AESNI_Enc_4_Blocks(1100,33967
inline void AESNI_Dec_Block(1122,34745
inline void AESNI_Dec_4_Blocks(1134,35152
template <typename F1,1159,36006
inline size_t AESNI_AdvancedProcessBlocks(1160,36043
struct Locals1271,40360
	word32 subkeys[subkeys1273,40378
	word32 subkeys[4*12], workspace[workspace1273,40378
	const byte *inBlocks,inBlocks1274,40416
	const byte *inBlocks, *inXorBlocks,inXorBlocks1274,40416
	const byte *inBlocks, *inXorBlocks, *outXorBlocks;outXorBlocks1274,40416
	byte *outBlocks;outBlocks1275,40469
	size_t inIncrement,1276,40488
	size_t inIncrement, inXorIncrement,1276,40488
	size_t inIncrement, inXorIncrement, outXorIncrement,1276,40488
	size_t inIncrement, inXorIncrement, outXorIncrement, outIncrement;1276,40488
	size_t regSpill,1277,40557
	size_t regSpill, lengthAndCounterFlag,1277,40557
	size_t regSpill, lengthAndCounterFlag, keysBegin;1277,40557
const size_t s_aliasPageSize 1280,40615
const size_t s_aliasBlockSize 1281,40653
const size_t s_sizeToAllocate 1282,40691
Rijndael::Enc::Enc(1284,40779
size_t Rijndael::Enc::AdvancedProcessBlocks(AdvancedProcessBlocks1287,40848
size_t Rijndael::Dec::AdvancedProcessBlocks(AdvancedProcessBlocks1349,43241

src/cryptopp/gzip.h,1261
#define CRYPTOPP_GZIP_H7,169
NAMESPACE_BEGIN(14,285
class Gzip 18,371
	Gzip(29,885
	Gzip(35,1422
	enum {MAGIC1=MAGIC139,1574
	enum {MAGIC1=0x1f, MAGIC2=39,1574
		  DEFLATED=40,1634
		  DEFLATED=8, FAST=40,1634
		  DEFLATED=8, FAST=4, SLOW=40,1634
	void WritePrestreamHeader(42,1670
	void ProcessUncompressedData(43,1701
	void WritePoststreamTail(44,1768
	word32 m_totalLen;46,1800
	CRC32 m_crc;47,1821
class Gunzip 52,1903
	typedef Inflator::Err Err;55,1947
	class HeaderErr 59,2067
	class HeaderErr : public Err {public: HeaderErr(59,2067
	class TailErr 62,2262
	class TailErr : public Err {public: TailErr(62,2262
	class CrcErr 65,2442
	class CrcErr : public Err {public: CrcErr(65,2442
	class LengthErr 68,2635
	class LengthErr : public Err {public: LengthErr(68,2635
		MAGIC1=79,3159
		MAGIC2=81,3215
		DEFLATED=83,3259
	enum FLAG_MASKS 86,3280
		CONTINUED=87,3300
		CONTINUED=2, EXTRA_FIELDS=87,3300
		CONTINUED=2, EXTRA_FIELDS=4, FILENAME=87,3300
		CONTINUED=2, EXTRA_FIELDS=4, FILENAME=8, COMMENTS=87,3300
		CONTINUED=2, EXTRA_FIELDS=4, FILENAME=8, COMMENTS=16, ENCRYPTED=87,3300
	unsigned int MaxPrestreamHeaderSize(89,3374
	unsigned int MaxPoststreamTailSize(92,3535
	word32 m_length;95,3626
	CRC32 m_crc;96,3645

src/cryptopp/channels.cpp,1196
NAMESPACE_BEGIN(10,168
void MessageSwitch::AddRoute(AddRoute19,395
void ChannelRouteIterator::Reset(Reset97,2493
bool ChannelRouteIterator::End(End115,2931
void ChannelRouteIterator::Next(Next120,3066
BufferedTransformation & ChannelRouteIterator::Destination(Destination128,3179
const std::string & ChannelRouteIterator::Channel(Channel133,3330
size_t ChannelSwitch::ChannelPut2(ChannelPut2146,3592
void ChannelSwitch::IsolatedInitialize(IsolatedInitialize171,4035
bool ChannelSwitch::ChannelFlush(ChannelFlush179,4218
bool ChannelSwitch::ChannelMessageSeriesEnd(ChannelMessageSeriesEnd204,4659
byte * ChannelSwitch::ChannelCreatePutSpace(ChannelCreatePutSpace230,5106
size_t ChannelSwitch::ChannelPutModifiable2(ChannelPutModifiable2245,5499
void ChannelSwitch::AddDefaultRoute(AddDefaultRoute262,6066
void ChannelSwitch::RemoveDefaultRoute(RemoveDefaultRoute267,6235
void ChannelSwitch::AddDefaultRoute(AddDefaultRoute277,6526
void ChannelSwitch::RemoveDefaultRoute(RemoveDefaultRoute282,6708
void ChannelSwitch::AddRoute(AddRoute292,7060
void ChannelSwitch::RemoveRoute(RemoveRoute297,7283
	typedef ChannelSwitch::RouteMap::iterator MapIterator;299,7417

src/cryptopp/basecode.cpp,363
NAMESPACE_BEGIN(20,377
size_t BaseN_Encoder::Put2(Put248,1173
void BaseN_Decoder::IsolatedInitialize(IsolatedInitialize115,2750
size_t BaseN_Decoder::Put2(Put2133,3311
void BaseN_Decoder::InitializeDecodingLookupArray(InitializeDecodingLookupArray178,4301
void Grouper::IsolatedInitialize(IsolatedInitialize199,4864
size_t Grouper::Put2(Put2214,5414

src/cryptopp/dh2.cpp,53
NAMESPACE_BEGIN(6,105
bool DH2::Agree(Agree15,295

src/cryptopp/base32.h,161
#define CRYPTOPP_BASE32_H7,201
NAMESPACE_BEGIN(12,278
class Base32Encoder 17,587
	Base32Encoder(29,1300
class Base32Decoder 61,3584
	Base32Decoder(67,3847

src/cryptopp/hkdf.h,423
#define CRYPTOPP_HASH_KEY_DERIVATION_FUNCTION_H8,249
NAMESPACE_BEGIN(15,389
class KeyDerivationFunction18,471
	virtual size_t MaxDerivedKeyLength(22,589
class HKDF 36,1327
	CRYPTOPP_CONSTANT(39,1382
	size_t MaxDerivedKeyLength(45,1665
	bool Usesinfo(46,1753
	typedef byte NullVectorType[NullVectorType52,2190
	static const NullVectorType& GetNullVector(53,2231
unsigned int HKDF<T>::DeriveKey(DeriveKey60,2385

src/cryptopp/algebra.cpp,1815
#define CRYPTOPP_ALGEBRA_CPP6,194
template <class T> const T& AbstractGroup<T>::Double(Double15,322
template <class T> const T& AbstractGroup<T>::Subtract(Subtract20,434
template <class T> T& AbstractGroup<T>::Accumulate(Accumulate27,645
template <class T> T& AbstractGroup<T>::Reduce(Reduce32,771
template <class T> const T& AbstractRing<T>::Square(Square37,898
template <class T> const T& AbstractRing<T>::Divide(Divide42,1014
template <class T> const T& AbstractEuclideanDomain<T>::Mod(Mod49,1261
template <class T> const T& AbstractEuclideanDomain<T>::Gcd(Gcd56,1446
template <class T> const typename QuotientRing<T>::Element& QuotientRing<T>::MultiplicativeInverse(MultiplicativeInverse70,1784
template <class T> T AbstractGroup<T>::ScalarMultiply(ScalarMultiply90,2473
template <class T> T AbstractGroup<T>::CascadeScalarMultiply(CascadeScalarMultiply97,2682
template <class Element, class Iterator> Element GeneralCascadeMultiplication(172,4753
struct WindowSlider206,5781
	WindowSlider(208,5805
	void FindNextWindow(220,6339
	Integer exp,249,6942
	Integer exp, windowModulus;249,6942
	unsigned int windowSize,250,6972
	unsigned int windowSize, windowBegin;250,6972
	word32 expWindow;251,7012
	bool fastNegate,252,7032
	bool fastNegate, negateNext,252,7032
	bool fastNegate, negateNext, firstTime,252,7032
	bool fastNegate, negateNext, firstTime, finished;252,7032
void AbstractGroup<T>::SimultaneousMultiply(SimultaneousMultiply256,7110
template <class T> T AbstractRing<T>::Exponentiate(Exponentiate316,8626
template <class T> T AbstractRing<T>::CascadeExponentiate(CascadeExponentiate323,8830
template <class Element, class Iterator> Element GeneralCascadeExponentiation(328,9063
void AbstractRing<T>::SimultaneousExponentiate(SimultaneousExponentiate334,9323

src/cryptopp/integer.h,1886
#define CRYPTOPP_INTEGER_H14,689
NAMESPACE_BEGIN(22,809
struct InitializeInteger26,933
	InitializeInteger(28,962
typedef SecBlock<word,word32,1056
typedef SecBlock<word, AllocatorWithCleanup<word,word32,1056
typedef SecBlock<word, AllocatorWithCleanup<word, true> > IntegerSecBlock;32,1056
class CRYPTOPP_DLL Integer : private InitializeInteger,43,1723
		class DivideByZero 49,1926
			DivideByZero(52,1983
		class RandomNumberNotFound 57,2173
			RandomNumberNotFound(60,2238
		enum Sign 67,2586
			POSITIVE=69,2643
			NEGATIVE=71,2696
		enum Signedness 77,2873
			UNSIGNED,79,2927
			SIGNED}SIGNED81,2971
		enum RandomNumberType 85,3061
			ANY,87,3139
			PRIME}PRIME89,3205
		class OpenPGPDecodeErr 276,12389
			OpenPGPDecodeErr(279,12450
		Integer&  operator*=(operator*=359,15946
		Integer&  operator/=(operator/=361,16049
		Integer&  operator%=(operator%=364,16206
		Integer&  operator/=(operator/=366,16310
		Integer&  operator%=(operator%=369,16458
		Integer 	operator+(477,21644
		Integer 	operator++(485,21884
		Integer 	operator--(487,21987
		Integer operator>>(557,25004
		Integer operator<<(559,25096
inline bool operator==(operator==648,28812
inline bool operator!=(operator!=650,28941
inline bool operator> 652,29070
inline bool operator>=(operator>=654,29199
inline bool operator< 656,29328
inline bool operator<=(operator<=658,29457
inline CryptoPP::Integer operator+(660,29584
inline CryptoPP::Integer operator-(662,29720
inline CryptoPP::Integer operator*(665,29907
inline CryptoPP::Integer operator/(667,30041
inline CryptoPP::Integer operator%(670,30227
inline CryptoPP::Integer operator/(672,30362
inline CryptoPP::word    operator%(675,30538
inline CryptoPP::Integer operator&(689,31284
inline CryptoPP::Integer operator|(703,32035
inline CryptoPP::Integer operator^(717,32787
NAMESPACE_BEGIN(722,32939

src/cryptopp/cmac.cpp,174
NAMESPACE_BEGIN(9,137
void CMAC_Base::UncheckedSetKey(UncheckedSetKey43,697
void CMAC_Base::Update(Update58,1161
void CMAC_Base::TruncatedFinal(TruncatedFinal103,2231

src/cryptopp/pkcspad.h,1233
#define CRYPTOPP_PKCSPAD_H8,303
NAMESPACE_BEGIN(17,431
class PKCS_EncryptionPaddingScheme 22,645
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(25,737
	size_t MaxUnpaddedLength(27,828
template <class H> class PKCS_DigestDecoration34,1236
	static const byte decoration[decoration37,1296
	static const unsigned int length;38,1330
namespace Weak1 50,1593
CRYPTOPP_DLL_TEMPLATE_CLASS PKCS_DigestDecoration<PKCS_DigestDecoration57,1681
CRYPTOPP_DLL_TEMPLATE_CLASS PKCS_DigestDecoration<PKCS_DigestDecoration58,1739
CRYPTOPP_DLL_TEMPLATE_CLASS PKCS_DigestDecoration<PKCS_DigestDecoration59,1799
CRYPTOPP_DLL_TEMPLATE_CLASS PKCS_DigestDecoration<PKCS_DigestDecoration60,1859
CRYPTOPP_DLL_TEMPLATE_CLASS PKCS_DigestDecoration<PKCS_DigestDecoration61,1919
class CRYPTOPP_DLL PKCS1v15_SignatureMessageEncodingMethod : public PK_DeterministicSignatureMessageEncodingMethod67,2187
	struct HashIdentifierLookup80,2843
		template <class H> struct HashIdentifierLookup282,2877
			static HashIdentifier Lookup(84,2933
struct PKCS1v15 98,3311
	typedef PKCS_EncryptionPaddingScheme EncryptionMessageEncodingMethod;100,3385
	typedef PKCS1v15_SignatureMessageEncodingMethod SignatureMessageEncodingMethod;101,3457

src/cryptopp/md4.h,227
#define CRYPTOPP_MD4_H2,24
NAMESPACE_BEGIN(6,75
class MD4 13,313
	static void InitState(16,412
	static void Transform(17,458
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(18,519
using namespace Weak1;25,732

src/cryptopp/cast.h,1155
#define CRYPTOPP_CAST_H7,175
NAMESPACE_BEGIN(12,248
class CAST16,329
	static const word32 S[S19,356
struct CAST128_Info 24,465
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(26,553
class CAST128 32,778
	class CRYPTOPP_NO_VTABLE Base : public CAST,36,921
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION63,1662
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;63,1662
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION64,1718
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;64,1718
struct CAST256_Info 69,1850
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(71,1943
class CAST256 77,2168
	class CRYPTOPP_NO_VTABLE Base : public CAST,81,2311
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION97,2794
	typedef BlockCipherFinal<ENCRYPTION, Base> Encryption;97,2794
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION98,2851
	typedef BlockCipherFinal<DECRYPTION, Base> Decryption;98,2851
typedef CAST128::Encryption CAST128Encryption;101,2914
typedef CAST128::Decryption CAST128Decryption;102,2962
typedef CAST256::Encryption CAST256Encryption;104,3012
typedef CAST256::Decryption CAST256Decryption;105,3060

src/cryptopp/ec2n.h,715
#define CRYPTOPP_EC2N_H9,189
NAMESPACE_BEGIN(20,393
	typedef GF2NP Field;27,582
	typedef Field::Element FieldElement;28,605
	typedef EC2NPoint Point;29,644
	bool operator==(operator==83,3027
CRYPTOPP_DLL_TEMPLATE_CLASS DL_FixedBasePrecomputationImpl<DL_FixedBasePrecomputationImpl92,3241
CRYPTOPP_DLL_TEMPLATE_CLASS DL_GroupPrecomputation<DL_GroupPrecomputation93,3315
template<> class EcPrecomputation<EcPrecomputation104,3729
	typedef EC2N EllipticCurve;107,3827
	virtual ~EcPrecomputation(109,3859
	const AbstractGroup<Element> & GetGroup(112,3922
	Element BERDecodeElement(113,3987
	void DEREncodeElement(114,4082
	void SetCurve(117,4216
	const EC2N & GetCurve(118,4261
	EC2N m_ec;121,4320

src/cryptopp/ccm.h,645
#define CRYPTOPP_CCM_H8,182
NAMESPACE_BEGIN(13,252
	enum {REQUIRED_BLOCKSIZE REQUIRED_BLOCKSIZE78,2771
template <class T_BlockCipher, int T_DefaultDigestSize,90,3191
class CCM_Final 91,3269
	static std::string StaticAlgorithmName(94,3316
	bool IsForwardTransformation(96,3431
	BlockCipher & AccessBlockCipher(100,3510
	int DefaultDigestSize(101,3565
	typename T_BlockCipher::Encryption m_cipher;102,3627
template <class T_BlockCipher, int T_DefaultDigestSize 113,4120
	typedef CCM_Final<T_BlockCipher, T_DefaultDigestSize, true> Encryption;116,4248
	typedef CCM_Final<T_BlockCipher, T_DefaultDigestSize, false> Decryption;117,4322

src/cryptopp/rdrand.h,783
#define CRYPTOPP_RDRAND_H9,264
NAMESPACE_BEGIN(24,1031
class RDRAND_Err 29,1186
	RDRAND_Err(32,1235
class RDRAND 39,1517
	std::string AlgorithmName(42,1574
	RDRAND(54,2331
	virtual ~RDRAND(56,2392
	unsigned int GetRetries(60,2583
	void SetRetries(67,2811
	virtual void GenerateBlock(78,3149
	virtual void DiscardBytes(92,3720
	virtual void IncorporateEntropy(102,4052
	unsigned int m_retries;110,4289
class RDSEED_Err 116,4447
	RDSEED_Err(119,4496
class RDSEED 126,4778
	std::string AlgorithmName(129,4835
	RDSEED(138,5338
	virtual ~RDSEED(140,5400
	unsigned int GetRetries(144,5591
	void SetRetries(151,5819
	virtual void GenerateBlock(162,6157
	virtual void DiscardBytes(176,6728
	virtual void IncorporateEntropy(186,7060
	unsigned int m_retries;194,7297

src/cryptopp/blowfish.cpp,203
NAMESPACE_BEGIN(7,134
void Blowfish::Base::crypt_block(crypt_block44,1019
void Blowfish::Base::ProcessAndXorBlock(ProcessAndXorBlock71,1617
	typedef BlockGetAndPut<word32, BigEndian> Block;73,1726

src/cryptopp/algparam.cpp,418
bool CombinedNameValuePairs::GetVoidValue(GetVoidValue14,249
void AlgorithmParametersBase::operator=(operator=22,633
bool AlgorithmParametersBase::GetVoidValue(GetVoidValue28,768
AlgorithmParameters::AlgorithmParameters(50,1401
AlgorithmParameters::AlgorithmParameters(55,1487
AlgorithmParameters & AlgorithmParameters::operator=(operator=61,1693
bool AlgorithmParameters::GetVoidValue(GetVoidValue67,1872

src/cryptopp/tea.h,1436
#define CRYPTOPP_TEA_H7,169
NAMESPACE_BEGIN(13,260
struct TEA_Info 17,351
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(19,452
class TEA 25,654
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION56,1504
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;56,1504
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION57,1560
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;57,1560
typedef TEA::Encryption TEAEncryption;60,1622
typedef TEA::Decryption TEADecryption;61,1662
struct XTEA_Info 65,1768
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(67,1870
class XTEA 73,2076
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION104,2932
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;104,2932
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION105,2988
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;105,2988
struct BTEA_Info 110,3114
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(112,3163
class BTEA 119,3479
	class CRYPTOPP_NO_VTABLE Base : public AlgorithmImpl<AlgorithmImpl123,3613
	class CRYPTOPP_NO_VTABLE Base : public AlgorithmImpl<SimpleKeyingInterfaceImpl<BlockCipher, BTEA_Info>, BTEA_Info>, public BTEA_Info123,3613
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION157,4663
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;157,4663
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION158,4719
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;158,4719

src/cryptopp/square.cpp,518
NAMESPACE_BEGIN(19,408
#define roundkeys(44,958
#define roundkeys4(45,1007
void Square::Base::UncheckedSetKey(UncheckedSetKey47,1053
#define MSB(82,2162
#define SSB(83,2229
#define TSB(84,2296
#define LSB(85,2363
#define squareRound(87,2432
#define squareFinal(111,3045
typedef BlockGetAndPut<word32,word32135,3905
typedef BlockGetAndPut<word32, BigEndian> Block;135,3905
void Square::Enc::ProcessAndXorBlock(ProcessAndXorBlock137,3957
void Square::Dec::ProcessAndXorBlock(ProcessAndXorBlock162,4788

src/cryptopp/rsa.cpp,1236
NAMESPACE_BEGIN(15,369
NAMESPACE_BEGIN(41,952
void RSAFunction::BERDecodePublicKey(BERDecodePublicKey48,1062
void RSAFunction::DEREncodePublicKey(DEREncodePublicKey56,1246
Integer RSAFunction::ApplyFunction(ApplyFunction64,1422
bool RSAFunction::Validate(Validate70,1551
bool RSAFunction::GetVoidValue(GetVoidValue80,1847
void RSAFunction::AssignFrom(AssignFrom88,2118
class RSAPrimeSelector 98,2395
	RSAPrimeSelector(101,2454
	bool IsAcceptable(102,2503
	Integer m_e;103,2612
void InvertibleRSAFunction::GenerateRandom(GenerateRandom106,2633
void InvertibleRSAFunction::Initialize(Initialize147,4106
void InvertibleRSAFunction::Initialize(Initialize152,4334
void InvertibleRSAFunction::BERDecodePrivateKey(BERDecodePrivateKey196,5218
void InvertibleRSAFunction::DEREncodePrivateKey(DEREncodePrivateKey212,5725
Integer InvertibleRSAFunction::CalculateInverse(CalculateInverse227,6178
bool InvertibleRSAFunction::Validate(Validate247,7067
bool InvertibleRSAFunction::GetVoidValue(GetVoidValue268,7938
void InvertibleRSAFunction::AssignFrom(AssignFrom280,8456
Integer RSAFunction_ISO::ApplyFunction(ApplyFunction294,8980
Integer InvertibleRSAFunction_ISO::CalculateInverse(CalculateInverse300,9134

src/cryptopp/validat3.cpp,2261
#define CRYPTOPP_ENABLE_NAMESPACE_WEAK 5,92
struct HashTestTuple53,1059
	HashTestTuple(55,1084
	HashTestTuple(58,1273
	const byte *input,input61,1478
	const byte *input, *output;output61,1478
	size_t inputLen;62,1508
	unsigned int repeatTimes;63,1527
bool HashModuleTest(66,1561
bool ValidateCRC32(95,2465
bool ValidateCRC32C(115,3208
bool ValidateAdler32(135,3954
bool ValidateMD2(154,4641
bool ValidateMD4(173,5668
bool ValidateMD5(192,6695
bool ValidateSHA(211,7722
bool ValidateSHA2(217,7868
bool ValidateTiger(223,8015
bool ValidateRIPEMD(245,9902
bool ValidateHAVAL(321,16927
bool ValidatePanama(365,18429
bool ValidateWhirlpool(370,18530
bool ValidateMD5MAC(376,18661
bool ValidateHMAC(440,21379
bool ValidateXMACC(446,21501
	typedef XMACC<MD5> XMACC_MD5;448,21526
bool ValidateTTMAC(514,24627
struct PBKDF_TestTuple565,26819
	byte purpose;567,26846
	unsigned int iterations;568,26862
	const char *hexPassword,hexPassword569,26889
	const char *hexPassword, *hexSalt,hexSalt569,26889
	const char *hexPassword, *hexSalt, *hexDerivedKey;hexDerivedKey569,26889
bool TestPBKDF(572,26948
bool ValidatePBKDF(602,28071
struct HKDF_TestTuple645,30047
	const char *hexSecret,hexSecret647,30073
	const char *hexSecret, *hexSalt,hexSalt647,30073
	const char *hexSecret, *hexSalt, *hexInfo,hexInfo647,30073
	const char *hexSecret, *hexSalt, *hexInfo, *hexExpected;hexExpected647,30073
	size_t len;648,30132
bool TestHKDF(651,30152
bool ValidateHKDF(688,31913
struct Poly1305_TestTuples776,38124
	const char *key,key778,38155
	const char *key, *message,message778,38155
	const char *key, *message, *nonce,nonce778,38155
	const char *key, *message, *nonce, *digest;digest778,38155
	size_t klen,779,38201
	size_t klen, mlen,779,38201
	size_t klen, mlen, nlen,779,38201
	size_t klen, mlen, nlen, dlen;779,38201
bool ValidatePoly1305(782,38240
bool ValidateSipHash(900,42495
struct BLAKE2_TestTuples1074,49067
	const char *key,key1076,49096
	const char *key, *message,message1076,49096
	const char *key, *message, *digest;digest1076,49096
	size_t klen,1077,49134
	size_t klen, mlen,1077,49134
	size_t klen, mlen, dlen;1077,49134
bool ValidateBLAKE2s(1080,49167
bool ValidateBLAKE2b(1475,75049

src/cryptopp/elgamal.cpp,23
NAMESPACE_BEGIN(8,154

src/cryptopp/hmac.h,263
#define CRYPTOPP_HMAC_H7,169
NAMESPACE_BEGIN(12,242
class HMAC 50,1715
	CRYPTOPP_CONSTANT(53,1799
	HMAC(61,2038
	static std::string StaticAlgorithmName(64,2140
	std::string AlgorithmName(65,2247
	HashTransformation & AccessHash(68,2357
	T m_hash;70,2412

src/cryptopp/stdcpp.h,128
#define CRYPTOPP_STDCPP_H2,27
#define _DO_NOT_DECLARE_INTERLOCKED_INTRINSICS_IN_MEMORY5,78
#  define CRYPTOPP_MSVCRT676,1802

src/cryptopp/winpipes.cpp,880
#  define USE_WINDOWS8_API16,508
NAMESPACE_BEGIN(20,555
WindowsHandle::~WindowsHandle(~WindowsHandle27,665
bool WindowsHandle::HandleValid(HandleValid42,825
void WindowsHandle::AttachHandle(AttachHandle47,919
HANDLE WindowsHandle::DetachHandle(DetachHandle57,1059
void WindowsHandle::CloseHandle(CloseHandle65,1184
void WindowsPipe::HandleError(HandleError77,1407
WindowsPipe::Err::Err(83,1547
WindowsPipeReceiver::WindowsPipeReceiver(91,1839
bool WindowsPipeReceiver::Receive(Receive100,2169
void WindowsPipeReceiver::GetWaitObjects(GetWaitObjects130,2885
unsigned int WindowsPipeReceiver::GetReceiveResult(GetReceiveResult138,3262
WindowsPipeSender::WindowsPipeSender(172,4054
void WindowsPipeSender::Send(Send181,4358
void WindowsPipeSender::GetWaitObjects(GetWaitObjects200,4835
unsigned int WindowsPipeSender::GetSendResult(GetSendResult208,5186

src/cryptopp/strciphr.cpp,751
void AdditiveCipherTemplate<S>::UncheckedSetKey(UncheckedSetKey12,194
void AdditiveCipherTemplate<S>::GenerateBlock(GenerateBlock29,816
void AdditiveCipherTemplate<S>::ProcessData(ProcessData67,1899
void AdditiveCipherTemplate<S>::Resynchronize(Resynchronize126,3722
void AdditiveCipherTemplate<BASE>::Seek(Seek135,4021
void CFB_CipherTemplate<BASE>::UncheckedSetKey(UncheckedSetKey153,4501
void CFB_CipherTemplate<BASE>::Resynchronize(Resynchronize169,4967
void CFB_CipherTemplate<BASE>::ProcessData(ProcessData177,5240
void CFB_EncryptionTemplate<BASE>::CombineMessageAndShiftRegister(CombineMessageAndShiftRegister233,6912
void CFB_DecryptionTemplate<BASE>::CombineMessageAndShiftRegister(CombineMessageAndShiftRegister240,7134

src/cryptopp/queue.cpp,2291
class ByteQueueNode15,289
	ByteQueueNode(18,322
	inline size_t MaxSize(25,419
	inline size_t CurrentSize(27,474
	inline bool UsedUp(32,545
	inline void Clear(37,615
	inline size_t Put(42,671
	inline size_t Peek(53,950
	inline size_t Peek(62,1078
	inline size_t CopyTo(69,1244
	inline size_t CopyTo(76,1453
	inline size_t Get(83,1695
	inline size_t Get(90,1804
	inline size_t TransferTo(97,1940
	inline size_t TransferTo(105,2177
	inline size_t Skip(113,2457
	ByteQueueNode *next;next125,2661
	SecByteBlock buf;127,2686
	size_t m_head,128,2706
	size_t m_head, m_tail;128,2706
ByteQueue::ByteQueue(133,2800
void ByteQueue::SetNodeSize(SetNodeSize141,3112
ByteQueue::ByteQueue(147,3244
void ByteQueue::CopyFrom(CopyFrom153,3397
ByteQueue::~ByteQueue(~ByteQueue171,3835
void ByteQueue::Destroy(Destroy176,3881
void ByteQueue::IsolatedInitialize(IsolatedInitialize185,4034
lword ByteQueue::CurrentSize(CurrentSize191,4190
bool ByteQueue::IsEmpty(IsEmpty201,4391
void ByteQueue::Clear(Clear206,4504
size_t ByteQueue::Put2(Put2220,4744
void ByteQueue::CleanupUsedNodes(CleanupUsedNodes245,5337
void ByteQueue::LazyPut(LazyPut260,5693
void ByteQueue::LazyPutModifiable(LazyPutModifiable275,6001
void ByteQueue::UndoLazyPut(UndoLazyPut284,6202
void ByteQueue::FinalizeLazyPut(FinalizeLazyPut292,6389
size_t ByteQueue::Get(Get300,6519
size_t ByteQueue::Get(Get318,6782
size_t ByteQueue::Peek(Peek324,6925
size_t ByteQueue::Peek(Peek337,7118
size_t ByteQueue::TransferTo2(TransferTo2343,7267
size_t ByteQueue::CopyRangeTo2(CopyRangeTo2375,8170
void ByteQueue::Unget(Unget385,8532
void ByteQueue::Unget(Unget390,8597
const byte * ByteQueue::Spy(Spy406,8983
byte * ByteQueue::CreatePutSpace(CreatePutSpace418,9262
ByteQueue & ByteQueue::operator=(operator=433,9592
bool ByteQueue::operator==(operator==440,9702
void ByteQueue::swap(swap471,10320
void ByteQueue::Walker::IsolatedInitialize(IsolatedInitialize484,10740
size_t ByteQueue::Walker::Get(Get495,10998
size_t ByteQueue::Walker::Get(Get501,11121
size_t ByteQueue::Walker::Peek(Peek507,11272
size_t ByteQueue::Walker::Peek(Peek513,11398
size_t ByteQueue::Walker::TransferTo2(TransferTo2519,11555
size_t ByteQueue::Walker::CopyRangeTo2(CopyRangeTo2562,12522

src/cryptopp/mersenne.h,981
#define CRYPTOPP_MERSENNE_TWISTER_H10,448
NAMESPACE_BEGIN(16,554
class MersenneTwister 31,1263
	MersenneTwister(38,1504
	void GenerateBlock(52,2176
	word32 GenerateWord32(98,3619
	void DiscardBytes(120,4371
	word32 NextMersenneWord(132,4764
	void Twist(146,5121
	FixedSizeSecBlock<word32,word32177,5876
	FixedSizeSecBlock<word32, N+1> m_state;177,5876
	unsigned int m_seed;179,5968
	unsigned int m_idx;181,6043
class MT19937 191,6472
typedef MersenneTwister<0x9908B0DF x9908B0DF193,6585
typedef MersenneTwister<0x9908B0DF /*2567483615*/, 397, 624, 0x10DCD x10DCD193,6585
typedef MersenneTwister<0x9908B0DF /*2567483615*/, 397, 624, 0x10DCD /*69069*/, 4537> MT19937;193,6585
class MT19937ar 204,7146
typedef MersenneTwister<0x9908B0DF x9908B0DF206,7269
typedef MersenneTwister<0x9908B0DF /*2567483615*/, 397, 624, 0x6C078965 x6C078965206,7269
typedef MersenneTwister<0x9908B0DF /*2567483615*/, 397, 624, 0x6C078965 /*1812433253*/, 5489> MT19937ar;206,7269

src/cryptopp/polynomi.cpp,2227
void PolynomialOver<T>::Randomize(Randomize16,361
void PolynomialOver<T>::FromStr(FromStr24,703
unsigned int PolynomialOver<T>::CoefficientCount(CoefficientCount76,1539
typename PolynomialOver<T>::CoefficientType PolynomialOver<T>::GetCoefficient(GetCoefficient86,1859
PolynomialOver<T>&  PolynomialOver<T>::operator=(operator=92,2082
PolynomialOver<T>& PolynomialOver<T>::Accumulate(Accumulate104,2382
PolynomialOver<T>& PolynomialOver<T>::Reduce(Reduce118,2770
typename PolynomialOver<T>::CoefficientType PolynomialOver<T>::EvaluateAt(EvaluateAt132,3150
PolynomialOver<T>& PolynomialOver<T>::ShiftLeft(ShiftLeft149,3576
PolynomialOver<T>& PolynomialOver<T>::ShiftRight(ShiftRight167,3939
void PolynomialOver<T>::SetCoefficient(SetCoefficient182,4331
void PolynomialOver<T>::Negate(Negate190,4574
void PolynomialOver<T>::swap(swap198,4794
bool PolynomialOver<T>::Equals(Equals204,4915
PolynomialOver<T> PolynomialOver<T>::Plus(Plus219,5270
PolynomialOver<T> PolynomialOver<T>::Minus(Minus250,6052
PolynomialOver<T> PolynomialOver<T>::Inverse(Inverse281,6859
PolynomialOver<T> PolynomialOver<T>::Times(Times293,7168
PolynomialOver<T> PolynomialOver<T>::DividedBy(DividedBy309,7707
PolynomialOver<T> PolynomialOver<T>::Modulo(Modulo317,7942
PolynomialOver<T> PolynomialOver<T>::MultiplicativeInverse(MultiplicativeInverse325,8175
bool PolynomialOver<T>::IsUnit(IsUnit331,8379
std::istream& PolynomialOver<T>::Input(Input337,8523
std::ostream& PolynomialOver<T>::Output(Output370,9182
void PolynomialOver<T>::Divide(Divide430,10361
void RingOfPolynomialsOver<T>::CalculateAlpha(CalculateAlpha456,11208
typename RingOfPolynomialsOver<T>::Element RingOfPolynomialsOver<T>::Interpolate(Interpolate476,11747
typename RingOfPolynomialsOver<T>::CoefficientType RingOfPolynomialsOver<T>::InterpolateAt(InterpolateAt498,12484
void PrepareBulkPolynomialInterpolation(515,13039
void PrepareBulkPolynomialInterpolationAt(528,13427
Element BulkPolynomialInterpolateAt(555,14109
const PolynomialOverFixedRing<T, instance> &PolynomialOverFixedRing<T, instance>::Zero(Zero566,14466
const PolynomialOverFixedRing<T, instance> &PolynomialOverFixedRing<T, instance>::One(One572,14636

src/cryptopp/poly1305.h,135
#define CRYPTOPP_POLY1305_H46,2276
NAMESPACE_BEGIN(54,2422
class Poly1305 147,6432
	CRYPTOPP_CONSTANT(150,6519
	Poly1305(164,7205

src/cryptopp/gf2n.h,1190
#define CRYPTOPP_GF2N_H7,170
NAMESPACE_BEGIN(17,325
		class DivideByZero 27,591
			DivideByZero(30,648
		typedef unsigned int 33,739
inline bool operator==(operator==249,7954
inline bool operator!=(operator!=252,8076
inline bool operator> 255,8210
inline bool operator>=(operator>=258,8360
inline bool operator< 261,8511
inline bool operator<=(operator<=264,8661
inline CryptoPP::PolynomialMod2 operator&(267,8796
inline CryptoPP::PolynomialMod2 operator^(269,8933
inline CryptoPP::PolynomialMod2 operator+(271,9070
inline CryptoPP::PolynomialMod2 operator-(273,9208
inline CryptoPP::PolynomialMod2 operator*(275,9347
inline CryptoPP::PolynomialMod2 operator/(277,9486
inline CryptoPP::PolynomialMod2 operator%(279,9629
CRYPTOPP_DLL_TEMPLATE_CLASS AbstractGroup<AbstractGroup283,9962
CRYPTOPP_DLL_TEMPLATE_CLASS AbstractRing<AbstractRing284,10022
CRYPTOPP_DLL_TEMPLATE_CLASS AbstractEuclideanDomain<AbstractEuclideanDomain285,10081
CRYPTOPP_DLL_TEMPLATE_CLASS EuclideanDomainOf<EuclideanDomainOf286,10151
CRYPTOPP_DLL_TEMPLATE_CLASS QuotientRing<QuotientRing287,10215
class CRYPTOPP_DLL GF2NPP : public GF2NP350,12228
template<> inline void swap(371,12918

src/cryptopp/asn.cpp,2041
NAMESPACE_BEGIN(13,197
bool BERLengthDecode(38,598
bool BERLengthDecode(76,1208
void DEREncodeNull(87,1468
void BERDecodeNull(93,1560
size_t DEREncodeOctetString(104,1788
size_t DEREncodeOctetString(112,2015
size_t BERDecodeOctetString(117,2165
size_t BERDecodeOctetString(135,2533
size_t DEREncodeTextString(151,2872
size_t BERDecodeTextString(159,3130
size_t DEREncodeBitString(179,3573
size_t BERDecodeBitString(188,3851
void DERReencode(213,4473
void OID::EncodeValue(EncodeValue230,4899
size_t OID::DecodeValue(DecodeValue237,5132
void OID::DEREncode(DEREncode256,5447
void OID::BERDecode(BERDecode268,5792
void OID::BERDecodeAndCheck(BERDecodeAndCheck297,6321
inline BufferedTransformation & EncodedObjectFilter::CurrentTarget(CurrentTarget304,6448
void EncodedObjectFilter::Put(Put312,6625
BERGeneralDecoder::BERGeneralDecoder(392,8570
BERGeneralDecoder::BERGeneralDecoder(398,8720
void BERGeneralDecoder::Init(Init404,8865
BERGeneralDecoder::~BERGeneralDecoder(~BERGeneralDecoder417,9198
bool BERGeneralDecoder::EndReached(EndReached430,9392
byte BERGeneralDecoder::PeekByte(PeekByte441,9600
void BERGeneralDecoder::CheckByte(CheckByte449,9709
void BERGeneralDecoder::MessageEnd(MessageEnd456,9824
size_t BERGeneralDecoder::TransferTo2(TransferTo2472,10095
size_t BERGeneralDecoder::CopyRangeTo2(CopyRangeTo2481,10463
lword BERGeneralDecoder::ReduceLength(ReduceLength488,10745
DERGeneralEncoder::DERGeneralEncoder(499,10922
DERGeneralEncoder::DERGeneralEncoder(506,11292
DERGeneralEncoder::~DERGeneralEncoder(~DERGeneralEncoder511,11455
void DERGeneralEncoder::MessageEnd(MessageEnd524,11647
void X509PublicKey::BERDecode(BERDecode535,11907
void X509PublicKey::DEREncode(DEREncode550,12558
void PKCS8PrivateKey::BERDecode(BERDecode567,13084
void PKCS8PrivateKey::DEREncode(DEREncode587,13845
void PKCS8PrivateKey::BERDecodeOptionalAttributes(BERDecodeOptionalAttributes605,14401
void PKCS8PrivateKey::DEREncodeOptionalAttributes(DEREncodeOptionalAttributes610,14529

src/cryptopp/md5.h,227
#define CRYPTOPP_MD5_H2,24
NAMESPACE_BEGIN(6,75
class MD5 14,261
	static void InitState(17,360
	static void Transform(18,406
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(19,467
using namespace Weak1;26,680

src/cryptopp/nbtheory.h,303
#define CRYPTOPP_NBTHEORY_H7,190
NAMESPACE_BEGIN(13,291
inline Integer GCD(105,5229
inline bool RelativelyPrime(107,5315
inline Integer LCM(109,5428
inline Integer EuclideanMultiplicativeInverse(111,5518
inline Integer ModularExponentiation(126,6499
class CRYPTOPP_DLL PrimeAndGenerator148,7835

src/cryptopp/sha3.h,781
#define CRYPTOPP_SHA3_H12,547
NAMESPACE_BEGIN(17,622
class SHA3 28,1180
	SHA3(36,1519
	unsigned int DigestSize(37,1591
	std::string AlgorithmName(38,1648
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(39,1732
	unsigned int OptimalDataAlignment(40,1813
	inline unsigned int r(48,2104
	FixedSizeSecBlock<FixedSizeSecBlock50,2171
	FixedSizeSecBlock<word64, 25> m_state;50,2171
	unsigned int m_digestSize,51,2212
	unsigned int m_digestSize, m_counter;51,2212
class SHA3_Final 59,2523
	CRYPTOPP_CONSTANT(62,2567
	static std::string StaticAlgorithmName(67,2754
	unsigned int BlockSize(68,2847
typedef SHA3_Final<28> SHA3_224;77,3190
typedef SHA3_Final<32> SHA3_256;81,3308
typedef SHA3_Final<48> SHA3_384;85,3426
typedef SHA3_Final<64> SHA3_512;89,3544

src/cryptopp/pubkey.h,10807
#define CRYPTOPP_PUBKEY_H35,1336
# define MAYBE_RETURN(56,1733
# define MAYBE_RETURN(58,1775
NAMESPACE_BEGIN(61,1830
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE RandomizedTrapdoorFunction : public TrapdoorFunctionBounds102,4378
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE TrapdoorFunction : public RandomizedTrapdoorFunction128,5794
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE RandomizedTrapdoorFunctionInverse158,7449
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE TrapdoorFunctionInverse : public RandomizedTrapdoorFunctionInverse183,8903
class CRYPTOPP_NO_VTABLE PK_EncryptionMessageEncodingMethod214,10421
class CRYPTOPP_NO_VTABLE TF_Base237,11424
	typedef TFI TrapdoorFunctionInterface;244,11580
	typedef MEI MessageEncodingInterface;247,11708
class CRYPTOPP_NO_VTABLE PK_FixedLengthCryptoSystemImpl : public BASE257,12092
class CRYPTOPP_NO_VTABLE TF_CryptoSystemBase : public PK_FixedLengthCryptoSystemImpl<PK_FixedLengthCryptoSystemImpl276,12874
class CRYPTOPP_NO_VTABLE TF_CryptoSystemBase : public PK_FixedLengthCryptoSystemImpl<INTFACE>, protected BASE276,12874
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE TF_DecryptorBase : public TF_CryptoSystemBase<TF_CryptoSystemBase293,13778
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE TF_EncryptorBase : public TF_CryptoSystemBase<TF_CryptoSystemBase303,14279
typedef std::pair<const byte 314,14820
typedef std::pair<const byte *, unsigned int> HashIdentifier;314,14820
class CRYPTOPP_NO_VTABLE PK_SignatureMessageEncodingMethod322,15283
	struct HashIdentifierLookup388,19227
		template <class H> struct HashIdentifierLookup2390,19261
			static HashIdentifier CRYPTOPP_API Lookup(392,19317
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE PK_MessageAccumulatorBase : public PK_MessageAccumulator454,22232
class PK_MessageAccumulatorImpl 477,22959
	HashTransformation & AccessHash(480,23079
class CRYPTOPP_NO_VTABLE TF_SignatureSchemeBase : public INTFACE,485,23191
class CRYPTOPP_NO_VTABLE TF_SignatureSchemeBase : public INTFACE, protected BASE485,23191
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE TF_SignerBase : public TF_SignatureSchemeBase<TF_SignatureSchemeBase513,24571
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE TF_VerifierBase : public TF_SignatureSchemeBase<TF_SignatureSchemeBase523,25088
struct TF_CryptoSchemeOptions537,25717
	typedef T1 AlgorithmInfo;539,25751
	typedef T2 Keys;540,25779
	typedef typename Keys::PrivateKey PrivateKey;541,25798
	typedef typename Keys::PublicKey PublicKey;542,25846
	typedef T3 MessageEncodingMethod;543,25892
struct TF_SignatureSchemeOptions 548,25992
	typedef T4 HashFunction;550,26073
	typedef SCHEME_OPTIONS SchemeOptions;558,26300
	typedef KEY_CLASS KeyClass;559,26340
        typedef typename SchemeOptions::MessageEncodingMethod::HashIdentifierLookup::template 595,27596
		typedef typename SchemeOptions::HashFunction 600,27822
class TF_ObjectImplExtRef 607,27971
	virtual ~TF_ObjectImplExtRef(610,28064
	TF_ObjectImplExtRef(612,28102
	void SetKeyPtr(613,28166
	const KEY & GetKey(615,28219
	KEY & AccessKey(616,28266
	const KEY * m_pKey;619,28377
	typedef KEY_CLASS KeyClass;627,28586
class TF_DecryptorImpl 640,28856
class TF_EncryptorImpl 646,29023
class TF_SignerImpl 652,29189
class TF_VerifierImpl 658,29350
class CRYPTOPP_NO_VTABLE MaskGeneratingFunction666,29619
class P1363_MGF1 696,31165
	CRYPTOPP_STATIC_CONSTEXPR const char* CRYPTOPP_API StaticAlgorithmName(699,31227
	void GenerateAndMask(700,31319
class P1363_KDF2712,31784
	static void CRYPTOPP_API DeriveKey(715,31814
class DL_BadElement 726,32336
	DL_BadElement(729,32396
	typedef DL_GroupParameters<T> ThisClass;738,32767
	typedef T Element;741,32821
	typedef GROUP_PRECOMP GroupPrecomputation;950,42629
	typedef typename GROUP_PRECOMP::Element 951,42674
	typedef BASE_PRECOMP BasePrecomputation;952,42725
class CRYPTOPP_NO_VTABLE DL_Key977,43754
	typedef DL_PublicKey<T> ThisClass;994,44330
	typedef T Element;997,44378
	typedef DL_PrivateKey<T> ThisClass;1031,45955
	typedef T Element;1034,46004
void DL_PublicKey<T>::AssignFrom(AssignFrom1062,46892
	typedef GP GroupParameters;1082,47351
class DL_PrivateKeyImpl 1104,47979
	typedef typename GP::Element Element;1107,48101
	virtual ~DL_PrivateKeyImpl(1109,48143
	bool Validate(1112,48210
	bool GetVoidValue(1125,48610
	void AssignFrom(1130,48806
	void GenerateRandom(1135,48924
	bool SupportsPrecomputation(1143,49246
	void Precompute(1145,49301
	void LoadPrecomputation(1148,49432
	void SavePrecomputation(1151,49585
	const DL_GroupParameters<Element> & GetAbstractGroupParameters(1155,49753
	DL_GroupParameters<Element> & AccessAbstractGroupParameters(1156,49863
	const Integer & GetPrivateExponent(1159,49988
	void SetPrivateExponent(1160,50047
	void BERDecodePrivateKey(1163,50125
	void DEREncodePrivateKey(1165,50218
	Integer m_x;1169,50315
class DL_PrivateKey_WithSignaturePairwiseConsistencyTest 1174,50390
	virtual ~DL_PrivateKey_WithSignaturePairwiseConsistencyTest(1177,50474
	void GenerateRandom(1179,50543
class DL_PublicKeyImpl 1194,50935
	typedef typename GP::Element Element;1197,51053
	virtual ~DL_PublicKeyImpl(1199,51095
	bool Validate(1202,51150
	bool GetVoidValue(1209,51437
	void AssignFrom(1214,51632
	bool SupportsPrecomputation(1219,51749
	void Precompute(1221,51804
	void LoadPrecomputation(1227,52123
	void SavePrecomputation(1233,52397
	const DL_GroupParameters<Element> & GetAbstractGroupParameters(1240,52683
	DL_GroupParameters<Element> & AccessAbstractGroupParameters(1241,52793
	const DL_FixedBasePrecomputation<Element> & GetPublicPrecomputation(1244,52917
	DL_FixedBasePrecomputation<Element> & AccessPublicPrecomputation(1245,53011
	bool operator==(operator==1248,53117
	typename GP::BasePrecomputation m_ypc;1252,53308
class CRYPTOPP_NO_VTABLE DL_ElgamalLikeSignatureAlgorithm1257,53435
class CRYPTOPP_NO_VTABLE DeterministicSignatureAlgorithm1281,54749
	typedef T Element;1294,55109
class CRYPTOPP_NO_VTABLE DL_KeyDerivationAlgorithm1304,55663
class CRYPTOPP_NO_VTABLE DL_SymmetricEncryptionAlgorithm1315,56167
	typedef KI KeyInterface;1335,57147
	typedef typename KI::Element 1336,57174
class CRYPTOPP_NO_VTABLE DL_SignatureSchemeBase : public INTFACE,1353,58027
class CRYPTOPP_NO_VTABLE DL_SignatureSchemeBase : public INTFACE, public DL_Base<DL_Base1353,58027
class CRYPTOPP_NO_VTABLE DL_SignerBase : public DL_SignatureSchemeBase<DL_SignatureSchemeBase1410,60659
class CRYPTOPP_NO_VTABLE DL_VerifierBase : public DL_SignatureSchemeBase<DL_SignatureSchemeBase1519,64946
class CRYPTOPP_NO_VTABLE DL_CryptoSystemBase : public PK,1592,68323
	typedef typename DL_Base<DL_Base1595,68413
	typedef T Element;1626,69756
	typedef T Element;1666,71332
struct DL_SchemeOptionsBase1697,72729
	typedef T1 AlgorithmInfo;1699,72761
	typedef T2 GroupParameters;1700,72789
	typedef typename GroupParameters::Element Element;1701,72819
struct DL_KeyedSchemeOptions 1708,73029
	typedef T2 Keys;1710,73137
	typedef typename Keys::PrivateKey PrivateKey;1711,73156
	typedef typename Keys::PublicKey PublicKey;1712,73204
struct DL_SignatureSchemeOptions 1722,73556
	typedef T3 SignatureAlgorithm;1724,73632
	typedef T4 MessageEncodingMethod;1725,73665
	typedef T5 HashFunction;1726,73701
struct DL_CryptoSchemeOptions 1736,74053
	typedef T3 KeyAgreementAlgorithm;1738,74126
	typedef T4 KeyDerivationAlgorithm;1739,74162
	typedef T5 SymmetricEncryptionAlgorithm;1740,74199
	typedef SCHEME_OPTIONS SchemeOptions;1751,74600
	typedef typename KEY::Element 1752,74640
		typedef typename SchemeOptions::MessageEncodingMethod::HashIdentifierLookup 1770,75153
		typedef typename SchemeOptions::HashFunction 1775,75385
	typedef typename KEY::Element 1791,75824
class DL_SignerImpl 1813,76926
	PK_MessageAccumulator * NewSignatureAccumulator(1816,77084
class DL_VerifierImpl 1827,77502
	PK_MessageAccumulator * NewVerificationAccumulator(1830,77663
class DL_EncryptorImpl 1839,77957
class DL_DecryptorImpl 1846,78256
	typedef T Element;1858,78704
enum CofactorMultiplicationOption 1915,81282
	NO_COFACTOR_MULTIPLICTION,1917,81367
	COMPATIBLE_COFACTOR_MULTIPLICTION,1921,81625
	INCOMPATIBLE_COFACTOR_MULTIPLICTION}INCOMPATIBLE_COFACTOR_MULTIPLICTION1925,81897
typedef EnumToType<CofactorMultiplicationOption,CofactorMultiplicationOption1927,81939
typedef EnumToType<CofactorMultiplicationOption, NO_COFACTOR_MULTIPLICTION> NoCofactorMultiplication;1927,81939
typedef EnumToType<CofactorMultiplicationOption,CofactorMultiplicationOption1928,82042
typedef EnumToType<CofactorMultiplicationOption, COMPATIBLE_COFACTOR_MULTIPLICTION> CompatibleCofactorMultiplication;1928,82042
typedef EnumToType<CofactorMultiplicationOption,CofactorMultiplicationOption1929,82161
typedef EnumToType<CofactorMultiplicationOption, INCOMPATIBLE_COFACTOR_MULTIPLICTION> IncompatibleCofactorMultiplication;1929,82161
class DL_KeyAgreementAlgorithm_DH 1933,82386
	typedef ELEMENT Element;1936,82476
	CRYPTOPP_STATIC_CONSTEXPR const char* CRYPTOPP_API StaticAlgorithmName(1938,82505
	virtual ~DL_KeyAgreementAlgorithm_DH(1941,82675
	Element AgreeWithEphemeralPrivateKey(1943,82721
	Element AgreeWithStaticPrivateKey(1949,83121
class CRYPTOPP_NO_VTABLE PK_FinalTemplate : public BASE1989,84583
struct EncryptionStandard 2066,88118
struct SignatureStandard 2071,88343
	typedef typename STANDARD::EncryptionMessageEncodingMethod 2083,88742
	typedef STANDARD Standard;2087,88890
	typedef TF_CryptoSchemeOptions<ALG_INFO, KEYS, MessageEncodingMethod> SchemeOptions;2088,88919
	typedef PK_FinalTemplate<TF_DecryptorImpl<SchemeOptions> > Decryptor;2093,89210
	typedef PK_FinalTemplate<TF_EncryptorImpl<SchemeOptions> > Encryptor;2095,89322
	typedef STANDARD Standard;2112,89894
	typedef typename Standard::SignatureMessageEncodingMethod 2113,89923
	typedef TF_SignatureSchemeOptions<ALG_INFO, KEYS, MessageEncodingMethod, H> SchemeOptions;2114,90006
	typedef PK_FinalTemplate<TF_SignerImpl<SchemeOptions> > Signer;2119,90339
	typedef PK_FinalTemplate<TF_VerifierImpl<SchemeOptions> > Verifier;2121,90444
	typedef DL_SignatureSchemeOptions<ALG_INFO, KEYS, SA, MEM, H> SchemeOptions;2137,91003
	typedef PK_FinalTemplate<DL_SignerImpl<SchemeOptions> > Signer;2143,91269
	typedef PK_FinalTemplate<DL_VerifierImpl<SchemeOptions> > Verifier;2145,91374
class DL_ES 2155,91782
	typedef DL_CryptoSchemeOptions<ALG_INFO,ALG_INFO2157,91812
	typedef DL_CryptoSchemeOptions<ALG_INFO, KEYS,2157,91812
	typedef DL_CryptoSchemeOptions<ALG_INFO, KEYS, AA,2157,91812
	typedef DL_CryptoSchemeOptions<ALG_INFO, KEYS, AA, DA,2157,91812
	typedef DL_CryptoSchemeOptions<ALG_INFO, KEYS, AA, DA, EA> SchemeOptions;2157,91812
	typedef PK_FinalTemplate<DL_DecryptorImpl<SchemeOptions> > Decryptor;2161,91939
	typedef PK_FinalTemplate<DL_EncryptorImpl<SchemeOptions> > Encryptor;2163,92051

src/cryptopp/sha.h,327
#define CRYPTOPP_SHA_H8,276
# define CRYPTOPP_DISABLE_SHA_ASM16,533
NAMESPACE_BEGIN(19,578
typedef SHA1 SHA;33,1143
	CRYPTOPP_STATIC_CONSTEXPR const char* CRYPTOPP_API StaticAlgorithmName(74,3267
	static void CRYPTOPP_API Transform(85,3746
	CRYPTOPP_STATIC_CONSTEXPR const char* CRYPTOPP_API StaticAlgorithmName(86,3854

src/cryptopp/rc2.h,402
#define CRYPTOPP_RC2_H7,153
NAMESPACE_BEGIN(13,248
struct RC2_Info 17,339
	CRYPTOPP_CONSTANT(19,424
class RC2 27,756
	class Encryption 65,2253
		Encryption(68,2329
		Encryption(69,2348
		Encryption(71,2439
	class Decryption 78,2794
		Decryption(81,2870
		Decryption(82,2889
		Decryption(84,2980
typedef RC2::Encryption RC2Encryption;89,3140
typedef RC2::Decryption RC2Decryption;90,3180

src/cryptopp/trap.h,340
#define CRYPTOPP_TRAP_H17,1037
#  define CRYPTOPP_ASSERT(62,3117
#  define CRYPTOPP_ASSERT(66,3231
#  define CRYPTOPP_ASSERT(77,3940
#  define CRYPTOPP_ASSERT(92,4736
NAMESPACE_BEGIN(95,4786
class DebugTrapHandler 137,7418
typedef SignalHandler<SIGILL,SIGILL139,7492
typedef SignalHandler<SIGILL, false> DebugTrapHandler;139,7492

src/cryptopp/shark.h,510
#define CRYPTOPP_SHARK_H7,161
NAMESPACE_BEGIN(13,256
struct SHARK_Info 17,351
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(19,456
class SHARK 25,670
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION67,1758
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;67,1758
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION68,1814
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;68,1814
typedef SHARK::Encryption SHARKEncryption;71,1876
typedef SHARK::Decryption SHARKDecryption;72,1920

src/cryptopp/zdeflate.cpp,2359
	typedef std::reverse_bidirectional_iterator<unsigned int 17,689
	typedef std::reverse_bidirectional_iterator<unsigned int *, unsigned int> RevIt;17,689
	typedef std::reverse_iterator<unsigned int 19,817
	typedef std::reverse_iterator<unsigned int *, std::random_access_iterator_tag,19,817
	typedef std::reverse_iterator<unsigned int *, std::random_access_iterator_tag, unsigned int> RevIt;19,817
	typedef std::reverse_iterator<unsigned int *> RevIt;21,926
LowFirstBitWriter::LowFirstBitWriter(24,991
void LowFirstBitWriter::StartCounting(StartCounting30,1185
unsigned long LowFirstBitWriter::FinishCounting(FinishCounting37,1305
void LowFirstBitWriter::PutBits(PutBits44,1438
void LowFirstBitWriter::FlushBitBuffer(FlushBitBuffer67,2020
void LowFirstBitWriter::ClearBitBuffer(ClearBitBuffer87,2415
HuffmanEncoder::HuffmanEncoder(HuffmanEncoder94,2526
struct HuffmanNode99,2649
	HuffmanNode(102,2727
	HuffmanNode(104,2772
	size_t symbol;107,2859
	union {size_t parent;108,2876
	union {size_t parent; unsigned depth,108,2876
	union {size_t parent; unsigned depth, freq;108,2876
struct FreqLessThan111,2930
	inline bool operator()(operator()113,2954
	inline bool operator()(operator()114,3046
	inline bool operator()(operator()116,3186
void HuffmanEncoder::GenerateCodeLengths(GenerateCodeLengths119,3284
void HuffmanEncoder::Initialize(Initialize193,5622
inline void HuffmanEncoder::Encode(Encode225,6594
Deflator::Deflator(231,6806
Deflator::Deflator(239,7170
void Deflator::InitializeStaticEncoders(InitializeStaticEncoders247,7389
void Deflator::IsolatedInitialize(IsolatedInitialize259,7848
void Deflator::Reset(Reset283,8887
void Deflator::SetDeflateLevel(SetDeflateLevel310,9539
unsigned int Deflator::FillWindow(FillWindow340,10574
inline unsigned int Deflator::ComputeHash(ComputeHash379,11873
unsigned int Deflator::LongestMatch(LongestMatch385,12079
inline void Deflator::InsertString(InsertString436,13928
void Deflator::ProcessBuffer(ProcessBuffer444,14157
size_t Deflator::Put2(Put2515,15836
bool Deflator::IsolatedFlush(IsolatedFlush545,16536
void Deflator::LiteralByte(LiteralByte559,16818
void Deflator::MatchFound(MatchFound569,17028
inline unsigned int CodeLengthEncode(613,19508
void Deflator::EncodeBlock(EncodeBlock655,20459
void Deflator::EndBlock(EndBlock752,24708

src/cryptopp/blumshub.h,622
#define CRYPTOPP_BLUMSHUB_H8,189
NAMESPACE_BEGIN(14,290
class PublicBlumBlumShub 17,374
	virtual ~PublicBlumBlumShub(21,482
	PublicBlumBlumShub(23,519
	unsigned int GenerateBit(25,582
	byte GenerateByte(26,612
	void GenerateBlock(27,635
	void ProcessData(28,684
	bool IsSelfInverting(30,760
	bool IsForwardTransformation(31,806
	ModularArithmetic modn;34,874
	Integer current;35,900
	word maxBits,36,919
	word maxBits, bitsLeft;36,919
class BlumBlumShub 40,1003
	virtual ~BlumBlumShub(43,1063
	bool IsRandomAccess(49,1319
	const Integer p,53,1404
	const Integer p, q;53,1404
	const Integer x0;54,1426

src/cryptopp/bfinit.cpp,67
const word32 Blowfish::Base::s_init[Blowfish::Base::s_init15,384

src/cryptopp/fips140.h,325
#define CRYPTOPP_FIPS140_H12,588
NAMESPACE_BEGIN(17,666
enum PowerUpSelfTestStatus 38,1604
	POWER_UP_SELF_TEST_NOT_DONE,41,1689
	POWER_UP_SELF_TEST_FAILED,44,1849
	POWER_UP_SELF_TEST_PASSED47,2007
typedef PowerUpSelfTestStatus (CRYPTOPP_API * PGetPowerUpSelfTestStatus)76,3596
#define CRYPTOPP_DUMMY_DLL_MAC 109,5613

src/cryptopp/sharkbox.cpp,169
const byte SHARK::Dec::sbox[SHARK::Dec::sbox29,1510
const word64 SHARK::Enc::cbox[SHARK::Enc::cbox48,2850
const word64 SHARK::Dec::cbox[SHARK::Dec::cbox2107,62395

src/cryptopp/modes.cpp,1292
NAMESPACE_BEGIN(14,215
void CipherModeBase::ResizeBuffers(ResizeBuffers28,555
void CFB_ModePolicy::Iterate(Iterate33,642
void CFB_ModePolicy::TransformRegister(TransformRegister58,1667
void CFB_ModePolicy::CipherResynchronize(CipherResynchronize67,2137
void CFB_ModePolicy::SetFeedbackSize(SetFeedbackSize74,2321
void CFB_ModePolicy::ResizeBuffers(ResizeBuffers81,2551
void OFB_ModePolicy::WriteKeystream(WriteKeystream87,2659
void OFB_ModePolicy::CipherResynchronize(CipherResynchronize97,3175
void CTR_ModePolicy::SeekToIteration(SeekToIteration105,3422
void CTR_ModePolicy::IncrementCounterBy256(IncrementCounterBy256117,3701
void CTR_ModePolicy::OperateKeystream(OperateKeystream122,3811
void CTR_ModePolicy::CipherResynchronize(CipherResynchronize142,4632
void BlockOrientedCipherModeBase::UncheckedSetKey(UncheckedSetKey151,4910
void BlockOrientedCipherModeBase::ResizeBuffers(ResizeBuffers163,5252
void ECB_OneWay::ProcessData(ProcessData169,5375
void CBC_Encryption::ProcessData(ProcessData175,5618
void CBC_CTS_Encryption::ProcessLastBlock(ProcessLastBlock188,6168
void CBC_Decryption::ResizeBuffers(ResizeBuffers215,6921
void CBC_Decryption::ProcessData(ProcessData221,7042
void CBC_CTS_Decryption::ProcessLastBlock(ProcessLastBlock235,7655

src/cryptopp/pssr.cpp,736
template<> const byte EMSA2HashId<RIPEMD160>::id id12,200
template<> const byte EMSA2HashId<RIPEMD128>::id id13,258
template<> const byte EMSA2HashId<Whirlpool>::id id14,316
size_t PSSR_MEM_Base::MinRepresentativeBitLength(MinRepresentativeBitLength18,404
size_t PSSR_MEM_Base::MaxRecoverableLength(MaxRecoverableLength25,682
bool PSSR_MEM_Base::IsProbabilistic(IsProbabilistic32,980
bool PSSR_MEM_Base::AllowNonrecoverablePart(AllowNonrecoverablePart37,1058
bool PSSR_MEM_Base::RecoverablePartFirst(RecoverablePartFirst42,1134
void PSSR_MEM_Base::ComputeMessageRepresentative(ComputeMessageRepresentative47,1208
DecodingResult PSSR_MEM_Base::RecoverMessageFromRepresentative(RecoverMessageFromRepresentative96,3478

src/cryptopp/arc4.cpp,404
#define CRYPTOPP_ENABLE_NAMESPACE_WEAK 10,405
namespace Weak1 14,495
void ARC4_TestInstantiations(17,586
ARC4_Base::~ARC4_Base(~ARC4_Base23,644
void ARC4_Base::UncheckedSetKey(UncheckedSetKey28,694
static inline unsigned int MakeByte(56,1362
void ARC4_Base::GenerateBlock(GenerateBlock67,1592
void ARC4_Base::ProcessData(ProcessData73,1738
void ARC4_Base::DiscardBytes(DiscardBytes102,2193

src/cryptopp/mqueue.cpp,648
NAMESPACE_BEGIN(9,141
size_t MessageQueue::CopyRangeTo2(CopyRangeTo216,293
size_t MessageQueue::TransferTo2(TransferTo224,586
bool MessageQueue::GetNextMessage(GetNextMessage32,932
unsigned int MessageQueue::CopyMessagesTo(CopyMessagesTo45,1197
void MessageQueue::swap(swap59,1676
const byte * MessageQueue::Spy(Spy65,1790
unsigned int EqualityComparisonFilter::MapChannel(MapChannel74,2063
size_t EqualityComparisonFilter::ChannelPut2(ChannelPut284,2274
bool EqualityComparisonFilter::ChannelMessageSeriesEnd(ChannelMessageSeriesEnd135,3413
bool EqualityComparisonFilter::HandleMismatchDetected(HandleMismatchDetected164,4076

src/cryptopp/iterhash.h,926
#define CRYPTOPP_ITERHASH_H2,29
NAMESPACE_BEGIN(9,148
	typedef T HashWordType;30,928
template <class T_HashWordType, class T_Endianness, unsigned int T_BlockSize,100,4194
	typedef T_Endianness ByteOrderClass;104,4409
	typedef T_HashWordType HashWordType;105,4448
template <class T_HashWordType, class T_Endianness, unsigned int T_BlockSize,149,6330
template <class T_HashWordType, class T_Endianness, unsigned int T_BlockSize, unsigned int T_StateSize,149,6330
template <class T_HashWordType, class T_Endianness, unsigned int T_BlockSize, unsigned int T_StateSize, class T_Transform, unsigned int T_DigestSize 149,6330
	CRYPTOPP_DLL_TEMPLATE_CLASS IteratedHashBase<IteratedHashBase173,7461
	CRYPTOPP_STATIC_TEMPLATE_CLASS IteratedHashBase<IteratedHashBase174,7537
	CRYPTOPP_DLL_TEMPLATE_CLASS IteratedHashBase<IteratedHashBase176,7625
	CRYPTOPP_STATIC_TEMPLATE_CLASS IteratedHashBase<IteratedHashBase177,7701

src/cryptopp/trdlocal.cpp,299
#define WIN32_LEAN_AND_MEAN18,384
NAMESPACE_BEGIN(22,445
ThreadLocalStorage::ThreadLocalStorage(ThreadLocalStorage29,694
ThreadLocalStorage::~ThreadLocalStorage(~ThreadLocalStorage45,1083
void ThreadLocalStorage::SetValue(SetValue74,1631
void *ThreadLocalStorage::GetValue(GetValue86,1918

src/cryptopp/base64.cpp,567
NAMESPACE_BEGIN(6,111
	const byte s_stdVec[s_stdVec10,154
	const byte s_urlVec[s_urlVec11,248
	const byte s_padding 12,342
void Base64Encoder::IsolatedInitialize(IsolatedInitialize15,377
void Base64URLEncoder::IsolatedInitialize(IsolatedInitialize32,1078
void Base64Decoder::IsolatedInitialize(IsolatedInitialize49,1782
const int *Base64Decoder::GetDecodingLookupArray(GetDecodingLookupArray56,2049
void Base64URLDecoder::IsolatedInitialize(IsolatedInitialize69,2321
const int *Base64URLDecoder::GetDecodingLookupArray(GetDecodingLookupArray76,2591

src/cryptopp/eax.h,512
#define CRYPTOPP_EAX_H7,155
NAMESPACE_BEGIN(13,244
class EAX_Final 76,2530
	static std::string StaticAlgorithmName(79,2577
	bool IsForwardTransformation(81,2692
	CMAC_Base & AccessMAC(85,2771
	CMAC<T_BlockCipher> m_cmac;86,2814
#undef EAX90,2917
struct EAX 101,3348
	typedef EAX_Final<T_BlockCipher,T_BlockCipher103,3414
	typedef EAX_Final<T_BlockCipher, true> Encryption;103,3414
	typedef EAX_Final<T_BlockCipher,T_BlockCipher104,3467
	typedef EAX_Final<T_BlockCipher, false> Decryption;104,3467

src/cryptopp/ida.cpp,1821
const CryptoPP::GF2_32 field;14,267
	typedef std::reverse_bidirectional_iterator<const byte 21,523
	typedef std::reverse_bidirectional_iterator<const byte *, const byte> RevIt;21,523
	typedef std::reverse_iterator<const byte 23,647
	typedef std::reverse_iterator<const byte *, std::random_access_iterator_tag,23,647
	typedef std::reverse_iterator<const byte *, std::random_access_iterator_tag, const byte> RevIt;23,647
	typedef std::reverse_iterator<const byte *> RevIt;25,752
void RawIDA::IsolatedInitialize(IsolatedInitialize28,815
unsigned int RawIDA::InsertInputChannel(InsertInputChannel61,1835
unsigned int RawIDA::LookupInputChannel(LookupInputChannel89,2720
void RawIDA::ChannelData(ChannelData98,2971
lword RawIDA::InputBuffered(InputBuffered130,3763
void RawIDA::ComputeV(ComputeV136,3931
void RawIDA::AddOutputChannel(AddOutputChannel152,4395
void RawIDA::PrepareInterpolation(PrepareInterpolation161,4712
void RawIDA::ProcessInputQueues(ProcessInputQueues169,5012
void RawIDA::FlushOutputQueues(FlushOutputQueues230,6830
void RawIDA::OutputMessageEnds(OutputMessageEnds236,7023
void SecretSharing::IsolatedInitialize(IsolatedInitialize247,7351
size_t SecretSharing::Put2(Put2253,7535
void SecretRecovery::IsolatedInitialize(IsolatedInitialize290,8455
void SecretRecovery::FlushOutputQueues(FlushOutputQueues296,8724
void SecretRecovery::OutputMessageEnds(OutputMessageEnds304,8952
void InformationDispersal::IsolatedInitialize(IsolatedInitialize318,9335
size_t InformationDispersal::Put2(Put2325,9547
void InformationRecovery::IsolatedInitialize(IsolatedInitialize351,10137
void InformationRecovery::FlushOutputQueues(FlushOutputQueues357,10332
void InformationRecovery::OutputMessageEnds(OutputMessageEnds371,10708
size_t PaddingRemover::Put2(Put2383,11015

src/cryptopp/base32.cpp,333
NAMESPACE_BEGIN(6,148
	const byte s_vecUpper[s_vecUpper10,191
	const byte s_vecLower[s_vecLower11,255
void Base32Encoder::IsolatedInitialize(IsolatedInitialize14,324
void Base32Decoder::IsolatedInitialize(IsolatedInitialize22,673
const int *Base32Decoder::GetDefaultDecodingLookupArray(GetDefaultDecodingLookupArray29,947

src/cryptopp/fipstest.cpp,1118
#define CRYPTOPP_DEFAULT_NO_DLL8,141
#	  undef CRYPTOPP_WIN32_AVAILABLE19,489
#define _WIN32_WINNT 26,610
#define _CRT_DEBUGGER_HOOK 33,732
#define _CRT_DEBUGGER_HOOK 35,786
SecByteBlock g_actualMac;55,1205
unsigned long g_macFileLocation 56,1232
const void* g_BaseAddressOfMAC 63,1568
static const byte s_moduleMac[s_moduleMac66,1725
static HMODULE s_hModule 70,1938
const byte * CRYPTOPP_API GetActualMacAndLocation(73,1982
void KnownAnswerTest(80,2196
void X917RNG_KnownAnswerTest(92,2585
void KnownAnswerTest(112,3335
void SymmetricEncryptionKnownAnswerTest(127,4146
void KnownAnswerTest(158,5582
void SecureHashKnownAnswerTest(169,6000
void MAC_KnownAnswerTest(176,6158
void SignatureKnownAnswerTest(186,6478
void EncryptionPairwiseConsistencyTest(205,7325
void SignaturePairwiseConsistencyTest(241,8029
void SignaturePairwiseConsistencyTest(263,8480
MessageAuthenticationCode * NewIntegrityCheckingMAC(271,8727
bool IntegrityCheckModule(277,8946
void DoPowerUpSelfTest(463,16428
void DoDllPowerUpSelfTest(616,24424
void DoDllPowerUpSelfTest(623,24520
BOOL APIENTRY DllMain(635,24778

src/cryptopp/rc5.h,529
#define CRYPTOPP_RC5_H7,153
NAMESPACE_BEGIN(12,225
struct RC5_Info 17,341
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(19,453
	typedef word32 RC5_WORD;20,531
class RC5 27,707
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION52,1397
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;52,1397
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION53,1453
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;53,1453
typedef RC5::Encryption RC5Encryption;56,1515
typedef RC5::Decryption RC5Decryption;57,1555

src/cryptopp/ec2n.cpp,682
NAMESPACE_BEGIN(14,248
void EC2N::DEREncode(DEREncode32,630
bool EC2N::DecodePoint(DecodePoint41,848
bool EC2N::DecodePoint(DecodePoint47,1053
void EC2N::EncodePoint(EncodePoint100,2333
void EC2N::EncodePoint(EncodePoint118,2807
EC2N::Point EC2N::BERDecodePoint(BERDecodePoint125,3070
void EC2N::DEREncodePoint(DEREncodePoint135,3283
bool EC2N::ValidateParameters(ValidateParameters142,3503
bool EC2N::VerifyPoint(VerifyPoint155,3885
bool EC2N::Equal(Equal164,4182
const EC2N::Point& EC2N::Identity(Identity178,4463
const EC2N::Point& EC2N::Inverse(Inverse183,4549
const EC2N::Point& EC2N::Add(Add196,4750
const EC2N::Point& EC2N::Double(Double218,5417

src/cryptopp/modarith.h,257
#define CRYPTOPP_MODARITH_H7,181
NAMESPACE_BEGIN(17,364
	typedef int RandomizationParameter;38,1280
	typedef Integer Element;39,1318
	bool operator==(operator==249,10257
class CRYPTOPP_DLL MontgomeryRepresentation : public ModularArithmetic271,11323

src/cryptopp/config.h,10348
#define CRYPTOPP_CONFIG_H7,156
#	define IS_BIG_ENDIAN13,625
#	define IS_LITTLE_ENDIAN19,798
#  define USE_MS_CNGAPI51,2619
#  define USE_MS_CRYPTOAPI53,2652
# define CRYPTOPP_NO_UNALIGNED_DATA_ACCESS60,2994
#define CRYPTOPP_VERSION 66,3132
# define CRYPTOPP_DATA_DIR 72,3401
# define GZIP_OS_CODE 86,3886
# define PREFER_BERKELEY_STYLE_SOCKETS108,4935
#define CRYPTOPP_RIJNDAEL_NAME 116,5196
# define CRYPTOPP_DEBUG 125,5710
# define CRYPTOPP_INIT_PRIORITY 138,6333
# define CRYPTOPP_USER_PRIORITY 145,6682
# define CRYPTOPP_USER_PRIORITY 147,6753
# define HAVE_GCC_CONSTRUCTOR1 152,7059
# define HAVE_GCC_CONSTRUCTOR0 157,7278
# define HAVE_MSC_INIT_PRIORITY 161,7370
#define WORKAROUND_MS_BUG_Q258000175,7844
#		define CRYPTOPP_ENABLE_NAMESPACE_WEAK 189,8515
#		define Weak1 190,8559
#       define CryptoPP192,8653
#       define NAMESPACE_BEGIN(193,8678
#       define NAMESPACE_END194,8713
#       define DOCUMENTED_TYPEDEF(196,8811
#		define protected 198,8954
#       define NAMESPACE_BEGIN(200,8990
#       define NAMESPACE_END 201,9039
#       define DOCUMENTED_TYPEDEF(202,9071
#define ANONYMOUS_NAMESPACE_BEGIN 204,9133
#define ANONYMOUS_NAMESPACE_END 205,9180
#define USING_NAMESPACE(206,9215
#define DOCUMENTED_NAMESPACE_BEGIN(207,9262
#define DOCUMENTED_NAMESPACE_END 208,9315
#		define TYPE_OF_SOCKLEN_T 216,9757
#		define TYPE_OF_SOCKLEN_T 218,9798
#	define __USE_W32_SOCKETS223,9924
typedef unsigned char byte;226,9962
NAMESPACE_BEGIN(228,10065
typedef unsigned short word16;230,10094
typedef unsigned int word32;231,10126
	typedef unsigned __int64 word64;234,10206
	#define W64LIT(235,10241
	typedef unsigned long word64;237,10296
	#define W64LIT(238,10328
	typedef unsigned long long word64;240,10361
	#define W64LIT(241,10398
typedef word64 lword;245,10494
const lword LWORD_MAX 246,10517
	#define CRYPTOPP_GCC_VERSION 255,10775
	#define CRYPTOPP_LLVM_CLANG_VERSION 260,11032
	#define CRYPTOPP_CLANG_INTEGRATED_ASSEMBLER 261,11143
	#define CRYPTOPP_APPLE_CLANG_VERSION 263,11254
	#define CRYPTOPP_CLANG_INTEGRATED_ASSEMBLER 264,11366
	#define CRYPTOPP_MSC_VERSION 268,11441
	#define CRYPTOPP_GCC_DIAGNOSTIC_AVAILABLE 273,11702
	#define CRYPTOPP_DISABLE_INTEL_ASM 279,12195
	typedef word32 hword;285,12752
	typedef word64 word;286,12776
	#define CRYPTOPP_NATIVE_DWORD_AVAILABLE 288,12806
			typedef word32 hword;293,13268
			typedef word64 word;294,13294
			typedef __uint128_t dword;295,13319
			typedef __uint128_t word128;296,13350
			#define CRYPTOPP_WORD128_AVAILABLE 297,13383
			typedef word16 hword;300,13551
			typedef word32 word;301,13577
			typedef word64 dword;302,13602
		#define CRYPTOPP_BOOL_SLOW_WORD64 306,13722
		typedef word16 hword;307,13761
		typedef word32 word;308,13786
		typedef word64 dword;309,13810
	#define CRYPTOPP_BOOL_SLOW_WORD64 313,13887
const unsigned int WORD_SIZE 316,13935
const unsigned int WORD_BITS 317,13981
		#define CRYPTOPP_L1_CACHE_LINE_SIZE 325,14366
		#define CRYPTOPP_L1_CACHE_LINE_SIZE 328,14474
		#define CRYPTOPP_ALIGN_DATA(334,14588
		#define CRYPTOPP_ALIGN_DATA(336,14669
		#define CRYPTOPP_ALIGN_DATA(338,14739
		#define CRYPTOPP_SECTION_ALIGN16 345,14988
		#define CRYPTOPP_SECTION_ALIGN16347,15078
	#define CRYPTOPP_SECTION_INIT 353,15400
	#define CRYPTOPP_SECTION_INIT 355,15536
	#define CRYPTOPP_SECTION_INIT357,15613
	#define CRYPTOPP_FASTCALL 361,15701
	#define CRYPTOPP_FASTCALL363,15747
#define CRYPTOPP_NO_VTABLE 367,15802
#define CRYPTOPP_NO_VTABLE369,15858
#define CRYPTOPP_DISABLE_UNCAUGHT_EXCEPTION406,17735
#define CRYPTOPP_UNCAUGHT_EXCEPTION_AVAILABLE410,17835
# define CRYPTOPP_DISABLE_ASM415,18076
# define __SSE2__ 421,18446
	#define CRYPTOPP_X86_ASM_AVAILABLE426,18722
		#define CRYPTOPP_BOOL_SSE2_ASM_AVAILABLE 429,18876
		#define CRYPTOPP_BOOL_SSE2_ASM_AVAILABLE 431,18930
		#define CRYPTOPP_BOOL_SSSE3_ASM_AVAILABLE 435,19092
		#define CRYPTOPP_BOOL_SSSE3_ASM_AVAILABLE 437,19147
	#define CRYPTOPP_X64_MASM_AVAILABLE442,19289
	#define CRYPTOPP_X64_ASM_AVAILABLE446,19417
	#define CRYPTOPP_BOOL_SSE2_INTRINSICS_AVAILABLE 450,19564
	#define CRYPTOPP_BOOL_SSE2_INTRINSICS_AVAILABLE 452,19623
	#define CRYPTOPP_BOOL_SSE4_INTRINSICS_AVAILABLE 459,20099
	#define CRYPTOPP_BOOL_SSE4_INTRINSICS_AVAILABLE 461,20158
	#define CRYPTOPP_BOOL_AESNI_INTRINSICS_AVAILABLE 466,20495
	#define CRYPTOPP_BOOL_AESNI_INTRINSICS_AVAILABLE 468,20555
	#define CRYPTOPP_BOOL_SSE_SHA_INTRINSICS_AVAILABLE 472,20752
	#define CRYPTOPP_BOOL_SSE_SHA_INTRINSICS_AVAILABLE 474,20814
#  define CRYPTOPP_BOOL_NEON_INTRINSICS_AVAILABLE 480,21131
#  define CRYPTOPP_BOOL_ARM_CRC32_INTRINSICS_AVAILABLE 489,21558
#  define CRYPTOPP_BOOL_ARM_CRYPTO_INTRINSICS_AVAILABLE 498,21992
	#define CRYPTOPP_BOOL_ALIGN16 503,22234
	#define CRYPTOPP_BOOL_ALIGN16 505,22275
	#define CRYPTOPP_MM_MALLOC_AVAILABLE510,22396
	#define CRYPTOPP_APPLE_MALLOC_AVAILABLE512,22461
	#define CRYPTOPP_MALLOC_ALIGNMENT_IS_16514,22578
	#define CRYPTOPP_MEMALIGN_AVAILABLE516,22689
	#define CRYPTOPP_NO_ALIGNED_ALLOC518,22734
#	define CRYPTOPP_NOINLINE_DOTDOTDOT526,23024
#	define CRYPTOPP_NOINLINE 527,23062
#	define CRYPTOPP_NOINLINE_DOTDOTDOT529,23136
#	define CRYPTOPP_NOINLINE 530,23174
#	define CRYPTOPP_NOINLINE_DOTDOTDOT 532,23235
#	define CRYPTOPP_NOINLINE533,23277
#	define CRYPTOPP_CONSTANT(538,23428
#	define CRYPTOPP_CONSTANT(540,23476
	#define CRYPTOPP_BOOL_X32 547,23945
	#define CRYPTOPP_BOOL_X32 549,23982
	#define CRYPTOPP_BOOL_X86 554,24219
	#define CRYPTOPP_BOOL_X86 556,24256
	#define CRYPTOPP_BOOL_X64 560,24364
	#define CRYPTOPP_BOOL_X64 562,24401
# undef CRYPTOPP_BOOL_X64567,24523
# undef CRYPTOPP_X64_ASM_AVAILABLE568,24550
# undef CRYPTOPP_X64_MASM_AVAILABLE569,24586
	#define CRYPTOPP_BOOL_ARM32 573,24698
	#define CRYPTOPP_BOOL_ARM32 575,24737
	#define CRYPTOPP_BOOL_ARM64 581,24987
	#define CRYPTOPP_BOOL_ARM64 583,25026
	#define CRYPTOPP_ALLOW_UNALIGNED_DATA_ACCESS588,25292
#define CRYPTOPP_WIN32_AVAILABLE597,25512
#define CRYPTOPP_UNIX_AVAILABLE601,25641
#define CRYPTOPP_BSD_AVAILABLE605,25757
#	define HIGHRES_TIMER_AVAILABLE609,25874
#	define THREAD_TIMER_AVAILABLE614,25981
#	  define THREAD_TIMER_AVAILABLE617,26105
#	define HAS_BERKELEY_STYLE_SOCKETS623,26201
#	define SOCKETS_AVAILABLE624,26238
# define HAS_WINDOWS_STYLE_SOCKETS629,26415
#	define SOCKETS_AVAILABLE631,26481
#	  define SOCKETS_AVAILABLE634,26600
#	define USE_WINDOWS_STYLE_SOCKETS640,26783
#	define USE_BERKELEY_STYLE_SOCKETS642,26826
#	define WINDOWS_PIPES_AVAILABLE646,26982
#	define NONBLOCKING_RNG_AVAILABLE650,27104
#	define BLOCKING_RNG_AVAILABLE651,27140
#	define OS_RNG_AVAILABLE652,27173
#	define HAS_PTHREADS653,27200
#	define THREADS_AVAILABLE654,27223
# define UNIX_SIGNALS_AVAILABLE 660,27478
#	define HAS_WINTHREADS665,27586
#	define THREADS_AVAILABLE666,27611
#	define NONBLOCKING_RNG_AVAILABLE667,27639
#	define OS_RNG_AVAILABLE668,27675
#	  define HAS_WINTHREADS671,27793
#	  define THREADS_AVAILABLE672,27820
#	  define NONBLOCKING_RNG_AVAILABLE673,27850
#	  define OS_RNG_AVAILABLE674,27888
#	    define NONBLOCKING_RNG_AVAILABLE677,28085
#	    define OS_RNG_AVAILABLE678,28125
#define CRYPTOPP_IS_DLL691,28393
#define CRYPTOPP_DLL 692,28418
#define CRYPTOPP_IS_DLL694,28495
#define CRYPTOPP_DLL 695,28520
#define CRYPTOPP_DLL697,28571
#define CRYPTOPP_API 700,28603
#define CRYPTOPP_DLL704,28676
#define CRYPTOPP_API705,28698
#define CRYPTOPP_EXTERN_DLL_TEMPLATE_CLASS 710,28785
#define CRYPTOPP_EXTERN_DLL_TEMPLATE_CLASS 712,28908
#define CRYPTOPP_EXTERN_DLL_TEMPLATE_CLASS 714,28987
#define CRYPTOPP_DLL_TEMPLATE_CLASS 718,29160
#define CRYPTOPP_DLL_TEMPLATE_CLASS 720,29232
#define CRYPTOPP_EXTERN_STATIC_TEMPLATE_CLASS 724,29339
#define CRYPTOPP_EXTERN_STATIC_TEMPLATE_CLASS 726,29452
#define CRYPTOPP_EXTERN_STATIC_TEMPLATE_CLASS 728,29521
#define CRYPTOPP_STATIC_TEMPLATE_CLASS 732,29684
#define CRYPTOPP_STATIC_TEMPLATE_CLASS 734,29746
#define CRYPTOPP_UNUSED(741,29981
# define CRYPTOPP_DEPRECATED(746,30150
# define CRYPTOPP_DEPRECATED(748,30250
# define CRYPTOPP_DEPRECATED(750,30321
# define CRYPTOPP_CXX11 760,30889
#    undef CRYPTOPP_CXX11770,31462
#  define CRYPTOPP_CXX11_ATOMICS 779,31697
#  define CRYPTOPP_CXX11_ATOMICS 781,31767
#    define CRYPTOPP_CXX11_ATOMICS 784,31862
#  define CRYPTOPP_CXX11_ATOMICS 787,31949
#  define CRYPTOPP_CXX11_ATOMICS 789,32016
#  define CRYPTOPP_CXX11_SYNCHRONIZATION 795,32298
#  define CRYPTOPP_CXX11_SYNCHRONIZATION 797,32376
#  define CRYPTOPP_CXX11_SYNCHRONIZATION 799,32509
#  define CRYPTOPP_CXX11_SYNCHRONIZATION 801,32592
#  define CRYPTOPP_CXX11_SYNCHRONIZATION 803,32667
#  define CRYPTOPP_CXX11_ALIGNAS 808,32869
#  define CRYPTOPP_CXX11_ALIGNOF 809,32905
#  define CRYPTOPP_CXX11_ALIGNAS 811,32975
#  define CRYPTOPP_CXX11_ALIGNOF 812,33011
#  define CRYPTOPP_CXX11_ALIGNAS 815,33107
#  define CRYPTOPP_CXX11_ALIGNOF 818,33187
#  define CRYPTOPP_CXX11_ALIGNAS 821,33272
#  define CRYPTOPP_CXX11_ALIGNOF 822,33308
#  define CRYPTOPP_CXX11_ALIGNAS 824,33375
#  define CRYPTOPP_CXX11_ALIGNOF 825,33411
#  define CRYPTOPP_CXX11_NOEXCEPT 830,33598
#  define CRYPTOPP_CXX11_NOEXCEPT 832,33669
#    define CRYPTOPP_CXX11_NOEXCEPT 835,33767
#  define CRYPTOPP_CXX11_NOEXCEPT 838,33855
#  define CRYPTOPP_CXX11_NOEXCEPT 840,33923
#  define CRYPTOPP_CXX11_VARIADIC_TEMPLATES 845,34124
#  define CRYPTOPP_CXX11_VARIADIC_TEMPLATES 847,34205
#    define CRYPTOPP_CXX11_VARIADIC_TEMPLATES 850,34323
#  define CRYPTOPP_CXX11_VARIADIC_TEMPLATES 853,34421
#  define CRYPTOPP_CXX11_VARIADIC_TEMPLATES 855,34499
#  define CRYPTOPP_CXX11_CONSTEXPR 861,34767
#  define CRYPTOPP_CXX11_CONSTEXPR 863,34839
#    define CRYPTOPP_CXX11_CONSTEXPR 866,34939
#  define CRYPTOPP_CXX11_CONSTEXPR 869,35028
#  define CRYPTOPP_CXX11_CONSTEXPR 871,35097
#  define CRYPTOPP_THROW 880,35348
#  define CRYPTOPP_NO_THROW 881,35390
#  define CRYPTOPP_THROW883,35441
#  define CRYPTOPP_NO_THROW884,35467
#  define CRYPTOPP_STATIC_CONSTEXPR 889,35619
#  define CRYPTOPP_CONSTEXPR 890,35673
#  define CRYPTOPP_STATIC_CONSTEXPR 892,35720
#  define CRYPTOPP_CONSTEXPR893,35764
# undef CRYPTOPP_ALIGN_DATA898,35969
# define CRYPTOPP_ALIGN_DATA(899,35998
# undef CRYPTOPP_CONSTANT905,36265
# define CRYPTOPP_CONSTANT(906,36292

src/cryptopp/aes.h,151
#define CRYPTOPP_AES_H7,155
NAMESPACE_BEGIN(11,206
typedef RijndaelEncryption AESEncryption;18,424
typedef RijndaelDecryption AESDecryption;19,467

src/cryptopp/cryptlib.cpp,7353
const std::string &BufferedTransformation::NULL_CHANNEL BufferedTransformation::NULL_CHANNEL49,1547
const std::string DEFAULT_CHANNEL 53,1708
const std::string AAD_CHANNEL 54,1749
const std::string &BufferedTransformation::NULL_CHANNEL BufferedTransformation::NULL_CHANNEL55,1789
const std::string DEFAULT_CHANNEL 59,1949
const std::string AAD_CHANNEL 60,1990
const std::string &BufferedTransformation::NULL_CHANNEL BufferedTransformation::NULL_CHANNEL61,2027
class NullNameValuePairs 64,2113
	bool GetVoidValue(67,2175
const NameValuePairs &g_nullNameValuePairs g_nullNameValuePairs73,2543
const NameValuePairs &g_nullNameValuePairs g_nullNameValuePairs76,2709
BufferedTransformation & TheBitBucket(79,2793
Algorithm::Algorithm(Algorithm85,2892
void SimpleKeyingInterface::SetKey(SetKey97,3410
void SimpleKeyingInterface::SetKeyWithRounds(SetKeyWithRounds103,3617
void SimpleKeyingInterface::SetKeyWithIV(SetKeyWithIV108,3778
void SimpleKeyingInterface::ThrowIfInvalidKeyLength(ThrowIfInvalidKeyLength113,3983
void SimpleKeyingInterface::ThrowIfResynchronizable(ThrowIfResynchronizable119,4159
void SimpleKeyingInterface::ThrowIfInvalidIV(ThrowIfInvalidIV125,4341
size_t SimpleKeyingInterface::ThrowIfInvalidIVLength(ThrowIfInvalidIVLength131,4565
const byte * SimpleKeyingInterface::GetIVAndThrowIfInvalid(GetIVAndThrowIfInvalid143,5105
void SimpleKeyingInterface::GetNextIV(GetNextIV173,5750
size_t BlockTransformation::AdvancedProcessBlocks(AdvancedProcessBlocks178,5870
unsigned int BlockTransformation::OptimalDataAlignment(OptimalDataAlignment229,7366
unsigned int StreamTransformation::OptimalDataAlignment(OptimalDataAlignment234,7473
unsigned int HashTransformation::OptimalDataAlignment(OptimalDataAlignment239,7581
void StreamTransformation::ProcessLastBlock(ProcessLastBlock244,7687
void AuthenticatedSymmetricCipher::SpecifyDataLengths(SpecifyDataLengths254,8092
void AuthenticatedSymmetricCipher::EncryptAndAuthenticate(EncryptAndAuthenticate268,8928
bool AuthenticatedSymmetricCipher::DecryptAndVerify(DecryptAndVerify277,9353
unsigned int RandomNumberGenerator::GenerateBit(GenerateBit286,9799
byte RandomNumberGenerator::GenerateByte(GenerateByte291,9887
word32 RandomNumberGenerator::GenerateWord32(GenerateWord32298,9985
void RandomNumberGenerator::GenerateBlock(GenerateBlock326,11028
void RandomNumberGenerator::DiscardBytes(DiscardBytes339,11398
void RandomNumberGenerator::GenerateIntoBufferedTransformation(GenerateIntoBufferedTransformation344,11532
class ClassNullRNG 362,12263
	std::string AlgorithmName(367,12403
	byte GenerateByte 371,12561
	unsigned int GenerateBit 373,12645
	word32 GenerateWord32 375,12736
	void GenerateBlock(379,12856
	void GenerateIntoBufferedTransformation 387,13186
	void IncorporateEntropy 389,13364
	bool CanIncorporateEntropy 391,13481
	void DiscardBytes 393,13571
	void Shuffle 395,13654
	Clonable* Clone 398,13703
RandomNumberGenerator & NullRNG(402,13761
bool HashTransformation::TruncatedVerify(TruncatedVerify408,13857
void HashTransformation::ThrowIfInvalidTruncatedSize(ThrowIfInvalidTruncatedSize416,14130
unsigned int BufferedTransformation::GetMaxWaitObjectCount(GetMaxWaitObjectCount422,14385
void BufferedTransformation::GetWaitObjects(GetWaitObjects428,14568
void BufferedTransformation::Initialize(Initialize435,14837
bool BufferedTransformation::Flush(Flush442,15049
bool BufferedTransformation::MessageSeriesEnd(MessageSeriesEnd449,15264
byte * BufferedTransformation::ChannelCreatePutSpace(ChannelCreatePutSpace456,15474
size_t BufferedTransformation::ChannelPut2(ChannelPut2464,15684
size_t BufferedTransformation::ChannelPutModifiable2(ChannelPutModifiable2472,15956
bool BufferedTransformation::ChannelFlush(ChannelFlush480,16267
bool BufferedTransformation::ChannelMessageSeriesEnd(ChannelMessageSeriesEnd488,16527
lword BufferedTransformation::MaxRetrievable(MaxRetrievable496,16774
bool BufferedTransformation::AnyRetrievable(AnyRetrievable504,16963
size_t BufferedTransformation::Get(Get515,17160
size_t BufferedTransformation::Get(Get523,17336
size_t BufferedTransformation::Peek(Peek534,17611
size_t BufferedTransformation::Peek(Peek542,17796
lword BufferedTransformation::Skip(Skip553,18079
lword BufferedTransformation::TotalBytesRetrievable(TotalBytesRetrievable561,18275
unsigned int BufferedTransformation::NumberOfMessages(NumberOfMessages569,18472
bool BufferedTransformation::AnyMessages(AnyMessages577,18680
bool BufferedTransformation::GetNextMessage(GetNextMessage585,18863
unsigned int BufferedTransformation::SkipMessages(SkipMessages596,19072
size_t BufferedTransformation::TransferMessagesTo2(TransferMessagesTo2604,19300
unsigned int BufferedTransformation::CopyMessagesTo(CopyMessagesTo634,20213
void BufferedTransformation::SkipAll(SkipAll642,20488
size_t BufferedTransformation::TransferAllTo2(TransferAllTo2653,20673
void BufferedTransformation::CopyAllTo(CopyAllTo685,21450
void BufferedTransformation::SetRetrievalChannel(SetRetrievalChannel696,21770
size_t BufferedTransformation::ChannelPutWord16(ChannelPutWord16702,21947
size_t BufferedTransformation::ChannelPutWord32(ChannelPutWord32708,22167
size_t BufferedTransformation::PutWord16(PutWord16714,22387
size_t BufferedTransformation::PutWord32(PutWord32719,22551
size_t BufferedTransformation::PeekWord16(PeekWord16731,22909
size_t BufferedTransformation::PeekWord32(PeekWord32744,23159
size_t BufferedTransformation::GetWord16(GetWord16762,23577
size_t BufferedTransformation::GetWord32(GetWord32767,23708
void BufferedTransformation::Attach(Attach772,23839
void GeneratableCryptoMaterial::GenerateRandomWithKeySize(GenerateRandomWithKeySize780,24061
class PK_DefaultEncryptionFilter 785,24242
	PK_DefaultEncryptionFilter(788,24317
	size_t Put2(794,24574
	RandomNumberGenerator &m_rng;m_rng818,25356
	const PK_Encryptor &m_encryptor;m_encryptor819,25388
	const NameValuePairs &m_parameters;m_parameters820,25423
	ByteQueue m_plaintextQueue;821,25461
	SecByteBlock m_ciphertext;822,25491
BufferedTransformation * PK_Encryptor::CreateEncryptionFilter(CreateEncryptionFilter825,25526
class PK_DefaultDecryptionFilter 830,25778
	PK_DefaultDecryptionFilter(833,25853
	size_t Put2(839,26110
	RandomNumberGenerator &m_rng;m_rng865,27039
	const PK_Decryptor &m_decryptor;m_decryptor866,27071
	const NameValuePairs &m_parameters;m_parameters867,27106
	ByteQueue m_ciphertextQueue;868,27144
	SecByteBlock m_plaintext;869,27175
	DecodingResult m_result;870,27203
BufferedTransformation * PK_Decryptor::CreateDecryptionFilter(CreateDecryptionFilter873,27236
size_t PK_Signer::Sign(Sign878,27488
size_t PK_Signer::SignMessage(SignMessage884,27725
size_t PK_Signer::SignMessageWithRecovery(SignMessageWithRecovery891,28010
bool PK_Verifier::Verify(Verify900,28513
bool PK_Verifier::VerifyMessage(VerifyMessage906,28686
DecodingResult PK_Verifier::Recover(Recover914,29004
DecodingResult PK_Verifier::RecoverMessage(RecoverMessage920,29231
void SimpleKeyAgreementDomain::GenerateKeyPair(GenerateKeyPair930,29669
void AuthenticatedKeyAgreementDomain::GenerateStaticKeyPair(GenerateStaticKeyPair936,29882
void AuthenticatedKeyAgreementDomain::GenerateEphemeralKeyPair(GenerateEphemeralKeyPair942,30120

src/cryptopp/safer.h,1635
#define CRYPTOPP_SAFER_H7,174
NAMESPACE_BEGIN(12,248
class SAFER16,326
	class CRYPTOPP_NO_VTABLE Base : public BlockCipher21,419
	class CRYPTOPP_NO_VTABLE Enc : public Base37,874
class CRYPTOPP_NO_VTABLE SAFER_Impl : public BlockCipherImpl<BlockCipherImpl59,1631
struct SAFER_K_Info 67,1838
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(69,1963
class SAFER_K 75,2185
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION78,2281
	typedef BlockCipherFinal<ENCRYPTION, SAFER_Impl<SAFER_Impl78,2281
	typedef BlockCipherFinal<ENCRYPTION, SAFER_Impl<Enc, SAFER_K_Info, false> > Encryption;78,2281
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION79,2371
	typedef BlockCipherFinal<DECRYPTION, SAFER_Impl<SAFER_Impl79,2371
	typedef BlockCipherFinal<DECRYPTION, SAFER_Impl<Dec, SAFER_K_Info, false> > Decryption;79,2371
struct SAFER_SK_Info 84,2539
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(86,2665
class SAFER_SK 92,2892
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION95,2990
	typedef BlockCipherFinal<ENCRYPTION, SAFER_Impl<SAFER_Impl95,2990
	typedef BlockCipherFinal<ENCRYPTION, SAFER_Impl<Enc, SAFER_SK_Info, true> > Encryption;95,2990
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION96,3080
	typedef BlockCipherFinal<DECRYPTION, SAFER_Impl<SAFER_Impl96,3080
	typedef BlockCipherFinal<DECRYPTION, SAFER_Impl<Dec, SAFER_SK_Info, true> > Decryption;96,3080
typedef SAFER_K::Encryption SAFER_K_Encryption;99,3176
typedef SAFER_K::Decryption SAFER_K_Decryption;100,3225
typedef SAFER_SK::Encryption SAFER_SK_Encryption;102,3276
typedef SAFER_SK::Decryption SAFER_SK_Decryption;103,3327

src/cryptopp/cmac.h,232
#define CRYPTOPP_CMAC_H8,195
NAMESPACE_BEGIN(13,268
class CMAC 47,1518
	CMAC(51,1659
	CMAC(55,1773
	static std::string StaticAlgorithmName(58,1884
	BlockCipher & AccessCipher(61,2003
	typename T::Encryption m_cipher;62,2053

src/cryptopp/chacha.h,996
#define CRYPTOPP_CHACHA_H15,892
NAMESPACE_BEGIN(20,969
struct ChaCha_Info 26,1121
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(28,1247
struct ChaCha8 57,2391
	typedef SymmetricCipherFinal<ConcretePolicyHolder<ConcretePolicyHolder59,2471
	typedef SymmetricCipherFinal<ConcretePolicyHolder<ChaCha_Policy<8>, AdditiveCipherTemplate<> >, ChaCha_Info<8> > Encryption;59,2471
	typedef Encryption Decryption;60,2598
struct ChaCha12 70,3139
	typedef SymmetricCipherFinal<ConcretePolicyHolder<ConcretePolicyHolder72,3221
	typedef SymmetricCipherFinal<ConcretePolicyHolder<ChaCha_Policy<12>, AdditiveCipherTemplate<> >, ChaCha_Info<12> > Encryption;72,3221
	typedef Encryption Decryption;73,3350
struct ChaCha20 83,3891
	typedef SymmetricCipherFinal<ConcretePolicyHolder<ConcretePolicyHolder85,3973
	typedef SymmetricCipherFinal<ConcretePolicyHolder<ChaCha_Policy<20>, AdditiveCipherTemplate<> >, ChaCha_Info<20> > Encryption;85,3973
	typedef Encryption Decryption;86,4102

src/cryptopp/wake.h,325
#define CRYPTOPP_WAKE_H7,154
NAMESPACE_BEGIN(13,250
struct WAKE_OFB_Info 20,452
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(22,505
	typedef SymmetricCipherFinal<ConcretePolicyHolder<WAKE_Policy<B>, AdditiveCipherTemplate<> >,  WAKE_OFB_Info<B> > Encryption;56,1638
	typedef Encryption Decryption;57,1766

src/cryptopp/smartptr.h,2201
#define CRYPTOPP_SMARTPTR_H8,194
NAMESPACE_BEGIN(13,269
template <class T> class simple_ptr20,573
	simple_ptr(23,622
	~simple_ptr(24,660
	T *m_p;m_p30,734
template <class T> class member_ptr39,1158
	explicit member_ptr(42,1207
	const T& operator*(46,1275
	T& operator*(47,1321
	const T* operator->(49,1357
	T* operator->(50,1403
	const T* get(52,1439
	T* get(53,1478
	T* release(55,1507
	T *m_p;m_p68,1772
template <class T> member_ptr<T>::~member_ptr(~member_ptr71,1788
template <class T> void member_ptr<T>::reset(reset72,1851
template<class T> class value_ptr 79,2068
	value_ptr(82,2138
	value_ptr(83,2195
	value_ptr(84,2242
	bool operator==(operator==88,2389
template <class T> value_ptr<T>& value_ptr<T>::operator=(operator=94,2534
template<class T> class clonable_ptr 108,2961
	clonable_ptr(111,3034
	clonable_ptr(112,3095
	clonable_ptr(113,3145
template <class T> clonable_ptr<T>& clonable_ptr<T>::operator=(operator=119,3311
template<class T> class counted_ptr134,3792
	counted_ptr(138,3875
	const T& operator*(143,3987
	T& operator*(144,4033
	const T* operator->(146,4069
	T* operator->(147,4115
	const T* get(149,4153
	T *m_p;m_p157,4304
template <class T> counted_ptr<T>::counted_ptr(counted_ptr160,4320
template <class T> counted_ptr<T>::counted_ptr(counted_ptr167,4434
template <class T> counted_ptr<T>::~counted_ptr(~counted_ptr174,4573
template <class T> void counted_ptr<T>::attach(attach180,4690
template <class T> T* counted_ptr<T>::get(get196,4978
template <class T> counted_ptr<T> & counted_ptr<T>::operator=(operator=208,5193
template <class T> class vector_ptr229,5840
	vector_ptr(235,6060
	~vector_ptr(237,6131
	size_t size(245,6403
	void resize(246,6448
	operator T operator T257,6698
	operator const operator const260,6751
	operator void operator void262,6802
	operator const operator const265,6843
	operator T operator T267,6891
	size_t m_size;275,7076
	T *m_ptr;m_ptr276,7093
template <class T> class vector_member_ptrs284,7288
	vector_member_ptrs(290,7516
	~vector_member_ptrs(292,7605
	size_t size(300,7895
	void resize(301,7940
	size_t m_size;315,8377
	member_ptr<T> *m_ptr;m_ptr316,8394

src/cryptopp/luc.h,3315
#define CRYPTOPP_LUC_H10,457
NAMESPACE_BEGIN(30,801
class LUCFunction 36,1164
	typedef LUCFunction ThisClass;38,1230
	virtual ~LUCFunction(41,1274
	void Initialize(46,1418
	void BERDecode(49,1497
	void DEREncode(50,1543
	Integer ImageBound(54,1692
	bool Validate(56,1737
	const Integer & GetModulus(61,1978
	const Integer & GetPublicExponent(62,2029
	void SetModulus(64,2089
	void SetPublicExponent(65,2136
	Integer m_n,68,2204
	Integer m_n, m_e;68,2204
class InvertibleLUCFunction 75,2572
	typedef InvertibleLUCFunction ThisClass;77,2676
	virtual ~InvertibleLUCFunction(80,2730
	void Initialize(99,3730
	const Integer& GetPrime1(114,4455
	const Integer& GetPrime2(115,4504
	const Integer& GetMultiplicativeInverseOfPrime2ModPrime1(116,4553
	void SetPrime1(118,4636
	void SetPrime2(119,4682
	void SetMultiplicativeInverseOfPrime2ModPrime1(120,4728
	Integer m_p,123,4820
	Integer m_p, m_q,123,4820
	Integer m_p, m_q, m_u;123,4820
struct LUC126,4851
	static std::string StaticAlgorithmName(128,4866
	typedef LUCFunction PublicKey;129,4925
	typedef InvertibleLUCFunction PrivateKey;130,4958
struct LUCES 139,5409
struct LUCSS 150,5925
typedef LUCES<OAEP<SHA> >::Decryptor LUCES_OAEP_SHA_Decryptor;155,6038
typedef LUCES<OAEP<SHA> >::Encryptor LUCES_OAEP_SHA_Encryptor;156,6102
typedef LUCSS<PKCS1v15,PKCS1v15158,6168
typedef LUCSS<PKCS1v15, SHA>::Signer LUCSSA_PKCS1v15_SHA_Signer;158,6168
typedef LUCSS<PKCS1v15,PKCS1v15159,6234
typedef LUCSS<PKCS1v15, SHA>::Verifier LUCSSA_PKCS1v15_SHA_Verifier;159,6234
class DL_GroupPrecomputation_LUC 164,6398
	virtual ~DL_GroupPrecomputation_LUC(167,6485
	const AbstractGroup<Element> & GetGroup(169,6530
	Element BERDecodeElement(170,6615
	void DEREncodeElement(171,6698
	void SetModulus(174,6814
	const Integer & GetModulus(175,6861
	Integer m_p;178,6924
class DL_BasePrecomputation_LUC 182,6952
	virtual ~DL_BasePrecomputation_LUC(185,7042
	bool IsInitialized(188,7118
	void SetBase(189,7171
	const Integer & GetBase(191,7294
	void Precompute(193,7413
	void Load(195,7608
	void Save(197,7780
	Integer CascadeExponentiate(200,8059
	Integer m_g;208,8486
class DL_GroupParameters_LUC 213,8589
	virtual ~DL_GroupParameters_LUC(216,8731
	bool IsIdentity(219,8796
	Element MultiplyElements(221,9013
	Element CascadeExponentiate(226,9222
	bool GetVoidValue(233,9602
	int GetFieldType(239,9816
class DL_GroupParameters_LUC_DefaultSafePrime 244,9976
	typedef NoCofactorMultiplication DefaultCofactorOption;247,10067
	unsigned int GetDefaultSubgroupOrderSize(250,10139
class DL_Algorithm_LUC_HMP 255,10317
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(258,10408
	virtual ~DL_Algorithm_LUC_HMP(260,10492
	size_t RLen(265,10831
struct DL_SignatureKeys_LUC270,10979
	typedef DL_GroupParameters_LUC GroupParameters;272,11011
	typedef DL_PublicKey_GFP<GroupParameters> PublicKey;273,11061
	typedef DL_PrivateKey_GFP<GroupParameters> PrivateKey;274,11116
struct LUC_HMP 283,11673
struct DL_CryptoKeys_LUC288,11831
	typedef DL_GroupParameters_LUC_DefaultSafePrime GroupParameters;290,11860
	typedef DL_PublicKey_GFP<GroupParameters> PublicKey;291,11927
	typedef DL_PrivateKey_GFP<GroupParameters> PrivateKey;292,11982
typedef DH_Domain<DL_GroupParameters_LUC_DefaultSafePrime> LUC_DH;317,13201

src/cryptopp/sosemanuk.h,755
#define CRYPTOPP_SOSEMANUK_H8,199
# define CRYPTOPP_DISABLE_SOSEMANUK_ASM16,465
NAMESPACE_BEGIN(19,516
struct SosemanukInfo 24,645
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(26,749
class SosemanukPolicy 32,943
	bool CipherIsRandomAccess(38,1329
	FixedSizeSecBlock<FixedSizeSecBlock44,1583
	FixedSizeSecBlock<word32, 25*4> m_key;44,1583
	FixedSizeAlignedSecBlock<FixedSizeAlignedSecBlock45,1624
	FixedSizeAlignedSecBlock<word32, 12> m_state;45,1624
struct Sosemanuk 56,2195
	typedef SymmetricCipherFinal<ConcretePolicyHolder<ConcretePolicyHolder58,2276
	typedef SymmetricCipherFinal<ConcretePolicyHolder<SosemanukPolicy, AdditiveCipherTemplate<> >, SosemanukInfo> Encryption;58,2276
	typedef Encryption Decryption;59,2400

src/cryptopp/zinflate.h,3273
#define CRYPTOPP_ZINFLATE_H2,29
NAMESPACE_BEGIN(9,151
class LowFirstBitReader13,235
	LowFirstBitReader(16,272
	unsigned int BitsBuffered(18,378
	unsigned long PeekBuffer(19,439
	bool FillBuffer(20,493
	unsigned long PeekBits(21,533
	void SkipBits(22,580
	unsigned long GetBits(23,618
	BufferedTransformation &m_store;m_store26,676
	unsigned long m_buffer;27,711
	unsigned int m_bitsBuffered;28,737
class HuffmanDecoder36,878
	typedef unsigned int code_t;39,912
	typedef unsigned int value_t;40,943
	enum {MAX_CODE_BITS MAX_CODE_BITS41,975
	class Err 43,1020
	class Err : public Exception {public: Err(43,1020
	HuffmanDecoder(45,1156
	HuffmanDecoder(46,1255
	struct CodeInfo57,1705
		CodeInfo(59,1727
		inline bool operator<(60,1831
		code_t code;61,1909
		unsigned int len;62,1925
		value_t value;63,1946
	struct LookupEntry66,1971
		unsigned int type;68,1996
			value_t value;71,2032
			const CodeInfo *begin;begin72,2051
			unsigned int len;76,2098
			const CodeInfo *end;end77,2120
	unsigned int m_maxCodeBits,84,2299
	unsigned int m_maxCodeBits, m_cacheBits,84,2299
	unsigned int m_maxCodeBits, m_cacheBits, m_cacheMask,84,2299
	unsigned int m_maxCodeBits, m_cacheBits, m_cacheMask, m_normalizedCacheMask;84,2299
	std::vector<std::vector85,2378
	std::vector<CodeInfo, AllocatorWithCleanup<CodeInfo> > m_codeToValue;85,2378
	mutable std::vector<std::vector86,2450
	mutable std::vector<LookupEntry, AllocatorWithCleanup<LookupEntry> > m_cache;86,2450
class Inflator 92,2626
	class Err 95,2685
		Err(98,2730
	class UnexpectedEndErr 101,2802
	class UnexpectedEndErr : public Err {public: UnexpectedEndErr(101,2802
	class BadBlockErr 102,2948
	class BadBlockErr : public Err {public: BadBlockErr(102,2948
	virtual unsigned int GetLog2WindowSize(114,3618
	ByteQueue m_inQueue;117,3694
	virtual unsigned int MaxPrestreamHeaderSize(120,3729
	virtual void ProcessPrestreamHeader(121,3795
	virtual void ProcessDecompressedData(122,3838
	virtual unsigned int MaxPoststreamTailSize(124,3964
	virtual void ProcessPoststreamTail(125,4029
	enum State 141,4536
	enum State {PRE_STREAM,PRE_STREAM141,4536
	enum State {PRE_STREAM, WAIT_HEADER,141,4536
	enum State {PRE_STREAM, WAIT_HEADER, DECODING_BODY,141,4536
	enum State {PRE_STREAM, WAIT_HEADER, DECODING_BODY, POST_STREAM,141,4536
	enum State {PRE_STREAM, WAIT_HEADER, DECODING_BODY, POST_STREAM, AFTER_END}AFTER_END141,4536
	State m_state;142,4615
	bool m_repeat,143,4632
	bool m_repeat, m_eof,143,4632
	bool m_repeat, m_eof, m_wrappedAround;143,4632
	byte m_blockType;144,4673
	word16 m_storedLen;145,4693
	enum NextDecode 146,4715
	enum NextDecode {LITERAL,LITERAL146,4715
	enum NextDecode {LITERAL, LENGTH_BITS,146,4715
	enum NextDecode {LITERAL, LENGTH_BITS, DISTANCE,146,4715
	enum NextDecode {LITERAL, LENGTH_BITS, DISTANCE, DISTANCE_BITS}DISTANCE_BITS146,4715
	NextDecode m_nextDecode;147,4782
	unsigned int m_literal,148,4809
	unsigned int m_literal, m_distance;148,4809
	HuffmanDecoder m_dynamicLiteralDecoder,149,4883
	HuffmanDecoder m_dynamicLiteralDecoder, m_dynamicDistanceDecoder;149,4883
	LowFirstBitReader m_reader;150,4951
	SecByteBlock m_window;151,4981
	size_t m_current,152,5006
	size_t m_current, m_lastFlush;152,5006

src/cryptopp/eprecomp.h,926
#define CRYPTOPP_EPRECOMP_H7,173
NAMESPACE_BEGIN(14,294
class DL_GroupPrecomputation17,343
	typedef T Element;20,385
	virtual ~DL_GroupPrecomputation(22,408
	virtual bool NeedConversions(24,449
	virtual Element ConvertIn(25,504
	virtual Element ConvertOut(26,568
	virtual const AbstractGroup<Element> & GetGroup(27,633
class DL_FixedBasePrecomputation33,882
	typedef T Element;36,928
	virtual ~DL_FixedBasePrecomputation(38,951
	virtual bool IsInitialized(40,996
class DL_FixedBasePrecomputationImpl 51,1913
	typedef T Element;54,2002
	virtual ~DL_FixedBasePrecomputationImpl(56,2025
	DL_FixedBasePrecomputationImpl(58,2074
	bool IsInitialized(61,2164
	void SetBase(63,2223
	const Element & GetBase(64,2306
	void Precompute(66,2443
	void Load(67,2555
	void Save(68,2660
	Element m_base;75,3212
	unsigned int m_windowSize;76,3230
	Integer m_exponentBase;77,3259
	std::vector<Element> m_bases;78,3329

src/cryptopp/cpu.h,4929
#define CRYPTOPP_CPU_H8,234
# define CRYPTOPP_MS_STYLE_INLINE_ASSEMBLY64,2017
# define CRYPTOPP_GNU_STYLE_INLINE_ASSEMBLY66,2068
	#define NEW_LINE 71,2302
	#define INTEL_PREFIX 72,2326
	#define INTEL_NOPREFIX 73,2366
	#define ATT_PREFIX 74,2408
	#define ATT_NOPREFIX 75,2444
	#define NEW_LINE77,2507
	#define INTEL_PREFIX 78,2526
	#define INTEL_NOPREFIX 79,2573
	#define ATT_PREFIX 80,2624
	#define ATT_NOPREFIX 81,2667
	#define NEW_LINE83,2721
	#define INTEL_PREFIX84,2740
	#define INTEL_NOPREFIX85,2763
	#define ATT_PREFIX86,2788
	#define ATT_NOPREFIX87,2809
#define CRYPTOPP_X86_ASM_AVAILABLE92,2879
#define CRYPTOPP_BOOL_X64 93,2915
#define CRYPTOPP_BOOL_SSE2_ASM_AVAILABLE 94,2944
#define NAMESPACE_END95,2988
#define CRYPTOPP_CPUID_AVAILABLE103,3149
NAMESPACE_BEGIN(CRYPTOPP_CPUID_AVAILABLE99,3022
inline bool HasISSE(150,4812
inline bool HasSSE2(165,5216
inline bool HasSSSE3(180,5650
inline bool HasSSE4(190,5986
inline bool HasAESNI(200,6273
inline bool HasCLMUL(210,6577
inline bool HasSHA(220,6858
inline bool IsP4(230,7124
inline bool HasRDRAND(240,7406
inline bool HasRDSEED(250,7698
inline bool HasPadlockRNG(260,8008
inline bool HasPadlockACE(270,8326
inline bool HasPadlockACE2(280,8647
inline bool HasPadlockPHE(290,8967
inline bool HasPadlockPMM(300,9285
inline int GetCacheLineSize(314,9953
inline bool HasNEON(333,10790
inline bool HasPMULL(346,11455
inline bool HasCRC32(361,12264
inline bool HasAES(376,13009
inline bool HasSHA1(391,13753
inline bool HasSHA2(406,14499
inline int GetCacheLineSize(417,14900
inline int GetCacheLineSize(424,14986
	#define AS1(436,15209
	#define AS2(437,15237
	#define AS3(438,15271
	#define ASS(439,15311
	#define ASL(440,15374
	#define ASJ(441,15410
	#define ASC(442,15453
	#define AS_HEX(443,15493
	#define CRYPTOPP_MS_STYLE_INLINE_ASSEMBLY445,15571
	#define AS1(446,15615
	#define AS2(447,15642
	#define AS3(448,15675
	#define ASS(449,15714
	#define ASL(450,15784
	#define ASJ(451,15819
	#define ASC(452,15861
	#define CRYPTOPP_NAKED 453,15900
	#define AS_HEX(454,15943
	#define CRYPTOPP_GNU_STYLE_INLINE_ASSEMBLY456,15976
	#define GNU_AS1(459,16088
	#define GNU_AS2(460,16125
	#define GNU_AS3(461,16173
	#define GNU_ASL(462,16232
	#define GNU_ASJ(463,16274
	#define AS1(464,16327
	#define AS2(465,16355
	#define AS3(466,16389
	#define ASS(467,16429
	#define ASL(468,16513
	#define ASJ(469,16541
	#define ASC(470,16581
	#define CRYPTOPP_NAKED471,16615
	#define AS_HEX(472,16640
#define IF0(475,16676
#define IF1(476,16692
#define ASM_MOD(479,16747
#define XMMWORD_PTR 480,16784
#define ASM_MOD(483,16876
#define XMMWORD_PTR485,16994
	#define AS_REG_1 489,17048
	#define AS_REG_2 490,17071
	#define AS_REG_3 491,17094
	#define AS_REG_4 492,17117
	#define AS_REG_5 493,17140
	#define AS_REG_6 494,17163
	#define AS_REG_7 495,17186
	#define AS_REG_1d 496,17209
	#define AS_REG_2d 497,17233
	#define AS_REG_3d 498,17257
	#define AS_REG_4d 499,17281
	#define AS_REG_5d 500,17305
	#define AS_REG_6d 501,17329
	#define AS_REG_7d 502,17353
	#define WORD_SZ 503,17377
	#define WORD_REG(504,17397
	#define WORD_PTR 505,17424
	#define AS_PUSH_IF86(506,17453
	#define AS_POP_IF86(507,17494
	#define AS_JCXZ 508,17533
	#define AS_REG_1 510,17582
	#define AS_REG_2 511,17605
	#define AS_REG_3 512,17628
	#define AS_REG_4 513,17651
	#define AS_REG_5 514,17674
	#define AS_REG_6 515,17697
	#define AS_REG_7 516,17721
	#define AS_REG_1d 517,17745
	#define AS_REG_2d 518,17769
	#define AS_REG_3d 519,17793
	#define AS_REG_4d 520,17817
	#define AS_REG_5d 521,17841
	#define AS_REG_6d 522,17865
	#define AS_REG_7d 523,17890
	#define WORD_SZ 524,17915
	#define WORD_REG(525,17935
	#define WORD_PTR 526,17962
	#define AS_PUSH_IF86(527,17991
	#define AS_POP_IF86(528,18032
	#define AS_JCXZ 529,18071
		#define AS_REG_1 532,18156
		#define AS_REG_2 533,18180
		#define AS_REG_3 534,18204
		#define AS_REG_4 535,18227
		#define AS_REG_5 536,18250
		#define AS_REG_6 537,18274
		#define AS_REG_7 538,18298
		#define AS_REG_1d 539,18322
		#define AS_REG_2d 540,18347
		#define AS_REG_3d 541,18372
		#define AS_REG_4d 542,18397
		#define AS_REG_5d 543,18422
		#define AS_REG_6d 544,18447
		#define AS_REG_7d 545,18473
		#define AS_REG_1 547,18507
		#define AS_REG_2 548,18531
		#define AS_REG_3 549,18555
		#define AS_REG_4 550,18579
		#define AS_REG_5 551,18603
		#define AS_REG_6 552,18626
		#define AS_REG_7 553,18649
		#define AS_REG_1d 554,18673
		#define AS_REG_2d 555,18698
		#define AS_REG_3d 556,18723
		#define AS_REG_4d 557,18748
		#define AS_REG_5d 558,18773
		#define AS_REG_6d 559,18798
		#define AS_REG_7d 560,18823
	#define WORD_SZ 562,18858
	#define WORD_REG(563,18878
	#define WORD_PTR 564,18905
	#define AS_PUSH_IF86(565,18934
	#define AS_POP_IF86(566,18960
	#define AS_JCXZ 567,18985
#define AS_XMM_OUTPUT4(571,19061

src/cryptopp/hmqv.h,1693
#define CRYPTOPP_HMQV_H5,188
NAMESPACE_BEGIN(15,401
class HMQV_Domain:HMQV_Domain23,945
  typedef GROUP_PARAMETERS GroupParameters;26,1016
  typedef typename GroupParameters::Element Element;27,1061
  typedef HMQV_Domain<GROUP_PARAMETERS,GROUP_PARAMETERS28,1115
  typedef HMQV_Domain<GROUP_PARAMETERS, COFACTOR_OPTION,28,1115
  typedef HMQV_Domain<GROUP_PARAMETERS, COFACTOR_OPTION, HASH> Domain;28,1115
  virtual ~HMQV_Domain(30,1189
  HMQV_Domain(32,1220
  HMQV_Domain(34,1310
  HMQV_Domain(37,1464
  HMQV_Domain(42,1646
  HMQV_Domain(47,1818
  HMQV_Domain(52,2011
  HMQV_Domain(57,2225
  const GroupParameters & GetGroupParameters(63,2408
  GroupParameters & AccessGroupParameters(64,2490
  CryptoParameters & AccessCryptoParameters(66,2564
  unsigned int AgreedValueLength(69,2700
  unsigned int StaticPrivateKeyLength(71,2869
  unsigned int StaticPublicKeyLength(73,3044
  void GenerateStaticPrivateKey(77,3255
  void GenerateStaticPublicKey(85,3583
  unsigned int EphemeralPrivateKeyLength(94,3954
  unsigned int EphemeralPublicKeyLength(95,4065
  void GenerateEphemeralPrivateKey(98,4211
  void GenerateEphemeralPublicKey(108,4684
  bool Agree(123,5538
  inline void Hash(247,10126
  enum KeyAgreementRole{KeyAgreementRole292,11414
  enum KeyAgreementRole{ RoleServer 292,11414
  enum KeyAgreementRole{ RoleServer = 1, RoleClient 292,11414
  DL_GroupParameters<Element> & AccessAbstractGroupParameters(294,11472
  const DL_GroupParameters<Element> & GetAbstractGroupParameters(295,11565
  GroupParameters m_groupParameters;297,11668
  KeyAgreementRole m_role;298,11706
typedef HMQV_Domain<DL_GroupParameters_GFP_DefaultSafePrime> HMQV;306,12135

src/cryptopp/drbg.h,986
#define CRYPTOPP_NIST_DRBG_H11,459
NAMESPACE_BEGIN(16,539
class NIST_DRBG 24,979
	class Err 28,1106
		explicit Err(31,1151
	virtual ~NIST_DRBG(36,1272
	virtual bool CanIncorporateEntropy(41,1429
	virtual unsigned int GetSecurityStrength(85,4304
class Hash_DRBG 156,8900
	CRYPTOPP_CONSTANT(159,8948
	unsigned int GetSecurityStrength(204,11537
	unsigned int GetSeedLength(205,11608
	unsigned int GetMinEntropy(206,11667
	unsigned int GetMaxEntropy(207,11730
	unsigned int GetMinNonce(208,11793
	unsigned int GetMaxNonce(209,11852
	unsigned int GetMaxBytesPerRequest(210,11911
	unsigned int GetMaxRequestBeforeReseed(211,11992
	void IncorporateEntropy(213,12084
	void IncorporateEntropy(216,12195
	void GenerateBlock(219,12392
	void GenerateBlock(222,12492
	void Hash_df(227,12743
	void DRBG_Instantiate(255,13638
	void DRBG_Reseed(283,15224
	void Hash_Generate(309,16691
	SecByteBlock m_c,403,19241
	SecByteBlock m_c, m_v;403,19241
	word64 m_reseed;404,19266

src/cryptopp/hrtimer.h,480
#define CRYPTOPP_HRTIMER_H2,28
NAMESPACE_BEGIN(10,224
	typedef word64 TimerWord;13,285
	typedef clock_t TimerWord;15,320
	enum Unit 23,476
	enum Unit {SECONDS SECONDS23,476
	enum Unit {SECONDS = 0, MILLISECONDS,23,476
	enum Unit {SECONDS = 0, MILLISECONDS, MICROSECONDS,23,476
	enum Unit {SECONDS = 0, MILLISECONDS, MICROSECONDS, NANOSECONDS}NANOSECONDS23,476
class ThreadUserTimer 48,1573
	ThreadUserTimer(51,1627
class CRYPTOPP_DLL Timer : public TimerBase57,1836

src/cryptopp/network.cpp,1291
#define CRYPTOPP_TRACE_NETWORK 11,200
NAMESPACE_BEGIN(13,236
double LimitedBandwidth::TimeToNextTransceive(TimeToNextTransceive29,618
void LimitedBandwidth::NoteTransceive(NoteTransceive40,863
void LimitedBandwidth::ComputeNextTransceiveTime(ComputeNextTransceiveTime50,1081
double LimitedBandwidth::GetCurTimeAndCleanUp(GetCurTimeAndCleanUp60,1377
void LimitedBandwidth::GetWaitObjects(GetWaitObjects71,1632
size_t NonblockingSource::GeneralPump2(GeneralPump280,1996
size_t NonblockingSource::PumpMessages2(PumpMessages2144,3587
lword NonblockingSink::TimedFlush(TimedFlush166,4092
bool NonblockingSink::IsolatedFlush(IsolatedFlush224,5557
NetworkSource::NetworkSource(232,5811
unsigned int NetworkSource::GetMaxWaitObjectCount(GetMaxWaitObjectCount239,6038
void NetworkSource::GetWaitObjects(GetWaitObjects246,6255
size_t NetworkSource::DoPump(DoPump261,6925
NetworkSink::NetworkSink(377,10544
float NetworkSink::ComputeCurrentSpeed(ComputeCurrentSpeed386,10960
float NetworkSink::GetMaxObservedSpeed(GetMaxObservedSpeed399,11468
unsigned int NetworkSink::GetMaxWaitObjectCount(GetMaxWaitObjectCount405,11645
void NetworkSink::GetWaitObjects(GetWaitObjects410,11800
size_t NetworkSink::Put2(Put2422,12481
lword NetworkSink::DoFlush(DoFlush478,13698

src/cryptopp/cpu.cpp,1834
# define EXCEPTION_EXECUTE_HANDLER 7,143
    typedef void (*SigHandler)SigHandler25,461
bool CpuId(33,635
	static jmp_buf s_jmpNoCPUID;44,802
	static void SigIllHandlerCPUID(45,833
	static jmp_buf s_jmpNoSSE2;50,910
	static void SigIllHandlerSSE2(51,940
bool CpuId(58,1026
static bool TrySSE2(131,2621
bool CRYPTOPP_SECTION_INIT g_x86DetectionDone 187,3970
bool CRYPTOPP_SECTION_INIT g_hasMMX 188,4026
bool CRYPTOPP_SECTION_INIT g_hasSSE4 189,4196
bool CRYPTOPP_SECTION_INIT g_hasRDRAND 190,4367
bool CRYPTOPP_SECTION_INIT g_hasPadlockRNG 191,4497
bool CRYPTOPP_SECTION_INIT g_hasPadlockPHE 192,4645
word32 CRYPTOPP_SECTION_INIT g_cacheLineSize 193,4745
static inline bool IsIntel(195,4824
static inline bool IsAMD(203,5047
static inline bool IsVIA(211,5311
void __attribute__ ((constructor (CRYPTOPP_INIT_PRIORITY + 50))) DetectX86Features(220,5605
bool CRYPTOPP_SECTION_INIT g_ArmDetectionDone 327,9062
bool CRYPTOPP_SECTION_INIT g_hasNEON 328,9118
bool CRYPTOPP_SECTION_INIT g_hasAES 329,9249
word32 CRYPTOPP_SECTION_INIT g_cacheLineSize 330,9377
	static jmp_buf s_jmpNoNEON;335,9514
	static void SigIllHandlerNEON(336,9544
	static jmp_buf s_jmpNoPMULL;341,9619
	static void SigIllHandlerPMULL(342,9650
	static jmp_buf s_jmpNoCRC32;347,9727
	static void SigIllHandlerCRC32(348,9758
	static jmp_buf s_jmpNoAES;353,9835
	static void SigIllHandlerAES(354,9864
	static jmp_buf s_jmpNoSHA1;359,9937
	static void SigIllHandlerSHA1(360,9967
	static jmp_buf s_jmpNoSHA2;365,10042
	static void SigIllHandlerSHA2(366,10072
static bool TryNEON(373,10201
static bool TryPMULL(441,12083
static bool TryCRC32(512,14683
static bool TryAES(566,15922
static bool TrySHA1(619,17327
static bool TrySHA2(679,19231
void __attribute__ ((constructor (CRYPTOPP_INIT_PRIORITY + 50))) DetectArmFeatures(738,21050

src/cryptopp/rng.h,626
#define CRYPTOPP_RNG_H10,309
NAMESPACE_BEGIN(16,405
class LC_RNG 22,704
	LC_RNG(27,881
	void GenerateBlock(30,934
	word32 GetSeed(32,985
	word32 seed;35,1031
	static const word32 m;37,1048
	static const word32 q;38,1073
	static const word16 a;39,1098
	static const word16 r;40,1123
class CRYPTOPP_DLL X917RNG : public RandomNumberGenerator,48,1462
class MaurerRandomnessTest 84,3370
	unsigned int BytesNeeded(96,3877
	enum {L=L103,4091
	enum {L=8, V=103,4091
	enum {L=8, V=256, Q=103,4091
	enum {L=8, V=256, Q=2000, K=103,4091
	double sum;104,4128
	unsigned int n;105,4142
	unsigned int tab[tab106,4160

src/cryptopp/simple.h,937
#define CRYPTOPP_SIMPLE_H7,171
NAMESPACE_BEGIN(19,365
class CRYPTOPP_DLL InvalidKeyLength : public InvalidArgument47,1432
class CRYPTOPP_DLL InvalidRounds : public InvalidArgument55,1780
class CRYPTOPP_DLL InvalidPersonalizationLength : public InvalidArgument63,2162
class CRYPTOPP_DLL InvalidSaltLength : public InvalidArgument71,2534
class CRYPTOPP_NO_VTABLE Bufferless : public T83,2940
class CRYPTOPP_NO_VTABLE Unflushable : public T94,3256
	struct InputRejected 124,4413
		{InputRejected(InputRejected125,4460
class CRYPTOPP_NO_VTABLE Multichannel : public CustomFlushPropagation<CustomFlushPropagation215,9335
class CRYPTOPP_NO_VTABLE AutoSignaling : public T280,13414
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE Store : public AutoSignaling<AutoSignaling299,14026
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE Sink : public BufferedTransformation331,15314
class CRYPTOPP_DLL BitBucket : public Bufferless<Bufferless345,16217

src/cryptopp/idea.cpp,761
#define low16(12,270
#define high16(13,369
#define DirectMUL(18,527
volatile bool IDEA::Base::tablesBuilt 32,810
word16 IDEA::Base::log[IDEA::Base::log33,858
word16 IDEA::Base::antilog[IDEA::Base::antilog34,892
void IDEA::Base::BuildLogTables(BuildLogTables36,932
void IDEA::Base::LookupKeyLogs(LookupKeyLogs58,1231
inline void IDEA::Base::LookupMUL(LookupMUL74,1469
void IDEA::Base::UncheckedSetKey(UncheckedSetKey80,1607
void IDEA::Base::EnKey EnKey98,1922
static IDEA::Word MulInv(112,2242
static inline IDEA::Word AddInv(123,2412
void IDEA::Base::DeKey(DeKey128,2488
#define MUL(152,3191
#define MUL(154,3231
void IDEA::Base::ProcessAndXorBlock(ProcessAndXorBlock157,3274
	typedef BlockGetAndPut<word16, BigEndian> Block;159,3379

src/cryptopp/whrlpool.cpp,1012
# undef CRYPTOPP_BOOL_SSE2_ASM_AVAILABLE80,2894
# undef CRYPTOPP_BOOL_SSSE3_ASM_AVAILABLE81,2936
# define CRYPTOPP_BOOL_SSE2_ASM_AVAILABLE 82,2979
# define CRYPTOPP_BOOL_SSSE3_ASM_AVAILABLE 83,3024
NAMESPACE_BEGIN(86,3080
void Whirlpool::InitState(InitState95,3247
void Whirlpool::TruncatedFinal(TruncatedFinal100,3343
#define R 122,3889
void Whirlpool::Transform(Transform409,34672
		#define SSE2_workspace	435,35317
		#define SSE2_workspace	437,35381
	#define SSE2_workspace	440,35439
#define KSL0(456,35884
#define KSL1(457,35923
#define KSL(459,35964
#define KSH0(471,36337
#define KSH1(474,36420
#define KSH2(476,36463
#define KSH(480,36549
#define TSL(492,36942
#define TSH0(504,37318
#define TSH1(508,37442
#define TSH2(510,37485
#define TSH3(513,37572
#define TSH(518,37695
#undef KSL578,39153
#undef KSH579,39165
#undef TSL580,39177
#undef TSH581,39189
#define KSL(614,39854
#define KSH(624,40178
#define TSL(638,40695
#define TSH_OP(648,41019
#define TSH(653,41192

src/cryptopp/shark.cpp,270
NAMESPACE_BEGIN(13,269
void SHARK::Base::UncheckedSetKey(UncheckedSetKey36,1010
void SHARK::Enc::InitForKeySetup(InitForKeySetup77,2308
void SHARK::Enc::ProcessAndXorBlock(ProcessAndXorBlock93,2720
void SHARK::Dec::ProcessAndXorBlock(ProcessAndXorBlock128,4008

src/cryptopp/secblock.h,3000
#define CRYPTOPP_SECBLOCK_H7,188
NAMESPACE_BEGIN(21,455
class AllocatorBase29,683
	typedef T value_type;32,716
	typedef size_t size_type;33,740
	typedef ptrdiff_t difference_type;35,793
	typedef std::ptrdiff_t difference_type;37,837
	typedef T * pointer;39,887
	typedef const T * const_pointer;40,910
	typedef T & reference;41,945
	typedef const T & const_reference;42,970
	pointer address(44,1009
	const_pointer address(45,1061
	void construct(46,1126
	void destroy(47,1186
	CRYPTOPP_CONSTEXPR size_type max_size(55,1705
    template<typename U,66,2278
    void construct(67,2322
    void destroy(74,2734
	static void CheckSize(91,3588
#define CRYPTOPP_INHERIT_ALLOCATOR_TYPES	99,3847
typename A::pointer StandardReallocate(119,4821
template <class T, bool T_Align16 150,6108
    template <class U> struct rebind 236,9916
    template <class U> struct rebind { typedef AllocatorWithCleanup<U,U236,9916
    template <class U> struct rebind { typedef AllocatorWithCleanup<U, T_Align16> other;236,9916
CRYPTOPP_DLL_TEMPLATE_CLASS AllocatorWithCleanup<AllocatorWithCleanup243,10162
CRYPTOPP_DLL_TEMPLATE_CLASS AllocatorWithCleanup<AllocatorWithCleanup244,10219
CRYPTOPP_DLL_TEMPLATE_CLASS AllocatorWithCleanup<AllocatorWithCleanup245,10278
CRYPTOPP_DLL_TEMPLATE_CLASS AllocatorWithCleanup<AllocatorWithCleanup246,10337
CRYPTOPP_DLL_TEMPLATE_CLASS AllocatorWithCleanup<AllocatorWithCleanup248,10437
CRYPTOPP_DLL_TEMPLATE_CLASS AllocatorWithCleanup<AllocatorWithCleanup251,10549
class NullAllocator 263,11126
	pointer allocate(272,11438
	void deallocate(278,11595
	CRYPTOPP_CONSTEXPR size_type max_size(284,11715
template <class T, size_t S,300,12555
	typedef typename A::value_type 440,17990
	typedef typename A::pointer 441,18035
	typedef typename A::const_pointer 442,18075
	typedef typename A::size_type 443,18127
	operator T operator T483,19836
	operator const operator const486,19889
	operator void operator void488,19940
	operator const operator const491,19981
	operator T operator T493,20029
	SecBlock<T, A>& operator=(operator=569,23466
	SecBlock<T, A>& operator+=(operator+=579,23757
	SecBlock<T, A> operator+(604,24548
	bool operator==(operator==622,25348
	bool operator!=(operator!=635,25948
class SecByteBlock 731,29481
class SecWordBlock 734,29606
class AlignedSecByteBlock 737,29782
typedef SecBlock<byte> SecByteBlock;739,29879
typedef SecBlock<word> SecWordBlock;740,29917
typedef SecBlock<byte,byte741,29955
typedef SecBlock<byte, AllocatorWithCleanup<byte, true> > AlignedSecByteBlock;741,29955
template <class T, unsigned int S,752,30453
template <class T, unsigned int S,765,30975
template <class T, unsigned int S, bool T_Align16 765,30975
template <class T, unsigned int S,775,31432
template<class T, bool A,783,31735
inline bool operator==(operator==784,31779
template<class T, bool A,785,31910
inline bool operator!=(operator!=786,31954
inline void swap(792,32156
__stl_alloc_rebind(801,32509

src/cryptopp/blumshub.cpp,339
NAMESPACE_BEGIN(7,137
unsigned int PublicBlumBlumShub::GenerateBit(GenerateBit17,376
byte PublicBlumBlumShub::GenerateByte(GenerateByte28,556
void PublicBlumBlumShub::GenerateBlock(GenerateBlock36,714
void PublicBlumBlumShub::ProcessData(ProcessData42,857
BlumBlumShub::BlumBlumShub(48,1044
void BlumBlumShub::Seek(Seek55,1214

src/cryptopp/safer.cpp,526
const byte SAFER::Base::log_tab[SAFER::Base::log_tab32,1501
#define EXP(50,2747
#define LOG(51,2782
#define PHT(52,2817
#define IPHT(53,2859
static const unsigned int BLOCKSIZE 55,2903
static const unsigned int MAX_ROUNDS 56,2945
void SAFER::Base::UncheckedSetKey(UncheckedSetKey58,2991
typedef BlockGetAndPut<byte,byte103,4419
typedef BlockGetAndPut<byte, BigEndian> Block;103,4419
void SAFER::Enc::ProcessAndXorBlock(ProcessAndXorBlock105,4469
void SAFER::Dec::ProcessAndXorBlock(ProcessAndXorBlock131,5439

src/cryptopp/dlltest.cpp,290
# define CRYPTOPP_DEFAULT_NO_DLL2,27
USING_NAMESPACE(9,136
static PNew s_pNew 178,5440
static PDelete s_pDelete 179,5468
extern "C" __declspec(181,5504
void * __cdecl operator new operator new188,5712
void __cdecl operator delete operator delete193,5786
int __cdecl main(202,5889

src/cryptopp/ossig.h,216
#define CRYPTOPP_OS_SIGNAL_H8,205
NAMESPACE_BEGIN(16,329
    typedef void (*SignalHandlerFn)SignalHandlerFn26,703
	inline void NullSignalHandler(36,1094
template <int S,53,2161
template <int S, bool O=53,2161

src/cryptopp/seckey.h,1423
#define CRYPTOPP_SECKEY_H7,191
NAMESPACE_BEGIN(26,593
class FixedBlockSize40,1061
class FixedRounds53,1422
template <unsigned int D,65,1781
template <unsigned int D, unsigned int N=65,1781
template <unsigned int N,126,4530
template <unsigned int N, unsigned int IV_REQ 126,4530
template <unsigned int D,168,6778
template <unsigned int D, unsigned int N,168,6778
template <unsigned int D, unsigned int N, unsigned int M,168,6778
template <unsigned int D, unsigned int N, unsigned int M, unsigned int Q 168,6778
template <class T, unsigned int IV_REQ 221,9606
template <CipherDir DIR,323,15110
class BlockCipherFinal 324,15148
 	BlockCipherFinal(329,15331
	BlockCipherFinal(335,15589
	BlockCipherFinal(343,15956
	BlockCipherFinal(352,16372
	bool IsForwardTransformation(358,16652
class MessageAuthenticationCodeFinal 379,17717
 	MessageAuthenticationCodeFinal(384,17990
	MessageAuthenticationCodeFinal(389,18263
	MessageAuthenticationCodeFinal(396,18645
struct BlockCipherDocumentation408,19200
	typedef BlockCipher Encryption;411,19279
	typedef BlockCipher Decryption;413,19356
struct SymmetricCipherDocumentation424,20009
	typedef SymmetricCipher Encryption;427,20096
	typedef SymmetricCipher Decryption;429,20181
struct AuthenticatedSymmetricCipherDocumentation437,20584
	typedef AuthenticatedSymmetricCipher Encryption;440,20697
	typedef AuthenticatedSymmetricCipher Decryption;442,20808

src/cryptopp/des.h,2056
#define CRYPTOPP_DES_H7,181
NAMESPACE_BEGIN(12,253
struct DES_Info 30,647
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(33,783
class DES 43,1268
	class CRYPTOPP_NO_VTABLE Base : public BlockCipherImpl<BlockCipherImpl47,1399
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION60,1867
	typedef BlockCipherFinal<ENCRYPTION, Base> Encryption;60,1867
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION61,1924
	typedef BlockCipherFinal<DECRYPTION, Base> Decryption;61,1924
struct DES_EDE2_Info 66,2066
	CRYPTOPP_DLL static const char * CRYPTOPP_API StaticAlgorithmName(68,2145
class DES_EDE2 75,2410
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION90,2902
	typedef BlockCipherFinal<ENCRYPTION, Base> Encryption;90,2902
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION91,2959
	typedef BlockCipherFinal<DECRYPTION, Base> Decryption;91,2959
struct DES_EDE3_Info 96,3101
	CRYPTOPP_DLL static const char * CRYPTOPP_API StaticAlgorithmName(98,3180
class DES_EDE3 105,3445
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION120,3945
	typedef BlockCipherFinal<ENCRYPTION, Base> Encryption;120,3945
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION121,4002
	typedef BlockCipherFinal<DECRYPTION, Base> Decryption;121,4002
struct DES_XEX3_Info 126,4133
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(128,4212
class DES_XEX3 135,4466
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION153,5193
	typedef BlockCipherFinal<ENCRYPTION, Base> Encryption;153,5193
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION154,5250
	typedef BlockCipherFinal<DECRYPTION, Base> Decryption;154,5250
typedef DES::Encryption DESEncryption;157,5313
typedef DES::Decryption DESDecryption;158,5353
typedef DES_EDE2::Encryption DES_EDE2_Encryption;160,5395
typedef DES_EDE2::Decryption DES_EDE2_Decryption;161,5446
typedef DES_EDE3::Encryption DES_EDE3_Encryption;163,5499
typedef DES_EDE3::Decryption DES_EDE3_Decryption;164,5550
typedef DES_XEX3::Encryption DES_XEX3_Encryption;166,5603
typedef DES_XEX3::Decryption DES_XEX3_Decryption;167,5654

src/cryptopp/dll.cpp,1534
#define CRYPTOPP_MANUALLY_INSTANTIATE_TEMPLATES3,67
#define CRYPTOPP_DEFAULT_NO_DLL4,116
template<> const byte PKCS_DigestDecoration<SHA1>::decoration[decoration28,637
template<> const unsigned int PKCS_DigestDecoration<SHA1>::length length29,782
template<> const byte PKCS_DigestDecoration<SHA224>::decoration[decoration31,902
template<> const unsigned int PKCS_DigestDecoration<SHA224>::length length32,1069
template<> const byte PKCS_DigestDecoration<SHA256>::decoration[decoration34,1193
template<> const unsigned int PKCS_DigestDecoration<SHA256>::length length35,1360
template<> const byte PKCS_DigestDecoration<SHA384>::decoration[decoration37,1484
template<> const unsigned int PKCS_DigestDecoration<SHA384>::length length38,1651
template<> const byte PKCS_DigestDecoration<SHA512>::decoration[decoration40,1775
template<> const unsigned int PKCS_DigestDecoration<SHA512>::length length41,1942
template<> const byte EMSA2HashId<SHA1>::id id43,2066
template<> const byte EMSA2HashId<SHA224>::id id44,2119
template<> const byte EMSA2HashId<SHA256>::id id45,2174
template<> const byte EMSA2HashId<SHA384>::id id46,2229
template<> const byte EMSA2HashId<SHA512>::id id47,2284
static PNew s_pNew 61,2484
static PDelete s_pDelete 62,2512
static void * New 64,2548
static void SetNewAndDeleteFunctionPointers(76,2792
void * operator new operator new139,4455
void operator delete operator delete147,4576
void * operator new operator new152,4633
void operator delete operator delete157,4709

src/cryptopp/validate.h,213
#define CRYPTOPP_VALIDATE_H2,29
class StreamState119,2701
	StreamState(122,2732
	~StreamState(127,2836
	std::ostream& m_out;134,2924
	std::ios_base::fmtflags m_fmt;135,2947
	std::streamsize m_prec;136,2980

src/cryptopp/gf256.cpp,97
NAMESPACE_BEGIN(6,109
GF256::Element GF256::MultiplicativeInverse(MultiplicativeInverse26,427

src/cryptopp/validat2.cpp,977
#define CRYPTOPP_ENABLE_NAMESPACE_WEAK 5,92
class FixedRNG 60,1197
	FixedRNG(63,1256
	void GenerateBlock(65,1323
	BufferedTransformation &m_source;m_source71,1422
bool ValidateBBS(74,1464
bool SignatureValidate(128,3157
bool CryptoSystemValidate(179,5036
bool SimpleKeyAgreementValidate(205,5997
bool AuthenticatedKeyAgreementValidate(241,7095
bool ValidateRSA(281,8618
bool ValidateDH(368,11757
bool ValidateMQV(377,11970
bool ValidateHMQV(386,12196
bool ValidateFHMQV(503,17063
bool ValidateLUC_DH(620,21986
bool ValidateXTR_DH(629,22212
bool ValidateElGamal(638,22439
bool ValidateDLIES(656,22922
bool ValidateNR(679,23597
bool ValidateDSA(701,24139
bool ValidateLUC(718,24732
bool ValidateLUC_DL(737,25215
bool ValidateRabin(756,25779
bool ValidateRW(775,26279
bool TestPolynomialMod2(801,27010
bool ValidateECP(913,29767
bool ValidateEC2N(962,31633
bool ValidateECDSA(1011,33484
bool ValidateECGDSA(1062,35516
bool ValidateESIGN(1404,48506

src/cryptopp/chacha.cpp,553
#define CHACHA_QUARTER_ROUND(15,438
NAMESPACE_BEGIN(CHACHA_QUARTER_ROUND13,409
void ChaCha_Policy<R>::CipherSetKey(CipherSetKey31,915
void ChaCha_Policy<R>::CipherResynchronize(CipherResynchronize50,1575
void ChaCha_Policy<R>::SeekToIteration(SeekToIteration61,1908
unsigned int ChaCha_Policy<R>::GetAlignment(GetAlignment74,2515
unsigned int ChaCha_Policy<R>::GetOptimalBlockSize(GetOptimalBlockSize85,2727
void ChaCha_Policy<R>::OperateKeystream(OperateKeystream96,2960
		#undef CHACHA_OUTPUT120,3923
		#define CHACHA_OUTPUT(121,3947

src/cryptopp/rabin.cpp,735
NAMESPACE_BEGIN(11,213
void RabinFunction::DEREncode(DEREncode22,425
Integer RabinFunction::ApplyFunction(ApplyFunction31,614
bool RabinFunction::Validate(Validate43,848
bool RabinFunction::GetVoidValue(GetVoidValue54,1222
void RabinFunction::AssignFrom(AssignFrom63,1564
void InvertibleRabinFunction::GenerateRandom(GenerateRandom76,1974
void InvertibleRabinFunction::BERDecode(BERDecode117,2969
void InvertibleRabinFunction::DEREncode(DEREncode129,3228
Integer InvertibleRabinFunction::CalculateInverse(CalculateInverse141,3493
bool InvertibleRabinFunction::Validate(Validate184,4470
bool InvertibleRabinFunction::GetVoidValue(GetVoidValue204,5188
void InvertibleRabinFunction::AssignFrom(AssignFrom213,5548

src/cryptopp/seed.cpp,356
static const byte s_s0[s_s013,388
static const byte s_s1[s_s131,1992
#define SS0(49,3596
#define SS1(50,3650
#define SS2(51,3704
#define SS3(52,3758
#define G(53,3812
void SEED::Base::UncheckedSetKey(UncheckedSetKey55,3912
void SEED::Base::ProcessAndXorBlock(ProcessAndXorBlock84,4581
	typedef BlockGetAndPut<word32, BigEndian> Block;86,4686

src/cryptopp/socketft.h,1939
#define CRYPTOPP_SOCKETFT_H2,29
NAMESPACE_BEGIN(26,602
typedef ::SOCKET socket_t;29,665
typedef int socket_t;31,700
const socket_t INVALID_SOCKET 32,723
const int SD_RECEIVE 34,798
const int SD_SEND 35,825
const int SD_BOTH 36,849
const int SOCKET_ERROR 37,873
typedef TYPE_OF_SOCKLEN_T socklen_t;41,932
class Socket45,1041
	class Err 49,1106
		socket_t GetSocket(53,1211
		socket_t m_s;56,1268
	Socket(59,1292
	Socket(60,1370
	bool GetOwnership(63,1449
	void SetOwnership(64,1493
	operator socket_t(operator socket_t66,1540
	socket_t GetSocket(67,1576
	void CheckAndHandleError_int(92,2683
	void CheckAndHandleError(94,2812
	void CheckAndHandleError(97,2999
	void CheckAndHandleError(99,3110
	virtual void SocketChanged(115,3689
	socket_t m_s;117,3725
	bool m_own;118,3741
class SocketsInitializer121,3761
	SocketsInitializer(124,3799
	~SocketsInitializer(125,3848
class SocketReceiver 128,3960
	bool MustWaitToReceive(134,4085
	bool MustWaitForResult(137,4155
	bool EofReceived(141,4282
	unsigned int GetMaxWaitObjectCount(143,4335
	Socket &m_s;m_s147,4487
	WindowsHandle m_event;150,4538
	OVERLAPPED m_overlapped;151,4563
	DWORD m_lastResult;152,4590
	bool m_resultPending;153,4612
	unsigned int m_lastResult;155,4643
	bool m_eofReceived;158,4682
class SocketSender 161,4710
	bool MustWaitToSend(167,4829
	bool MustWaitForResult(170,4894
	bool MustWaitForEof(171,4936
	unsigned int GetMaxWaitObjectCount(178,5100
	Socket &m_s;m_s182,5252
	WindowsHandle m_event;184,5301
	OVERLAPPED m_overlapped;185,5326
	DWORD m_lastResult;186,5353
	bool m_resultPending;187,5375
	unsigned int m_lastResult;189,5406
class SocketSource 194,5499
	SocketSource(197,5569
	NetworkReceiver & AccessReceiver(205,5790
	SocketReceiver m_receiver;206,5848
class SocketSink 210,5931
	SocketSink(213,5997
	void SendEof(216,6185
	NetworkSender & AccessSender(219,6235
	SocketSender m_sender;220,6287

src/cryptopp/pkcspad.cpp,2161
#define CRYPTOPP_PKCSPAD_CPP6,194
template<> const byte PKCS_DigestDecoration<Weak1::MD2>::decoration[decoration16,439
template<> const unsigned int PKCS_DigestDecoration<Weak1::MD2>::length length17,605
template<> const byte PKCS_DigestDecoration<Weak1::MD5>::decoration[decoration19,751
template<> const unsigned int PKCS_DigestDecoration<Weak1::MD5>::length length20,917
template<> const byte PKCS_DigestDecoration<RIPEMD160>::decoration[decoration22,1063
template<> const unsigned int PKCS_DigestDecoration<RIPEMD160>::length length23,1213
template<> const byte PKCS_DigestDecoration<Tiger>::decoration[decoration25,1357
template<> const unsigned int PKCS_DigestDecoration<Tiger>::length length26,1523
template<> const byte PKCS_DigestDecoration<SHA1>::decoration[decoration30,1772
template<> const unsigned int PKCS_DigestDecoration<SHA1>::length length31,1917
template<> const byte PKCS_DigestDecoration<SHA224>::decoration[decoration33,2051
template<> const unsigned int PKCS_DigestDecoration<SHA224>::length length34,2218
template<> const byte PKCS_DigestDecoration<SHA256>::decoration[decoration36,2356
template<> const unsigned int PKCS_DigestDecoration<SHA256>::length length37,2523
template<> const byte PKCS_DigestDecoration<SHA384>::decoration[decoration39,2661
template<> const unsigned int PKCS_DigestDecoration<SHA384>::length length40,2828
template<> const byte PKCS_DigestDecoration<SHA512>::decoration[decoration42,2966
template<> const unsigned int PKCS_DigestDecoration<SHA512>::length length43,3133
template<> const byte EMSA2HashId<SHA1>::id id45,3271
template<> const byte EMSA2HashId<SHA224>::id id46,3324
template<> const byte EMSA2HashId<SHA256>::id id47,3379
template<> const byte EMSA2HashId<SHA384>::id id48,3434
template<> const byte EMSA2HashId<SHA512>::id id49,3489
size_t PKCS_EncryptionPaddingScheme::MaxUnpaddedLength(MaxUnpaddedLength52,3554
void PKCS_EncryptionPaddingScheme::Pad(Pad57,3695
DecodingResult PKCS_EncryptionPaddingScheme::Unpad(Unpad80,4466
void PKCS1v15_SignatureMessageEncodingMethod::ComputeMessageRepresentative(ComputeMessageRepresentative117,5474

src/cryptopp/socketft.cpp,2566
#  define USE_WINDOWS8_API16,502
const int SOCKET_EWOULDBLOCK 41,991
typedef int socklen_t;42,1039
const int SOCKET_EINVAL 44,1070
const int SOCKET_EWOULDBLOCK 45,1105
# define INADDR_NONE	50,1218
# define INET_ADDRSTRLEN 55,1355
# define INET6_ADDRSTRLEN 58,1420
#define MAX_ADDRSTRLEN 61,1462
int inet_pton(65,1702
Socket::Err::Err(109,2704
Socket::~Socket(~Socket115,2914
void Socket::AttachSocket(AttachSocket130,3060
socket_t Socket::DetachSocket(DetachSocket140,3195
void Socket::Create(Create148,3311
void Socket::CloseSocket(CloseSocket157,3501
void Socket::Bind(Bind181,4233
void Socket::Bind(Bind206,4811
void Socket::Listen(Listen213,5041
bool Socket::Connect(Connect219,5184
bool Socket::Connect(Connect258,6202
bool Socket::Accept(Accept268,6524
void Socket::GetSockName(GetSockName279,6853
void Socket::GetPeerName(GetPeerName285,7036
unsigned int Socket::Send(Send291,7219
unsigned int Socket::Receive(Receive299,7481
void Socket::ShutDown(ShutDown307,7734
void Socket::IOCtl(IOCtl314,7898
bool Socket::SendReady(SendReady324,8178
bool Socket::ReceiveReady(ReceiveReady345,8662
unsigned int Socket::PortNameToNumber(PortNameToNumber366,9149
void Socket::StartSockets(StartSockets378,9460
void Socket::ShutdownSockets(ShutdownSockets388,9666
int Socket::GetLastError(GetLastError397,9848
void Socket::SetLastError(SetLastError406,9977
void Socket::HandleError(HandleError415,10127
SocketReceiver::SocketReceiver(423,10288
SocketReceiver::~SocketReceiver(~SocketReceiver432,10629
bool SocketReceiver::Receive(Receive447,11126
void SocketReceiver::GetWaitObjects(GetWaitObjects477,11867
unsigned int SocketReceiver::GetReceiveResult(GetReceiveResult485,12229
SocketSender::SocketSender(514,12844
SocketSender::~SocketSender(~SocketSender524,13161
void SocketSender::Send(Send539,13654
void SocketSender::SendEof(SendEof559,14200
bool SocketSender::EofSent(EofSent568,14477
void SocketSender::GetWaitObjects(GetWaitObjects583,15014
unsigned int SocketSender::GetSendResult(GetSendResult591,15350
SocketReceiver::SocketReceiver(607,15704
void SocketReceiver::GetWaitObjects(GetWaitObjects612,15805
bool SocketReceiver::Receive(Receive618,16020
unsigned int SocketReceiver::GetReceiveResult(GetReceiveResult626,16206
SocketSender::SocketSender(631,16286
void SocketSender::Send(Send636,16361
void SocketSender::SendEof(SendEof641,16466
unsigned int SocketSender::GetSendResult(GetSendResult646,16529
void SocketSender::GetWaitObjects(GetWaitObjects651,16604

src/cryptopp/ttmac.h,55
#define CRYPTOPP_TTMAC_H7,183
NAMESPACE_BEGIN(13,280

src/cryptopp/rc6.cpp,274
NAMESPACE_BEGIN(9,183
typedef BlockGetAndPut<RC6::RC6_WORD,RC6::RC6_WORD41,1184
typedef BlockGetAndPut<RC6::RC6_WORD, LittleEndian> Block;41,1184
void RC6::Enc::ProcessAndXorBlock(ProcessAndXorBlock43,1246
void RC6::Dec::ProcessAndXorBlock(ProcessAndXorBlock69,1802

src/cryptopp/mars.h,503
#define CRYPTOPP_MARS_H7,178
NAMESPACE_BEGIN(12,251
struct MARS_Info 16,344
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(18,434
class MARS 24,641
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION50,1310
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;50,1310
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION51,1366
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;51,1366
typedef MARS::Encryption MARSEncryption;54,1428
typedef MARS::Decryption MARSDecryption;55,1470

src/cryptopp/esign.h,1225
#define CRYPTOPP_ESIGN_H8,219
NAMESPACE_BEGIN(16,352
class ESIGNFunction 21,489
	typedef ESIGNFunction ThisClass;23,577
	void Initialize(30,741
	void BERDecode(34,835
	void DEREncode(35,881
	Integer PreimageBound(44,1240
	Integer ImageBound(45,1286
	const Integer & GetModulus(48,1368
	const Integer & GetPublicExponent(49,1419
	void SetModulus(51,1479
	void SetPublicExponent(52,1526
	unsigned int GetK(56,1684
	Integer m_n,58,1765
	Integer m_n, m_e;58,1765
class InvertibleESIGNFunction 64,1910
	typedef InvertibleESIGNFunction ThisClass;66,2028
	void Initialize(76,2371
	void Initialize(85,2895
	const Integer& GetPrime1(100,3569
	const Integer& GetPrime2(101,3618
	void SetPrime1(103,3669
	void SetPrime2(104,3715
	Integer m_p,107,3775
	Integer m_p, m_q;107,3775
class EMSA5Pad 115,3940
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(118,4024
	void ComputeMessageRepresentative(120,4106
struct P1363_EMSA5 140,5046
	typedef EMSA5Pad<P1363_MGF1> SignatureMessageEncodingMethod;142,5096
struct ESIGN_Keys145,5165
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(147,5187
	typedef ESIGNFunction PublicKey;148,5267
	typedef InvertibleESIGNFunction PrivateKey;149,5302

src/cryptopp/salsa.cpp,2734
# undef CRYPTOPP_X86_ASM_AVAILABLE24,714
# undef CRYPTOPP_X32_ASM_AVAILABLE25,750
# undef CRYPTOPP_X64_ASM_AVAILABLE26,786
# undef CRYPTOPP_BOOL_SSE2_ASM_AVAILABLE27,822
# undef CRYPTOPP_BOOL_SSSE3_ASM_AVAILABLE28,864
# define CRYPTOPP_BOOL_SSE2_ASM_AVAILABLE 29,907
# define CRYPTOPP_BOOL_SSSE3_ASM_AVAILABLE 30,952
NAMESPACE_BEGIN(33,1008
void Salsa20_Policy::CipherSetKey(CipherSetKey43,1211
void Salsa20_Policy::CipherResynchronize(CipherResynchronize63,1979
void Salsa20_Policy::SeekToIteration(SeekToIteration73,2282
unsigned int Salsa20_Policy::GetAlignment(GetAlignment80,2555
unsigned int Salsa20_Policy::GetOptimalBlockSize(GetOptimalBlockSize90,2734
void Salsa20_Policy::OperateKeystream(OperateKeystream111,3252
	#define REG_output	138,4053
	#define REG_input	139,4080
	#define REG_iterationCount	140,4106
	#define REG_state	141,4138
	#define REG_rounds	142,4164
	#define REG_roundsLeft	143,4191
	#define REG_temp32	144,4221
	#define REG_temp	145,4249
	#define SSE2_WORKSPACE	146,4274
		#define REG_output	151,4356
		#define REG_input	152,4383
		#define REG_iterationCount	153,4409
		#define REG_state	154,4442
		#define REG_rounds	155,4484
		#define REG_roundsLeft	156,4527
		#define REG_temp32	157,4558
		#define REG_temp	158,4586
		#define SSE2_WORKSPACE	159,4612
		#define REG_output	163,4718
		#define REG_input	164,4746
		#define REG_iterationCount	165,4773
		#define REG_state	166,4807
		#define REG_rounds	167,4834
		#define REG_roundsLeft	168,4862
		#define REG_temp32	169,4893
		#define REG_temp	170,4921
		#define SSE2_WORKSPACE	171,4947
#define SSE2_EXPAND_S(202,5575
#define SSE2_EXPAND_S85(225,6196
#define SSE2_QUARTER_ROUND(241,6767
#define L01(250,7019
#define L02(251,7114
#define L03(252,7209
#define L04(253,7282
#define L05(254,7343
#define L06(255,7398
#define L07(256,7456
#define L08(257,7540
#define L09(258,7609
#define L10(259,7687
#define L11(260,7748
#define L12(261,7821
#define L13(262,7882
#define L14(263,7937
#define L15(264,7995
#define L16(265,8079
#define L17(266,8148
#define L18(267,8226
#define L19(268,8287
#define L20(269,8360
#define L21(270,8421
#define L22(271,8477
#define L23(272,8536
#define L24(273,8620
#define L25(274,8689
#define L26(275,8767
#define L27(276,8840
#define L28(277,8901
#define L29(278,8957
#define L30(279,9016
#define L31(280,9089
#define L32(281,9158
#define SSE2_QUARTER_ROUND_X8(283,9238
#define SSE2_QUARTER_ROUND_X16(317,11026
#define SSE2_OUTPUT_4(391,15941
				#define QUARTER_ROUND(529,20301
			#define SALSA_OUTPUT(546,20794
void XSalsa20_Policy::CipherSetKey(CipherSetKey574,22400
void XSalsa20_Policy::CipherResynchronize(CipherResynchronize592,22979

src/cryptopp/ecp.cpp,1895
NAMESPACE_BEGIN(15,267
static inline ECP::Point FromMontgomery(23,496
ECP::ECP(ECP29,688
ECP::ECP(41,1045
void ECP::DEREncode(DEREncode57,1398
bool ECP::DecodePoint(DecodePoint66,1621
bool ECP::DecodePoint(DecodePoint72,1824
void ECP::EncodePoint(EncodePoint121,2738
void ECP::EncodePoint(EncodePoint139,3180
ECP::Point ECP::BERDecodePoint(BERDecodePoint146,3442
void ECP::DEREncodePoint(DEREncodePoint156,3653
bool ECP::ValidateParameters(ValidateParameters163,3872
bool ECP::VerifyPoint(VerifyPoint179,4252
bool ECP::Equal(Equal188,4484
const ECP::Point& ECP::Identity(Identity202,4768
const ECP::Point& ECP::Inverse(Inverse207,4852
const ECP::Point& ECP::Add(Add220,5052
const ECP::Point& ECP::Double(Double237,5629
template <class T, class Iterator> void ParallelInvert(252,6161
struct ProjectivePoint289,6990
	ProjectivePoint(291,7017
	ProjectivePoint(292,7040
	Integer x,295,7139
	Integer x,y,295,7139
	Integer x,y,z;295,7139
class ProjectiveDoubling298,7162
	ProjectiveDoubling(301,7200
	void Double(319,7628
	const ModularArithmetic &mr;mr337,8071
	ProjectivePoint P;338,8102
	bool firstDoubling,339,8123
	bool firstDoubling, negated;339,8123
	Integer sixteenY4,340,8154
	Integer sixteenY4, aZ4,340,8154
	Integer sixteenY4, aZ4, twoY,340,8154
	Integer sixteenY4, aZ4, twoY, fourY2,340,8154
	Integer sixteenY4, aZ4, twoY, fourY2, S,340,8154
	Integer sixteenY4, aZ4, twoY, fourY2, S, M;340,8154
struct ZIterator343,8206
	ZIterator(345,8227
	ZIterator(346,8244
	Integer& operator*(347,8311
	int operator-(348,8350
	ZIterator operator+(349,8406
	ZIterator& operator+=(operator+=350,8461
	std::vector<ProjectivePoint>::iterator it;351,8515
ECP::Point ECP::ScalarMultiply(ScalarMultiply354,8566
void ECP::SimultaneousMultiply(SimultaneousMultiply364,8831
ECP::Point ECP::CascadeScalarMultiply(CascadeScalarMultiply462,11710

src/cryptopp/serpent.cpp,323
NAMESPACE_BEGIN(11,182
void Serpent::Base::UncheckedSetKey(UncheckedSetKey44,1216
typedef BlockGetAndPut<word32,word3250,1410
typedef BlockGetAndPut<word32, LittleEndian> Block;50,1410
void Serpent::Enc::ProcessAndXorBlock(ProcessAndXorBlock52,1465
void Serpent::Dec::ProcessAndXorBlock(ProcessAndXorBlock91,2225

src/cryptopp/md4.cpp,327
#define CRYPTOPP_ENABLE_NAMESPACE_WEAK 18,481
namespace Weak1 23,589
void MD4::InitState(InitState25,610
void MD4::Transform Transform33,764
#define F(36,875
#define G(37,923
#define H(38,985
#define function(47,1113
#undef function65,1643
#define function(66,1660
#undef function84,2201
#define function(85,2218

src/cryptopp/crc.h,767
#define CRYPTOPP_CRC32_H8,189
NAMESPACE_BEGIN(12,242
#define CRC32_INDEX(17,338
#define CRC32_SHIFTED(18,373
#define CRC32_INDEX(20,415
#define CRC32_SHIFTED(21,449
class CRC32 26,579
	CRYPTOPP_CONSTANT(29,632
    CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(34,831
    std::string AlgorithmName(35,914
	void UpdateByte(37,987
	byte GetCrcByte(38,1077
	void Reset(41,1157
	static const word32 m_tab[m_tab44,1206
	word32 m_crc;45,1240
class CRC32C 51,1375
	unsigned int DigestSize(58,1574
    CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(59,1629
    std::string AlgorithmName(60,1713
	void UpdateByte(62,1786
	byte GetCrcByte(63,1876
	void Reset(66,1956
	static const word32 m_tab[m_tab69,2005
	word32 m_crc;70,2039

src/cryptopp/pssr.h,411
#define CRYPTOPP_PSSR_H7,166
NAMESPACE_BEGIN(17,311
template<> class PSSR_MEM_BaseWithHashId<PSSR_MEM_BaseWithHashId53,1880
template<> class PSSR_MEM_BaseWithHashId<PSSR_MEM_BaseWithHashId57,2095
template <bool ALLOW_RECOVERY,68,2730
struct PSSR 83,3638
	typedef PSSR_MEM<true> SignatureMessageEncodingMethod;85,3681
struct PSS 91,3991
	typedef PSSR_MEM<false> SignatureMessageEncodingMethod;93,4033

src/cryptopp/dll.h,352
#define CRYPTOPP_DLL_H8,213
#define CRYPTOPP_IMPORTS14,483
NAMESPACE_BEGIN(63,1481
typedef void * (CRYPTOPP_API * PNew)65,1510
typedef void (CRYPTOPP_API * PDelete)66,1557
typedef void (CRYPTOPP_API * PGetNewAndDelete)67,1605
typedef std::new_handler (CRYPTOPP_API * PSetNewHandler)68,1673
typedef void (CRYPTOPP_API * PSetNewAndDelete)69,1750

src/cryptopp/polynomi.h,4572
#define CRYPTOPP_POLYNOMI_H9,198
NAMESPACE_BEGIN(21,374
template <class T> class PolynomialOver25,491
		class DivideByZero 31,629
			DivideByZero(34,686
		class RandomizationParameter38,840
			RandomizationParameter(41,888
			unsigned int m_coefficientCount;45,1118
			typename T::RandomizationParameter m_coefficientParameter;46,1155
		typedef T Ring;50,1262
		typedef typename T::Element CoefficientType;51,1281
		PolynomialOver(57,1401
		PolynomialOver(60,1433
		PolynomialOver(64,1571
		PolynomialOver(68,1718
		template <typename Iterator> PolynomialOver(72,1896
		PolynomialOver(76,2038
		PolynomialOver(88,2549
		int Degree(95,2785
		bool IsZero(124,3626
		PolynomialOver<Ring> Doubled(140,4486
		PolynomialOver<Ring> Squared(142,4577
	std::vector<CoefficientType> m_coefficients;162,5370
template <class T, int instance> class PolynomialOverFixedRing 167,5514
	typedef PolynomialOver<T> B;169,5609
	typedef PolynomialOverFixedRing<T,T170,5640
	typedef PolynomialOverFixedRing<T, instance> ThisType;170,5640
	typedef T Ring;173,5708
	typedef typename T::Element CoefficientType;174,5726
	typedef typename B::DivideByZero DivideByZero;175,5773
	typedef typename B::RandomizationParameter RandomizationParameter;176,5822
		PolynomialOverFixedRing(181,5956
		PolynomialOverFixedRing(184,6061
		explicit PolynomialOverFixedRing(186,6119
		PolynomialOverFixedRing(189,6216
		template <typename Iterator> PolynomialOverFixedRing(192,6383
		explicit PolynomialOverFixedRing(196,6523
		PolynomialOverFixedRing(199,6646
		explicit PolynomialOverFixedRing(202,6815
		explicit PolynomialOverFixedRing(205,6989
		PolynomialOverFixedRing(208,7113
		int Degree(217,7407
		unsigned int CoefficientCount(219,7481
		CoefficientType GetCoefficient(221,7600
		ThisType&  operator=(operator=229,7880
		ThisType&  operator+=(operator+=231,7963
		ThisType&  operator-=(operator-=233,8059
		ThisType&  operator*=(operator*=235,8151
		ThisType&  operator/=(operator/=237,8228
		ThisType&  operator%=(operator%=239,8305
		ThisType&  operator<<=(operator<<=242,8384
		ThisType&  operator>>=(operator>>=244,8477
		void SetCoefficient(247,8610
		void Randomize(250,8733
		void Negate(253,8875
		void swap(255,8921
		bool operator!(261,9012
		ThisType operator+(263,9077
		ThisType operator-(265,9130
		friend ThisType operator>>(271,9254
		friend ThisType operator<<(273,9345
		ThisType MultiplicativeInverse(279,9491
		bool IsUnit(281,9599
		ThisType Doubled(284,9665
		ThisType Squared(286,9745
		CoefficientType EvaluateAt(288,9820
		static void Divide(291,9996
		friend std::istream& operator>>(298,10173
		friend std::ostream& operator<<(301,10286
	struct NewOnePolynomial306,10420
		ThisType * operator()(operator()308,10450
	static const Ring ms_fixedRing;314,10564
template <class T> class RingOfPolynomialsOver 318,10647
	typedef T CoefficientRing;321,10760
	typedef PolynomialOver<T> Element;322,10789
	typedef typename Element::CoefficientType CoefficientType;323,10826
	typedef typename Element::RandomizationParameter RandomizationParameter;324,10887
	RingOfPolynomialsOver(326,10964
	Element RandomElement(328,11037
	bool Equal(331,11177
	const Element& Identity(334,11267
	const Element& Add(337,11349
	Element& Accumulate(340,11460
	const Element& Inverse(343,11560
	const Element& Subtract(346,11657
	Element& Reduce(349,11774
	const Element& Double(352,11863
	const Element& MultiplicativeIdentity(355,11959
	const Element& Multiply(358,12069
	const Element& Square(361,12186
	bool IsUnit(364,12282
	const Element& MultiplicativeInverse(367,12352
	const Element& Divide(370,12477
	const Element& Mod(373,12596
	void DivisionAlgorithm(376,12709
	class InterpolationFailed 379,12844
		InterpolationFailed(382,12905
	CoefficientRing m_ring;397,13862
inline bool operator==(operator==409,14419
inline bool operator!=(operator!=413,14636
inline bool operator> 418,14835
inline bool operator>=(operator>=422,15048
inline bool operator< 426,15262
inline bool operator<=(operator<=430,15475
inline CryptoPP::PolynomialOverFixedRing<T, instance> operator+(435,15691
inline CryptoPP::PolynomialOverFixedRing<T, instance> operator-(439,15995
inline CryptoPP::PolynomialOverFixedRing<T, instance> operator*(443,16300
inline CryptoPP::PolynomialOverFixedRing<T, instance> operator/(447,16605
inline CryptoPP::PolynomialOverFixedRing<T, instance> operator%(451,16914
template<class T> inline void swap(457,17222
template<class T, int i> inline void swap(461,17341

src/cryptopp/tftables.cpp,60
const word32 Twofish::Base::mds[Twofish::Base::mds62,3512

src/cryptopp/gfpcrypt.cpp,1713
NAMESPACE_BEGIN(21,392
void DL_GroupParameters_DSA::GenerateRandom(GenerateRandom37,771
bool DL_GroupParameters_DSA::ValidateGroup(ValidateGroup70,1684
void DL_SignatureMessageEncodingMethod_DSA::ComputeMessageRepresentative(ComputeMessageRepresentative78,2089
void DL_SignatureMessageEncodingMethod_NR::ComputeMessageRepresentative(ComputeMessageRepresentative103,3266
bool DL_GroupParameters_IntegerBased::ValidateGroup(ValidateGroup129,4546
bool DL_GroupParameters_IntegerBased::ValidateElement(ValidateElement145,5070
void DL_GroupParameters_IntegerBased::GenerateRandom(GenerateRandom179,6128
void DL_GroupParameters_IntegerBased::EncodeElement(EncodeElement207,6925
unsigned int DL_GroupParameters_IntegerBased::GetEncodedElementSize(GetEncodedElementSize213,7132
Integer DL_GroupParameters_IntegerBased::DecodeElement(DecodeElement219,7298
void DL_GroupParameters_IntegerBased::BERDecode(BERDecode228,7585
void DL_GroupParameters_IntegerBased::DEREncode(DEREncode247,7989
bool DL_GroupParameters_IntegerBased::GetVoidValue(GetVoidValue256,8262
void DL_GroupParameters_IntegerBased::AssignFrom(AssignFrom262,8519
OID DL_GroupParameters_IntegerBased::GetAlgorithmID(GetAlgorithmID270,8751
void DL_GroupParameters_GFP::SimultaneousExponentiate(SimultaneousExponentiate275,8845
DL_GroupParameters_GFP::Element DL_GroupParameters_GFP::MultiplyElements(MultiplyElements281,9119
DL_GroupParameters_GFP::Element DL_GroupParameters_GFP::CascadeExponentiate(CascadeExponentiate286,9289
Integer DL_GroupParameters_IntegerBased::GetMaxExponent(GetMaxExponent292,9595
unsigned int DL_GroupParameters_IntegerBased::GetDefaultSubgroupOrderSize(GetDefaultSubgroupOrderSize297,9789

src/cryptopp/skipjack.h,539
#define CRYPTOPP_SKIPJACK_H7,173
NAMESPACE_BEGIN(12,250
struct SKIPJACK_Info 16,351
	CRYPTOPP_DLL static const char * CRYPTOPP_API StaticAlgorithmName(18,430
class SKIPJACK 24,665
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION63,1836
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;63,1836
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION64,1892
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;64,1892
typedef SKIPJACK::Encryption SKIPJACKEncryption;67,1954
typedef SKIPJACK::Decryption SKIPJACKDecryption;68,2004

src/cryptopp/skipjack.cpp,542
#define g(47,2196
#define g0(55,2409
#define g1(56,2451
#define g2(57,2493
#define g3(58,2535
#define g4(59,2577
#define h(64,2669
#define h0(72,2882
#define h1(73,2924
#define h2(74,2966
#define h3(75,3008
#define h4(76,3050
void SKIPJACK::Base::UncheckedSetKey(UncheckedSetKey81,3182
typedef BlockGetAndPut<word16,word1696,3515
typedef BlockGetAndPut<word16, LittleEndian> Block;96,3515
void SKIPJACK::Enc::ProcessAndXorBlock(ProcessAndXorBlock101,3616
void SKIPJACK::Dec::ProcessAndXorBlock(ProcessAndXorBlock152,4951

src/cryptopp/dh.cpp,23
NAMESPACE_BEGIN(9,133

src/cryptopp/hrtimer.cpp,603
#define WIN32_LEAN_AND_MEAN11,226
NAMESPACE_BEGIN(31,698
inline TimerWord PerformanceCounterFrequency(44,1084
double TimerBase::ConvertTo(ConvertTo51,1233
void TimerBase::StartTimer(StartTimer60,1610
double TimerBase::ElapsedTimeAsDouble(ElapsedTimeAsDouble66,1713
unsigned long TimerBase::ElapsedTime(ElapsedTime83,2040
TimerWord Timer::GetCurrentTimerValue(GetCurrentTimerValue90,2212
TimerWord Timer::TicksPerSecond(TicksPerSecond108,2773
TimerWord ThreadUserTimer::GetCurrentTimerValue(GetCurrentTimerValue121,3031
TimerWord ThreadUserTimer::TicksPerSecond(TicksPerSecond159,4316

src/cryptopp/modexppc.h,451
#define CRYPTOPP_MODEXPPC_H2,29
NAMESPACE_BEGIN(12,219
class ModExpPrecomputation 16,320
	virtual ~ModExpPrecomputation(19,401
	bool NeedConversions(22,468
	Element ConvertIn(23,514
	virtual Element ConvertOut(24,587
	const AbstractGroup<Element> & GetGroup(25,670
	Element BERDecodeElement(26,758
	void DEREncodeElement(27,841
	void SetModulus(30,957
	const Integer & GetModulus(31,1040
	value_ptr<MontgomeryRepresentation> m_mr;34,1118

src/cryptopp/words.h,458
#define CRYPTOPP_WORDS_H2,26
NAMESPACE_BEGIN(7,96
inline void SetWords(16,229
inline void CopyWords(22,328
inline void XorWords(32,523
inline void XorWords(38,654
inline void AndWords(44,764
inline void AndWords(50,895
inline void OrWords(56,1005
inline void OrWords(62,1135
inline word ShiftWordsLeftByBits(68,1244
inline word ShiftWordsRightByBits(82,1553
inline void ShiftWordsLeftByWords(96,1867
inline void ShiftWordsRightByWords(107,2113

src/cryptopp/emsa2.h,766
#define CRYPTOPP_EMSA2_H7,206
NAMESPACE_BEGIN(17,352
template <class H> class EMSA2HashId19,381
	static const byte id;22,431
class EMSA2HashIdLookup 26,484
	struct HashIdentifierLookup29,535
		template <class H> struct HashIdentifierLookup231,569
			static HashIdentifier Lookup(33,625
CRYPTOPP_DLL_TEMPLATE_CLASS EMSA2HashId<EMSA2HashId53,974
CRYPTOPP_DLL_TEMPLATE_CLASS EMSA2HashId<EMSA2HashId54,1022
CRYPTOPP_DLL_TEMPLATE_CLASS EMSA2HashId<EMSA2HashId55,1072
CRYPTOPP_DLL_TEMPLATE_CLASS EMSA2HashId<EMSA2HashId56,1122
CRYPTOPP_DLL_TEMPLATE_CLASS EMSA2HashId<EMSA2HashId57,1172
class CRYPTOPP_DLL EMSA2Pad : public EMSA2HashIdLookup<EMSA2HashIdLookup61,1239
struct P1363_EMSA2 81,2108
	typedef EMSA2Pad SignatureMessageEncodingMethod;83,2158

src/cryptopp/cast.cpp,875
#define U8a(11,277
#define U8b(12,306
#define U8c(13,335
#define U8d(14,364
#define f1(17,444
#define f2(21,581
#define f3(25,718
#define F1(30,857
#define F2(31,904
#define F3(32,951
typedef BlockGetAndPut<word32,word3234,1000
typedef BlockGetAndPut<word32, BigEndian> Block;34,1000
void CAST128::Enc::ProcessAndXorBlock(ProcessAndXorBlock36,1052
void CAST128::Dec::ProcessAndXorBlock(ProcessAndXorBlock66,1733
void CAST128::Base::UncheckedSetKey(UncheckedSetKey97,2430
#define x(106,2690
#define z(107,2727
const word32 CAST256::Base::t_m[CAST256::Base::t_m153,5872
const unsigned int CAST256::Base::t_r[CAST256::Base::t_r188,8303
#define Q(199,9096
#define QBar(205,9256
void CAST256::Base::ProcessAndXorBlock(ProcessAndXorBlock214,9524
void CAST256::Base::Omega(Omega240,10019
void CAST256::Base::UncheckedSetKey(UncheckedSetKey254,10452

src/cryptopp/esign.cpp,805
NAMESPACE_BEGIN(19,361
void ESIGNFunction::BERDecode(BERDecode37,779
void ESIGNFunction::DEREncode(DEREncode45,942
Integer ESIGNFunction::ApplyFunction(ApplyFunction53,1111
bool ESIGNFunction::Validate(Validate59,1278
bool ESIGNFunction::GetVoidValue(GetVoidValue68,1547
void ESIGNFunction::AssignFrom(AssignFrom76,1820
void InvertibleESIGNFunction::GenerateRandom(GenerateRandom86,2099
void InvertibleESIGNFunction::BERDecode(BERDecode131,3815
void InvertibleESIGNFunction::DEREncode(DEREncode141,4076
Integer InvertibleESIGNFunction::CalculateRandomizedInverse(CalculateRandomizedInverse151,4343
bool InvertibleESIGNFunction::Validate(Validate192,5298
bool InvertibleESIGNFunction::GetVoidValue(GetVoidValue205,5813
void InvertibleESIGNFunction::AssignFrom(AssignFrom213,6102

src/cryptopp/bench2.cpp,431
void BenchMarkEncryption(47,1043
void BenchMarkDecryption(68,1765
void BenchMarkSigning(85,2460
void BenchMarkVerification(106,3171
void BenchMarkKeyGen(132,4115
void BenchMarkKeyGen(151,4760
void BenchMarkAgreement(170,5439
void BenchMarkAgreement(190,6165
void BenchMarkAgreement(215,7281
void BenchMarkCrypto(241,8432
void BenchMarkSignature(251,8769
void BenchMarkKeyAgreement(261,9100
void BenchmarkAll2(271,9361

src/cryptopp/gzip.cpp,377
NAMESPACE_BEGIN(6,107
void Gzip::ProcessUncompressedData(ProcessUncompressedData23,633
void Gzip::WritePoststreamTail(WritePoststreamTail29,780
Gunzip::Gunzip(39,1046
void Gunzip::ProcessPrestreamHeader(ProcessPrestreamHeader44,1195
void Gunzip::ProcessDecompressedData(ProcessDecompressedData77,2124
void Gunzip::ProcessPoststreamTail(ProcessPoststreamTail84,2322

src/cryptopp/rdtables.cpp,123
const byte Rijndael::Base::Sd[Rijndael::Base::Sd90,2310
const word32 Rijndael::Base::rcon[Rijndael::Base::rcon157,4212

src/cryptopp/hmac.cpp,209
NAMESPACE_BEGIN(9,137
void HMAC_Base::KeyInnerHash(KeyInnerHash43,1017
void HMAC_Base::Restart(Restart51,1212
void HMAC_Base::Update(Update60,1335
void HMAC_Base::TruncatedFinal(TruncatedFinal67,1483

src/cryptopp/files.h,621
#define CRYPTOPP_FILES_H8,197
NAMESPACE_BEGIN(18,361
	class Err 27,691
		Err(30,736
	class OpenErr 33,870
	class OpenErr : public Err {public: OpenErr(33,870
	class ReadErr 35,1086
	class ReadErr : public Err {public: ReadErr(35,1086
	typedef FileStore::Err Err;83,3098
	typedef FileStore::OpenErr OpenErr;84,3128
	typedef FileStore::ReadErr ReadErr;85,3166
class CRYPTOPP_DLL FileSink : public Sink,125,5423
	class Err 129,5565
		Err(132,5610
	class OpenErr 135,5744
	class OpenErr : public Err {public: OpenErr(135,5744
	class WriteErr 137,5960
	class WriteErr : public Err {public: WriteErr(137,5960

src/cryptopp/gost.h,503
#define CRYPTOPP_GOST_H7,157
NAMESPACE_BEGIN(12,230
struct GOST_Info 16,323
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(18,398
class GOST 24,605
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION60,1594
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;60,1594
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION61,1650
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;61,1650
typedef GOST::Encryption GOSTEncryption;64,1712
typedef GOST::Decryption GOSTDecryption;65,1754

src/cryptopp/winpipes.h,1565
#define CRYPTOPP_WINPIPES_H2,29
NAMESPACE_BEGIN(13,243
class WindowsHandle16,299
	virtual ~WindowsHandle(19,332
	WindowsHandle(21,362
	WindowsHandle(22,428
	bool GetOwnership(24,500
	void SetOwnership(25,544
	operator HANDLE(27,591
	HANDLE GetHandle(28,631
	bool HandleValid(29,672
	HANDLE m_h;37,844
	bool m_own;38,858
class WindowsPipe42,903
	class Err 45,934
		HANDLE GetHandle(49,1037
		HANDLE m_h;52,1092
	void CheckAndHandleError(58,1222
class WindowsPipeReceiver 63,1396
	bool MustWaitForResult(68,1507
	bool EofReceived(71,1626
	HANDLE GetHandle(73,1679
	unsigned int GetMaxWaitObjectCount(74,1724
	WindowsHandle m_event;78,1876
	OVERLAPPED m_overlapped;79,1901
	DWORD m_lastResult;80,1928
	bool m_resultPending;81,1950
	bool m_eofReceived;82,1974
class WindowsPipeSender 86,2057
	bool MustWaitForResult(91,2162
	bool MustWaitForEof(94,2281
	void SendEof(95,2323
	HANDLE GetHandle(97,2345
	unsigned int GetMaxWaitObjectCount(98,2390
	WindowsHandle m_event;102,2542
	OVERLAPPED m_overlapped;103,2567
	DWORD m_lastResult;104,2594
	bool m_resultPending;105,2616
class WindowsPipeSource 109,2678
	WindowsPipeSource(112,2788
	using NetworkSource::GetMaxWaitObjectCount;119,2990
	using NetworkSource::GetWaitObjects;120,3036
	HANDLE GetHandle(123,3087
	NetworkReceiver & AccessReceiver(124,3151
class WindowsPipeSink 128,3240
	WindowsPipeSink(131,3344
	using NetworkSink::GetMaxWaitObjectCount;134,3531
	using NetworkSink::GetWaitObjects;135,3575
	HANDLE GetHandle(138,3624
	NetworkSender & AccessSender(139,3688

src/cryptopp/lubyrack.h,889
#define CRYPTOPP_LUBYRACK_H7,177
NAMESPACE_BEGIN(12,254
struct LR_Info 17,373
	static std::string StaticAlgorithmName(19,484
class LR 25,660
	class CRYPTOPP_NO_VTABLE Base : public BlockCipherImpl<BlockCipherImpl27,726
#define KL 54,1362
#define KR 55,1384
#define BL 56,1414
#define BR 57,1439
#define IL 58,1472
#define IR 59,1492
#define OL 60,1520
#define OR 61,1541
	class CRYPTOPP_NO_VTABLE Enc : public BaseOR50,1301
	class CRYPTOPP_NO_VTABLE Dec : public Base92,2359
#undef KL122,3185
#undef KR123,3196
#undef BL124,3207
#undef BR125,3218
#undef IL126,3229
#undef IR127,3240
#undef OL128,3251
#undef OR129,3262
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION133,3289
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;133,3289
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION134,3345
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;134,3345

src/cryptopp/zlib.cpp,612
static const byte FDICT_FLAG 17,513
void ZlibCompressor::WritePrestreamHeader(WritePrestreamHeader21,625
void ZlibCompressor::ProcessUncompressedData(ProcessUncompressedData31,1027
void ZlibCompressor::WritePoststreamTail(WritePoststreamTail36,1156
unsigned int ZlibCompressor::GetCompressionLevel(GetCompressionLevel43,1319
ZlibDecompressor::ZlibDecompressor(51,1598
void ZlibDecompressor::ProcessPrestreamHeader(ProcessPrestreamHeader56,1775
void ZlibDecompressor::ProcessDecompressedData(ProcessDecompressedData78,2275
void ZlibDecompressor::ProcessPoststreamTail(ProcessPoststreamTail84,2457

src/cryptopp/authenc.h,572
#define CRYPTOPP_AUTHENC_H9,251
NAMESPACE_BEGIN(14,329
	enum State 57,2647
	enum State {State_Start,State_Start57,2647
	enum State {State_Start, State_KeySet,57,2647
	enum State {State_Start, State_KeySet, State_IVSet,57,2647
	enum State {State_Start, State_KeySet, State_IVSet, State_AuthUntransformed,57,2647
	enum State {State_Start, State_KeySet, State_IVSet, State_AuthUntransformed, State_AuthTransformed,57,2647
	enum State {State_Start, State_KeySet, State_IVSet, State_AuthUntransformed, State_AuthTransformed, State_AuthFooter}State_AuthFooter57,2647

src/cryptopp/idea.h,640
#define CRYPTOPP_IDEA_H7,157
NAMESPACE_BEGIN(12,230
struct IDEA_Info 17,348
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(19,446
class IDEA 26,678
	typedef word Word;30,832
	typedef hword Word;32,860
	class CRYPTOPP_NO_VTABLE Base : public BlockCipherImpl<BlockCipherImpl36,902
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION59,1584
	typedef BlockCipherFinal<ENCRYPTION, Base> Encryption;59,1584
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION60,1641
	typedef BlockCipherFinal<DECRYPTION, Base> Decryption;60,1641
typedef IDEA::Encryption IDEAEncryption;63,1704
typedef IDEA::Decryption IDEADecryption;64,1746

src/cryptopp/luc.cpp,1187
NAMESPACE_BEGIN(11,209
void DL_Algorithm_LUC_HMP::Sign(Sign22,428
bool DL_Algorithm_LUC_HMP::Verify(Verify29,703
Integer DL_BasePrecomputation_LUC::Exponentiate(Exponentiate39,1158
void DL_GroupParameters_LUC::SimultaneousExponentiate(SimultaneousExponentiate44,1392
void LUCFunction::BERDecode(BERDecode50,1660
void LUCFunction::DEREncode(DEREncode58,1819
Integer LUCFunction::ApplyFunction(ApplyFunction66,1984
bool LUCFunction::Validate(Validate72,2105
bool LUCFunction::GetVoidValue(GetVoidValue81,2399
void LUCFunction::AssignFrom(AssignFrom89,2670
class LUCPrimeSelector 100,2975
	LUCPrimeSelector(103,3034
	bool IsAcceptable(104,3083
	Integer m_e;108,3225
void InvertibleLUCFunction::GenerateRandom(GenerateRandom111,3246
void InvertibleLUCFunction::Initialize(Initialize134,4070
void InvertibleLUCFunction::BERDecode(BERDecode139,4275
void InvertibleLUCFunction::DEREncode(DEREncode155,4603
Integer InvertibleLUCFunction::CalculateInverse(CalculateInverse169,4925
bool InvertibleLUCFunction::Validate(Validate177,5171
bool InvertibleLUCFunction::GetVoidValue(GetVoidValue197,5909
void InvertibleLUCFunction::AssignFrom(AssignFrom206,6265

src/cryptopp/md5.cpp,282
#define CRYPTOPP_ENABLE_NAMESPACE_WEAK 5,147
namespace Weak1 10,255
void MD5_TestInstantiations(13,346
void MD5::InitState(InitState19,402
void MD5::Transform Transform27,556
#define F1(30,656
#define F2(31,697
#define F3(32,730
#define F4(33,763
#define MD5STEP(35,801

src/cryptopp/pwdbased.h,683
#define CRYPTOPP_PWDBASED_H7,175
NAMESPACE_BEGIN(14,294
class PasswordBasedKeyDerivationFunction17,398
	virtual ~PasswordBasedKeyDerivationFunction(20,452
	virtual size_t MaxDerivedKeyLength(24,610
class PKCS5_PBKDF1 50,2135
	size_t MaxDerivedKeyLength(53,2211
	bool UsesPurposeByte(54,2272
class PKCS5_PBKDF2_HMAC 62,2728
	size_t MaxDerivedKeyLength(65,2809
	bool UsesPurposeByte(66,2932
unsigned int PKCS5_PBKDF1<T>::DeriveKey(DeriveKey81,3369
unsigned int PKCS5_PBKDF2_HMAC<T>::DeriveKey(DeriveKey111,4254
class PKCS12_PBKDF 173,5897
	size_t MaxDerivedKeyLength(176,5973
	bool UsesPurposeByte(177,6032
unsigned int PKCS12_PBKDF<T>::DeriveKey(DeriveKey182,6307

src/cryptopp/authenc.cpp,375
NAMESPACE_BEGIN(9,143
void AuthenticatedSymmetricCipherBase::SetKey(SetKey48,1063
void AuthenticatedSymmetricCipherBase::Resynchronize(Resynchronize62,1442
void AuthenticatedSymmetricCipherBase::Update(Update75,1836
void AuthenticatedSymmetricCipherBase::ProcessData(ProcessData104,2517
void AuthenticatedSymmetricCipherBase::TruncatedFinal(TruncatedFinal136,3651

src/cryptopp/salsa.h,842
#define CRYPTOPP_SALSA_H7,171
# define CRYPTOPP_DISABLE_SALSA_ASM16,611
NAMESPACE_BEGIN(19,658
struct Salsa20_Info 23,758
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(25,862
struct Salsa20 51,2005
	typedef SymmetricCipherFinal<ConcretePolicyHolder<ConcretePolicyHolder53,2083
	typedef SymmetricCipherFinal<ConcretePolicyHolder<Salsa20_Policy, AdditiveCipherTemplate<> >, Salsa20_Info> Encryption;53,2083
	typedef Encryption Decryption;54,2205
struct XSalsa20_Info 59,2317
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(61,2408
struct XSalsa20 80,3111
	typedef SymmetricCipherFinal<ConcretePolicyHolder<ConcretePolicyHolder82,3191
	typedef SymmetricCipherFinal<ConcretePolicyHolder<XSalsa20_Policy, AdditiveCipherTemplate<> >, XSalsa20_Info> Encryption;82,3191
	typedef Encryption Decryption;83,3315

src/cryptopp/mars.cpp,315
NAMESPACE_BEGIN(9,242
#define S(50,1395
#define S0(51,1425
#define S1(52,1455
typedef BlockGetAndPut<word32,word3254,1495
typedef BlockGetAndPut<word32, LittleEndian> Block;54,1495
void MARS::Enc::ProcessAndXorBlock(ProcessAndXorBlock56,1550
void MARS::Dec::ProcessAndXorBlock(ProcessAndXorBlock105,2616

src/cryptopp/vmac.cpp,2710
# undef CRYPTOPP_X86_ASM_AVAILABLE13,312
# undef CRYPTOPP_X32_ASM_AVAILABLE14,348
# undef CRYPTOPP_X64_ASM_AVAILABLE15,384
# undef CRYPTOPP_BOOL_SSE2_ASM_AVAILABLE16,420
# define VMAC_BOOL_WORD128 30,735
# define VMAC_BOOL_WORD128 32,772
#define const	36,833
static const word64 m62 39,967
static const word64 m63 40,1049
static const word64 m64 41,1131
static const word64 mpoly 42,1213
#undef const44,1316
#define m126	49,1456
static const word128 m126 51,1505
void VMAC_Base::UncheckedSetKey(UncheckedSetKey55,1602
void VMAC_Base::GetNextIV(GetNextIV114,3723
void VMAC_Base::Resynchronize(Resynchronize120,3858
void VMAC_Base::HashEndianCorrectedBlock(HashEndianCorrectedBlock154,4780
unsigned int VMAC_Base::OptimalDataAlignment(OptimalDataAlignment161,4978
VMAC_Base::VHASH_Update_SSE2(VHASH_Update_SSE2178,5501
#define a0 340,9264
#define a1 341,9286
#define a2 342,9308
#define a3 343,9330
#define k0 344,9352
#define k1 345,9378
#define k2 346,9404
#define k3 347,9430
#undef a0452,11845
#undef a1453,11856
#undef a2454,11867
#undef a3455,11878
#undef k0456,11889
#undef k1457,11900
#undef k2458,11911
#undef k3459,11922
	#define DeclareNH(483,12366
	#define MUL64(484,12401
	#define AccumulateNH(485,12498
	#define Multiply128(486,12550
		#define MUL32(489,12700
		#define MUL32(491,12761
		#define DeclareNH(494,12873
		#define MUL64(495,12921
		#define AccumulateNH(496,13016
		#define ADD128(497,13155
		#define DeclareNH(499,13325
		#define MUL64(500,13371
		#define AccumulateNH(501,13433
		#define VMAC_BOOL_32BIT 507,13574
		#define DeclareNH(508,13603
		#define MUL64(509,13657
		#define AccumulateNH(518,14242
	#define VMAC_BOOL_32BIT 533,14615
	#define ADD128(536,14667
void VMAC_Base::VHASH_Update_Template(VHASH_Update_Template544,14986
	#define INNER_LOOP_ITERATION(549,15222
			#define a0 621,16985
			#define a1 622,17055
			#define a2 623,17154
			#define a3 624,17224
			#define aHi 625,17296
			#define k0 626,17329
			#define k1 627,17401
			#define k2 628,17475
			#define k3 629,17547
			#define kHi 630,17621
			#undef a0684,18785
			#undef a1685,18799
			#undef a2686,18813
			#undef a3687,18827
			#undef aHi688,18841
			#undef k0689,18856
			#undef k1690,18870
			#undef k2691,18884
			#undef k3692,18898
			#undef kHi693,18912
						#define first_poly_step(702,19105
						#define first_poly_step(708,19319
				#define poly_step(738,20060
				#define poly_step(756,20542
inline void VMAC_Base::VHASH_Update(VHASH_Update801,22378
size_t VMAC_Base::HashMultipleBlocks(HashMultipleBlocks821,22914
static word64 L3Hash(828,23116
void VMAC_Base::TruncatedFinal(TruncatedFinal869,24190

src/cryptopp/rc5.cpp,274
NAMESPACE_BEGIN(8,147
typedef BlockGetAndPut<RC5::RC5_WORD,RC5::RC5_WORD40,1148
typedef BlockGetAndPut<RC5::RC5_WORD, LittleEndian> Block;40,1148
void RC5::Enc::ProcessAndXorBlock(ProcessAndXorBlock42,1210
void RC5::Dec::ProcessAndXorBlock(ProcessAndXorBlock61,1600

src/cryptopp/dmac.h,325
#define CRYPTOPP_DMAC_H8,185
NAMESPACE_BEGIN(12,235
class DMAC 48,1480
	DMAC(52,1589
	DMAC(57,1743
void DMAC_Base<T>::UncheckedSetKey(UncheckedSetKey62,1872
void DMAC_Base<T>::Update(Update73,2324
void DMAC_Base<T>::TruncatedFinal(TruncatedFinal80,2512
byte *DMAC_Base<T>::GenerateSubKeys(GenerateSubKeys95,2882

src/cryptopp/strciphr.h,1908
#define CRYPTOPP_STRCIPHR_H29,1963
NAMESPACE_BEGIN(43,2207
	typedef POLICY_INTERFACE PolicyInterface;53,2571
enum KeystreamOperationFlags 78,3508
	OUTPUT_ALIGNED=80,3578
	INPUT_ALIGNED=82,3635
	INPUT_NULL 84,3688
enum KeystreamOperation 90,3920
	WRITE_KEYSTREAM	92,4016
	WRITE_KEYSTREAM_ALIGNED	94,4128
	XOR_KEYSTREAM	96,4262
	XOR_KEYSTREAM_INPUT_ALIGNED 98,4370
	XOR_KEYSTREAM_OUTPUT_ALIGNED=100,4501
	XOR_KEYSTREAM_BOTH_ALIGNED	102,4641
struct CRYPTOPP_DLL CRYPTOPP_NO_VTABLE AdditiveCipherAbstractPolicy106,4802
template <typename WT,185,8986
template <typename WT, unsigned int W,185,8986
template <typename WT, unsigned int W, unsigned int X 185,8986
	typedef WT WordType;188,9162
#define CRYPTOPP_KEYSTREAM_OUTPUT_WORD(225,11016
#define CRYPTOPP_KEYSTREAM_OUTPUT_XMM(229,11298
#define CRYPTOPP_KEYSTREAM_OUTPUT_SWITCH(235,11676
	typedef typename BASE::PolicyInterface 334,15690
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE CFB_CipherAbstractPolicy350,16317
template <typename WT,405,18860
template <typename WT, unsigned int W,405,18860
	typedef WT WordType;408,19008
	struct RegisterOutput434,20222
		RegisterOutput(436,20250
		inline RegisterOutput& operator()(operator()442,20538
		byte *m_output;m_output479,21452
		const byte *m_input;m_input480,21471
		CipherDir m_dir;481,21495
	typedef typename BASE::PolicyInterface 538,23876
class CFB_RequireFullDataBlocks 572,25475
	unsigned int MandatoryBlockSize(575,25534
CRYPTOPP_DLL_TEMPLATE_CLASS AbstractPolicyHolder<AdditiveCipherAbstractPolicy,AdditiveCipherAbstractPolicy623,27274
CRYPTOPP_DLL_TEMPLATE_CLASS AdditiveCipherTemplate<AdditiveCipherTemplate624,27372
CRYPTOPP_DLL_TEMPLATE_CLASS CFB_CipherTemplate<CFB_CipherTemplate625,27495
CRYPTOPP_DLL_TEMPLATE_CLASS CFB_EncryptionTemplate<CFB_EncryptionTemplate626,27610
CRYPTOPP_DLL_TEMPLATE_CLASS CFB_DecryptionTemplate<CFB_DecryptionTemplate627,27729

src/cryptopp/default.cpp,1330
static void Mash(28,761
static void GenerateKeyIV(66,1622
DataEncryptor<BC,H,Info>::DataEncryptor(DataEncryptor80,2289
DataEncryptor<BC,H,Info>::DataEncryptor(DataEncryptor88,2645
void DataEncryptor<BC,H,Info>::FirstPut(FirstPut96,3010
void DataEncryptor<BC,H,Info>::LastPut(LastPut128,3989
DataDecryptor<BC,H,Info>::DataDecryptor(DataDecryptor137,4259
DataDecryptor<BC,H,Info>::DataDecryptor(DataDecryptor148,4702
void DataDecryptor<BC,H,Info>::FirstPut(FirstPut159,5181
void DataDecryptor<BC,H,Info>::LastPut(LastPut165,5337
void DataDecryptor<BC,H,Info>::CheckKey(CheckKey182,5703
static MAC* NewDataEncryptorMAC(217,6713
DataEncryptorWithMAC<BC,H,MAC,Info>::DataEncryptorWithMAC(DataEncryptorWithMAC227,7151
DataEncryptorWithMAC<BC,H,MAC,Info>::DataEncryptorWithMAC(DataEncryptorWithMAC235,7540
void DataEncryptorWithMAC<BC,H,MAC,Info>::LastPut(LastPut243,7956
DataDecryptorWithMAC<BC,H,MAC,Info>::DataDecryptorWithMAC(DataDecryptorWithMAC252,8248
DataDecryptorWithMAC<BC,H,MAC,Info>::DataDecryptorWithMAC(DataDecryptorWithMAC261,8775
typename DataDecryptor<BC,H,Info>::State DataDecryptorWithMAC<BC,H,MAC,Info>::CurrentState(CurrentState270,9329
bool DataDecryptorWithMAC<BC,H,MAC,Info>::CheckLastMAC(CheckLastMAC276,9578
void DataDecryptorWithMAC<BC,H,MAC,Info>::LastPut(LastPut282,9745

src/cryptopp/xtrcrypt.cpp,408
NAMESPACE_BEGIN(12,226
XTR_DH::XTR_DH(XTR_DH19,364
XTR_DH::XTR_DH(XTR_DH24,520
void XTR_DH::DEREncode(DEREncode34,716
bool XTR_DH::Validate(Validate44,926
bool XTR_DH::GetVoidValue(GetVoidValue62,1663
void XTR_DH::AssignFrom(AssignFrom71,1978
void XTR_DH::GeneratePrivateKey(GeneratePrivateKey80,2215
void XTR_DH::GeneratePublicKey(GeneratePublicKey86,2394
bool XTR_DH::Agree(Agree94,2669

src/cryptopp/mqv.cpp,99
NAMESPACE_BEGIN(10,271
void TestInstantiations_HMQV(18,420
void TestInstantiations_FHMQV(23,476

src/cryptopp/validat1.cpp,2335
#define CRYPTOPP_ENABLE_NAMESPACE_WEAK 5,92
USING_NAMESPACE(67,1366
bool TestSettings(184,4893
bool TestOS_RNG(345,9080
bool TestAutoSeeded(458,12015
bool TestAutoSeededX917(462,12059
bool TestAutoSeeded(467,12114
bool TestAutoSeededX917(531,13666
bool TestRDRAND(597,15324
bool TestRDSEED(675,17319
bool TestNIST_DRBG(753,19316
class CipherFactory1121,41703
template <class E, class D> class FixedRoundsCipherFactory 1131,41984
	FixedRoundsCipherFactory(1134,42079
	unsigned int BlockSize(1135,42179
	unsigned int KeyLength(1136,42235
	BlockTransformation* NewEncryption(1138,42289
	BlockTransformation* NewDecryption(1140,42389
	unsigned int m_keylen;1143,42491
template <class E, class D> class VariableRoundsCipherFactory 1146,42522
	VariableRoundsCipherFactory(1149,42620
	unsigned int BlockSize(1151,42800
	unsigned int KeyLength(1152,42856
	BlockTransformation* NewEncryption(1154,42910
	BlockTransformation* NewDecryption(1156,43020
	unsigned int m_keylen,1159,43132
	unsigned int m_keylen, m_rounds;1159,43132
bool BlockTransformationTest(1162,43173
class FilterTester 1196,44261
	FilterTester(1199,44320
	void PutByte(1201,44458
	size_t Put2(1211,44749
	bool GetResult(1227,45085
	const byte *validOutput;validOutput1232,45131
	size_t outputLen,1233,45158
	size_t outputLen, counter;1233,45158
	bool fail;1234,45187
bool TestFilter(1237,45206
bool ValidateDES(1253,45598
bool TestModeIV(1270,46414
bool ValidateCipherModes(1299,47163
bool ValidateIDEA(1602,60060
bool ValidateSAFER(1610,60332
bool ValidateRC2(1623,61059
bool ValidateARC4(1664,62380
bool ValidateRC5(1832,70189
bool ValidateRC6(1860,71576
bool ValidateMARS(1893,73304
bool ValidateRijndael(1926,75043
bool ValidateTwofish(1960,76906
bool ValidateSerpent(1989,78370
bool ValidateBlowfish(2019,79848
bool ValidateThreeWay(2082,82599
bool ValidateGOST(2104,83568
bool ValidateSHARK(2130,84744
bool ValidateCAST(2156,85927
bool ValidateSquare(2219,89514
bool ValidateSKIPJACK(2241,90481
bool ValidateSEAL(2263,91456
bool ValidateBaseCode(2291,92436
bool ValidateSHACAL2(2358,95782
bool ValidateCamellia(2390,97504
bool ValidateSalsa(2423,99287
bool ValidateSosemanuk(2430,99439
bool ValidateVMAC(2436,99601
bool ValidateCCM(2442,99748
bool ValidateGCM(2448,99896
bool ValidateCMAC(2457,100272

src/cryptopp/bench.h,30
#define CRYPTOPP_BENCH_H4,93

src/cryptopp/gf256.h,523
#define CRYPTOPP_GF256_H7,173
NAMESPACE_BEGIN(12,245
class GF25615,316
	typedef byte Element;18,341
	typedef int RandomizationParameter;19,365
	GF256(21,405
	Element RandomElement(23,453
	bool Equal(26,588
	Element Zero(29,649
	Element Add(32,689
	Element& Accumulate(35,750
	Element Inverse(38,821
	Element Subtract(41,873
	Element& Reduce(44,939
	Element Double(47,1006
	Element One(50,1077
	Element Multiply(53,1116
	bool IsUnit(58,1230
	Element MultiplicativeInverse(61,1283
	word m_modulus;67,1443

src/cryptopp/tiger.cpp,708
# undef CRYPTOPP_X86_ASM_AVAILABLE11,210
# undef CRYPTOPP_X32_ASM_AVAILABLE12,246
# undef CRYPTOPP_X64_ASM_AVAILABLE13,282
# undef CRYPTOPP_BOOL_SSE2_ASM_AVAILABLE14,318
NAMESPACE_BEGIN(17,370
void Tiger::TruncatedFinal(TruncatedFinal26,574
void Tiger::Transform Transform42,927
#define SSE2_round(68,1539
#define SSE2_mul_5(94,2268
#define SSE2_mul_7(99,2360
#define SSE2_mul_9(104,2452
#define label2_5 109,2544
#define label2_7 110,2564
#define label2_9 111,2584
#define SSE2_pass(113,2606
#define SSE2_key_schedule(125,2909
#define t1 225,5339
#define t2 226,5359
#define t3 227,5383
#define t4 228,5409
#define round(230,5437
#define pass(236,5660
#define key_schedule(248,5856

src/cryptopp/rc2.cpp,253
NAMESPACE_BEGIN(8,147
typedef BlockGetAndPut<word16,word1654,2099
typedef BlockGetAndPut<word16, LittleEndian> Block;54,2099
void RC2::Enc::ProcessAndXorBlock(ProcessAndXorBlock56,2154
void RC2::Dec::ProcessAndXorBlock(ProcessAndXorBlock87,2879

src/cryptopp/ripemd.cpp,717
#define F(12,278
#define G(13,313
#define H(14,354
#define I(15,392
#define J(16,433
#define k0 18,473
#define k1 19,487
#define k2 20,512
#define k3 21,537
#define k4 22,562
#define k5 23,587
#define k6 24,612
#define k7 25,637
#define k8 26,662
#define k9 27,687
#define Subround(32,791
NAMESPACE_BEGIN(Subround10,249
void RIPEMD160::Transform Transform46,1129
void RIPEMD320::InitState(InitState235,9652
void RIPEMD320::Transform Transform249,9968
#undef Subround455,18633
#define Subround(460,18740
void RIPEMD128::InitState(InitState464,18852
void RIPEMD128::Transform Transform472,19012
void RIPEMD256::InitState(InitState625,25353
void RIPEMD256::Transform Transform637,25617

src/cryptopp/gcm.h,910
#define CRYPTOPP_GCM_H8,182
NAMESPACE_BEGIN(13,252
enum GCM_TablesOption 17,344
	GCM_2K_Tables,19,410
	GCM_64K_Tables}GCM_64K_Tables21,469
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE GCM_Base : public AuthenticatedSymmetricCipherBase27,667
	enum {REQUIRED_BLOCKSIZE REQUIRED_BLOCKSIZE91,3065
	enum {REQUIRED_BLOCKSIZE = 16, HASH_BLOCKSIZE 91,3065
template <class T_BlockCipher, GCM_TablesOption T_TablesOption,100,3419
class GCM_Final 101,3505
	static std::string StaticAlgorithmName(104,3552
	bool IsForwardTransformation(106,3667
	GCM_TablesOption GetTablesOption(110,3746
	BlockCipher & AccessBlockCipher(111,3814
	typename T_BlockCipher::Encryption m_cipher;112,3869
template <class T_BlockCipher, GCM_TablesOption T_TablesOption=123,4384
	typedef GCM_Final<T_BlockCipher, T_TablesOption, true> Encryption;126,4529
	typedef GCM_Final<T_BlockCipher, T_TablesOption, false> Decryption;127,4598

src/cryptopp/filters.cpp,5758
NAMESPACE_BEGIN(24,467
BufferedTransformation * Filter::NewDefaultAttachment(NewDefaultAttachment31,622
BufferedTransformation * Filter::AttachedTransformation(AttachedTransformation36,720
const BufferedTransformation *Filter::AttachedTransformation(AttachedTransformation43,897
void Filter::Detach(Detach50,1113
void Filter::Insert(Insert55,1204
size_t Filter::CopyRangeTo2(CopyRangeTo261,1333
size_t Filter::TransferTo2(TransferTo266,1564
void Filter::Initialize(Initialize71,1787
bool Filter::Flush(Flush78,1991
bool Filter::MessageSeriesEnd(MessageSeriesEnd95,2321
void Filter::PropagateInitialize(PropagateInitialize112,2683
size_t Filter::OutputModifiable(OutputModifiable118,2863
size_t Filter::Output(Output127,3220
bool Filter::OutputFlush(OutputFlush136,3563
bool Filter::OutputMessageSeriesEnd(OutputMessageSeriesEnd147,3885
void MeterFilter::ResetMeter(ResetMeter160,4270
void MeterFilter::AddRangeToSkip(AddRangeToSkip166,4447
size_t MeterFilter::PutMaybeModifiable(PutMaybeModifiable174,4705
size_t MeterFilter::Put2(Put2232,6251
size_t MeterFilter::PutModifiable2(PutModifiable2237,6443
bool MeterFilter::IsolatedMessageSeriesEnd(IsolatedMessageSeriesEnd242,6618
void FilterWithBufferedInput::BlockQueue::ResetQueue(ResetQueue253,6884
byte *FilterWithBufferedInput::BlockQueue::GetBlock(GetBlock262,7111
byte *FilterWithBufferedInput::BlockQueue::GetContigousBlocks(GetContigousBlocks276,7372
size_t FilterWithBufferedInput::BlockQueue::GetAll(GetAll287,7718
void FilterWithBufferedInput::BlockQueue::Put(Put301,8118
FilterWithBufferedInput::FilterWithBufferedInput(315,8634
FilterWithBufferedInput::FilterWithBufferedInput(320,8837
void FilterWithBufferedInput::IsolatedInitialize(IsolatedInitialize329,9292
bool FilterWithBufferedInput::IsolatedFlush(IsolatedFlush338,9688
size_t FilterWithBufferedInput::PutMaybeModifiable(PutMaybeModifiable350,9918
void FilterWithBufferedInput::ForceNextPut(ForceNextPut441,12392
void FilterWithBufferedInput::NextPutMultiple(NextPutMultiple459,12755
void Redirector::Initialize(Initialize473,13161
ProxyFilter::ProxyFilter(484,13599
bool ProxyFilter::IsolatedFlush(IsolatedFlush491,13892
void ProxyFilter::SetFilter(SetFilter496,14040
void ProxyFilter::NextPutMultiple(NextPutMultiple508,14309
void ProxyFilter::NextPutModifiable(NextPutModifiable514,14427
void RandomNumberSink::IsolatedInitialize(IsolatedInitialize522,14619
size_t RandomNumberSink::Put2(Put2527,14798
size_t ArraySink::Put2(Put2534,15016
byte * ArraySink::CreatePutSpace(CreatePutSpace550,15489
void ArraySink::IsolatedInitialize(IsolatedInitialize556,15617
size_t ArrayXorSink::Put2(Put2565,15900
StreamTransformationFilter::StreamTransformationFilter(582,16374
size_t StreamTransformationFilter::LastBlockSize(LastBlockSize594,17113
void StreamTransformationFilter::InitializeDerivedAndReturnNewSizes(InitializeDerivedAndReturnNewSizes604,17466
void StreamTransformationFilter::FirstPut(FirstPut622,18312
void StreamTransformationFilter::NextPutMultiple(NextPutMultiple629,18585
void StreamTransformationFilter::NextPutModifiable(NextPutModifiable656,19248
void StreamTransformationFilter::LastPut(LastPut662,19444
HashFilter::HashFilter(756,22529
void HashFilter::IsolatedInitialize(IsolatedInitialize764,23006
size_t HashFilter::Put2(Put2771,23295
HashVerificationFilter::HashVerificationFilter(792,23979
void HashVerificationFilter::InitializeDerivedAndReturnNewSizes(InitializeDerivedAndReturnNewSizes799,24375
void HashVerificationFilter::FirstPut(FirstPut810,24930
void HashVerificationFilter::NextPutMultiple(NextPutMultiple821,25246
void HashVerificationFilter::LastPut(LastPut828,25459
AuthenticatedEncryptionFilter::AuthenticatedEncryptionFilter(851,26106
void AuthenticatedEncryptionFilter::IsolatedInitialize(IsolatedInitialize859,26557
byte * AuthenticatedEncryptionFilter::ChannelCreatePutSpace(ChannelCreatePutSpace865,26756
size_t AuthenticatedEncryptionFilter::ChannelPut2(ChannelPut2876,27091
void AuthenticatedEncryptionFilter::LastPut(LastPut887,27500
AuthenticatedDecryptionFilter::AuthenticatedDecryptionFilter(895,27736
void AuthenticatedDecryptionFilter::InitializeDerivedAndReturnNewSizes(InitializeDerivedAndReturnNewSizes904,28351
byte * AuthenticatedDecryptionFilter::ChannelCreatePutSpace(ChannelCreatePutSpace916,28906
size_t AuthenticatedDecryptionFilter::ChannelPut2(ChannelPut2927,29238
void AuthenticatedDecryptionFilter::FirstPut(FirstPut942,29720
void AuthenticatedDecryptionFilter::NextPutMultiple(NextPutMultiple947,29841
void AuthenticatedDecryptionFilter::LastPut(LastPut952,29979
void SignerFilter::IsolatedInitialize(IsolatedInitialize960,30218
size_t SignerFilter::Put2(Put2966,30446
SignatureVerificationFilter::SignatureVerificationFilter(982,30964
void SignatureVerificationFilter::InitializeDerivedAndReturnNewSizes(InitializeDerivedAndReturnNewSizes989,31288
void SignatureVerificationFilter::FirstPut(FirstPut1001,31905
void SignatureVerificationFilter::NextPutMultiple(NextPutMultiple1022,32461
void SignatureVerificationFilter::LastPut(LastPut1029,32688
size_t Source::PumpAll2(PumpAll21054,33482
bool Store::GetNextMessage(GetNextMessage1064,33689
unsigned int Store::CopyMessagesTo(CopyMessagesTo1075,33839
void StringStore::StoreInitialize(StoreInitialize1088,34187
size_t StringStore::TransferTo2(TransferTo21098,34493
size_t StringStore::CopyRangeTo2(CopyRangeTo21107,34825
void RandomNumberStore::StoreInitialize(StoreInitialize1117,35218
size_t RandomNumberStore::TransferTo2(TransferTo21125,35523
size_t NullStore::CopyRangeTo2(CopyRangeTo21137,35973
size_t NullStore::TransferTo2(TransferTo21151,36404

src/cryptopp/trunhash.h,593
#define CRYPTOPP_TRUNHASH_H2,29
NAMESPACE_BEGIN(6,85
class NullHash 8,114
	void Update(11,170
	unsigned int DigestSize(13,271
	void TruncatedFinal(15,320
	bool TruncatedVerify(17,433
class TruncatedHashTemplate 23,669
	TruncatedHashTemplate(26,738
	TruncatedHashTemplate(28,836
	TruncatedHashTemplate(30,975
	void Restart(33,1053
	void Update(35,1091
	unsigned int DigestSize(37,1172
	void TruncatedFinal(38,1229
	bool TruncatedVerify(40,1330
	T m_hm;44,1462
	unsigned int m_digestSize;45,1472
typedef TruncatedHashTemplate<HashTransformation &> TruncatedHashModule;48,1507

src/cryptopp/ida.h,1775
#define CRYPTOPP_IDA_H7,201
NAMESPACE_BEGIN(17,381
class RawIDA 22,518
	RawIDA(25,604
	unsigned int GetThreshold(29,746
	void AddOutputChannel(30,804
	void ChannelData(31,847
	lword InputBuffered(32,939
	typedef std::map<word32,word3253,1634
	typedef std::map<word32, unsigned int> InputChannelMap;53,1634
	InputChannelMap m_inputChannelMap;54,1692
	InputChannelMap::iterator m_lastMapPosition;55,1729
	std::vector<MessageQueue> m_inputQueues;56,1776
	std::vector<word32> m_inputChannelIds,57,1819
	std::vector<word32> m_inputChannelIds, m_outputChannelIds,57,1819
	std::vector<word32> m_inputChannelIds, m_outputChannelIds, m_outputToInput;57,1819
	std::vector<std::string> m_outputChannelIdStrings;58,1897
	std::vector<ByteQueue> m_outputQueues;59,1950
	int m_threshold;60,1991
	unsigned int m_channelsReady,61,2010
	unsigned int m_channelsReady, m_channelsFinished;61,2010
	std::vector<SecBlock<word32> > m_v;62,2062
	SecBlock<word32> m_u,63,2100
	SecBlock<word32> m_u, m_w,63,2100
	SecBlock<word32> m_u, m_w, m_y;63,2100
class SecretSharing 71,2398
	SecretSharing(75,2510
	bool Flush(84,3017
	RandomNumberGenerator &m_rng;m_rng87,3156
	RawIDA m_ida;88,3188
	bool m_pad;89,3204
class SecretRecovery 97,3483
	SecretRecovery(101,3573
	bool m_pad;111,3956
class InformationDispersal 121,4320
	InformationDispersal(125,4446
	bool Flush(134,4952
	RawIDA m_ida;137,5091
	bool m_pad;138,5107
	unsigned int m_nextChannel;139,5121
class InformationRecovery 147,5440
	InformationRecovery(151,5540
	bool m_pad;161,5942
	ByteQueue m_queue;162,5956
class PaddingRemover 165,5983
	PaddingRemover(168,6046
	void IsolatedInitialize(171,6174
	bool GetPossiblePadding(176,6464
	bool m_possiblePadding;179,6538
	lword m_zeroCount;180,6564

src/cryptopp/rw.h,511
#define CRYPTOPP_RW_H12,559
NAMESPACE_BEGIN(18,652
	typedef RWFunction ThisClass;25,941
class CRYPTOPP_DLL InvertibleRWFunction : public RWFunction,60,2031
class CRYPTOPP_DLL InvertibleRWFunction : public RWFunction, public TrapdoorFunctionInverse,60,2031
	typedef InvertibleRWFunction ThisClass;62,2146
struct RW128,4879
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(130,4893
	typedef RWFunction PublicKey;131,4970
	typedef InvertibleRWFunction PrivateKey;132,5002
struct RWSS 139,5207

src/cryptopp/sha.cpp,3034
# undef CRYPTOPP_X86_ASM_AVAILABLE25,658
# undef CRYPTOPP_X32_ASM_AVAILABLE26,694
# undef CRYPTOPP_X64_ASM_AVAILABLE27,730
# undef CRYPTOPP_BOOL_SSE2_ASM_AVAILABLE28,766
typedef void (*pfnSHATransform)pfnSHATransform34,915
typedef void (CRYPTOPP_FASTCALL *pfnSHAHashBlocks)pfnSHAHashBlocks35,984
#define blk0(41,1193
#define blk1(42,1227
#define f1(44,1316
#define f2(45,1349
#define f3(46,1376
#define f4(47,1413
#define R0(50,1511
#define R1(51,1602
#define R2(52,1693
#define R3(53,1784
#define R4(54,1875
static void SHA1_CXX_Transform(56,1968
static void SHA1_SSE_SHA_Transform(104,4353
pfnSHATransform InitializeSHA1Transform(296,10466
void SHA1::InitState(InitState307,10663
void SHA1::Transform(Transform316,10844
void SHA224::InitState(InitState324,11065
void SHA256::InitState(InitState330,11276
static void CRYPTOPP_FASTCALL X86_SHA256_HashBlocks(363,12641
	#define LOCALS_SIZE	365,12744
	#define H(366,12789
	#define G(367,12836
	#define F(368,12859
	#define E(369,12882
	#define D(370,12905
	#define C(371,12928
	#define B(372,12951
	#define A(373,12974
	#define Wt(374,12997
	#define Wt_2(375,13049
	#define Wt_15(376,13078
	#define Wt_7(377,13108
	#define K_END	378,13137
	#define STATE_SAVE	379,13180
	#define DATA_SAVE	380,13227
	#define DATA_END	381,13273
	#define Kt(382,13318
	#define BASE	384,13377
	#define BASE	386,13424
	#define BASE	388,13471
	#define BASE	390,13497
#define RA0(393,13527
#define RA1(398,13637
#define RB0(400,13665
#define RB1(402,13693
#define ROUND(425,14413
#define SWAP_COPY(462,15812
#define SWAP_COPY(467,15979
pfnSHAHashBlocks InitializeSHA256HashBlocks(698,21963
size_t SHA256::HashMultipleBlocks(HashMultipleBlocks709,22185
size_t SHA224::HashMultipleBlocks(HashMultipleBlocks716,22442
#define blk2(724,22707
#define Ch(726,22782
#define Maj(727,22815
#define a(729,22855
#define b(730,22880
#define c(731,22905
#define d(732,22930
#define e(733,22955
#define f(734,22980
#define g(735,23005
#define h(736,23030
#define R(738,23057
#define S0(742,23206
#define S1(743,23270
#define s0(744,23334
#define s1(745,23389
void SHA256_CXX_Transform(749,23503
void SHA256_CXX_Transform(821,24908
#undef S0846,25572
#undef S1847,25583
#undef s0848,25594
#undef s1849,25605
#undef R850,25616
static void SHA256_SSE2_Transform(853,25666
static void SHA256_SSE_SHA_Transform(863,26046
static void CRYPTOPP_FASTCALL SHA256_SSE_SHA_HashBlocks(875,26514
pfnSHATransform InitializeSHA256Transform(1076,35820
void SHA256::Transform(Transform1092,36154
void SHA384::InitState(InitState1100,36385
void SHA512::InitState(InitState1110,36737
CRYPTOPP_NAKED static void CRYPTOPP_FASTCALL SHA512_SSE2_Transform(1169,39897
#define SSE2_S0_S1(1210,41102
#define SSE2_s0(1225,41425
#define SSE2_s1(1238,41711
#define SSE2_CombineState(1335,44175
void SHA512::Transform(Transform1364,44711
#define S0(1377,45071
#define S1(1378,45136
#define s0(1379,45201
#define s1(1380,45255
#define R(1382,45313

src/cryptopp/gcm.cpp,2778
# undef CRYPTOPP_BOOL_SSE2_ASM_AVAILABLE17,458
# undef CRYPTOPP_BOOL_AESNI_INTRINSICS_AVAILABLE23,715
# define USE_MOVD_REG32 34,1159
# define USE_MOVD_REG32_OR_REG64 37,1396
# define USE_MOVD_REG32_OR_REG64 40,1562
# define USE_MOV_REG32_OR_REG64 43,1687
volatile bool GCM_Base::s_reductionTableInitialized 47,1773
void GCM_Base::GCTR::IncrementCounterBy256(IncrementCounterBy25649,1837
void gcm_gf_mult(56,1982
	typedef BlockGetAndPut<word64, BigEndian> Block;60,2100
__m128i _mm_clmulepi64_si128(78,2457
inline static void SSE2_Xor16(95,2934
inline static void NEON_Xor16(113,3806
inline static void Xor16(122,4149
static const __m128i *s_clmulConstants s_clmulConstants138,4860
static const unsigned int s_clmulTableSizeInBlocks 139,4953
inline __m128i CLMUL_Reduce(141,5012
inline __m128i CLMUL_GF_Mul(173,6139
static const uint64x2_t *s_clmulConstants s_clmulConstants192,6932
static const unsigned int s_clmulTableSizeInBlocks 193,7017
inline uint64x2_t PMULL_Reduce(195,7076
inline uint64x2_t PMULL_GF_Mul(214,7823
void GCM_Base::SetKeyWithoutResync(SetKeyWithoutResync225,8324
	typedef BlockGetAndPut<word64, BigEndian> Block;318,11333
inline void GCM_Base::ReverseHashBufferIfNeeded(ReverseHashBufferIfNeeded417,14131
void GCM_Base::Resync(Resync437,14681
unsigned int GCM_Base::OptimalDataAlignment(OptimalDataAlignment482,15685
size_t GCM_Base::AuthenticateBlocks(AuthenticateBlocks508,16458
	typedef BlockGetAndPut<word64,word64646,22094
	typedef BlockGetAndPut<word64, NativeByteOrder> Block;646,22094
	word64 *hashBuffer hashBuffer647,22151
			#define READ_TABLE_WORD64_COMMON(673,22794
					#define READ_TABLE_WORD64(681,23090
					#define READ_TABLE_WORD64(683,23232
				#define GF_MOST_SIG_8BITS(685,23393
				#define GF_SHIFT_8(686,23441
				#define READ_TABLE_WORD64(688,23526
				#define GF_MOST_SIG_8BITS(689,23685
				#define GF_SHIFT_8(690,23733
			#define GF_MUL_32BY128(693,23821
			#undef READ_TABLE_WORD64_COMMON741,25431
			#undef READ_TABLE_WORD64742,25467
			#define READ_TABLE_WORD64_COMMON(744,25498
					#define READ_TABLE_WORD64(752,25789
					#define READ_TABLE_WORD64(754,25927
				#define READ_TABLE_WORD64(757,26106
			#define GF_MUL_8BY128(760,26281
		#define MUL_TABLE_0 838,28189
		#define MUL_TABLE_1 839,28230
		#define RED_TABLE 840,28278
		#define SSE2_MUL_32BITS(861,28959
		#undef MUL_TABLE1003,33051
		#define MUL_TABLE(1004,33071
		#undef SSE2_MUL_32BITS1011,33249
		#define SSE2_MUL_32BITS(1012,33275
void GCM_Base::AuthenticateLastHeaderBlock(AuthenticateLastHeaderBlock1063,34572
void GCM_Base::AuthenticateLastConfidentialBlock(AuthenticateLastConfidentialBlock1073,34836
void GCM_Base::AuthenticateLastFooterBlock(AuthenticateLastFooterBlock1080,35097

src/cryptopp/xtr.cpp,129
const GFP2Element & GFP2Element::Zero(Zero14,250
void XTR_FindPrimesAndGenerator(19,340
GFP2Element XTR_Exponentiate(56,1710

src/cryptopp/tea.cpp,612
typedef BlockGetAndPut<word32,word3210,195
typedef BlockGetAndPut<word32, BigEndian> Block;10,195
void TEA::Base::UncheckedSetKey(UncheckedSetKey12,247
void TEA::Enc::ProcessAndXorBlock(ProcessAndXorBlock20,524
void TEA::Dec::ProcessAndXorBlock(ProcessAndXorBlock36,914
void XTEA::Base::UncheckedSetKey(UncheckedSetKey52,1304
void XTEA::Enc::ProcessAndXorBlock(ProcessAndXorBlock60,1583
void XTEA::Dec::ProcessAndXorBlock(ProcessAndXorBlock82,2132
#define MX 104,2681
void BTEA::Enc::ProcessAndXorBlock(ProcessAndXorBlock106,2748
void BTEA::Dec::ProcessAndXorBlock(ProcessAndXorBlock136,3506

src/cryptopp/dsa.h,141
#define CRYPTOPP_DSA_H7,160
NAMESPACE_BEGIN(12,234
enum DSASignatureFormat 17,459
	DSA_P1363,19,541
	DSA_DER,21,615
	DSA_OPENPGP23,673

src/cryptopp/eprecomp.cpp,603
template <class T> void DL_FixedBasePrecomputationImpl<T>::SetBase(SetBase14,236
template <class T> void DL_FixedBasePrecomputationImpl<T>::Precompute(Precompute28,611
template <class T> void DL_FixedBasePrecomputationImpl<T>::Load(Load44,1139
template <class T> void DL_FixedBasePrecomputationImpl<T>::Save(Save59,1684
template <class T> void DL_FixedBasePrecomputationImpl<T>::PrepareCascade(PrepareCascade69,2056
template <class T> T DL_FixedBasePrecomputationImpl<T>::Exponentiate(Exponentiate92,2832
	DL_FixedBasePrecomputationImpl<T>::CascadeExponentiate(CascadeExponentiate101,3290

src/cryptopp/mqueue.h,214
#define CRYPTOPP_MQUEUE_H2,27
NAMESPACE_BEGIN(11,162
	struct MismatchDetected 74,2350
	struct MismatchDetected : public Exception {MismatchDetected(MismatchDetected74,2350
template<> inline void swap(98,3506

src/cryptopp/osrng.h,903
#define CRYPTOPP_OSRNG_H7,196
NAMESPACE_BEGIN(21,457
	typedef unsigned long 49,1367
	typedef unsigned __int64 51,1454
	typedef unsigned long 53,1505
	typedef void *PVOID;PVOID56,1584
	typedef PVOID ProviderHandle;57,1607
class CRYPTOPP_DLL AutoSeededRandomPool : public RandomPool151,4949
class AutoSeededX917RNG 178,6280
	explicit AutoSeededX917RNG(187,6715
	bool CanIncorporateEntropy(208,7909
	void IncorporateEntropy(209,7961
	void GenerateIntoBufferedTransformation(210,8053
	member_ptr<RandomNumberGenerator> m_rng;214,8254
void AutoSeededX917RNG<BLOCK_CIPHER>::Reseed(Reseed218,8334
void AutoSeededX917RNG<BLOCK_CIPHER>::Reseed(Reseed224,8597
CRYPTOPP_DLL_TEMPLATE_CLASS AutoSeededX917RNG<AutoSeededX917RNG245,9338
class DefaultAutoSeededRNG 253,9808
typedef AutoSeededX917RNG<AES> DefaultAutoSeededRNG;257,9971
typedef AutoSeededRandomPool DefaultAutoSeededRNG;259,10032

src/cryptopp/blake2.cpp,2237
# undef CRYPTOPP_BOOL_SSE4_INTRINSICS_AVAILABLE23,944
NAMESPACE_BEGIN(CRYPTOPP_BOOL_SSE4_INTRINSICS_AVAILABLE14,473
struct CRYPTOPP_NO_VTABLE BLAKE2_IV 64,2791
const word32 BLAKE2_IV<false>::iv[iv76,3101
#define BLAKE2S_IV(81,3264
const word64 BLAKE2_IV<true>::iv[iv92,3522
#define BLAKE2B_IV(99,3800
struct CRYPTOPP_NO_VTABLE BLAKE2_Sigma 104,4024
const byte BLAKE2_Sigma<false>::sigma[sigma114,4257
const byte BLAKE2_Sigma<true>::sigma[sigma136,5247
typedef void (*pfnCompress32)pfnCompress32151,6142
typedef void (*pfnCompress64)pfnCompress64152,6217
pfnCompress64 InitializeCompress64Fn(154,6293
pfnCompress32 InitializeCompress32Fn(176,6749
BLAKE2_ParameterBlock<false>::BLAKE2_ParameterBlock(BLAKE2_ParameterBlock198,7207
BLAKE2_ParameterBlock<true>::BLAKE2_ParameterBlock(BLAKE2_ParameterBlock238,8364
void BLAKE2_Base<W, T_64bit>::UncheckedSetKey(UncheckedSetKey280,9589
BLAKE2_Base<W, T_64bit>::BLAKE2_Base(BLAKE2_Base341,11364
BLAKE2_Base<W, T_64bit>::BLAKE2_Base(BLAKE2_Base348,11579
BLAKE2_Base<W, T_64bit>::BLAKE2_Base(BLAKE2_Base357,11882
void BLAKE2_Base<W, T_64bit>::Restart(Restart372,12724
void BLAKE2_Base<W, T_64bit>::Restart(Restart379,12875
void BLAKE2_Base<W, T_64bit>::Update(Update410,14115
void BLAKE2_Base<W, T_64bit>::TruncatedFinal(TruncatedFinal444,14961
void BLAKE2_Base<W, T_64bit>::IncrementCounter(IncrementCounter469,15577
void BLAKE2_Base<word64, true>::Compress(Compress477,15773
void BLAKE2_Base<word32, false>::Compress(Compress485,16008
void BLAKE2_CXX_Compress64(492,16231
	#undef BLAKE2_G494,16316
	#undef BLAKE2_ROUND495,16334
	#define BLAKE2_G(497,16358
	#define BLAKE2_ROUND(509,16758
void BLAKE2_CXX_Compress32(555,18143
	#undef BLAKE2_G557,18229
	#undef BLAKE2_ROUND558,18247
	#define BLAKE2_G(560,18271
	#define BLAKE2_ROUND(572,18671
static void BLAKE2_SSE2_Compress32(617,20057
static void BLAKE2_SSE2_Compress64(1036,38575
static void BLAKE2_SSE4_Compress32(1924,84049
static void BLAKE2_SSE4_Compress64(2479,105848
#define vld1q_u32_rev(3458,146451
static const int LANE_H64 3463,146760
static const int LANE_L64 3464,146792
static void BLAKE2_NEON_Compress32(3466,146826
static void BLAKE2_NEON_Compress64(3972,164872

src/cryptopp/hex.h,114
#define CRYPTOPP_HEX_H7,158
NAMESPACE_BEGIN(12,232
class CRYPTOPP_DLL HexDecoder : public BaseN_Decoder36,1335

src/cryptopp/camellia.h,533
#define CRYPTOPP_CAMELLIA_H7,173
NAMESPACE_BEGIN(13,271
struct Camellia_Info 17,372
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(19,466
class Camellia 25,693
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION42,1214
	typedef BlockCipherFinal<ENCRYPTION, Base> Encryption;42,1214
	typedef BlockCipherFinal<DECRYPTION,DECRYPTION43,1271
	typedef BlockCipherFinal<DECRYPTION, Base> Decryption;43,1271
typedef Camellia::Encryption CamelliaEncryption;46,1334
typedef Camellia::Decryption CamelliaDecryption;47,1384

src/cryptopp/gf2_32.h,553
#define CRYPTOPP_GF2_32_H7,177
NAMESPACE_BEGIN(13,273
class GF2_3216,345
	typedef word32 Element;19,371
	typedef int RandomizationParameter;20,397
	GF2_32(22,437
	Element RandomElement(24,499
	bool Equal(27,636
	Element Identity(30,697
	Element Add(33,741
	Element& Accumulate(36,802
	Element Inverse(39,873
	Element Subtract(42,925
	Element& Reduce(45,991
	Element Double(48,1058
	Element MultiplicativeIdentity(51,1129
	Element Multiply(54,1187
	bool IsUnit(59,1301
	Element MultiplicativeInverse(62,1354
	word32 m_modulus;68,1514

src/cryptopp/eax.cpp,282
NAMESPACE_BEGIN(6,105
void EAX_Base::Resync(Resync14,338
size_t EAX_Base::AuthenticateBlocks(AuthenticateBlocks29,762
void EAX_Base::AuthenticateLastHeaderBlock(AuthenticateLastHeaderBlock35,882
void EAX_Base::AuthenticateLastFooterBlock(AuthenticateLastFooterBlock49,1248

src/cryptopp/ccm.cpp,459
NAMESPACE_BEGIN(9,135
void CCM_Base::Resync(Resync28,838
void CCM_Base::UncheckedSpecifyDataLengths(UncheckedSpecifyDataLengths51,1379
size_t CCM_Base::AuthenticateBlocks(AuthenticateBlocks93,2656
void CCM_Base::AuthenticateLastHeaderBlock(AuthenticateLastHeaderBlock100,2970
void CCM_Base::AuthenticateLastConfidentialBlock(AuthenticateLastConfidentialBlock116,3420
void CCM_Base::AuthenticateLastFooterBlock(AuthenticateLastFooterBlock132,3882

src/cryptopp/casts.cpp,14422
	0x1F201094UL,x1F201094UL77,3844
	0x1F201094UL, 0xEF0BA75BUL,xEF0BA75BUL77,3844
	0x1F201094UL, 0xEF0BA75BUL, 0x69E3CF7EUL,x69E3CF7EUL77,3844
	0x1F201094UL, 0xEF0BA75BUL, 0x69E3CF7EUL, 0x393F4380UL,x393F4380UL77,3844
	0xFE61CF7AUL,xFE61CF7AUL78,3902
	0xFE61CF7AUL, 0xEEC5207AUL,xEEC5207AUL78,3902
	0xFE61CF7AUL, 0xEEC5207AUL, 0x55889C94UL,x55889C94UL78,3902
	0xFE61CF7AUL, 0xEEC5207AUL, 0x55889C94UL, 0x72FC0651UL,x72FC0651UL78,3902
	0xADA7EF79UL,xADA7EF79UL79,3960
	0xADA7EF79UL, 0x4E1D7235UL,x4E1D7235UL79,3960
	0xADA7EF79UL, 0x4E1D7235UL, 0xD55A63CEUL,xD55A63CEUL79,3960
	0xADA7EF79UL, 0x4E1D7235UL, 0xD55A63CEUL, 0xDE0436BAUL,xDE0436BAUL79,3960
	0x99C430EFUL,x99C430EFUL80,4018
	0x99C430EFUL, 0x5F0C0794UL,x5F0C0794UL80,4018
	0x99C430EFUL, 0x5F0C0794UL, 0x18DCDB7DUL,x18DCDB7DUL80,4018
	0x99C430EFUL, 0x5F0C0794UL, 0x18DCDB7DUL, 0xA1D6EFF3UL,xA1D6EFF3UL80,4018
	0xA0B52F7BUL,xA0B52F7BUL81,4076
	0xA0B52F7BUL, 0x59E83605UL,x59E83605UL81,4076
	0xA0B52F7BUL, 0x59E83605UL, 0xEE15B094UL,xEE15B094UL81,4076
	0xA0B52F7BUL, 0x59E83605UL, 0xEE15B094UL, 0xE9FFD909UL,xE9FFD909UL81,4076
	0xDC440086UL,xDC440086UL82,4134
	0xDC440086UL, 0xEF944459UL,xEF944459UL82,4134
	0xDC440086UL, 0xEF944459UL, 0xBA83CCB3UL,xBA83CCB3UL82,4134
	0xDC440086UL, 0xEF944459UL, 0xBA83CCB3UL, 0xE0C3CDFBUL,xE0C3CDFBUL82,4134
	0xD1DA4181UL,xD1DA4181UL83,4192
	0xD1DA4181UL, 0x3B092AB1UL,x3B092AB1UL83,4192
	0xD1DA4181UL, 0x3B092AB1UL, 0xF997F1C1UL,xF997F1C1UL83,4192
	0xD1DA4181UL, 0x3B092AB1UL, 0xF997F1C1UL, 0xA5E6CF7BUL,xA5E6CF7BUL83,4192
	0x01420DDBUL,x01420DDBUL84,4250
	0x01420DDBUL, 0xE4E7EF5BUL,xE4E7EF5BUL84,4250
	0x01420DDBUL, 0xE4E7EF5BUL, 0x25A1FF41UL,x25A1FF41UL84,4250
	0x01420DDBUL, 0xE4E7EF5BUL, 0x25A1FF41UL, 0xE180F806UL,xE180F806UL84,4250
	0x1FC41080UL,x1FC41080UL85,4308
	0x1FC41080UL, 0x179BEE7AUL,x179BEE7AUL85,4308
	0x1FC41080UL, 0x179BEE7AUL, 0xD37AC6A9UL,xD37AC6A9UL85,4308
	0x1FC41080UL, 0x179BEE7AUL, 0xD37AC6A9UL, 0xFE5830A4UL,xFE5830A4UL85,4308
	0x98DE8B7FUL,x98DE8B7FUL86,4366
	0x98DE8B7FUL, 0x77E83F4EUL,x77E83F4EUL86,4366
	0x98DE8B7FUL, 0x77E83F4EUL, 0x79929269UL,x79929269UL86,4366
	0x98DE8B7FUL, 0x77E83F4EUL, 0x79929269UL, 0x24FA9F7BUL,x24FA9F7BUL86,4366
	0xE113C85BUL,xE113C85BUL87,4424
	0xE113C85BUL, 0xACC40083UL,xACC40083UL87,4424
	0xE113C85BUL, 0xACC40083UL, 0xD7503525UL,xD7503525UL87,4424
	0xE113C85BUL, 0xACC40083UL, 0xD7503525UL, 0xF7EA615FUL,xF7EA615FUL87,4424
	0x62143154UL,x62143154UL88,4482
	0x62143154UL, 0x0D554B63UL,x0D554B63UL88,4482
	0x62143154UL, 0x0D554B63UL, 0x5D681121UL,x5D681121UL88,4482
	0x62143154UL, 0x0D554B63UL, 0x5D681121UL, 0xC866C359UL,xC866C359UL88,4482
	0x3D63CF73UL,x3D63CF73UL89,4540
	0x3D63CF73UL, 0xCEE234C0UL,xCEE234C0UL89,4540
	0x3D63CF73UL, 0xCEE234C0UL, 0xD4D87E87UL,xD4D87E87UL89,4540
	0x3D63CF73UL, 0xCEE234C0UL, 0xD4D87E87UL, 0x5C672B21UL,x5C672B21UL89,4540
	0x071F6181UL,x071F6181UL90,4598
	0x071F6181UL, 0x39F7627FUL,x39F7627FUL90,4598
	0x071F6181UL, 0x39F7627FUL, 0x361E3084UL,x361E3084UL90,4598
	0x071F6181UL, 0x39F7627FUL, 0x361E3084UL, 0xE4EB573BUL,xE4EB573BUL90,4598
	0x602F64A4UL,x602F64A4UL91,4656
	0x602F64A4UL, 0xD63ACD9CUL,xD63ACD9CUL91,4656
	0x602F64A4UL, 0xD63ACD9CUL, 0x1BBC4635UL,x1BBC4635UL91,4656
	0x602F64A4UL, 0xD63ACD9CUL, 0x1BBC4635UL, 0x9E81032DUL,x9E81032DUL91,4656
	0x2701F50CUL,x2701F50CUL92,4714
	0x2701F50CUL, 0x99847AB4UL,x99847AB4UL92,4714
	0x2701F50CUL, 0x99847AB4UL, 0xA0E3DF79UL,xA0E3DF79UL92,4714
	0x2701F50CUL, 0x99847AB4UL, 0xA0E3DF79UL, 0xBA6CF38CUL,xBA6CF38CUL92,4714
	0x10843094UL,x10843094UL93,4772
	0x10843094UL, 0x2537A95EUL,x2537A95EUL93,4772
	0x10843094UL, 0x2537A95EUL, 0xF46F6FFEUL,xF46F6FFEUL93,4772
	0x10843094UL, 0x2537A95EUL, 0xF46F6FFEUL, 0xA1FF3B1FUL,xA1FF3B1FUL93,4772
	0x208CFB6AUL,x208CFB6AUL94,4830
	0x208CFB6AUL, 0x8F458C74UL,x8F458C74UL94,4830
	0x208CFB6AUL, 0x8F458C74UL, 0xD9E0A227UL,xD9E0A227UL94,4830
	0x208CFB6AUL, 0x8F458C74UL, 0xD9E0A227UL, 0x4EC73A34UL,x4EC73A34UL94,4830
	0xFC884F69UL,xFC884F69UL95,4888
	0xFC884F69UL, 0x3E4DE8DFUL,x3E4DE8DFUL95,4888
	0xFC884F69UL, 0x3E4DE8DFUL, 0xEF0E0088UL,xEF0E0088UL95,4888
	0xFC884F69UL, 0x3E4DE8DFUL, 0xEF0E0088UL, 0x3559648DUL,x3559648DUL95,4888
	0x8A45388CUL,x8A45388CUL96,4946
	0x8A45388CUL, 0x1D804366UL,x1D804366UL96,4946
	0x8A45388CUL, 0x1D804366UL, 0x721D9BFDUL,x721D9BFDUL96,4946
	0x8A45388CUL, 0x1D804366UL, 0x721D9BFDUL, 0xA58684BBUL,xA58684BBUL96,4946
	0xE8256333UL,xE8256333UL97,5004
	0xE8256333UL, 0x844E8212UL,x844E8212UL97,5004
	0xE8256333UL, 0x844E8212UL, 0x128D8098UL,x128D8098UL97,5004
	0xE8256333UL, 0x844E8212UL, 0x128D8098UL, 0xFED33FB4UL,xFED33FB4UL97,5004
	0xCE280AE1UL,xCE280AE1UL98,5062
	0xCE280AE1UL, 0x27E19BA5UL,x27E19BA5UL98,5062
	0xCE280AE1UL, 0x27E19BA5UL, 0xD5A6C252UL,xD5A6C252UL98,5062
	0xCE280AE1UL, 0x27E19BA5UL, 0xD5A6C252UL, 0xE49754BDUL,xE49754BDUL98,5062
	0xC5D655DDUL,xC5D655DDUL99,5120
	0xC5D655DDUL, 0xEB667064UL,xEB667064UL99,5120
	0xC5D655DDUL, 0xEB667064UL, 0x77840B4DUL,x77840B4DUL99,5120
	0xC5D655DDUL, 0xEB667064UL, 0x77840B4DUL, 0xA1B6A801UL,xA1B6A801UL99,5120
	0x84DB26A9UL,x84DB26A9UL100,5178
	0x84DB26A9UL, 0xE0B56714UL,xE0B56714UL100,5178
	0x84DB26A9UL, 0xE0B56714UL, 0x21F043B7UL,x21F043B7UL100,5178
	0x84DB26A9UL, 0xE0B56714UL, 0x21F043B7UL, 0xE5D05860UL,xE5D05860UL100,5178
	0x54F03084UL,x54F03084UL101,5236
	0x54F03084UL, 0x066FF472UL,x066FF472UL101,5236
	0x54F03084UL, 0x066FF472UL, 0xA31AA153UL,xA31AA153UL101,5236
	0x54F03084UL, 0x066FF472UL, 0xA31AA153UL, 0xDADC4755UL,xDADC4755UL101,5236
	0xB5625DBFUL,xB5625DBFUL102,5294
	0xB5625DBFUL, 0x68561BE6UL,x68561BE6UL102,5294
	0xB5625DBFUL, 0x68561BE6UL, 0x83CA6B94UL,x83CA6B94UL102,5294
	0xB5625DBFUL, 0x68561BE6UL, 0x83CA6B94UL, 0x2D6ED23BUL,x2D6ED23BUL102,5294
	0xECCF01DBUL,xECCF01DBUL103,5352
	0xECCF01DBUL, 0xA6D3D0BAUL,xA6D3D0BAUL103,5352
	0xECCF01DBUL, 0xA6D3D0BAUL, 0xB6803D5CUL,xB6803D5CUL103,5352
	0xECCF01DBUL, 0xA6D3D0BAUL, 0xB6803D5CUL, 0xAF77A709UL,xAF77A709UL103,5352
	0x33B4A34CUL,x33B4A34CUL104,5410
	0x33B4A34CUL, 0x397BC8D6UL,x397BC8D6UL104,5410
	0x33B4A34CUL, 0x397BC8D6UL, 0x5EE22B95UL,x5EE22B95UL104,5410
	0x33B4A34CUL, 0x397BC8D6UL, 0x5EE22B95UL, 0x5F0E5304UL,x5F0E5304UL104,5410
	0x81ED6F61UL,x81ED6F61UL105,5468
	0x81ED6F61UL, 0x20E74364UL,x20E74364UL105,5468
	0x81ED6F61UL, 0x20E74364UL, 0xB45E1378UL,xB45E1378UL105,5468
	0x81ED6F61UL, 0x20E74364UL, 0xB45E1378UL, 0xDE18639BUL,xDE18639BUL105,5468
	0x881CA122UL,x881CA122UL106,5526
	0x881CA122UL, 0xB96726D1UL,xB96726D1UL106,5526
	0x881CA122UL, 0xB96726D1UL, 0x8049A7E8UL,x8049A7E8UL106,5526
	0x881CA122UL, 0xB96726D1UL, 0x8049A7E8UL, 0x22B7DA7BUL,x22B7DA7BUL106,5526
	0x5E552D25UL,x5E552D25UL107,5584
	0x5E552D25UL, 0x5272D237UL,x5272D237UL107,5584
	0x5E552D25UL, 0x5272D237UL, 0x79D2951CUL,x79D2951CUL107,5584
	0x5E552D25UL, 0x5272D237UL, 0x79D2951CUL, 0xC60D894CUL,xC60D894CUL107,5584
	0x488CB402UL,x488CB402UL108,5642
	0x488CB402UL, 0x1BA4FE5BUL,x1BA4FE5BUL108,5642
	0x488CB402UL, 0x1BA4FE5BUL, 0xA4B09F6BUL,xA4B09F6BUL108,5642
	0x488CB402UL, 0x1BA4FE5BUL, 0xA4B09F6BUL, 0x1CA815CFUL,x1CA815CFUL108,5642
	0xA20C3005UL,xA20C3005UL109,5700
	0xA20C3005UL, 0x8871DF63UL,x8871DF63UL109,5700
	0xA20C3005UL, 0x8871DF63UL, 0xB9DE2FCBUL,xB9DE2FCBUL109,5700
	0xA20C3005UL, 0x8871DF63UL, 0xB9DE2FCBUL, 0x0CC6C9E9UL,x0CC6C9E9UL109,5700
	0x0BEEFF53UL,x0BEEFF53UL110,5758
	0x0BEEFF53UL, 0xE3214517UL,xE3214517UL110,5758
	0x0BEEFF53UL, 0xE3214517UL, 0xB4542835UL,xB4542835UL110,5758
	0x0BEEFF53UL, 0xE3214517UL, 0xB4542835UL, 0x9F63293CUL,x9F63293CUL110,5758
	0xEE41E729UL,xEE41E729UL111,5816
	0xEE41E729UL, 0x6E1D2D7CUL,x6E1D2D7CUL111,5816
	0xEE41E729UL, 0x6E1D2D7CUL, 0x50045286UL,x50045286UL111,5816
	0xEE41E729UL, 0x6E1D2D7CUL, 0x50045286UL, 0x1E6685F3UL,x1E6685F3UL111,5816
	0xF33401C6UL,xF33401C6UL112,5874
	0xF33401C6UL, 0x30A22C95UL,x30A22C95UL112,5874
	0xF33401C6UL, 0x30A22C95UL, 0x31A70850UL,x31A70850UL112,5874
	0xF33401C6UL, 0x30A22C95UL, 0x31A70850UL, 0x60930F13UL,x60930F13UL112,5874
	0x73F98417UL,x73F98417UL113,5932
	0x73F98417UL, 0xA1269859UL,xA1269859UL113,5932
	0x73F98417UL, 0xA1269859UL, 0xEC645C44UL,xEC645C44UL113,5932
	0x73F98417UL, 0xA1269859UL, 0xEC645C44UL, 0x52C877A9UL,x52C877A9UL113,5932
	0xCDFF33A6UL,xCDFF33A6UL114,5990
	0xCDFF33A6UL, 0xA02B1741UL,xA02B1741UL114,5990
	0xCDFF33A6UL, 0xA02B1741UL, 0x7CBAD9A2UL,x7CBAD9A2UL114,5990
	0xCDFF33A6UL, 0xA02B1741UL, 0x7CBAD9A2UL, 0x2180036FUL,x2180036FUL114,5990
	0x50D99C08UL,x50D99C08UL115,6048
	0x50D99C08UL, 0xCB3F4861UL,xCB3F4861UL115,6048
	0x50D99C08UL, 0xCB3F4861UL, 0xC26BD765UL,xC26BD765UL115,6048
	0x50D99C08UL, 0xCB3F4861UL, 0xC26BD765UL, 0x64A3F6ABUL,x64A3F6ABUL115,6048
	0x80342676UL,x80342676UL116,6106
	0x80342676UL, 0x25A75E7BUL,x25A75E7BUL116,6106
	0x80342676UL, 0x25A75E7BUL, 0xE4E6D1FCUL,xE4E6D1FCUL116,6106
	0x80342676UL, 0x25A75E7BUL, 0xE4E6D1FCUL, 0x20C710E6UL,x20C710E6UL116,6106
	0xCDF0B680UL,xCDF0B680UL117,6164
	0xCDF0B680UL, 0x17844D3BUL,x17844D3BUL117,6164
	0xCDF0B680UL, 0x17844D3BUL, 0x31EEF84DUL,x31EEF84DUL117,6164
	0xCDF0B680UL, 0x17844D3BUL, 0x31EEF84DUL, 0x7E0824E4UL,x7E0824E4UL117,6164
	0x2CCB49EBUL,x2CCB49EBUL118,6222
	0x2CCB49EBUL, 0x846A3BAEUL,x846A3BAEUL118,6222
	0x2CCB49EBUL, 0x846A3BAEUL, 0x8FF77888UL,x8FF77888UL118,6222
	0x2CCB49EBUL, 0x846A3BAEUL, 0x8FF77888UL, 0xEE5D60F6UL,xEE5D60F6UL118,6222
	0x7AF75673UL,x7AF75673UL119,6280
	0x7AF75673UL, 0x2FDD5CDBUL,x2FDD5CDBUL119,6280
	0x7AF75673UL, 0x2FDD5CDBUL, 0xA11631C1UL,xA11631C1UL119,6280
	0x7AF75673UL, 0x2FDD5CDBUL, 0xA11631C1UL, 0x30F66F43UL,x30F66F43UL119,6280
	0xB3FAEC54UL,xB3FAEC54UL120,6338
	0xB3FAEC54UL, 0x157FD7FAUL,x157FD7FAUL120,6338
	0xB3FAEC54UL, 0x157FD7FAUL, 0xEF8579CCUL,xEF8579CCUL120,6338
	0xB3FAEC54UL, 0x157FD7FAUL, 0xEF8579CCUL, 0xD152DE58UL,xD152DE58UL120,6338
	0xDB2FFD5EUL,xDB2FFD5EUL121,6396
	0xDB2FFD5EUL, 0x8F32CE19UL,x8F32CE19UL121,6396
	0xDB2FFD5EUL, 0x8F32CE19UL, 0x306AF97AUL,x306AF97AUL121,6396
	0xDB2FFD5EUL, 0x8F32CE19UL, 0x306AF97AUL, 0x02F03EF8UL,x02F03EF8UL121,6396
	0x99319AD5UL,x99319AD5UL122,6454
	0x99319AD5UL, 0xC242FA0FUL,xC242FA0FUL122,6454
	0x99319AD5UL, 0xC242FA0FUL, 0xA7E3EBB0UL,xA7E3EBB0UL122,6454
	0x99319AD5UL, 0xC242FA0FUL, 0xA7E3EBB0UL, 0xC68E4906UL,xC68E4906UL122,6454
	0xB8DA230CUL,xB8DA230CUL123,6512
	0xB8DA230CUL, 0x80823028UL,x80823028UL123,6512
	0xB8DA230CUL, 0x80823028UL, 0xDCDEF3C8UL,xDCDEF3C8UL123,6512
	0xB8DA230CUL, 0x80823028UL, 0xDCDEF3C8UL, 0xD35FB171UL,xD35FB171UL123,6512
	0x088A1BC8UL,x088A1BC8UL124,6570
	0x088A1BC8UL, 0xBEC0C560UL,xBEC0C560UL124,6570
	0x088A1BC8UL, 0xBEC0C560UL, 0x61A3C9E8UL,x61A3C9E8UL124,6570
	0x088A1BC8UL, 0xBEC0C560UL, 0x61A3C9E8UL, 0xBCA8F54DUL,xBCA8F54DUL124,6570
	0xC72FEFFAUL,xC72FEFFAUL125,6628
	0xC72FEFFAUL, 0x22822E99UL,x22822E99UL125,6628
	0xC72FEFFAUL, 0x22822E99UL, 0x82C570B4UL,x82C570B4UL125,6628
	0xC72FEFFAUL, 0x22822E99UL, 0x82C570B4UL, 0xD8D94E89UL,xD8D94E89UL125,6628
	0x8B1C34BCUL,x8B1C34BCUL126,6686
	0x8B1C34BCUL, 0x301E16E6UL,x301E16E6UL126,6686
	0x8B1C34BCUL, 0x301E16E6UL, 0x273BE979UL,x273BE979UL126,6686
	0x8B1C34BCUL, 0x301E16E6UL, 0x273BE979UL, 0xB0FFEAA6UL,xB0FFEAA6UL126,6686
	0x61D9B8C6UL,x61D9B8C6UL127,6744
	0x61D9B8C6UL, 0x00B24869UL,x00B24869UL127,6744
	0x61D9B8C6UL, 0x00B24869UL, 0xB7FFCE3FUL,xB7FFCE3FUL127,6744
	0x61D9B8C6UL, 0x00B24869UL, 0xB7FFCE3FUL, 0x08DC283BUL,x08DC283BUL127,6744
	0x43DAF65AUL,x43DAF65AUL128,6802
	0x43DAF65AUL, 0xF7E19798UL,xF7E19798UL128,6802
	0x43DAF65AUL, 0xF7E19798UL, 0x7619B72FUL,x7619B72FUL128,6802
	0x43DAF65AUL, 0xF7E19798UL, 0x7619B72FUL, 0x8F1C9BA4UL,x8F1C9BA4UL128,6802
	0xDC8637A0UL,xDC8637A0UL129,6860
	0xDC8637A0UL, 0x16A7D3B1UL,x16A7D3B1UL129,6860
	0xDC8637A0UL, 0x16A7D3B1UL, 0x9FC393B7UL,x9FC393B7UL129,6860
	0xDC8637A0UL, 0x16A7D3B1UL, 0x9FC393B7UL, 0xA7136EEBUL,xA7136EEBUL129,6860
	0xC6BCC63EUL,xC6BCC63EUL130,6918
	0xC6BCC63EUL, 0x1A513742UL,x1A513742UL130,6918
	0xC6BCC63EUL, 0x1A513742UL, 0xEF6828BCUL,xEF6828BCUL130,6918
	0xC6BCC63EUL, 0x1A513742UL, 0xEF6828BCUL, 0x520365D6UL,x520365D6UL130,6918
	0x2D6A77ABUL,x2D6A77ABUL131,6976
	0x2D6A77ABUL, 0x3527ED4BUL,x3527ED4BUL131,6976
	0x2D6A77ABUL, 0x3527ED4BUL, 0x821FD216UL,x821FD216UL131,6976
	0x2D6A77ABUL, 0x3527ED4BUL, 0x821FD216UL, 0x095C6E2EUL,x095C6E2EUL131,6976
	0xDB92F2FBUL,xDB92F2FBUL132,7034
	0xDB92F2FBUL, 0x5EEA29CBUL,x5EEA29CBUL132,7034
	0xDB92F2FBUL, 0x5EEA29CBUL, 0x145892F5UL,x145892F5UL132,7034
	0xDB92F2FBUL, 0x5EEA29CBUL, 0x145892F5UL, 0x91584F7FUL,x91584F7FUL132,7034
	0x5483697BUL,x5483697BUL133,7092
	0x5483697BUL, 0x2667A8CCUL,x2667A8CCUL133,7092
	0x5483697BUL, 0x2667A8CCUL, 0x85196048UL,x85196048UL133,7092
	0x5483697BUL, 0x2667A8CCUL, 0x85196048UL, 0x8C4BACEAUL,x8C4BACEAUL133,7092
	0x833860D4UL,x833860D4UL134,7150
	0x833860D4UL, 0x0D23E0F9UL,x0D23E0F9UL134,7150
	0x833860D4UL, 0x0D23E0F9UL, 0x6C387E8AUL,x6C387E8AUL134,7150
	0x833860D4UL, 0x0D23E0F9UL, 0x6C387E8AUL, 0x0AE6D249UL,x0AE6D249UL134,7150
	0xB284600CUL,xB284600CUL135,7208
	0xB284600CUL, 0xD835731DUL,xD835731DUL135,7208
	0xB284600CUL, 0xD835731DUL, 0xDCB1C647UL,xDCB1C647UL135,7208
	0xB284600CUL, 0xD835731DUL, 0xDCB1C647UL, 0xAC4C56EAUL,xAC4C56EAUL135,7208
	0x3EBD81B3UL,x3EBD81B3UL136,7266
	0x3EBD81B3UL, 0x230EABB0UL,x230EABB0UL136,7266
	0x3EBD81B3UL, 0x230EABB0UL, 0x6438BC87UL,x6438BC87UL136,7266
	0x3EBD81B3UL, 0x230EABB0UL, 0x6438BC87UL, 0xF0B5B1FAUL,xF0B5B1FAUL136,7266
	0x8F5EA2B3UL,x8F5EA2B3UL137,7324
	0x8F5EA2B3UL, 0xFC184642UL,xFC184642UL137,7324
	0x8F5EA2B3UL, 0xFC184642UL, 0x0A036B7AUL,x0A036B7AUL137,7324
	0x8F5EA2B3UL, 0xFC184642UL, 0x0A036B7AUL, 0x4FB089BDUL,x4FB089BDUL137,7324
	0x649DA589UL,x649DA589UL138,7382
	0x649DA589UL, 0xA345415EUL,xA345415EUL138,7382
	0x649DA589UL, 0xA345415EUL, 0x5C038323UL,x5C038323UL138,7382
	0x649DA589UL, 0xA345415EUL, 0x5C038323UL, 0x3E5D3BB9UL,x3E5D3BB9UL138,7382
	0x43D79572UL,x43D79572UL139,7440
	0x43D79572UL, 0x7E6DD07CUL,x7E6DD07CUL139,7440
	0x43D79572UL, 0x7E6DD07CUL, 0x06DFDF1EUL,x06DFDF1EUL139,7440
	0x43D79572UL, 0x7E6DD07CUL, 0x06DFDF1EUL, 0x6C6CC4EFUL,x6C6CC4EFUL139,7440
	0x7160A539UL,x7160A539UL140,7498
	0x7160A539UL, 0x73BFBE70UL,x73BFBE70UL140,7498
	0x7160A539UL, 0x73BFBE70UL, 0x83877605UL,x83877605UL140,7498

src/cryptopp/hex.cpp,324
NAMESPACE_BEGIN(9,135
	const byte s_vecUpper[s_vecUpper13,178
	const byte s_vecLower[s_vecLower14,226
void HexEncoder::IsolatedInitialize(IsolatedInitialize17,279
void HexDecoder::IsolatedInitialize(IsolatedInitialize25,625
const int *HexDecoder::GetDefaultDecodingLookupArray(GetDefaultDecodingLookupArray32,896

src/cryptopp/dsa.cpp,24
NAMESPACE_BEGIN(13,220

src/cryptopp/rsa.h,1723
#define CRYPTOPP_RSA_H9,282
NAMESPACE_BEGIN(19,455
	typedef RSAFunction ThisClass;26,671
class CRYPTOPP_DLL InvertibleRSAFunction : public RSAFunction,64,1881
class CRYPTOPP_DLL InvertibleRSAFunction : public RSAFunction, public TrapdoorFunctionInverse,64,1881
	typedef InvertibleRSAFunction ThisClass;66,2003
struct CRYPTOPP_DLL RSA165,6273
	typedef RSAFunction PublicKey;168,6392
	typedef InvertibleRSAFunction PrivateKey;169,6425
struct RSAES 178,6709
struct RSASS 190,7157
struct CRYPTOPP_DLL RSA_ISO197,7284
	typedef RSAFunction_ISO PublicKey;200,7411
	typedef InvertibleRSAFunction_ISO PrivateKey;201,7448
struct RSASS_ISO 209,7640
class RSASSA_PKCS1v15_SHA_Signer 231,8734
class RSASSA_PKCS1v15_SHA_Verifier 235,8972
namespace Weak 237,9053
class RSASSA_PKCS1v15_MD2_Signer 242,9241
class RSASSA_PKCS1v15_MD2_Verifier 246,9494
class RSASSA_PKCS1v15_MD5_Signer 251,9751
class RSASSA_PKCS1v15_MD5_Verifier 255,10004
typedef RSASS<PKCS1v15,PKCS1v15259,10103
typedef RSASS<PKCS1v15,SHA>::Signer RSASSA_PKCS1v15_SHA_Signer;259,10103
typedef RSASS<PKCS1v15,PKCS1v15260,10168
typedef RSASS<PKCS1v15,SHA>::Verifier RSASSA_PKCS1v15_SHA_Verifier;260,10168
namespace Weak 262,10239
	typedef RSASS<PKCS1v15,PKCS1v15263,10257
	typedef RSASS<PKCS1v15, Weak1::MD2>::Signer RSASSA_PKCS1v15_MD2_Signer;263,10257
	typedef RSASS<PKCS1v15,PKCS1v15264,10331
	typedef RSASS<PKCS1v15, Weak1::MD2>::Verifier RSASSA_PKCS1v15_MD2_Verifier;264,10331
	typedef RSASS<PKCS1v15,PKCS1v15265,10409
	typedef RSASS<PKCS1v15, Weak1::MD5>::Signer RSASSA_PKCS1v15_MD5_Signer;265,10409
	typedef RSASS<PKCS1v15,PKCS1v15266,10483
	typedef RSASS<PKCS1v15, Weak1::MD5>::Verifier RSASSA_PKCS1v15_MD5_Verifier;266,10483

src/cryptopp/rijndael.h,508
#define CRYPTOPP_RIJNDAEL_H9,317
# define CRYPTOPP_DISABLE_RIJNDAEL_ASM16,550
NAMESPACE_BEGIN(19,600
struct Rijndael_Info 22,675
	CRYPTOPP_DLL static const char * CRYPTOPP_API StaticAlgorithmName(24,769
class CRYPTOPP_DLL Rijndael : public Rijndael_Info,29,1018
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;78,2868
	typedef BlockCipherFinal<DECRYPTION, Dec> Decryption;79,2924
typedef Rijndael::Encryption RijndaelEncryption;82,2986
typedef Rijndael::Decryption RijndaelDecryption;83,3036

src/cryptopp/network.h,1397
#define CRYPTOPP_NETWORK_H2,28
NAMESPACE_BEGIN(12,212
class LimitedBandwidth14,241
	LimitedBandwidth(17,277
	lword GetMaxBytesPerSecond(22,459
	void SetMaxBytesPerSecond(25,533
	unsigned int GetMaxWaitObjectCount(37,910
	lword m_maxBytesPerSecond;41,1064
	typedef std::deque<std::pair<std::pair43,1095
	typedef std::deque<std::pair<double, lword> > OpQueue;43,1095
	OpQueue m_ops;44,1152
	Timer m_timer;46,1171
	double m_nextTransceiveTime;47,1188
class CRYPTOPP_NO_VTABLE NonblockingSource : public AutoSignaling<AutoSignaling54,1376
class CRYPTOPP_NO_VTABLE NonblockingSource : public AutoSignaling<Source>, public LimitedBandwidth54,1376
class CRYPTOPP_NO_VTABLE NetworkReceiver : public Waitable93,2977
class CRYPTOPP_NO_VTABLE NonblockingSinkInfo104,3383
class CRYPTOPP_NO_VTABLE NonblockingSink : public Sink,118,3936
class CRYPTOPP_NO_VTABLE NonblockingSink : public Sink, public NonblockingSinkInfo,118,3936
class CRYPTOPP_NO_VTABLE NonblockingSink : public Sink, public NonblockingSinkInfo, public LimitedBandwidth118,3936
class CRYPTOPP_NO_VTABLE NetworkSender : public Waitable151,5274
	enum EofState 219,7813
	enum EofState { EOF_NONE,219,7813
	enum EofState { EOF_NONE, EOF_PENDING_SEND,219,7813
	enum EofState { EOF_NONE, EOF_PENDING_SEND, EOF_PENDING_DELIVERY,219,7813
	enum EofState { EOF_NONE, EOF_PENDING_SEND, EOF_PENDING_DELIVERY, EOF_DONE 219,7813

src/cryptopp/fltrimpl.h,467
#define CRYPTOPP_FLTRIMPL_H2,29
#define FILTER_BEGIN	14,282
#define FILTER_END_NO_MESSAGE_END_NO_RETURN	20,376
#define FILTER_END_NO_MESSAGE_END	26,483
#define FILTER_OUTPUT3(38,729
#define FILTER_OUTPUT2(46,973
#define FILTER_OUTPUT(49,1125
#define FILTER_OUTPUT_BYTE(52,1240
#define FILTER_OUTPUT2_MODIFIABLE(55,1343
#define FILTER_OUTPUT_MODIFIABLE(63,1590
#define FILTER_OUTPUT2_MAYBE_MODIFIABLE(66,1727
#define FILTER_OUTPUT_MAYBE_MODIFIABLE(74,2058

src/cryptopp/serpentp.h,902
#define LT(6,102
#define ILT(15,368
#define beforeS0(27,668
#define afterS0(28,704
#define afterS1(29,739
#define afterS2(30,774
#define afterS3(31,809
#define afterS4(32,844
#define afterS5(33,879
#define afterS6(34,914
#define afterS7(35,949
#define beforeI7(38,1035
#define afterI7(39,1071
#define afterI6(40,1106
#define afterI5(41,1141
#define afterI4(42,1176
#define afterI3(43,1211
#define afterI2(44,1246
#define afterI1(45,1281
#define afterI0(46,1316
#define S0(51,1469
#define I0(73,1889
#define S1(96,2331
#define I1(118,2754
#define S2(141,3193
#define I2(161,3574
#define S3(184,4013
#define I3(207,4448
#define S4(229,4865
#define I4(253,5326
#define S5(277,5784
#define I5(300,6226
#define S6(323,6668
#define I6(345,7091
#define S7(366,7492
#define I7(390,7950
#define KX(414,8401
#define LK(420,8527
#define SK(426,8660
NAMESPACE_BEGIN(SK3,47

src/cryptopp/oids.h,81
#define CRYPTOPP_OIDS_H7,174
NAMESPACE_BEGIN(11,221
#define DEFINE_OID(15,275

src/cryptopp/factory.h,774
#define CRYPTOPP_OBJFACT_H7,199
NAMESPACE_BEGIN(13,294
class ObjectFactory19,504
	virtual ~ObjectFactory 22,537
	virtual AbstractClass * CreateObject(23,568
class DefaultObjectFactory 31,864
	AbstractClass * CreateObject(34,942
template <class AbstractClass, int instance=44,1196
	typedef std::map<std::string, void *> Map;97,2818
ObjectFactoryRegistry<AbstractClass, instance> & ObjectFactoryRegistry<AbstractClass, instance>::Registry(Registry102,2928
template <class AbstractClass, class ConcreteClass, int instance 113,3384
void RegisterAsymmetricCipherDefaultFactories(133,4468
void RegisterSignatureSchemeDefaultFactories(147,5383
void RegisterSymmetricCipherDefaultFactories(161,6289
void RegisterAuthenticatedSymmetricCipherDefaultFactories(175,7262

src/cryptopp/rdrand.cpp,1046
#define NASM_RDRAND_ASM_AVAILABLE 41,1583
#define NASM_RDSEED_ASM_AVAILABLE 42,1620
#  define CRYPTOPP_CPUID_AVAILABLE53,2139
#  define MASM_RDRAND_ASM_AVAILABLE 59,2269
#  define MASM_RDSEED_ASM_AVAILABLE 60,2308
#  define GCC_RDRAND_ASM_AVAILABLE 62,2433
#  define GCC_RDSEED_ASM_AVAILABLE 63,2471
#    define ALL_RDRAND_INTRIN_AVAILABLE 66,2591
#    define GCC_RDRAND_ASM_AVAILABLE 68,2667
#    define ALL_RDSEED_INTRIN_AVAILABLE 71,2771
#    define GCC_RDSEED_ASM_AVAILABLE 73,2847
#    define ALL_RDRAND_INTRIN_AVAILABLE 77,2996
#    define GCC_RDRAND_ASM_AVAILABLE 79,3048
#    define ALL_RDSEED_INTRIN_AVAILABLE 82,3160
#    define GCC_RDSEED_ASM_AVAILABLE 84,3212
NAMESPACE_BEGIN(161,5782
static int GCC_RRA_GenerateBlock(224,7032
void RDRAND::GenerateBlock(GenerateBlock279,8054
void RDRAND::DiscardBytes(DiscardBytes306,9138
static int ALL_RSI_GenerateBlock(333,10030
static int GCC_RSA_GenerateBlock(393,11215
void RDSEED::GenerateBlock(GenerateBlock447,12235
void RDSEED::DiscardBytes(DiscardBytes474,13291

src/cryptopp/dh2.h,662
#define CRYPTOPP_DH2_H7,168
NAMESPACE_BEGIN(11,219
class DH2 20,676
	virtual ~DH2(23,740
	DH2(26,791
	DH2(29,891
	CryptoParameters & AccessCryptoParameters(32,1028
	unsigned int AgreedValueLength(34,1114
	unsigned int StaticPrivateKeyLength(37,1218
	unsigned int StaticPublicKeyLength(39,1299
	void GenerateStaticPrivateKey(41,1378
	void GenerateStaticPublicKey(43,1507
	void GenerateStaticKeyPair(45,1668
	unsigned int EphemeralPrivateKeyLength(48,1821
	unsigned int EphemeralPublicKeyLength(50,1905
	void GenerateEphemeralPrivateKey(52,1987
	void GenerateEphemeralPublicKey(54,2119
	void GenerateEphemeralKeyPair(56,2283
	bool Agree(59,2439

src/cryptopp/adler32.h,365
#define CRYPTOPP_ADLER32_H8,195
NAMESPACE_BEGIN(12,250
class Adler32 15,315
	CRYPTOPP_CONSTANT(18,370
	void Update(20,429
	void TruncatedFinal(21,478
	unsigned int DigestSize(22,526
    CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(23,581
    std::string AlgorithmName(24,666
	void Reset(27,749
	word16 m_s1,29,788
	word16 m_s1, m_s2;29,788

src/cryptopp/cbcmac.h,243
#define CRYPTOPP_CBCMAC_H8,166
NAMESPACE_BEGIN(13,241
class CBC_MAC 40,1129
	CBC_MAC(43,1249
	CBC_MAC(44,1264
	static std::string StaticAlgorithmName(47,1378
	BlockCipher & AccessCipher(50,1500
	typename T::Encryption m_cipher;51,1550

src/cryptopp/keccak.cpp,242
static void KeccakF1600(34,1492
        typedef BlockGetAndPut<word64, LittleEndian, true, true> Block;51,2066
void Keccak::Update(Update252,8990
void Keccak::Restart(Restart273,9568
void Keccak::TruncatedFinal(TruncatedFinal279,9668

src/cryptopp/fips140.cpp,507
#define CRYPTOPP_ENABLE_COMPLIANCE_WITH_FIPS_140_2 16,499
bool FIPS_140_2_ComplianceEnabled(29,981
void SimulatePowerUpSelfTestFailure(34,1079
PowerUpSelfTestStatus CRYPTOPP_API GetPowerUpSelfTestStatus(39,1181
ThreadLocalStorage & AccessPowerUpSelfTestInProgress(45,1334
bool PowerUpSelfTestInProgressOnThisThread(52,1483
void SetPowerUpSelfTestInProgressOnThisThread(62,1729
void EncryptionPairwiseConsistencyTest_FIPS_140_Only(70,1954
void SignaturePairwiseConsistencyTest_FIPS_140_Only(78,2251

src/cryptopp/filters.h,4996
#define CRYPTOPP_FILTERS_H7,197
NAMESPACE_BEGIN(25,530
struct CRYPTOPP_DLL FilterPutSpaceHelper160,8486
class CRYPTOPP_DLL MeterFilter : public Bufferless<Bufferless220,11872
	struct MessageRange273,14592
		inline bool operator<(275,14618
		unsigned int message;277,14813
		unsigned int message; lword position;277,14813
		unsigned int message; lword position; lword size;277,14813
class CRYPTOPP_DLL TransparentFilter : public MeterFilter291,15207
class CRYPTOPP_DLL OpaqueFilter : public MeterFilter302,15590
class CRYPTOPP_DLL FilterWithBufferedInput : public Filter317,16356
	class BlockQueue405,20901
		size_t CurrentSize(413,21148
		size_t MaxSize(414,21195
		SecByteBlock m_buffer;417,21260
		size_t m_blockSize,418,21286
		size_t m_blockSize, m_maxBlocks,418,21286
		size_t m_blockSize, m_maxBlocks, m_size;418,21286
		byte *m_begin;m_begin419,21330
class CRYPTOPP_DLL FilterWithInputQueue : public Filter432,21780
struct BlockPaddingSchemeDef465,22702
	enum BlockPaddingScheme 474,23178
		NO_PADDING,476,23248
		ZEROS_PADDING,478,23306
		PKCS_PADDING,480,23371
		ONE_AND_ZEROS_PADDING,482,23437
		DEFAULT_PADDING484,23500
class CRYPTOPP_DLL StreamTransformationFilter : public FilterWithBufferedInput,491,23772
class CRYPTOPP_DLL StreamTransformationFilter : public FilterWithBufferedInput, public BlockPaddingSchemeDef,491,23772
class CRYPTOPP_DLL StreamTransformationFilter : public FilterWithBufferedInput, public BlockPaddingSchemeDef, private FilterPutSpaceHelper491,23772
class CRYPTOPP_DLL HashFilter : public Bufferless<Bufferless521,25220
class CRYPTOPP_DLL HashFilter : public Bufferless<Filter>, private FilterPutSpaceHelper521,25220
class CRYPTOPP_DLL HashVerificationFilter : public FilterWithBufferedInput550,26628
	class HashVerificationFailed 557,26874
		HashVerificationFailed(560,26938
	enum Flags 567,27209
		HASH_AT_END=569,27324
		HASH_AT_BEGIN=571,27448
		PUT_MESSAGE=573,27551
		PUT_HASH=575,27649
		PUT_RESULT=577,27766
		THROW_EXCEPTION=579,27884
		DEFAULT_FLAGS 581,27976
class CRYPTOPP_DLL AuthenticatedEncryptionFilter : public StreamTransformationFilter617,29605
class CRYPTOPP_DLL AuthenticatedDecryptionFilter : public FilterWithBufferedInput,659,31922
	enum Flags 665,32178
		MAC_AT_END=667,32291
		MAC_AT_BEGIN=669,32412
		THROW_EXCEPTION=671,32532
		DEFAULT_FLAGS 673,32608
class CRYPTOPP_DLL SignerFilter : public Unflushable<Unflushable717,34860
	class SignatureVerificationFailed 749,36201
		SignatureVerificationFailed(752,36270
	enum Flags 759,36536
		SIGNATURE_AT_END=761,36661
		SIGNATURE_AT_BEGIN=763,36800
		PUT_MESSAGE=765,36908
		PUT_SIGNATURE=767,37011
		PUT_RESULT=769,37133
		THROW_EXCEPTION=771,37251
		DEFAULT_FLAGS 773,37348
typedef SignatureVerificationFilter VerifierFilter;804,38558
	enum Behavior813,38899
		DATA_ONLY 816,38948
		PASS_SIGNALS 818,38996
		PASS_WAIT_OBJECTS 820,39051
		PASS_EVERYTHING 823,39153
class CRYPTOPP_DLL OutputProxy : public CustomSignalPropagation<CustomSignalPropagation903,42913
class CRYPTOPP_DLL ProxyFilter : public FilterWithBufferedInput951,45944
class CRYPTOPP_DLL SimpleProxyFilter : public ProxyFilter977,46840
class CRYPTOPP_DLL PK_EncryptorFilter : public SimpleProxyFilter1007,48186
class CRYPTOPP_DLL PK_DecryptorFilter : public SimpleProxyFilter1022,48919
class StringSinkTemplate 1038,49636
	virtual ~StringSinkTemplate(1041,49700
	StringSinkTemplate(1045,49830
	void IsolatedInitialize(1048,49928
	size_t Put2(1051,50126
		typedef typename T::traits_type::char_type 1054,50271
	T *m_output;m_output1067,50621
CRYPTOPP_DLL_TEMPLATE_CLASS StringSinkTemplate<StringSinkTemplate1074,50850
class RandomNumberSink 1078,51005
	virtual ~RandomNumberSink(1081,51067
	RandomNumberSink(1084,51144
	RandomNumberSink(1089,51284
	RandomNumberGenerator *m_rng;m_rng1096,51509
class CRYPTOPP_DLL ArraySink : public Bufferless<Bufferless1101,51611
class CRYPTOPP_DLL ArrayXorSink : public ArraySink1138,52920
class StringStore 1155,53479
	StringStore(1160,53604
	StringStore(1166,53863
	template <class T> StringStore(1172,54154
	const byte *m_store;m_store1181,54703
	size_t m_length,1182,54726
	size_t m_length, m_count;1182,54726
class CRYPTOPP_DLL RandomNumberStore : public Store1186,54810
class CRYPTOPP_DLL NullStore : public Store1215,55897
class CRYPTOPP_DLL CRYPTOPP_NO_VTABLE Source : public InputRejecting<InputRejecting1239,57080
class SourceTemplate 1312,60008
	virtual ~SourceTemplate(1315,60058
	SourceTemplate<SourceTemplate1320,60216
	void IsolatedInitialize(1322,60299
	size_t Pump2(1324,60404
	size_t PumpMessages2(1326,60555
	size_t PumpAll2(1328,60735
	bool SourceExhausted(1330,60863
	void SetAutoSignalPropagation(1332,60959
	int GetAutoSignalPropagation(1334,61060
	T m_store;1338,61161
class CRYPTOPP_DLL StringSource : public SourceTemplate<SourceTemplate1343,61271
class CRYPTOPP_DLL RandomNumberSource : public SourceTemplate<SourceTemplate1382,63402

src/cryptopp/crc.cpp,348
# undef CRYPTOPP_BOOL_SSE4_INTRINSICS_AVAILABLE13,325
CRC32::CRC32(CRC32127,7396
void CRC32::Update(Update132,7431
void CRC32::TruncatedFinal(TruncatedFinal172,8348
const word32 CRC32C::m_tab[CRC32C::m_tab185,8576
CRC32C::CRC32C(CRC32C295,15830
void CRC32C::Update(Update300,15867
void CRC32C::TruncatedFinal(TruncatedFinal354,17117

src/cryptopp/mdc.h,305
#define CRYPTOPP_MDC_H4,89
NAMESPACE_BEGIN(13,246
struct MDC_Info 18,356
	static std::string StaticAlgorithmName(20,452
class MDC 29,790
		typedef typename T::HashWordType 35,961
	typedef BlockCipherFinal<ENCRYPTION,ENCRYPTION74,2409
	typedef BlockCipherFinal<ENCRYPTION, Enc> Encryption;74,2409

src/cryptopp/wake.cpp,281
NAMESPACE_BEGIN(8,132
inline word32 WAKE_Base::M(M18,337
void WAKE_Base::GenKey(GenKey24,442
void WAKE_Policy<B>::CipherSetKey(CipherSetKey65,1620
void WAKE_Policy<B>::OperateKeystream(OperateKeystream75,1957
#define WAKE_OUTPUT(77,2085
	typedef word32 WordType;90,2349

src/cryptopp/mqv.h,1291
#define CRYPTOPP_MQV_H7,176
NAMESPACE_BEGIN(16,336
class MQV_Domain 27,927
	typedef GROUP_PARAMETERS GroupParameters;30,998
	typedef typename GroupParameters::Element Element;31,1042
	typedef MQV_Domain<GROUP_PARAMETERS,GROUP_PARAMETERS32,1095
	typedef MQV_Domain<GROUP_PARAMETERS, COFACTOR_OPTION> Domain;32,1095
	MQV_Domain(35,1197
	MQV_Domain(39,1302
	MQV_Domain(44,1491
	MQV_Domain(54,1918
	MQV_Domain(66,2450
	MQV_Domain(80,3107
	const GroupParameters & GetGroupParameters(85,3333
	GroupParameters & AccessGroupParameters(89,3552
	CryptoParameters & AccessCryptoParameters(93,3764
	unsigned int AgreedValueLength(100,4256
	unsigned int StaticPrivateKeyLength(105,4565
	unsigned int StaticPublicKeyLength(112,5053
	void GenerateStaticPrivateKey(119,5540
	void GenerateStaticPublicKey(132,6338
	unsigned int EphemeralPrivateKeyLength(141,6696
	unsigned int EphemeralPublicKeyLength(142,6806
	void GenerateEphemeralPrivateKey(144,6890
	void GenerateEphemeralPublicKey(153,7289
	bool Agree(159,7520
	DL_GroupParameters<Element> & AccessAbstractGroupParameters(209,9330
	const DL_GroupParameters<Element> & GetAbstractGroupParameters(210,9422
	GroupParameters m_groupParameters;212,9525
typedef MQV_Domain<DL_GroupParameters_GFP_DefaultSafePrime> MQV;217,9764

src/cryptopp/osrng.cpp,1020
#define WIN32_LEAN_AND_MEAN26,946
# define CRYPT_NEWKEYSET 31,1076
# define CRYPT_MACHINE_KEYSET 34,1151
# define BCRYPT_SUCCESS(40,1298
# define STATUS_INVALID_PARAMETER 43,1401
# define STATUS_INVALID_HANDLE 46,1486
NAMESPACE_BEGIN(57,1658
inline DWORD NtStatusToErrorCode(77,2134
# define CRYPTOPP_CONTAINER 89,2429
# define CRYPTOPP_CONTAINER 91,2481
MicrosoftCryptoProvider::MicrosoftCryptoProvider(94,2535
MicrosoftCryptoProvider::~MicrosoftCryptoProvider(~MicrosoftCryptoProvider120,3550
NonblockingRng::NonblockingRng(NonblockingRng133,3846
NonblockingRng::~NonblockingRng(~NonblockingRng142,4030
void NonblockingRng::GenerateBlock(GenerateBlock149,4130
#define CRYPTOPP_BLOCKING_RNG_FILENAME 193,5397
#define CRYPTOPP_BLOCKING_RNG_FILENAME 195,5459
BlockingRng::BlockingRng(BlockingRng199,5531
BlockingRng::~BlockingRng(~BlockingRng206,5702
void BlockingRng::GenerateBlock(GenerateBlock211,5754
void OS_GenerateRandomBlock(238,6390
void AutoSeededRandomPool::Reseed(Reseed261,6797

src/cryptopp/ripemd.h,487
#define CRYPTOPP_RIPEMD_H7,154
NAMESPACE_BEGIN(11,208
class RIPEMD160 17,423
	static void InitState(20,534
	static void Transform(21,580
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(22,641
class RIPEMD320 29,918
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(34,1136
class RIPEMD128 42,1534
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(47,1752
class RIPEMD256 55,2150
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(60,2368

src/cryptopp/randpool.cpp,182
NAMESPACE_BEGIN(17,477
void RandomPool::IncorporateEntropy(IncorporateEntropy26,676
void RandomPool::GenerateIntoBufferedTransformation(GenerateIntoBufferedTransformation35,867

src/cryptopp/md2.h,320
#define CRYPTOPP_MD2_H2,24
NAMESPACE_BEGIN(7,98
class MD2 12,208
	MD2(15,259
	void Update(16,268
	void TruncatedFinal(17,317
	unsigned int DigestSize(18,365
	unsigned int BlockSize(19,420
	CRYPTOPP_STATIC_CONSTEXPR const char* StaticAlgorithmName(20,473
	CRYPTOPP_CONSTANT(22,553
using namespace Weak1;36,864

src/cryptopp/camellia.cpp,617
#define SLOW_ROUND(29,763
#define ROUND(49,1614
#define DOUBLE_ROUND(59,2015
#define EFI(64,2169
#define EFI(66,2200
NAMESPACE_BEGIN(EFI26,647
#define CALC_ADDR2(84,2691
#define CALC_ADDR(85,2766
#define PREPARE_KS_ROUNDS	90,2860
#define KS_ROUND_0(93,2958
#define KS_ROUND(98,3266
#define PREPARE_KS_ROUNDS	109,3970
#define KS_ROUND_0(113,4194
#define KS_ROUND(115,4282
void Camellia::Base::ProcessAndXorBlock(ProcessAndXorBlock200,6581
#define KS(202,6690
#define FL(204,6742
	typedef BlockGetAndPut<word32, BigEndian> Block;211,6920
const word32 Camellia::Base::SP[Camellia::Base::SP274,9234

src/cryptopp/oaep.cpp,103
NAMESPACE_BEGIN(11,181
void OAEP_Base::Pad(Pad20,408
DecodingResult OAEP_Base::Unpad(Unpad53,1670

src/cryptopp/files.cpp,431
NAMESPACE_BEGIN(11,160
void FileStore::StoreInitialize(StoreInitialize22,356
lword FileStore::MaxRetrievable(MaxRetrievable63,1494
size_t FileStore::TransferTo2(TransferTo274,1737
size_t FileStore::CopyRangeTo2(CopyRangeTo2113,2647
lword FileStore::Skip(Skip166,3969
void FileSink::IsolatedInitialize(IsolatedInitialize179,4308
bool FileSink::IsolatedFlush(IsolatedFlush218,5477
size_t FileSink::Put2(Put2231,5759

src/cryptopp/wait.h,1809
#define CRYPTOPP_WAIT_H4,91
#define WIN32_LEAN_AND_MEAN23,528
#  define CRYPTOPP_MSAN 31,679
NAMESPACE_BEGIN(42,954
class Tracer44,983
	Tracer(47,1009
	virtual ~Tracer(48,1058
	virtual bool UsingDefaults(58,1602
	unsigned int m_level;61,1670
	void TraceIf(63,1696
	unsigned int Tracing(70,2131
#define CRYPTOPP_TRACER_CONSTRUCTOR(80,2700
#define CRYPTOPP_BEGIN_TRACER_CLASS_1(83,2811
#define CRYPTOPP_BEGIN_TRACER_CLASS_2(86,2968
#define CRYPTOPP_END_TRACER_CLASS 89,3154
#define CRYPTOPP_BEGIN_TRACER_EVENTS(94,3356
#define CRYPTOPP_TRACER_EVENT(95,3433
#define CRYPTOPP_END_TRACER_EVENTS	96,3499
#define CRYPTOPP_TRACER_EVENT_METHODS(108,4181
class CallStack124,5225
	CallStack(127,5254
	CallStack const* Prev(128,5327
	char const* m_info;132,5430
	CallStack const* m_prev;133,5452
class CallStackWithNr 137,5564
	CallStackWithNr(140,5618
	word32 m_nr;144,5755
class CallStackWithStr 148,5854
	CallStackWithStr(151,5909
	char const* m_z;155,6051
class WaitObjectContainer 169,6495
	class Err 173,6601
		Err(176,6646
	WaitObjectsTracer* m_tracer;198,7281
	std::vector<HANDLE> m_handles;202,7390
	std::vector<WaitingThreadData *> m_threads;203,7423
	HANDLE m_startWaiting;204,7469
	HANDLE m_stopWaiting;205,7494
	fd_set m_readfds,207,7525
	fd_set m_readfds, m_writefds;207,7525
	int m_maxFd;208,7557
	double m_firstEventTime;210,7580
	Timer m_eventTimer;211,7607
	bool m_noWait;212,7629
	typedef size_t LastResultType;215,7682
	typedef int LastResultType;217,7722
	enum { LASTRESULT_NOWAIT 219,7760
	enum { LASTRESULT_NOWAIT = -1, LASTRESULT_SCHEDULED 219,7760
	enum { LASTRESULT_NOWAIT = -1, LASTRESULT_SCHEDULED = -2, LASTRESULT_TIMEOUT 219,7760
	LastResultType m_lastResult;220,7847
	unsigned int m_sameResultCount;221,7878
	Timer m_noWaitTimer;222,7912

src/version.h,576
#define BITCOIN_VERSION_H6,221
static const int PROTOCOL_VERSION 12,288
static const int INIT_PROTO_VERSION 15,408
static const int GETHEADERS_VERSION 18,502
static const int MIN_PEER_PROTO_VERSION 21,604
static const int CADDR_TIME_VERSION 25,783
static const int BIP0031_VERSION 28,900
static const int MEMPOOL_GD_VERSION 31,1019
static const int NO_BLOOM_VERSION 34,1153
static const int SENDHEADERS_VERSION 37,1283
static const int FEEFILTER_VERSION 40,1412
static const int SHORT_IDS_BLOCKS_VERSION 43,1516
static const int INVALID_CB_NO_BAN_VERSION 46,1636

src/net.cpp,7447
#define DUMP_ADDRESSES_INTERVAL 42,958
#define FEELER_SLEEP_WINDOW 45,1093
#define MSG_NOSIGNAL 48,1182
#define PROTECTION_LEVEL_UNRESTRICTED 55,1428
#define IPV6_PROTECTION_LEVEL 58,1506
const static std::string NET_MESSAGE_COMMAND_OTHER 62,1554
static const uint64_t RANDOMIZER_ID_NETGROUP 64,1619
static const uint64_t RANDOMIZER_ID_LOCALHOSTNONCE 65,1716
bool fDiscover 69,1857
bool fListen 70,1880
bool fRelayTxes 71,1901
CCriticalSection cs_mapLocalHost;72,1925
std::map<CNetAddr, LocalServiceInfo> mapLocalHost;73,1959
static bool vfLimited[vfLimited74,2010
std::string strSubVersion;75,2047
static CNodeSignals g_signals;80,2169
CNodeSignals& GetNodeSignals(81,2200
void CConnman::AddOneShot(AddOneShot83,2254
unsigned short GetListenPort(89,2371
bool GetLocal(95,2531
static std::vector<CAddress> convertSeed6(120,3379
CAddress GetLocalAddress(144,4385
int GetnScore(156,4701
bool IsPeerAddrLocalGood(165,4945
void AdvertiseLocal(173,5198
bool AddLocal(196,6065
bool AddLocal(222,6671
bool RemoveLocal(227,6786
void SetLimited(236,7040
bool IsLimited(244,7199
bool IsLimited(250,7291
bool SeenLocal(256,7406
bool IsLocal(269,7673
bool IsReachable(276,7852
bool IsReachable(283,8027
CNode* CConnman::FindNode(FindNode290,8143
CNode* CConnman::FindNode(FindNode299,8341
CNode* CConnman::FindNode(FindNode308,8542
CNode* CConnman::FindNode(FindNode319,8774
bool CConnman::CheckIncomingNonce(CheckIncomingNonce328,8976
CNode* CConnman::ConnectNode(ConnectNode338,9242
void CConnman::DumpBanlist(DumpBanlist405,11978
void CNode::CloseSocketDisconnect(CloseSocketDisconnect425,12453
void CConnman::ClearBanned(ClearBanned436,12673
bool CConnman::IsBanned(IsBanned448,12920
bool CConnman::IsBanned(IsBanned465,13342
void CConnman::Ban(Ban481,13708
void CConnman::Ban(Ban486,13911
bool CConnman::Unban(Unban518,14931
bool CConnman::Unban(Unban523,15031
void CConnman::GetBanned(GetBanned536,15359
void CConnman::SetBanned(SetBanned542,15483
void CConnman::SweepBanned(SweepBanned549,15614
bool CConnman::BannedSetIsDirty(BannedSetIsDirty570,16153
void CConnman::SetBannedSetDirty(SetBannedSetDirty576,16245
bool CConnman::IsWhitelistedRange(IsWhitelistedRange583,16394
void CConnman::AddWhitelistedRange(AddWhitelistedRange592,16630
std::string CNode::GetAddrName(GetAddrName598,16767
void CNode::MaybeSetAddrName(MaybeSetAddrName603,16855
CService CNode::GetAddrLocal(GetAddrLocal610,17008
void CNode::SetAddrLocal(SetAddrLocal615,17096
#undef X624,17400
#define X(625,17409
void CNode::copyStats(copyStats626,17443
#undef X680,19223
bool CNode::ReceiveMsgBytes(ReceiveMsgBytes682,19233
void CNode::SetSendVersion(SetSendVersion734,20873
int CNode::GetSendVersion(GetSendVersion748,21453
int CNetMessage::readHeader(readHeader761,21842
int CNetMessage::readData(readData792,22528
const uint256& CNetMessage::GetMessageHash(GetMessageHash809,23064
size_t CConnman::SocketSendData(SocketSendData826,23273
struct NodeEvictionCandidate878,25107
    NodeId id;880,25138
    int64_t nTimeConnected;881,25153
    int64_t nMinPingUsecTime;882,25181
    int64_t nLastBlockTime;883,25211
    int64_t nLastTXTime;884,25239
    bool fRelevantServices;885,25264
    bool fRelayTxes;886,25292
    bool fBloomFilter;887,25313
    CAddress addr;888,25336
    uint64_t nKeyedNetGroup;889,25355
static bool ReverseCompareNodeMinPingTime(892,25388
static bool ReverseCompareNodeTimeConnected(897,25551
static bool CompareNetGroupKeyed(902,25712
static bool CompareNodeBlockTime(906,25862
static bool CompareNodeTXTime(914,26305
bool CConnman::AttemptToEvictConnection(AttemptToEvictConnection931,27216
void CConnman::AcceptConnection(AcceptConnection1024,31830
void CConnman::ThreadSocketHandler(ThreadSocketHandler1107,34507
void CConnman::WakeMessageHandler(WakeMessageHandler1406,45820
void ThreadMapPort(1421,46009
void MapPort(1508,49070
void MapPort(1530,49583
static std::string GetDNSHost(1541,49652
void CConnman::ThreadDNSAddressSeed(ThreadDNSAddressSeed1554,50180
void CConnman::DumpAddresses(DumpAddresses1614,52648
void CConnman::DumpData(DumpData1625,52884
void CConnman::ProcessOneShot(ProcessOneShot1631,52955
void CConnman::ThreadOpenConnections(ThreadOpenConnections1649,53378
std::vector<AddedNodeInfo> CConnman::GetAddedNodeInfo(GetAddedNodeInfo1803,59506
void CConnman::ThreadOpenAddedConnections(ThreadOpenAddedConnections1856,61467
bool CConnman::OpenNetworkConnection(OpenNetworkConnection1892,62988
void CConnman::ThreadMessageHandler(ThreadMessageHandler1933,64089
bool CConnman::BindListenPort(BindListenPort1987,65485
void Discover(2085,69395
void CConnman::SetNetworkActive(SetNetworkActive2136,71135
CConnman::CConnman(2157,71595
NodeId CConnman::GetNewNodeId(GetNewNodeId2175,72060
bool CConnman::Start(Start2180,72161
class CNetCleanup2285,76266
    CNetCleanup(2288,76294
    ~CNetCleanup(2290,76316
instance_of_cnetcleanup;2298,76427
void CConnman::Interrupt(Interrupt2300,76453
void CConnman::Stop(Stop2316,76781
void CConnman::DeleteNode(DeleteNode2363,78188
CConnman::~CConnman(~CConnman2373,78454
size_t CConnman::GetAddressCount(GetAddressCount2379,78510
void CConnman::SetServices(SetServices2384,78583
void CConnman::MarkAddressGood(MarkAddressGood2389,78703
void CConnman::AddNewAddress(AddNewAddress2394,78785
void CConnman::AddNewAddresses(AddNewAddresses2399,78936
std::vector<CAddress> CConnman::GetAddresses(GetAddresses2404,79104
bool CConnman::AddNode(AddNode2409,79186
bool CConnman::RemoveAddedNode(RemoveAddedNode2421,79490
size_t CConnman::GetNodeCount(GetNodeCount2433,79806
void CConnman::GetNodeStats(GetNodeStats2447,80209
bool CConnman::DisconnectNode(DisconnectNode2459,80544
bool CConnman::DisconnectNode(DisconnectNode2468,80751
void CConnman::RecordBytesRecv(RecordBytesRecv2480,80980
void CConnman::RecordBytesSent(RecordBytesSent2486,81091
void CConnman::SetMaxOutboundTarget(SetMaxOutboundTarget2503,81528
uint64_t CConnman::GetMaxOutboundTarget(GetMaxOutboundTarget2509,81645
uint64_t CConnman::GetMaxOutboundTimeframe(GetMaxOutboundTimeframe2515,81751
uint64_t CConnman::GetMaxOutboundTimeLeftInCycle(GetMaxOutboundTimeLeftInCycle2521,81864
void CConnman::SetMaxOutboundTimeframe(SetMaxOutboundTimeframe2535,82254
bool CConnman::OutboundTargetReached(OutboundTargetReached2547,82566
uint64_t CConnman::GetOutboundTargetBytesLeft(GetOutboundTargetBytesLeft2567,83224
uint64_t CConnman::GetTotalBytesRecv(GetTotalBytesRecv2576,83486
uint64_t CConnman::GetTotalBytesSent(GetTotalBytesSent2582,83587
ServiceFlags CConnman::GetLocalServices(GetLocalServices2588,83688
void CConnman::SetBestHeight(SetBestHeight2593,83768
int CConnman::GetBestHeight(GetBestHeight2598,83872
unsigned int CConnman::GetReceiveFloodSize(GetReceiveFloodSize2603,83969
unsigned int CConnman::GetSendBufferSize(GetSendBufferSize2604,84050
CNode::CNode(2606,84130
CNode::~CNode(~CNode2677,86313
void CNode::AskFor(AskFor2685,86402
bool CConnman::NodeFullyConnected(NodeFullyConnected2719,87746
void CConnman::PushMessage(PushMessage2724,87879
bool CConnman::ForNode(ForNode2761,89321
int64_t PoissonNextSend(2774,89648
CSipHasher CConnman::GetDeterministicRandomizer(GetDeterministicRandomizer2778,89869
uint64_t CConnman::CalculateKeyedNetGroup(CalculateKeyedNetGroup2783,89990

src/uint256.h,1081
#define BITCOIN_UINT256_H7,265
class base_blob25,709
    enum { WIDTH=28,738
    uint8_t data[data29,765
    base_blob(31,798
    bool IsNull(38,930
    void SetNull(46,1088
    inline int Compare(51,1159
    friend inline bool operator==(operator==53,1264
    friend inline bool operator!=(operator!=54,1368
    friend inline bool operator<(55,1472
    unsigned char* begin(65,1845
    unsigned char* end(70,1910
    const unsigned char* begin(75,1977
    const unsigned char* end(80,2054
    unsigned int size(85,2133
    uint64_t GetUint64(90,2205
    void Serialize(104,2673
    void Unserialize(110,2796
class uint160 120,3049
    uint160(122,3097
    uint160(123,3114
    explicit uint160(124,3174
class uint256 132,3469
    uint256(134,3517
    uint256(135,3534
    explicit uint256(136,3594
    uint64_t GetCheapHash(143,4004
inline uint256 uint256S(153,4245
inline uint256 uint256S(163,4540
inline dev::h256 uintToh256(171,4704
inline uint256 h256Touint(178,4878
inline dev::u256 uintTou256(184,5014
inline uint256 u256Touint(191,5214

src/rpc/client.h,34
#define BITCOIN_RPCCLIENT_H7,262

src/rpc/misc.cpp,627
UniValue getinfo(42,1161
class DescribeAddressVisitor 118,5388
    UniValue operator()(operator()121,5468
    UniValue operator()(operator()123,5564
    UniValue operator()(operator()134,5975
UniValue validateaddress(157,6936
CScript _createmultisig_redeemScript(236,10797
UniValue createmultisig(297,13006
UniValue verifymessage(340,14936
UniValue signmessagewithprivkey(394,17121
UniValue setmocktime(436,18916
static UniValue RPCLockedMemoryInfo(463,20011
UniValue getmemoryinfo(476,20537
UniValue echo(505,22001
static const CRPCCommand commands[commands518,22479
void RegisterMiscRPCCommands(534,23838

src/rpc/register.h,90
#define BITCOIN_RPCREGISTER_H6,225
static inline void RegisterAllCoreRPCCommands(23,875

src/rpc/protocol.h,1656
#define BITCOIN_RPCPROTOCOL_H7,264
enum HTTPStatusCode18,442
    HTTP_OK 20,464
    HTTP_BAD_REQUEST 21,502
    HTTP_UNAUTHORIZED 22,540
    HTTP_FORBIDDEN 23,578
    HTTP_NOT_FOUND 24,616
    HTTP_BAD_METHOD 25,654
    HTTP_INTERNAL_SERVER_ERROR 26,692
    HTTP_SERVICE_UNAVAILABLE 27,730
enum RPCErrorCode31,800
    RPC_INVALID_REQUEST 34,857
    RPC_METHOD_NOT_FOUND 35,892
    RPC_INVALID_PARAMS 36,927
    RPC_INTERNAL_ERROR 37,962
    RPC_PARSE_ERROR 38,997
    RPC_MISC_ERROR 41,1076
    RPC_FORBIDDEN_BY_SAFE_MODE 42,1166
    RPC_TYPE_ERROR 43,1278
    RPC_INVALID_ADDRESS_OR_KEY 44,1366
    RPC_OUT_OF_MEMORY 45,1437
    RPC_INVALID_PARAMETER 46,1520
    RPC_DATABASE_ERROR 47,1608
    RPC_DESERIALIZATION_ERROR 48,1671
    RPC_VERIFY_ERROR 49,1771
    RPC_VERIFY_REJECTED 50,1872
    RPC_VERIFY_ALREADY_IN_CHAIN 51,1971
    RPC_IN_WARMUP 52,2048
    RPC_TRANSACTION_ERROR 55,2164
    RPC_TRANSACTION_REJECTED 56,2220
    RPC_TRANSACTION_ALREADY_IN_CHAIN=57,2279
    RPC_CLIENT_NOT_CONNECTED 60,2373
    RPC_CLIENT_IN_INITIAL_DOWNLOAD 61,2446
    RPC_CLIENT_NODE_ALREADY_ADDED 62,2527
    RPC_CLIENT_NODE_NOT_ADDED 63,2597
    RPC_CLIENT_NODE_NOT_CONNECTED 64,2676
    RPC_CLIENT_INVALID_IP_OR_SUBNET 65,2772
    RPC_CLIENT_P2P_DISABLED 66,2838
    RPC_WALLET_ERROR 69,2952
    RPC_WALLET_INSUFFICIENT_FUNDS 70,3053
    RPC_WALLET_INVALID_ACCOUNT_NAME 71,3139
    RPC_WALLET_KEYPOOL_RAN_OUT 72,3208
    RPC_WALLET_UNLOCK_NEEDED 73,3298
    RPC_WALLET_PASSPHRASE_INCORRECT 74,3402
    RPC_WALLET_WRONG_ENC_STATE 75,3494
    RPC_WALLET_ENCRYPTION_FAILED 76,3627
    RPC_WALLET_ALREADY_UNLOCKED 77,3704

src/rpc/protocol.cpp,374
UniValue JSONRPCRequestObj(29,801
UniValue JSONRPCReplyObj(38,1096
string JSONRPCReply(50,1465
UniValue JSONRPCError(56,1647
static const std::string COOKIEAUTH_USER 67,1979
static const std::string COOKIEAUTH_FILE 69,2077
boost::filesystem::path GetAuthCookieFile(71,2132
bool GenerateAuthCookie(78,2332
bool GetAuthCookie(104,3217
void DeleteAuthCookie(120,3581

src/rpc/server.h,1295
#define BITCOIN_RPCSERVER_H7,262
static const unsigned int DEFAULT_RPC_SERIALIZE_VERSION 25,554
struct CUpdatedBlock27,616
    uint256 hash;29,639
    int height;30,657
static std::mutex cs_blockchange;33,677
static std::condition_variable cond_blockchange;34,711
static CUpdatedBlock latestblock;35,760
namespace RPCServer39,815
struct UniValueType 52,1247
    UniValueType(53,1269
    UniValueType(54,1342
    bool typeAny;55,1380
    UniValue::VType type;56,1398
class JSONRPCRequest59,1428
    UniValue id;62,1459
    std::string strMethod;63,1476
    UniValue params;64,1503
    bool fHelp;65,1524
    std::string URI;66,1540
    std::string authUser;67,1561
    bool isLongPolling;69,1588
    JSONRPCRequest(74,1715
    HTTPRequest *req;req113,2488
class RPCTimerBase156,3801
    virtual ~RPCTimerBase(159,3830
class RPCTimerInterface165,3896
    virtual ~RPCTimerInterface(168,3930
typedef UniValue(*rpcfn_type)rpcfn_type193,5031
class CRPCCommand195,5098
    std::string category;198,5126
    std::string name;199,5152
    rpcfn_type actor;200,5174
    bool okSafeMode;201,5196
    std::vector<std::string> argNames;202,5217
class CRPCTable208,5303
    std::map<std::map211,5330
    std::map<std::string, const CRPCCommand*> mapCommands;211,5330

src/rpc/rawtransaction.cpp,569
void ScriptPubKeyToJSON(39,913
void TxToJSON(63,1701
UniValue gethexaddress(128,4636
UniValue fromhexaddress(156,5790
UniValue getrawtransaction(182,6845
UniValue gettxoutproof(294,12274
UniValue verifytxoutproof(375,15801
UniValue createrawtransaction(409,17208
UniValue decoderawtransaction(604,28019
UniValue decodescript(673,31233
static void TxInErrorToJSON(723,33226
UniValue signrawtransaction(734,33733
UniValue sendrawtransaction(1000,45784
static const CRPCCommand commands[commands1073,49099
void RegisterRawTransactionRPCCommands(1089,50467

src/rpc/net.cpp,519
UniValue getconnectioncount(28,622
UniValue ping(47,1303
UniValue getpeerinfo(70,2220
UniValue addnode(192,8728
UniValue disconnectnode(237,10461
UniValue getaddednodeinfo(260,11347
UniValue getnettotals(328,14152
static UniValue GetNetworksInfo(373,16622
UniValue getnetworkinfo(394,17389
UniValue setban(470,21689
UniValue listbanned(534,24898
UniValue clearbanned(567,26082
UniValue setnetworkactive(585,26710
static const CRPCCommand commands[commands605,27351
void RegisterNetRPCCommands(622,28754

src/rpc/client.cpp,707
class CRPCConvertParam18,450
    std::string methodName;21,483
    int paramIdx;22,552
    std::string paramName;23,617
static const CRPCConvertParam vRPCConvertParams[vRPCConvertParams32,845
class CRPCConvertTable175,6560
    std::set<std::set178,6594
    std::set<std::pair<std::string, int>> members;178,6594
    std::set<std::set179,6645
    std::set<std::pair<std::string, std::string>> membersByName;179,6645
    bool convert(184,6744
    bool convert(187,6870
CRPCConvertTable::CRPCConvertTable(CRPCConvertTable192,7023
static CRPCConvertTable rpcCvtTable;205,7517
UniValue ParseNonRFCJSONValue(210,7683
UniValue RPCConvertValues(219,7958
UniValue RPCConvertNamedValues(238,8538

src/rpc/blockchain.cpp,3190
double GetDifficulty(40,1059
double GetPoWMHashPS(71,1703
double GetPoSKernelPS(99,2665
UniValue blockheaderToJSON(134,3503
UniValue blockToJSON(169,5404
UniValue executionResultToJSON(224,8177
UniValue transactionReceiptToJSON(240,8914
UniValue getblockcount(264,9890
UniValue getbestblockhash(281,10408
void RPCNotifyBlockChange(298,10982
UniValue waitfornewblock(308,11261
UniValue waitforblock(346,12895
UniValue waitforblockheight(388,14721
UniValue getdifficulty(430,16474
std::string EntryDescriptionString(452,17397
void entryToJSON(472,19236
UniValue mempoolToJSON(506,20630
UniValue getrawmempool(534,21296
UniValue getmempoolancestors(565,22497
UniValue getmempooldescendants(629,24999
UniValue getmempoolentry(693,27485
UniValue getblockhash(726,28562
UniValue getaccountinfo(751,29452
UniValue getstorage(801,31295
UniValue getblockheader(870,33798
UniValue getblock(929,36912
UniValue callcontract(1003,40883
void assignJSON(1062,43078
void assignJSON(1079,43918
void transactionReceiptInfoToJSON(1093,44341
size_t parseUInt(1106,44755
int parseBlockHeight(1119,45048
int parseBlockHeight(1143,45592
dev::h160 parseParamH160(1151,45763
void parseParam(1164,46114
void parseParam(1187,46702
void parseParam(1193,46864
class WaitForLogsParams 1224,47758
    int fromBlock;1226,47792
    int toBlock;1227,47811
    int minconf;1229,47829
    std::set<dev::h160> addresses;1231,47847
    std::vector<boost::optional<dev::h256>> topics;1232,47882
    WaitForLogsParams(1236,47954
    void parseFilter(1247,48278
UniValue waitforlogs(1257,48483
class SearchLogsParams 1404,55769
    size_t fromBlock;1406,55802
    size_t toBlock;1407,55824
    size_t minconf;1408,55844
    std::set<dev::h160> addresses;1410,55865
    std::vector<boost::optional<dev::h256>> topics;1411,55900
    SearchLogsParams(1413,55953
    void setFromBlock(1426,56289
    void setToBlock(1434,56488
UniValue searchlogs(1444,56685
UniValue gettransactionreceipt(1530,60171
UniValue listcontracts(1564,61285
struct CCoinsStats1611,62552
    int nHeight;1613,62573
    uint256 hashBlock;1614,62590
    uint64_t nTransactions;1615,62613
    uint64_t nTransactionOutputs;1616,62641
    uint256 hashSerialized;1617,62675
    uint64_t nDiskSize;1618,62703
    CAmount nTotalAmount;1619,62727
    CCoinsStats(1621,62754
static void ApplyStats(1624,62851
static bool GetUTXOStats(1641,63566
UniValue pruneblockchain(1678,64729
UniValue gettxoutsetinfo(1727,66982
UniValue gettxout(1767,68812
UniValue verifychain(1847,72156
static UniValue SoftForkMajorityDesc(1876,73389
static UniValue SoftForkDesc(1896,73981
static UniValue BIP9SoftForkDesc(1905,74334
void BIP9SoftForkDescPushBack(1926,75367
UniValue getblockchaininfo(1935,75889
struct CompareBlocksByHeight2014,80728
    bool operator()(operator()2016,80759
UniValue getchaintips(2028,81100
UniValue mempoolInfoToJSON(2131,85690
UniValue getmempoolinfo(2144,86225
UniValue preciousblock(2166,87260
UniValue invalidateblock(2204,88558
UniValue reconsiderblock(2242,89762
static const CRPCCommand commands[commands2279,91003
void RegisterBlockchainRPCCommands(2319,94443

src/rpc/mining.cpp,922
UniValue GetNetworkHashPS(45,1182
UniValue getnetworkhashps(82,2338
UniValue generateBlocks(104,3517
UniValue generate(155,5505
UniValue generatetoaddress(191,7024
UniValue getsubsidy(224,8508
UniValue getmininginfo(237,9091
UniValue getstakinginfo(299,12023
UniValue prioritisetransaction(344,13653
static UniValue BIP22ValidationResult(376,15382
std::string gbt_vb_name(394,15846
UniValue getblocktemplate(403,16105
class submitblock_StateCatcher 782,35382
    uint256 hash;785,35453
    bool found;786,35471
    CValidationState state;787,35487
    submitblock_StateCatcher(789,35516
    virtual void BlockChecked(792,35621
UniValue submitblock(800,35821
UniValue estimatefee(865,38336
UniValue estimatepriority(899,39689
UniValue estimatesmartfee(926,40659
UniValue estimatesmartpriority(963,42364
static const CRPCCommand commands[commands999,43939
void RegisterMiningRPCCommands(1019,45546

src/rpc/server.cpp,2384
static bool fRPCRunning 32,795
static bool fRPCInWarmup 33,828
static CCriticalSection cs_rpcWarmup;35,919
static RPCTimerInterface* timerInterface 37,988
static std::map<std::string, std::unique_ptr<RPCTimerBase> > deadlineTimers;39,1065
static struct CRPCSignals41,1143
    boost::signals2::signal<void (const CRPCCommand&)> PreCommand;45,1263
    boost::signals2::signal<void (const CRPCCommand&)> PostCommand;46,1330
} g_rpcSignals;47,1398
void RPCServer::OnStarted(OnStarted49,1415
void RPCServer::OnStopped(OnStopped54,1517
void RPCServer::OnPreCommand(OnPreCommand59,1619
void RPCServer::OnPostCommand(OnPostCommand64,1762
void RPCTypeCheck(69,1907
void RPCTypeCheckArgument(87,2336
void RPCTypeCheckObj(94,2601
CAmount AmountFromValue(124,3557
UniValue ValueFromAmount(136,3985
uint256 ParseHashV(146,4299
uint256 ParseHashO(159,4811
vector<unsigned char> ParseHexV(163,4922
vector<unsigned char> ParseHexO(172,5223
std::string CRPCTable::help(help181,5412
UniValue help(237,7483
UniValue stop(257,8093
static const CRPCCommand vRPCCommands[vRPCCommands273,8563
CRPCTable::CRPCTable(CRPCTable281,9034
bool CRPCTable::appendCommand(appendCommand301,9533
bool StartRPC(315,9888
void InterruptRPC(323,10017
void StopRPC(330,10150
bool IsRPCRunning(337,10265
void SetRPCWarmupStatus(342,10314
void SetRPCWarmupFinished(348,10430
bool RPCIsInWarmup(355,10539
JSONRPCRequest::JSONRPCRequest(363,10693
bool JSONRPCRequest::PollAlive(PollAlive367,10779
void JSONRPCRequest::PollStart(PollStart371,10850
void JSONRPCRequest::PollPing(PollPing380,11153
void JSONRPCRequest::PollCancel(PollCancel386,11325
void JSONRPCRequest::PollReply(PollReply391,11412
void JSONRPCRequest::parse(parse402,11727
static UniValue JSONRPCExecOne(432,12830
std::string JSONRPCExecBatch(456,13452
static inline JSONRPCRequest transformNamedArguments(469,13837
UniValue CRPCTable::execute(execute507,15428
std::vector<std::string> CRPCTable::listCommands(listCommands540,16280
    typedef std::map<std::string, const CRPCCommand*> commandMap;543,16381
std::string HelpExampleCli(551,16656
std::string HelpExampleRpc(556,16803
void RPCSetTimerInterfaceIfUnset(562,17122
void RPCSetTimerInterface(568,17243
void RPCUnsetTimerInterface(573,17328
void RPCRunLater(579,17451
int RPCSerializationFlags(588,17919
CRPCTable tableRPC;596,18110

src/netmessagemaker.h,192
#define BITCOIN_NETMESSAGEMAKER_H7,273
class CNetMsgMaker12,349
    CNetMsgMaker(15,378
    CSerializedNetMsg Make(18,469
    CSerializedNetMsg Make(27,790
    const int nVersion;33,957

src/memusage.h,1677
#define BITCOIN_MEMUSAGE_H6,222
struct stl_tree_node65,2341
    int color;68,2373
    void* parent;69,2388
    void* left;70,2406
    void* right;71,2422
    X x;72,2439
struct stl_shared_counter75,2452
    void* class_type;79,2611
    size_t use_count;80,2633
    size_t weak_count;81,2655
static inline size_t DynamicUsage(85,2703
template<unsigned int N,90,2817
template<unsigned int N, typename X,90,2817
template<unsigned int N, typename X, typename S,90,2817
static inline size_t DynamicUsage(91,2878
template<typename X,96,2995
static inline size_t DynamicUsage(97,3028
template<typename X,102,3153
static inline size_t IncrementalDynamicUsage(103,3186
template<typename X,108,3311
template<typename X, typename Y,108,3311
static inline size_t DynamicUsage(109,3356
template<typename X,114,3505
template<typename X, typename Y,114,3505
static inline size_t IncrementalDynamicUsage(115,3550
template<typename X,122,3754
static inline size_t DynamicUsage(123,3787
template<typename X,128,3937
static inline size_t IncrementalDynamicUsage(129,3970
static inline size_t DynamicUsage(135,4141
static inline size_t DynamicUsage(141,4273
struct boost_unordered_node 152,4699
    void* ptr;155,4750
template<typename X,158,4769
static inline size_t DynamicUsage(159,4802
template<typename X,164,4994
template<typename X, typename Y,164,4994
static inline size_t DynamicUsage(165,5039
struct unordered_node 172,5293
    void* ptr;175,5341
template<typename Xstd,178,5360
static inline size_t DynamicUsage(179,5396
template<typename Xstd,184,5586
template<typename Xstd, typename Y,184,5586
static inline size_t DynamicUsage(185,5634

src/chainparamsbase.cpp,775
const std::string CBaseChainParams::MAIN 13,328
const std::string CBaseChainParams::TESTNET 14,379
const std::string CBaseChainParams::REGTEST 15,433
void AppendParamsHelpMessages(17,491
class CBaseMainParams 30,1002
    CBaseMainParams(33,1060
static CBaseMainParams mainParams;39,1152
class CBaseTestNetParams 44,1212
    CBaseTestNetParams(47,1273
static CBaseTestNetParams testNetParams;53,1375
class CBaseRegTestParams 58,1443
    CBaseRegTestParams(61,1504
static CBaseRegTestParams regTestParams;67,1606
static CBaseChainParams* pCurrentBaseParams 69,1648
const CBaseChainParams& BaseParams(71,1698
CBaseChainParams& BaseParams(77,1804
void SelectBaseParams(89,2186
std::string ChainNameFromCommandLine(94,2284
bool AreBaseParamsConfigured(108,2699

src/key.h,937
#define BITCOIN_KEY_H7,261
typedef std::vector<unsigned char,32,802
typedef std::vector<unsigned char, secure_allocator<unsigned char> > CPrivKey;32,802
class CKey35,918
    bool fValid;40,1101
    bool fCompressed;43,1207
    std::vector<std::vector46,1259
    std::vector<unsigned char, secure_allocator<unsigned char> > keydata;46,1259
    CKey(53,1510
    ~CKey(60,1738
    friend bool operator==(operator==64,1763
    void Set(73,2078
    unsigned int size(87,2528
    const unsigned char* begin(88,2600
    const unsigned char* end(89,2666
    bool IsValid(92,2789
    bool IsCompressed(95,2928
struct CExtKey 143,4746
    unsigned char nDepth;144,4763
    unsigned char vchFingerprint[vchFingerprint145,4789
    unsigned int nChild;146,4826
    ChainCode chaincode;147,4851
    CKey key;148,4876
    friend bool operator==(operator==150,4891
    void Serialize(165,5521
    void Unserialize(174,5797

src/addrdb.h,827
#define BITCOIN_ADDRDB_H7,264
typedef enum BanReason19,436
    BanReasonUnknown 21,461
    BanReasonNodeMisbehaving 22,496
    BanReasonManuallyAdded 23,531
} BanReason;24,565
class CBanEntry26,579
    static const int CURRENT_VERSION=29,605
    int nVersion;30,645
    int64_t nCreateTime;31,663
    int64_t nBanUntil;32,688
    uint8_t banReason;33,711
    CBanEntry(35,735
    CBanEntry(40,783
    ADD_SERIALIZE_METHODS;46,889
    template <typename Stream,48,917
    inline void SerializationOp(49,968
    void SetNull(56,1169
    std::string banReasonToString(64,1334
typedef std::map<CSubNet,CSubNet77,1624
typedef std::map<CSubNet, CBanEntry> banmap_t;77,1624
class CAddrDB80,1727
    boost::filesystem::path pathAddr;83,1752
class CBanDB92,1991
    boost::filesystem::path pathBanlist;95,2015

src/threadinterrupt.cpp,303
CThreadInterrupt::operator bool(operator bool8,269
void CThreadInterrupt::reset(reset13,363
void CThreadInterrupt::operator()(operator()18,449
bool CThreadInterrupt::sleep_for(sleep_for27,626
bool CThreadInterrupt::sleep_for(sleep_for33,846
bool CThreadInterrupt::sleep_for(sleep_for38,1002

src/ecoc/ecoc.h,44
#define ECOC_H6,172
namespace ecoc 11,232

src/ecoc/ecoc.cpp,226
namespace ecoc8,201
int getMultisigners(10,218
int getPoSReward(21,513
uint64_t getActualSupply(45,1129
void ecocLog(74,2192
void ecocLogNL(81,2302
void ecocLogNL(88,2412
void ecocLog(95,2496
void ecocLogFun(102,2580

src/crypto/sha1.cpp,456
namespace sha115,345
void inline Round(18,389
uint32_t inline f1(24,585
uint32_t inline f2(25,670
uint32_t inline f3(26,747
uint32_t inline left(28,839
void inline Initialize(31,937
const uint32_t k1 40,1103
const uint32_t k2 41,1137
const uint32_t k3 42,1171
const uint32_t k4 43,1205
void Transform(46,1307
CSHA1::CSHA1(149,7542
CSHA1& CSHA1::Write(Write154,7598
void CSHA1::Finalize(Finalize180,8335
CSHA1& CSHA1::Reset(Reset194,8737

src/crypto/hmac_sha256.cpp,92
CHMAC_SHA256::CHMAC_SHA256(CHMAC_SHA2569,244
void CHMAC_SHA256::Finalize(Finalize29,736

src/crypto/common.h,428
#define BITCOIN_CRYPTO_COMMON_H6,222
uint16_t static inline ReadLE16(17,387
uint32_t static inline ReadLE32(24,520
uint64_t static inline ReadLE64(31,653
void static inline WriteLE16(38,786
void static inline WriteLE32(44,912
void static inline WriteLE64(50,1038
uint32_t static inline ReadBE32(56,1164
uint64_t static inline ReadBE64(63,1297
void static inline WriteBE32(70,1430
void static inline WriteBE64(76,1556

src/crypto/ripemd160.cpp,694
namespace ripemd16015,355
uint32_t inline f1(17,377
uint32_t inline f2(18,454
uint32_t inline f3(19,540
uint32_t inline f4(20,620
uint32_t inline f5(21,706
void inline Initialize(24,823
uint32_t inline rol(33,989
void inline Round(35,1068
void inline R11(41,1251
void inline R21(42,1396
void inline R31(43,1552
void inline R41(44,1708
void inline R51(45,1864
void inline R12(47,2021
void inline R22(48,2177
void inline R32(49,2333
void inline R42(50,2489
void inline R52(51,2645
void Transform(54,2863
CRIPEMD160::CRIPEMD160(242,9658
CRIPEMD160& CRIPEMD160::Write(Write247,9729
void CRIPEMD160::Finalize(Finalize273,10486
CRIPEMD160& CRIPEMD160::Reset(Reset287,10893

src/crypto/sha1.h,185
#define BITCOIN_CRYPTO_SHA1_H6,225
class CSHA112,329
    uint32_t s[s15,352
    unsigned char buf[buf16,371
    uint64_t bytes;17,398
    static const size_t OUTPUT_SIZE 20,427

src/crypto/aes.cpp,1288
AES128Encrypt::AES128Encrypt(AES128Encrypt15,324
AES128Encrypt::~AES128Encrypt(~AES128Encrypt20,415
void AES128Encrypt::Encrypt(Encrypt25,486
AES128Decrypt::AES128Decrypt(AES128Decrypt30,642
AES128Decrypt::~AES128Decrypt(~AES128Decrypt35,733
void AES128Decrypt::Decrypt(Decrypt40,804
AES256Encrypt::AES256Encrypt(AES256Encrypt45,960
AES256Encrypt::~AES256Encrypt(~AES256Encrypt50,1051
void AES256Encrypt::Encrypt(Encrypt55,1122
AES256Decrypt::AES256Decrypt(AES256Decrypt60,1278
AES256Decrypt::~AES256Decrypt(~AES256Decrypt65,1369
void AES256Decrypt::Decrypt(Decrypt70,1440
static int CBCEncrypt(77,1619
static int CBCDecrypt(113,2763
AES256CBCEncrypt::AES256CBCEncrypt(154,4082
int AES256CBCEncrypt::Encrypt(Encrypt160,4280
AES256CBCEncrypt::~AES256CBCEncrypt(~AES256CBCEncrypt165,4432
AES256CBCDecrypt::AES256CBCDecrypt(170,4506
int AES256CBCDecrypt::Decrypt(Decrypt177,4705
AES256CBCDecrypt::~AES256CBCDecrypt(~AES256CBCDecrypt182,4857
AES128CBCEncrypt::AES128CBCEncrypt(187,4931
AES128CBCEncrypt::~AES128CBCEncrypt(~AES128CBCEncrypt193,5129
int AES128CBCEncrypt::Encrypt(Encrypt198,5206
AES128CBCDecrypt::AES128CBCDecrypt(203,5358
AES128CBCDecrypt::~AES128CBCDecrypt(~AES128CBCDecrypt209,5556
int AES128CBCDecrypt::Decrypt(Decrypt214,5633

src/crypto/sha256.cpp,434
namespace sha25615,349
uint32_t inline Ch(17,368
uint32_t inline Maj(18,453
uint32_t inline Sigma0(19,545
uint32_t inline Sigma1(20,655
uint32_t inline sigma0(21,764
uint32_t inline sigma1(22,863
void inline Round(25,994
void inline Initialize(34,1301
void Transform(47,1613
CSHA256::CSHA256(136,7271
CSHA256& CSHA256::Write(Write141,7333
void CSHA256::Finalize(Finalize167,8078
CSHA256& CSHA256::Reset(Reset184,8578

src/crypto/aes.h,897
#define BITCOIN_CRYPTO_AES_H8,291
static const int AES_BLOCKSIZE 14,369
static const int AES128_KEYSIZE 15,406
static const int AES256_KEYSIZE 16,444
class AES128Encrypt19,523
    AES128_ctx ctx;22,554
class AES128Decrypt31,785
    AES128_ctx ctx;34,816
class AES256Encrypt43,1048
    AES256_ctx ctx;46,1079
class AES256Decrypt55,1310
    AES256_ctx ctx;58,1341
class AES256CBCEncrypt66,1533
    const AES256Encrypt enc;74,1797
    const bool pad;75,1826
    unsigned char iv[iv76,1846
class AES256CBCDecrypt79,1887
    const AES256Decrypt dec;87,2151
    const bool pad;88,2180
    unsigned char iv[iv89,2200
class AES128CBCEncrypt92,2241
    const AES128Encrypt enc;100,2505
    const bool pad;101,2534
    unsigned char iv[iv102,2554
class AES128CBCDecrypt105,2595
    const AES128Decrypt dec;113,2859
    const bool pad;114,2888
    unsigned char iv[iv115,2908

src/crypto/chacha20.h,95
#define BITCOIN_CRYPTO_CHACHA20_H6,224
class ChaCha2012,334
    uint32_t input[input15,360

src/crypto/hmac_sha256.h,197
#define BITCOIN_CRYPTO_HMAC_SHA256_H6,227
class CHMAC_SHA25614,374
    CSHA256 outer;17,404
    CSHA256 inner;18,423
    static const size_t OUTPUT_SIZE 21,451
    CHMAC_SHA256& Write(24,553

src/crypto/sha512.cpp,436
namespace sha51215,349
uint64_t inline Ch(17,368
uint64_t inline Maj(18,453
uint64_t inline Sigma0(19,545
uint64_t inline Sigma1(20,656
uint64_t inline sigma0(21,767
uint64_t inline sigma1(22,865
void inline Round(25,994
void inline Initialize(34,1301
void Transform(47,1686
CSHA512::CSHA512(154,9582
CSHA512& CSHA512::Write(Write159,9644
void CSHA512::Finalize(Finalize185,10397
CSHA512& CSHA512::Reset(Reset202,10916

src/crypto/hmac_sha512.cpp,92
CHMAC_SHA512::CHMAC_SHA512(CHMAC_SHA5129,244
void CHMAC_SHA512::Finalize(Finalize29,743

src/crypto/ctaes/ctaes.h,225
#define _CTAES_H_ 8,380
    uint16_t slice[slice14,459
} AES_state;15,482
    AES_state rk[rk18,513
} AES128_ctx;19,535
    AES_state rk[rk22,567
} AES192_ctx;23,589
    AES_state rk[rk26,621
} AES256_ctx;27,643

src/crypto/sha512.h,189
#define BITCOIN_CRYPTO_SHA512_H6,227
class CSHA51212,336
    uint64_t s[s15,361
    unsigned char buf[buf16,380
    uint64_t bytes;17,408
    static const size_t OUTPUT_SIZE 20,437

src/crypto/sha256.h,189
#define BITCOIN_CRYPTO_SHA256_H6,227
class CSHA25612,336
    uint32_t s[s15,361
    unsigned char buf[buf16,380
    uint64_t bytes;17,407
    static const size_t OUTPUT_SIZE 20,436

src/crypto/ripemd160.h,195
#define BITCOIN_CRYPTO_RIPEMD160_H6,230
class CRIPEMD16012,345
    uint32_t s[s15,373
    unsigned char buf[buf16,392
    uint64_t bytes;17,419
    static const size_t OUTPUT_SIZE 20,448

src/crypto/hmac_sha512.h,197
#define BITCOIN_CRYPTO_HMAC_SHA512_H6,227
class CHMAC_SHA51214,374
    CSHA512 outer;17,404
    CSHA512 inner;18,423
    static const size_t OUTPUT_SIZE 21,451
    CHMAC_SHA512& Write(24,553

src/crypto/chacha20.cpp,386
constexpr static inline uint32_t rotl32(13,379
#define QUARTERROUND(15,478
static const unsigned char sigma[sigma21,647
static const unsigned char tau[tau22,704
void ChaCha20::SetKey(SetKey24,760
ChaCha20::ChaCha20(ChaCha2052,1509
ChaCha20::ChaCha20(ChaCha2057,1572
void ChaCha20::SetIV(SetIV62,1658
void ChaCha20::Seek(Seek68,1743
void ChaCha20::Output(Output74,1830

src/indirectmap.h,1151
#define BITCOIN_INDIRECTMAP_H6,220
struct DereferencingComparator 9,270
struct DereferencingComparator { bool operator()(operator()9,270
class indirectmap 22,928
    typedef std::map<const K*K24,957
    typedef std::map<const K*, T,24,957
    typedef std::map<const K*, T, DereferencingComparator<const K*> > base;24,957
    base m;25,1033
    typedef typename base::iterator iterator;27,1053
    typedef typename base::const_iterator const_iterator;28,1099
    typedef typename base::size_type size_type;29,1157
    typedef typename base::value_type value_type;30,1205
    std::pair<std::pair33,1295
    std::pair<iterator, bool> insert(33,1295
    iterator find(36,1424
    const_iterator find(37,1501
    iterator lower_bound(38,1578
    const_iterator lower_bound(39,1662
    size_type erase(40,1746
    size_type count(41,1824
    bool empty(44,1922
    size_type size(45,1980
    size_type max_size(46,2037
    void clear(47,2098
    iterator begin(48,2149
    iterator end(49,2207
    const_iterator begin(50,2263
    const_iterator end(51,2321
    const_iterator cbegin(52,2377
    const_iterator cend(53,2436

src/net_processing.h,746
#define BITCOIN_NET_PROCESSING_H7,272
static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS 16,487
static const int64_t ORPHAN_TX_EXPIRE_TIME 18,610
static const int64_t ORPHAN_TX_EXPIRE_INTERVAL 20,742
static const unsigned int DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN 22,893
static const unsigned int DEFAULT_MAX_ORPHAN_BLOCKS 24,1002
static const unsigned int HEADER_LIMIT_MAX_SIZE=26,1135
static const unsigned int HEADER_LIMIT_MAX_AVERAGE=27,1207
static const unsigned int NODE_TOLERANCE=28,1262
class PeerLogicValidation 35,1508
    CConnman* connman;37,1575
struct CNodeStateStats 48,2068
    int nMisbehavior;49,2093
    int nSyncHeight;50,2115
    int nCommonHeight;51,2136
    std::vector<int> vHeightInFlight;52,2159

src/uint256.cpp,425
base_blob<BITS>::base_blob(base_blob14,361
std::string base_blob<BITS>::GetHex(GetHex21,542
std::string base_blob<BITS>::GetReverseHex(GetReverseHex30,827
void base_blob<BITS>::SetHex(SetHex42,1147
void base_blob<BITS>::SetHex(SetHex71,1815
void base_blob<BITS>::SetReverseHex(SetReverseHex77,1927
void base_blob<BITS>::SetReverseHex(SetReverseHex92,2262
std::string base_blob<BITS>::ToString(ToString98,2388

src/validationinterface.h,1557
#define BITCOIN_VALIDATIONINTERFACE_H7,277
class CValidationInterface 33,976
    virtual void UpdatedBlockTip(35,1016
    virtual void SyncTransaction(36,1136
    virtual void SetBestChain(37,1239
    virtual void UpdatedTransaction(38,1302
    virtual void Inventory(39,1362
    virtual void ResendWalletTransactions(40,1413
    virtual void BlockChecked(41,1501
    virtual void GetScriptForMining(42,1574
    virtual void ResetRequestCount(43,1650
    virtual void NewPoWValidBlock(44,1710
struct CMainSignals 50,2020
    boost::signals2::signal<void (const CBlockIndex *, const CBlockIndex *, bool fInitialDownload)> UpdatedBlockTip;52,2099
    static const int SYNC_TRANSACTION_NOT_IN_BLOCK 56,2434
    boost::signals2::signal<void (const CTransaction &, const CBlockIndex *pindex, int posInBlock)> SyncTransaction;63,2898
    boost::signals2::signal<void (const uint256 &)> UpdatedTransaction;65,3140
    boost::signals2::signal<void (const CBlockLocator &)> SetBestChain;67,3271
    boost::signals2::signal<void (const uint256 &)> Inventory;69,3424
    boost::signals2::signal<void (int64_t nBestBlockTime, CConnman* connman)> Broadcast;71,3539
    boost::signals2::signal<void (const CBlock&, const CValidationState&)> BlockChecked;73,3687
    boost::signals2::signal<void (boost::shared_ptr<CReserveScript>&)> ScriptForMining;75,3851
    boost::signals2::signal<void (const uint256 &)> BlockFound;77,4010
    boost::signals2::signal<void (const CBlockIndex *, const std::shared_ptr<const CBlock>&)> NewPoWValidBlock;81,4250

src/net_processing.cpp,5662
struct IteratorComparator46,1202
    bool operator()(operator()49,1255
struct COrphanTx 55,1345
    CTransactionRef tx;57,1441
    NodeId fromPeer;58,1465
    int64_t nTimeExpire;59,1486
struct COrphanBlock 65,1795
    uint256 hashBlock;66,1817
    uint256 hashPrev;67,1840
    std::pair<std::pair68,1862
    std::pair<COutPoint, unsigned int> stake;68,1862
    std::vector<unsigned char> vchBlock;69,1908
size_t nOrphanBlocksSize 74,2188
static size_t vExtraTxnForCompactIt 76,2219
static const uint64_t RANDOMIZER_ID_ADDRESS_RELAY 79,2358
    int nSyncStarted 84,2547
    std::map<std::map93,2870
    std::map<uint256, std::pair<NodeId, bool>> mapBlockSource;93,2870
    std::unique_ptr<CRollingBloomFilter> recentRejects;115,3897
    uint256 hashRecentRejectsChainTip;116,3953
    struct QueuedBlock 119,4097
        uint256 hash;120,4122
        const CBlockIndex* pindex;121,4144
        bool fValidatedHeaders;122,4224
        std::unique_ptr<PartiallyDownloadedBlock> partialBlock;123,4359
    std::map<std::map125,4476
    std::map<uint256, std::pair<NodeId, std::list<QueuedBlock>::iterator> > mapBlocksInFlight;125,4476
    std::list<NodeId> lNodesAnnouncingHeaderAndIDs;128,4649
    int nPreferredDownload 131,4756
    int nPeersWithValidatedDownloads 134,4853
    typedef std::map<uint256,uint256137,4940
    typedef std::map<uint256, CTransactionRef> MapRelay;137,4940
    MapRelay mapRelay;138,4997
    std::deque<std::deque140,5124
    std::deque<std::pair<int64_t, MapRelay::iterator>> vRelayExpiration;140,5124
struct CBlockReject 150,5358
    unsigned char chRejectCode;151,5380
    std::string strRejectReason;152,5412
    uint256 hashBlock;153,5445
  class CNodeHeaders164,5809
    std::map<std::map166,5834
    std::map<int,int> points;166,5834
    size_t maxSize;167,5864
    size_t maxAverage;168,5884
    CNodeHeaders(171,5918
    bool mayAddHeaders(178,6067
    bool memoryGuard(196,6408
    void addPoint(229,7341
struct CNodeState 246,7655
    const CService address;248,7702
    bool fCurrentlyConnected;250,7786
    int nMisbehavior;252,7870
    bool fShouldBan;254,7974
    const std::string name;256,8058
    std::vector<CBlockReject> rejects;258,8172
    const CBlockIndex *pindexBestKnownBlock;pindexBestKnownBlock260,8273
    uint256 hashLastUnknownBlock;262,8386
    const CBlockIndex *pindexLastCommonBlock;pindexLastCommonBlock264,8462
    const CBlockIndex *pindexBestHeaderSent;pindexBestHeaderSent266,8555
    int nUnconnectingHeaders;268,8671
    bool fSyncStarted;270,8771
    int64_t nStallingSince;272,8877
    std::list<QueuedBlock> vBlocksInFlight;273,8905
    int64_t nDownloadingSince;275,9060
    int nBlocksInFlight;276,9091
    int nBlocksInFlightValidHeaders;277,9116
    bool fPreferredDownload;279,9213
    bool fPreferHeaders;281,9331
    bool fPreferHeaderAndIDs;283,9449
    bool fProvidesHeaderAndIDs;289,9777
    bool fHaveWitness;291,9857
    bool fWantsCmpctWitness;293,9947
    bool fSupportsDesiredCmpctVersion;298,10186
  CNodeHeaders headers;300,10226
    CNodeState(302,10251
std::map<NodeId, CNodeState> mapNodeState;327,11104
CNodeState *State(State330,11169
void UpdatePreferredDownload(337,11359
void PushNodeVersion(347,11715
void InitializeNode(367,12803
void FinalizeNode(379,13253
bool ProcessAndCheckNewBlockHeaders(409,14181
bool MarkBlockAsReceived(425,15039
bool MarkBlockAsInFlight(450,16329
void ProcessBlockAvailability(482,17889
void UpdateBlockAvailability(497,18550
void MaybeSetPeerAsAnnouncingHeaderAndIDs(514,19225
bool CanDirectFetch(550,21062
bool PeerHasHeader(556,21256
const CBlockIndex* LastCommonAncestor(567,21693
void FindNextBlocksToDownload(586,22276
bool GetNodeStateStats(674,26869
void RegisterNodeSignals(689,27470
void UnregisterNodeSignals(697,27749
void AddToCompactExtraTransactions(710,28153
bool AddOrphanTx(721,28623
int static EraseOrphanTx(754,29971
void EraseOrphansFor(772,30586
unsigned int LimitOrphanTxSize(788,31140
void Misbehaving(825,32707
PeerLogicValidation::PeerLogicValidation(856,33534
void PeerLogicValidation::SyncTransaction(SyncTransaction861,33764
static CCriticalSection cs_most_recent_block;889,34884
static std::shared_ptr<const CBlock> most_recent_block;890,34930
static std::shared_ptr<const CBlockHeaderAndShortTxIDs> most_recent_compact_block;891,34986
static uint256 most_recent_block_hash;892,35069
void PeerLogicValidation::NewPoWValidBlock(NewPoWValidBlock894,35109
void PeerLogicValidation::UpdatedBlockTip(UpdatedBlockTip934,36924
void PeerLogicValidation::BlockChecked(BlockChecked965,38278
bool static AlreadyHave(1004,39863
static void RelayTransaction(1036,41101
static void RelayAddress(1045,41308
void static ProcessGetData(1081,42908
                            typedef std::pair<unsigned int, uint256> PairType;1178,48793
uint32_t GetFetchFlags(1258,53262
inline void static SendBlockTransactions(1266,53562
bool static ProcessMessage(1283,54358
static bool SendRejectsAndCheckIfBanned(2723,119133
bool ProcessMessages(2753,120247
class CompareInvMempoolOrder2873,124986
    CTxMemPool *mp;mp2875,125017
    CompareInvMempoolOrder(2877,125045
    bool operator()(operator()2882,125130
bool SendMessages(2890,125414
void PushGetBlocks(3386,151142
uint256 static GetOrphanRoot(3392,151429
uint256 WantedByOrphan(3408,151949
void static PruneOrphanBlocks(3417,152301
bool ProcessNetBlock(3445,153414
class CNetProcessingCleanup3575,159486
    CNetProcessingCleanup(3578,159524
    ~CNetProcessingCleanup(3579,159555
} instance_of_cnetprocessingcleanup;3587,159815

src/univalue/include/univalue.h,2419
#define __UNIVALUE_H__7,235
class UniValue 19,433
    enum VType 21,458
    enum VType { VNULL,21,458
    enum VType { VNULL, VOBJ,21,458
    enum VType { VNULL, VOBJ, VARR,21,458
    enum VType { VNULL, VOBJ, VARR, VSTR,21,458
    enum VType { VNULL, VOBJ, VARR, VSTR, VNUM,21,458
    enum VType { VNULL, VOBJ, VARR, VSTR, VNUM, VBOOL,21,458
    UniValue(23,517
    UniValue(24,549
    UniValue(28,688
    UniValue(31,746
    UniValue(34,803
    UniValue(37,858
    UniValue(40,911
    UniValue(43,969
    UniValue(46,1037
    ~UniValue(50,1124
    bool setInt(59,1316
    enum VType getType(65,1492
    const std::string& getValStr(66,1539
    bool empty(67,1596
    size_t size(69,1653
    bool getBool(71,1704
    bool exists(75,1950
    bool isNull(77,2029
    bool isTrue(78,2080
    bool isFalse(79,2147
    bool isBool(80,2215
    bool isStr(81,2266
    bool isNum(82,2315
    bool isArray(83,2364
    bool isObject(84,2415
    bool push_back(87,2509
    bool push_back(91,2632
    bool pushKV(98,2853
    bool pushKV(102,2999
    bool pushKV(106,3131
    bool pushKV(110,3260
    bool pushKV(114,3390
    bool pushKV(118,3524
    bool read(128,3837
    UniValue::VType typ;133,3933
    std::string val;134,3958
    std::vector<std::string> keys;135,4038
    std::vector<UniValue> values;136,4073
    enum VType type(155,4801
    bool push_back(156,4851
static inline std::pair<std::string,UniValue> Pair(166,5180
static inline std::pair<std::string,UniValue> Pair(173,5362
static inline std::pair<std::string,UniValue> Pair(180,5548
static inline std::pair<std::string,UniValue> Pair(187,5731
static inline std::pair<std::string,UniValue> Pair(194,5913
static inline std::pair<std::string,UniValue> Pair(201,6088
static inline std::pair<std::string,UniValue> Pair(208,6262
static inline std::pair<std::string,UniValue> Pair(215,6439
static inline std::pair<std::string,UniValue> Pair(221,6600
enum jtokentype 226,6733
    JTOK_ERR 227,6751
    JTOK_NONE 228,6777
    JTOK_OBJ_OPEN,229,6835
    JTOK_OBJ_CLOSE,230,6854
    JTOK_ARR_OPEN,231,6874
    JTOK_ARR_CLOSE,232,6893
    JTOK_COLON,233,6913
    JTOK_COMMA,234,6929
    JTOK_KW_NULL,235,6945
    JTOK_KW_TRUE,236,6963
    JTOK_KW_FALSE,237,6981
    JTOK_NUMBER,238,7000
    JTOK_STRING,239,7017
static inline bool jsonTokenIsValue(246,7226
static inline bool json_isspace(263,7504

src/univalue/test/unitester.cpp,308
#define ARRAY_SIZE(17,399
static bool test_failed 22,515
#define d_assert(24,549
#define f_assert(25,663
static std::string rtrim(27,770
static void runtest(33,875
static void runtest_file(57,1518
static const char *filenames[filenames81,2063
void unescape_unicode_test(131,3547
int main 153,4287

src/univalue/univalue-config.h,604
#define HAVE_DLFCN_H 5,208
#define HAVE_INTTYPES_H 8,292
#define HAVE_MEMORY_H 11,377
#define HAVE_STDINT_H 14,460
#define HAVE_STDLIB_H 17,543
#define HAVE_STRINGS_H 20,627
#define HAVE_STRING_H 23,711
#define HAVE_SYS_STAT_H 26,796
#define HAVE_SYS_TYPES_H 29,884
#define HAVE_UNISTD_H 32,970
#define LT_OBJDIR 35,1073
#define PACKAGE 38,1123
#define PACKAGE_BUGREPORT 41,1230
#define PACKAGE_NAME 44,1342
#define PACKAGE_STRING 47,1434
#define PACKAGE_TARNAME 50,1534
#define PACKAGE_URL 53,1618
#define PACKAGE_VERSION 56,1687
#define STDC_HEADERS 59,1775
#define VERSION 62,1831

src/univalue/lib/univalue_utffilter.h,375
#define UNIVALUE_UTFFILTER_H5,211
class JSONUTF8StringFilter13,385
    JSONUTF8StringFilter(16,422
    void push_back(21,606
    void push_back_u(49,1722
    bool finalize(74,2910
    std::string &str;str81,3036
    bool is_valid;82,3058
    unsigned int codepoint;84,3113
    int state;85,3141
    unsigned int surpair;97,3733
    void append_codepoint(99,3810

src/univalue/lib/univalue_read.cpp,387
static bool json_isdigit(13,304
static const char *hatoui(hatoui19,433
enum jtokentype getJsonToken(45,996
enum expect_bits 237,5926
    EXP_OBJ_NAME 238,5945
    EXP_COLON 239,5975
    EXP_ARR_VALUE 240,6002
    EXP_VALUE 241,6033
    EXP_NOT_VALUE 242,6060
#define expect(245,6095
#define setExpect(246,6142
#define clearExpect(247,6191
bool UniValue::read(read249,6244

src/univalue/lib/univalue_escapes.h,91
#define BITCOIN_UNIVALUE_UNIVALUE_ESCAPES_H3,92
static const char *escapes[escapes4,136

src/univalue/lib/univalue.cpp,1408
static bool ParsePrechecks(19,405
bool ParseInt32(30,781
bool ParseInt64(46,1449
bool ParseDouble(61,2061
const UniValue NullUniValue;78,2489
void UniValue::clear(clear80,2519
bool UniValue::setNull(setNull88,2619
bool UniValue::setBool(setBool94,2679
static bool validNumStr(103,2798
bool UniValue::setNumStr(setNumStr111,2994
bool UniValue::setInt(setInt122,3157
bool UniValue::setInt(setInt131,3274
bool UniValue::setFloat(setFloat140,3390
bool UniValue::setStr(setStr151,3568
bool UniValue::setArray(setArray159,3677
bool UniValue::setObject(setObject166,3754
bool UniValue::push_back(push_back173,3832
bool UniValue::push_backV(push_backV182,3973
bool UniValue::pushKV(pushKV192,4157
bool UniValue::pushKVs(pushKVs202,4344
int UniValue::findKey(findKey215,4618
bool UniValue::checkObject(checkObject225,4806
const char *uvTypeName(uvTypeName262,5640
const UniValue& find_value(277,5996
const std::vector<std::string>& UniValue::getKeys(getKeys286,6225
const std::vector<UniValue>& UniValue::getValues(getValues293,6403
bool UniValue::get_bool(get_bool300,6606
const std::string& UniValue::get_str(get_str307,6764
int UniValue::get_int(get_int314,6935
int64_t UniValue::get_int64(get_int64324,7214
double UniValue::get_real(get_real334,7499
const UniValue& UniValue::get_obj(get_obj344,7779
const UniValue& UniValue::get_array(get_array351,7942

src/univalue/lib/univalue_write.cpp,196
static string json_escape(13,302
string UniValue::write(write31,643
static void indentStr(65,1328
void UniValue::writeArray(writeArray70,1466
void UniValue::writeObject(writeObject94,2091

src/addrdb.cpp,234
CBanDB::CBanDB(CBanDB19,468
bool CBanDB::Write(Write24,538
bool CBanDB::Read(Read62,1859
CAddrDB::CAddrDB(CAddrDB116,3674
bool CAddrDB::Write(Write121,3741
bool CAddrDB::Read(Read159,5038
bool CAddrDB::Read(Read197,6305

src/config/bitcoin-config.h,2672
#define BITCOIN_CONFIG_H6,196
#define CLIENT_VERSION_BUILD 12,340
#define CLIENT_VERSION_IS_RELEASE 15,397
#define CLIENT_VERSION_MAJOR 18,457
#define CLIENT_VERSION_MINOR 21,509
#define CLIENT_VERSION_REVISION 24,562
#define COPYRIGHT_HOLDERS 27,645
#define COPYRIGHT_HOLDERS_FINAL 30,718
#define COPYRIGHT_HOLDERS_SUBSTITUTION 33,835
#define COPYRIGHT_YEAR 36,912
#define ENABLE_WALLET 39,986
#define ENABLE_ZMQ 42,1053
#define HAVE_BOOST 48,1201
#define HAVE_BOOST_CHRONO 51,1281
#define HAVE_BOOST_FILESYSTEM 54,1372
#define HAVE_BOOST_PROGRAM_OPTIONS 57,1472
#define HAVE_BOOST_RANDOM 60,1568
#define HAVE_BOOST_SYSTEM 63,1655
#define HAVE_BOOST_THREAD 66,1742
#define HAVE_BOOST_UNIT_TEST_FRAMEWORK 69,1842
#define HAVE_BYTESWAP_H 72,1947
#define HAVE_CONSENSUS_LIB 75,2035
#define HAVE_CXX11 78,2122
#define HAVE_DECL_BE16TOH 82,2230
#define HAVE_DECL_BE32TOH 86,2345
#define HAVE_DECL_BE64TOH 90,2460
#define HAVE_DECL_BSWAP_16 94,2576
#define HAVE_DECL_BSWAP_32 98,2693
#define HAVE_DECL_BSWAP_64 102,2810
#define HAVE_DECL_DAEMON 106,2925
#define HAVE_DECL_EVP_MD_CTX_NEW 110,3046
#define HAVE_DECL_HTOBE16 114,3168
#define HAVE_DECL_HTOBE32 118,3283
#define HAVE_DECL_HTOBE64 122,3398
#define HAVE_DECL_HTOLE16 126,3513
#define HAVE_DECL_HTOLE32 130,3628
#define HAVE_DECL_HTOLE64 134,3743
#define HAVE_DECL_LE16TOH 138,3858
#define HAVE_DECL_LE32TOH 142,3973
#define HAVE_DECL_LE64TOH 146,4088
#define HAVE_DECL_STRERROR_R 150,4206
#define HAVE_DECL_STRNLEN 154,4324
#define HAVE_DLFCN_H 157,4410
#define HAVE_ENDIAN_H 160,4492
#define HAVE_FUNC_ATTRIBUTE_VISIBILITY 169,4819
#define HAVE_INTTYPES_H 172,4921
#define HAVE_MEMORY_H 244,7134
#define HAVE_MSG_NOSIGNAL 259,7663
#define HAVE_PTHREAD 262,7759
#define HAVE_PTHREAD_PRIO_INHERIT 265,7816
#define HAVE_STDINT_H 268,7911
#define HAVE_STDIO_H 271,7993
#define HAVE_STDLIB_H 274,8075
#define HAVE_STRERROR_R 277,8157
#define HAVE_STRINGS_H 280,8243
#define HAVE_STRING_H 283,8327
#define HAVE_SYS_PRCTL_H 289,8507
#define HAVE_SYS_SELECT_H 292,8597
#define HAVE_SYS_STAT_H 295,8686
#define HAVE_SYS_TYPES_H 298,8774
#define HAVE_UNISTD_H 301,8860
#define HAVE_VISIBILITY_ATTRIBUTE 304,8940
#define HAVE_WORKING_BOOST_SLEEP_FOR 310,9112
#define LT_OBJDIR 313,9230
#define PACKAGE_BUGREPORT 316,9337
#define PACKAGE_NAME 319,9458
#define PACKAGE_STRING 322,9555
#define PACKAGE_TARNAME 325,9660
#define PACKAGE_URL 328,9740
#define PACKAGE_VERSION 331,9825
#define STDC_HEADERS 350,10392
#define STRERROR_R_CHAR_P 353,10464
#define USE_DBUS 356,10544
#  define WORDS_BIGENDIAN 369,10971
# define _DARWIN_USE_64_BIT_INODE 379,11170

src/keystore.cpp,571
bool CKeyStore::AddKey(AddKey14,348
bool CBasicKeyStore::GetPubKey(GetPubKey18,440
bool CBasicKeyStore::AddKeyPubKey(AddKeyPubKey34,866
bool CBasicKeyStore::AddCScript(AddCScript41,1020
bool CBasicKeyStore::HaveCScript(HaveCScript51,1355
bool CBasicKeyStore::GetCScript(GetCScript57,1484
static bool ExtractPubKey(69,1780
bool CBasicKeyStore::AddWatchOnly(AddWatchOnly85,2316
bool CBasicKeyStore::RemoveWatchOnly(RemoveWatchOnly95,2551
bool CBasicKeyStore::HaveWatchOnly(HaveWatchOnly105,2785
bool CBasicKeyStore::HaveWatchOnly(HaveWatchOnly111,2916

src/amount.h,733
#define BITCOIN_AMOUNT_H7,264
typedef int64_t CAmount;15,397
static const CAmount COIN 17,423
static const CAmount CENT 18,462
static const CAmount MAX_MONEY 23,597
inline bool MoneyRange(24,660
class CFeeRate29,815
    CAmount nSatoshisPerK;32,841
    CFeeRate(35,953
    explicit CFeeRate(36,991
    CFeeRate(39,1235
    CAmount GetFeePerK(47,1507
    friend bool operator<(48,1563
    friend bool operator>(49,1673
    friend bool operator==(operator==50,1783
    friend bool operator<=(operator<=51,1895
    friend bool operator>=(operator>=52,2007
    CFeeRate& operator+=(operator+=53,2119
    ADD_SERIALIZE_METHODS;56,2250
    template <typename Stream,58,2278
    inline void SerializationOp(59,2329

src/policy/policy.h,1122
#define BITCOIN_POLICY_POLICY_H7,271
static const unsigned int DEFAULT_BLOCK_MAX_SIZE 19,569
static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE 21,731
static const unsigned int DEFAULT_BLOCK_MAX_WEIGHT 23,897
static const unsigned int DEFAULT_BLOCK_MIN_TX_FEE 25,1116
static const unsigned int MAX_STANDARD_TX_WEIGHT 27,1248
static const unsigned int MAX_P2SH_SIGOPS 29,1390
static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE 33,1624
static const unsigned int DEFAULT_INCREMENTAL_RELAY_FEE 35,1808
static const unsigned int DEFAULT_BYTES_PER_SIGOP 37,1907
static const unsigned int MAX_STANDARD_P2WSH_STACK_ITEMS 39,2039
static const unsigned int MAX_STANDARD_P2WSH_STACK_ITEM_SIZE 41,2181
static const unsigned int MAX_STANDARD_P2WSH_SCRIPT_SIZE 43,2300
static const unsigned int DUST_RELAY_TX_FEE 49,2720
static const unsigned int MIN_TX_GAS 53,2850
static const unsigned int BLOCK_GAS_LIMIT 57,3002
static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS 64,3273
static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS 81,4656
static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS 84,4875

src/policy/rbf.cpp,67
bool SignalsOptInRBF(7,215
RBFTransactionState IsRBFOptIn(17,446

src/policy/rbf.h,199
#define BITCOIN_POLICY_RBF_H6,219
enum RBFTransactionState 10,273
    RBF_TRANSACTIONSTATE_UNKNOWN,11,300
    RBF_TRANSACTIONSTATE_REPLACEABLE_BIP125,12,334
    RBF_TRANSACTIONSTATE_FINAL13,379

src/policy/fees.h,1650
#define BITCOIN_POLICYESTIMATOR_H6,272
class TxConfirmStats70,3519
    std::vector<double> buckets;74,3608
    std::map<std::map75,3713
    std::map<double, unsigned int> bucketMap;75,3713
    std::vector<double> txCtAvg;80,3967
    std::vector<int> curBlockTxCt;82,4082
    std::vector<std::vector<double> > confAvg;86,4263
    std::vector<std::vector<int> > curBlockConf;88,4411
    std::vector<double> avg;92,4608
    std::vector<double> curBlockVal;94,4719
    double decay;99,4939
    std::vector<std::vector<int> > unconfTxs;104,5149
    std::vector<int> oldUnconfTxs;106,5287
    unsigned int GetMaxConfirms(155,7684
static const unsigned int MAX_BLOCK_CONFIRMS 170,8096
static const double DEFAULT_DECAY 173,8216
static const double MIN_SUCCESS_PCT 176,8372
static const double SUFFICIENT_FEETXS 179,8513
static constexpr double MIN_FEERATE 182,8609
static const double MAX_FEERATE 183,8651
static const double INF_FEERATE 184,8690
static const double INF_PRIORITY 185,8735
static const double FEE_SPACING 191,9042
class CBlockPolicyEstimator198,9326
    CFeeRate minTrackedFee;247,11152
    unsigned int nBestSeenHeight;248,11238
    struct TxStatsInfo249,11272
        unsigned int blockHeight;251,11301
        unsigned int bucketIndex;252,11335
        TxStatsInfo(253,11369
    std::map<std::map257,11493
    std::map<uint256, TxStatsInfo> mapMemPoolTxs;257,11493
    TxConfirmStats feeStats;260,11617
    unsigned int trackedTxs;262,11647
    unsigned int untrackedTxs;263,11676
class FeeFilterRounder266,11711
    std::set<double> feeset;276,11965
    FastRandomContext insecure_rand;277,11994

src/policy/policy.cpp,315
bool IsStandard(34,1196
bool IsStandardTx(59,2060
bool AreInputsStandard(123,4253
bool IsWitnessStandard(157,5469
CFeeRate incrementalRelayFee 209,7768
CFeeRate dustRelayFee 210,7840
unsigned int nBytesPerSigOp 211,7893
int64_t GetVirtualTransactionSize(213,7949
int64_t GetVirtualTransactionSize(218,8136

src/policy/fees.cpp,1316
void TxConfirmStats::Initialize(Initialize18,455
void TxConfirmStats::ClearCurrent(ClearCurrent43,1314
void TxConfirmStats::Record(Record56,1728
void TxConfirmStats::UpdateMovingAverages(UpdateMovingAverages69,2130
double TxConfirmStats::EstimateMedianVal(EstimateMedianVal80,2514
void TxConfirmStats::Write(Write178,7143
void TxConfirmStats::Read(Read187,7309
unsigned int TxConfirmStats::NewTx(NewTx250,9922
void TxConfirmStats::removeTx(removeTx258,10197
bool CBlockPolicyEstimator::removeTx(removeTx291,11754
CBlockPolicyEstimator::CBlockPolicyEstimator(303,12116
void CBlockPolicyEstimator::processTransaction(processTransaction316,12733
bool CBlockPolicyEstimator::processBlockTx(processBlockTx349,14001
void CBlockPolicyEstimator::processBlock(processBlock374,15012
CFeeRate CBlockPolicyEstimator::estimateFee(estimateFee414,16722
CFeeRate CBlockPolicyEstimator::estimateSmartFee(estimateSmartFee429,17239
double CBlockPolicyEstimator::estimatePriority(estimatePriority460,18404
double CBlockPolicyEstimator::estimateSmartPriority(estimateSmartPriority465,18487
void CBlockPolicyEstimator::Write(Write478,18928
void CBlockPolicyEstimator::Read(Read484,19048
FeeFilterRounder::FeeFilterRounder(FeeFilterRounder496,19360
CAmount FeeFilterRounder::round(round505,19696

src/qt/contractresult.h,248
#define CONTRACTRESULT_H2,26
namespace Ui 8,105
class ContractResult 12,149
    enum ContractTxType{ContractTxType17,223
        CreateResult,18,249
        SendToResult,19,272
        CallResult20,295
    Ui::ContractResult *ui;ui27,527

src/qt/moc_sendcoinsentry.cpp,900
struct qt_meta_stringdata_SendCoinsEntry_t 22,767
    QByteArrayData data[data23,812
    char stringdata0[stringdata024,841
#define QT_MOC_LITERAL(26,871
static const qt_meta_stringdata_SendCoinsEntry_t qt_meta_stringdata_SendCoinsEntry 31,1106
#undef QT_MOC_LITERAL56,2146
static const uint qt_meta_data_SendCoinsEntry[qt_meta_data_SendCoinsEntry58,2169
void SendCoinsEntry::qt_static_metacall(qt_static_metacall100,3333
QT_INIT_METAOBJECT const QMetaObject SendCoinsEntry::staticMetaObject 154,5455
const QMetaObject *SendCoinsEntry::metaObject(metaObject160,5689
void *SendCoinsEntry::qt_metacast(qt_metacast165,5845
int SendCoinsEntry::qt_metacall(qt_metacall173,6102
void SendCoinsEntry::removeEntry(removeEntry191,6599
void SendCoinsEntry::payAmountChanged(payAmountChanged198,6816
void SendCoinsEntry::subtractFeeFromAmountChanged(subtractFeeFromAmountChanged204,6937

src/qt/networkstyle.h,412
#define BITCOIN_QT_NETWORKSTYLE_H6,224
class NetworkStyle13,365
    const QString &getAppName(getAppName19,547
    const QIcon &getAppIcon(getAppIcon20,605
    const QIcon &getTrayAndWindowIcon(getTrayAndWindowIcon21,661
    const QString &getTitleAddText(getTitleAddText22,737
    QString appName;27,953
    QIcon appIcon;28,974
    QIcon trayAndWindowIcon;29,993
    QString titleAddText;30,1022

src/qt/paymentrequestplus.cpp,374
class SSLVerifyError 22,446
    SSLVerifyError(25,505
bool PaymentRequestPlus::parse(parse28,575
bool PaymentRequestPlus::SerializeToString(SerializeToString50,1335
bool PaymentRequestPlus::IsInitialized(IsInitialized55,1463
bool PaymentRequestPlus::getMerchant(getMerchant60,1558
QList<std::pair<CScript,CAmount> > PaymentRequestPlus::getPayTo(getPayTo206,7557

src/qt/titlebar.cpp,330
namespace TitleBar_NS 10,180
const int titleHeight 11,205
TitleBar::TitleBar(15,269
TitleBar::~TitleBar(~TitleBar29,712
void TitleBar::setModel(setModel34,759
void TitleBar::setTabBarInfo(setTabBarInfo44,1299
void TitleBar::setBalance(setBalance59,1593
void TitleBar::on_navigationResized(on_navigationResized76,2306

src/qt/moc_utilitydialog.cpp,1418
struct qt_meta_stringdata_HelpMessageDialog_t 22,764
    QByteArrayData data[data23,812
    char stringdata0[stringdata024,840
#define QT_MOC_LITERAL(26,869
static const qt_meta_stringdata_HelpMessageDialog_t qt_meta_stringdata_HelpMessageDialog 31,1107
#undef QT_MOC_LITERAL41,1405
static const uint qt_meta_data_HelpMessageDialog[qt_meta_data_HelpMessageDialog43,1428
void HelpMessageDialog::qt_static_metacall(qt_static_metacall65,1925
QT_INIT_METAOBJECT const QMetaObject HelpMessageDialog::staticMetaObject 78,2293
const QMetaObject *HelpMessageDialog::metaObject(metaObject84,2529
void *HelpMessageDialog::qt_metacast(qt_metacast89,2688
int HelpMessageDialog::qt_metacall(qt_metacall97,2944
struct qt_meta_stringdata_ShutdownWindow_t 113,3422
    QByteArrayData data[data114,3467
    char stringdata0[stringdata0115,3495
#define QT_MOC_LITERAL(117,3524
static const qt_meta_stringdata_ShutdownWindow_t qt_meta_stringdata_ShutdownWindow 122,3759
#undef QT_MOC_LITERAL129,3929
static const uint qt_meta_data_ShutdownWindow[qt_meta_data_ShutdownWindow131,3952
void ShutdownWindow::qt_static_metacall(qt_static_metacall147,4307
QT_INIT_METAOBJECT const QMetaObject ShutdownWindow::staticMetaObject 155,4480
const QMetaObject *ShutdownWindow::metaObject(metaObject161,4707
void *ShutdownWindow::qt_metacast(qt_metacast166,4863
int ShutdownWindow::qt_metacall(qt_metacall174,5113

src/qt/bitcoingui.h,3510
#define ECOC_QT_BITCOINGUI_H6,224
class BitcoinGUI 50,1130
    static const QString DEFAULT_WALLET;55,1192
    static const std::string DEFAULT_UIPLATFORM;56,1233
    bool enableWallet;75,2004
    ClientModel *clientModel;clientModel86,2304
    WalletFrame *walletFrame;walletFrame87,2334
    UnitDisplayStatusBarControl *unitDisplayControl;unitDisplayControl89,2365
    QLabel *labelWalletEncryptionIcon;labelWalletEncryptionIcon90,2418
    QLabel *labelWalletHDStatusIcon;labelWalletHDStatusIcon91,2457
    QLabel *connectionsControl;connectionsControl92,2494
    QLabel *labelBlocksIcon;labelBlocksIcon93,2526
    QLabel *progressBarLabel;progressBarLabel94,2555
    QLabel *labelStakingIcon;labelStakingIcon95,2585
    QProgressBar *progressBar;progressBar96,2615
    QProgressDialog *progressDialog;progressDialog97,2646
    QMenuBar *appMenuBar;appMenuBar99,2684
    TitleBar *appTitleBar;appTitleBar100,2710
    NavigationBar *appNavigationBar;appNavigationBar101,2737
    QAction *overviewAction;overviewAction102,2774
    QAction *historyAction;historyAction103,2803
    QAction *quitAction;quitAction104,2831
    QAction *sendCoinsAction;sendCoinsAction105,2856
    QAction *sendCoinsMenuAction;sendCoinsMenuAction106,2886
    QAction *usedSendingAddressesAction;usedSendingAddressesAction107,2920
    QAction *usedReceivingAddressesAction;usedReceivingAddressesAction108,2961
    QAction *signMessageAction;signMessageAction109,3004
    QAction *verifyMessageAction;verifyMessageAction110,3036
    QAction *aboutAction;aboutAction111,3070
    QAction *receiveCoinsAction;receiveCoinsAction112,3096
    QAction *receiveCoinsMenuAction;receiveCoinsMenuAction113,3129
    QAction *optionsAction;optionsAction114,3166
    QAction *toggleHideAction;toggleHideAction115,3194
    QAction *encryptWalletAction;encryptWalletAction116,3225
    QAction *backupWalletAction;backupWalletAction117,3259
    QAction *restoreWalletAction;restoreWalletAction118,3292
    QAction *changePassphraseAction;changePassphraseAction119,3326
    QAction *unlockWalletAction;unlockWalletAction120,3363
    QAction *lockWalletAction;lockWalletAction121,3396
    QAction *aboutQtAction;aboutQtAction122,3427
    QAction *openRPCConsoleAction;openRPCConsoleAction123,3455
    QAction *openAction;openAction124,3490
    QAction *showHelpMessageAction;showHelpMessageAction125,3515
    QAction* smartContractAction;126,3551
    QAction* createContractAction;127,3585
    QAction* sendToContractAction;128,3620
    QAction* callContractAction;129,3655
    QAction* ECRCTokenAction;130,3688
    QAction* sendTokenAction;131,3718
    QAction* receiveTokenAction;132,3748
    QAction* addTokenAction;133,3781
    QSystemTrayIcon *trayIcon;trayIcon135,3811
    QMenu *trayIconMenu;trayIconMenu136,3842
    Notificator *notificator;notificator137,3867
    RPCConsole *rpcConsole;rpcConsole138,3897
    HelpMessageDialog *helpMessageDialog;helpMessageDialog139,3925
    ModalOverlay *modalOverlay;modalOverlay140,3967
    EcocVersionChecker *ecocVersionChecker;ecocVersionChecker141,3999
    ModalOverlay *modalBackupOverlay;modalBackupOverlay142,4043
    int prevBlocks;145,4153
    int spinnerFrame;146,4173
    const PlatformStyle *platformStyle;platformStyle148,4196
    uint64_t nWeight;151,4277
class UnitDisplayStatusBarControl 299,9904
    OptionsModel *optionsModel;optionsModel313,10306
    QMenu* menu;314,10338

src/qt/winshutdownmonitor.h,79
#define BITCOIN_QT_WINSHUTDOWNMONITOR_H6,230
class WinShutdownMonitor 17,425

src/qt/tabbarinfo.cpp,505
TabBarInfo::TabBarInfo(5,72
bool TabBarInfo::addTab(addTab14,256
void TabBarInfo::removeTab(removeTab26,489
void TabBarInfo::setTabVisible(setTabVisible59,1203
void TabBarInfo::attach(attach68,1371
void TabBarInfo::detach(detach80,1660
void TabBarInfo::setCurrent(setCurrent95,1959
void TabBarInfo::clear(clear101,2046
void TabBarInfo::on_currentChanged(on_currentChanged121,2497
void TabBarInfo::on_closeButtonClick(on_closeButtonClick134,2792
void TabBarInfo::update(update157,3401

src/qt/csvmodelwriter.h,405
#define BITCOIN_QT_CSVMODELWRITER_H6,231
class CSVModelWriter 18,494
    explicit CSVModelWriter(23,556
    void setModel(25,632
    void addColumn(26,684
    bool write(31,863
    QString filename;34,891
    const QAbstractItemModel *model;model35,913
    struct Column37,951
        QString title;39,975
        int column;40,998
        int role;41,1018
    QList<Column> columns;43,1043

src/qt/contractabi.h,1428
#define CONTRACTABI_H2,23
#define paternUint 9,157
#define paternInt 10,193
#define paternAddress 11,236
#define paternBool 12,282
#define paternHex 13,319
#define paternBytes 14,358
#define paternBytes32 15,389
class ParameterType22,609
    enum Type28,704
        abi_none,30,726
        abi_bytes,31,745
        abi_string,32,765
        abi_uint,33,786
        abi_int,34,805
        abi_address,35,823
        abi_bool,36,845
        abi_fixed,37,864
        abi_ufixed,38,884
        abi_function39,905
    Type m_type;115,2801
    int m_whole;116,2819
    int m_decimal;117,2837
    int m_length;118,2857
    bool m_isList;119,2876
    bool m_valid;120,2896
    std::string m_canonical;121,2915
class ParameterABI124,2951
    enum ErrorType127,2983
        Ok 129,3010
        UnsupportedABI,130,3027
        EncodingError,131,3052
        DecodingError132,3076
    std::string name;142,3596
    std::string type;143,3649
    bool indexed;144,3712
    mutable ParameterType m_decodeType;155,4253
    mutable ErrorType m_lastError;156,4294
class FunctionABI159,4336
    std::string name;180,5235
    std::string type;181,5287
    std::vector<ParameterABI> inputs;182,5378
    std::vector<ParameterABI> outputs;183,5446
    bool payable;184,5559
    bool constant;185,5632
    bool anonymous;186,5717
class ContractABI198,6215
    std::vector<FunctionABI> functions;205,6334

src/qt/tokentransactionrecord.h,1058
#define ECOC_QT_TOKENTRANSACTIONRECORD_H2,41
class TokenTransactionStatus15,333
    TokenTransactionStatus(18,372
    enum Status 23,511
        Confirmed,24,529
        Offline,26,688
        Unconfirmed,27,753
        Confirming 28,817
    bool countsForBalance;32,987
    std::string sortKey;34,1050
    Status status;38,1118
    qint64 depth;39,1137
    int cur_num_blocks;44,1252
class TokenTransactionRecord50,1432
    enum Type53,1471
        Other,55,1491
        SendToAddress,56,1506
        SendToOther,57,1529
        RecvWithAddress,58,1550
        RecvFromOther,59,1575
        SendToSelf60,1598
    static const int RecommendedNumConfirmations 64,1705
    TokenTransactionRecord(66,1761
    uint256 hash;77,2129
    uint256 txid;78,2147
    qint64 time;79,2165
    Type type;80,2182
    std::string address;81,2197
    dev::s256 debit;82,2222
    dev::s256 credit;83,2243
    std::string tokenSymbol;84,2265
    uint8_t decimals;85,2294
    std::string label;86,2316
    TokenTransactionStatus status;93,2504

src/qt/qvalidatedtextedit.h,212
#define QVALIDATEDTEXTEDIT_H2,30
class QValidatedTextEdit 7,105
    bool valid;28,592
    const QValidator *checkValidator;checkValidator29,609
    bool emptyIsValid;30,648
    bool isValidManually;31,672

src/qt/moc_coincontroltreewidget.cpp,756
struct qt_meta_stringdata_CoinControlTreeWidget_t 22,788
    QByteArrayData data[data23,840
    char stringdata0[stringdata024,868
#define QT_MOC_LITERAL(26,897
static const qt_meta_stringdata_CoinControlTreeWidget_t qt_meta_stringdata_CoinControlTreeWidget 31,1139
#undef QT_MOC_LITERAL38,1337
static const uint qt_meta_data_CoinControlTreeWidget[qt_meta_data_CoinControlTreeWidget40,1360
void CoinControlTreeWidget::qt_static_metacall(qt_static_metacall56,1722
QT_INIT_METAOBJECT const QMetaObject CoinControlTreeWidget::staticMetaObject 64,1902
const QMetaObject *CoinControlTreeWidget::metaObject(metaObject70,2154
void *CoinControlTreeWidget::qt_metacast(qt_metacast75,2317
int CoinControlTreeWidget::qt_metacall(qt_metacall83,2585

src/qt/sendtocontract.h,490
#define SENDTOCONTRACT_H2,26
namespace Ui 15,254
class SendToContract 19,298
    Ui::SendToContract *ui;ui53,1211
    WalletModel* m_model;54,1240
    ClientModel* m_clientModel;55,1267
    ContractTableModel* m_contractModel;56,1300
    ExecRPCCommand* m_execRPCCommand;57,1342
    ABIFunctionField* m_ABIFunctionField;58,1381
    ContractABI* m_contractABI;59,1424
    TabBarInfo* m_tabInfo;60,1457
    const PlatformStyle* m_platformStyle;61,1485
    int m_results;62,1528

src/qt/moc_sendtokenpage.cpp,678
struct qt_meta_stringdata_SendTokenPage_t 22,764
    QByteArrayData data[data23,808
    char stringdata0[stringdata024,836
#define QT_MOC_LITERAL(26,865
static const qt_meta_stringdata_SendTokenPage_t qt_meta_stringdata_SendTokenPage 31,1099
#undef QT_MOC_LITERAL45,1613
static const uint qt_meta_data_SendTokenPage[qt_meta_data_SendTokenPage47,1636
void SendTokenPage::qt_static_metacall(qt_static_metacall75,2336
QT_INIT_METAOBJECT const QMetaObject SendTokenPage::staticMetaObject 91,2845
const QMetaObject *SendTokenPage::metaObject(metaObject97,3069
void *SendTokenPage::qt_metacast(qt_metacast102,3224
int SendTokenPage::qt_metacall(qt_metacall110,3472

src/qt/tokentransactionview.h,1202
#define TOKENVIEW_H2,21
class TokenTransactionView 21,312
    enum DateEnum30,551
        All,32,577
        Today,33,591
        ThisWeek,34,607
        ThisMonth,35,626
        LastMonth,36,646
        ThisYear,37,666
        Range38,685
    enum ColumnWidths 41,710
        STATUS_COLUMN_WIDTH 42,735
        DATE_COLUMN_WIDTH 43,770
        TYPE_COLUMN_WIDTH 44,804
        NAME_COLUMN_WIDTH 45,838
        AMOUNT_COLUMN_WIDTH 46,872
        AMOUNT_MINIMUM_COLUMN_WIDTH 47,908
        MINIMUM_COLUMN_WIDTH 48,952
    WalletModel *model;model52,1007
    TokenFilterProxy *tokenProxyModel;tokenProxyModel53,1032
    QTableView *tokenView;tokenView54,1072
    QComboBox *dateWidget;dateWidget56,1102
    QComboBox *typeWidget;typeWidget57,1130
    QComboBox *nameWidget;nameWidget58,1158
    QLineEdit *addressWidget;addressWidget59,1186
    QLineEdit *amountWidget;amountWidget60,1217
    QMenu *contextMenu;contextMenu62,1249
    QFrame *dateRangeWidget;dateRangeWidget64,1276
    QDateTimeEdit *dateFrom;dateFrom65,1306
    QDateTimeEdit *dateTo;dateTo66,1336
    GUIUtil::TableViewLastColumnResizingFixer *columnResizingFixer;columnResizingFixer70,1407

src/qt/moc_abifunctionfield.cpp,775
struct qt_meta_stringdata_ABIFunctionField_t 22,773
    QByteArrayData data[data23,820
    char stringdata0[stringdata024,848
#define QT_MOC_LITERAL(26,877
static const qt_meta_stringdata_ABIFunctionField_t qt_meta_stringdata_ABIFunctionField 31,1114
#undef QT_MOC_LITERAL47,1677
static const uint qt_meta_data_ABIFunctionField[qt_meta_data_ABIFunctionField49,1700
void ABIFunctionField::qt_static_metacall(qt_static_metacall85,2552
QT_INIT_METAOBJECT const QMetaObject ABIFunctionField::staticMetaObject 108,3315
const QMetaObject *ABIFunctionField::metaObject(metaObject114,3548
void *ABIFunctionField::qt_metacast(qt_metacast119,3706
int ABIFunctionField::qt_metacall(qt_metacall127,3960
void ABIFunctionField::functionChanged(functionChanged145,4450

src/qt/tokenfilterproxy.h,514
#define TOKENFILTERPROXY_H2,28
using namespace boost::multiprecision;10,223
class TokenFilterProxy 12,265
    static const QDateTime MIN_DATE;20,471
    static const QDateTime MAX_DATE;22,575
    static const quint32 ALL_TYPES 24,659
    static quint32 TYPE(26,711
    QDateTime dateFrom;47,1473
    QDateTime dateTo;48,1498
    QString addrPrefix;49,1521
    QString name;50,1546
    quint32 typeFilter;51,1565
    int256_t minAmount;52,1590
    int limitRows;53,1615
    bool showInactive;54,1635

src/qt/moc_abiparamsfield.cpp,686
struct qt_meta_stringdata_ABIParamsField_t 22,767
    QByteArrayData data[data23,812
    char stringdata0[stringdata024,840
#define QT_MOC_LITERAL(26,869
static const qt_meta_stringdata_ABIParamsField_t qt_meta_stringdata_ABIParamsField 31,1104
#undef QT_MOC_LITERAL38,1274
static const uint qt_meta_data_ABIParamsField[qt_meta_data_ABIParamsField40,1297
void ABIParamsField::qt_static_metacall(qt_static_metacall56,1652
QT_INIT_METAOBJECT const QMetaObject ABIParamsField::staticMetaObject 64,1825
const QMetaObject *ABIParamsField::metaObject(metaObject70,2052
void *ABIParamsField::qt_metacast(qt_metacast75,2208
int ABIParamsField::qt_metacall(qt_metacall83,2458

src/qt/peertablemodel.h,627
#define BITCOIN_QT_PEERTABLEMODEL_H6,231
struct CNodeCombinedStats 21,484
    CNodeStats nodeStats;22,512
    CNodeStateStats nodeStateStats;23,538
    bool fNodeStateStatsAvailable;24,574
class NodeLessThan27,613
    NodeLessThan(30,642
    int column;35,840
    Qt::SortOrder order;36,856
class PeerTableModel 43,1020
    enum ColumnIndex 55,1321
        NetNodeId 56,1344
        Address 57,1367
        Subversion 58,1388
        Ping 59,1412
    ClientModel *clientModel;clientModel77,1997
    QStringList columns;78,2027
    std::unique_ptr<PeerTablePriv> priv;79,2052
    QTimer *timer;timer80,2093

src/qt/bitcoinaddressvalidator.h,137
#define BITCOIN_QT_BITCOINADDRESSVALIDATOR_H6,240
class BitcoinAddressEntryValidator 13,408
class BitcoinAddressCheckValidator 25,682

src/qt/walletview.cpp,2023
WalletView::WalletView(39,1017
WalletView::~WalletView(~WalletView98,3651
void WalletView::setBitcoinGUI(setBitcoinGUI102,3682
void WalletView::setClientModel(setClientModel129,5011
void WalletView::setWalletModel(setWalletModel141,5420
void WalletView::processNewTransaction(processNewTransaction185,7324
void WalletView::processNewTokenTransaction(processNewTokenTransaction205,8370
void WalletView::gotoOverviewPage(gotoOverviewPage236,9824
void WalletView::gotoHistoryPage(gotoHistoryPage241,9901
void WalletView::gotoReceiveCoinsPage(gotoReceiveCoinsPage246,9981
void WalletView::gotoSendCoinsPage(gotoSendCoinsPage251,10066
void WalletView::gotoCreateContractPage(gotoCreateContractPage259,10224
void WalletView::gotoSendToContractPage(gotoSendToContractPage264,10313
void WalletView::gotoCallContractPage(gotoCallContractPage269,10402
void WalletView::gotoSendTokenPage(gotoSendTokenPage274,10487
void WalletView::gotoReceiveTokenPage(gotoReceiveTokenPage280,10609
void WalletView::gotoAddTokenPage(gotoAddTokenPage286,10737
void WalletView::gotoSignMessageTab(gotoSignMessageTab292,10857
void WalletView::gotoVerifyMessageTab(gotoVerifyMessageTab304,11297
bool WalletView::handlePaymentRequest(handlePaymentRequest316,11739
void WalletView::showOutOfSyncWarning(showOutOfSyncWarning321,11878
void WalletView::updateEncryptionStatus(updateEncryptionStatus326,11980
void WalletView::encryptWallet(encryptWallet331,12099
void WalletView::backupWallet(backupWallet342,12368
void WalletView::restoreWallet(restoreWallet361,12993
void WalletView::changePassphrase(changePassphrase368,13107
void WalletView::unlockWallet(unlockWallet375,13263
void WalletView::lockWallet(lockWallet390,13711
void WalletView::usedSendingAddresses(usedSendingAddresses398,13824
void WalletView::usedReceivingAddresses(usedReceivingAddresses408,14032
void WalletView::showProgress(showProgress418,14248
void WalletView::requestedSyncWarningInfo(requestedSyncWarningInfo441,14904

src/qt/abiparamitem.cpp,518
ABIParamItem::ABIParamItem(8,149
QString ABIParamItem::getValue(getValue46,1660
void ABIParamItem::setFixed(setFixed51,1735
int ABIParamItem::getPosition(getPosition57,1869
void ABIParamItem::setPosition(setPosition62,1940
void ABIParamItem::on_addItemClicked(on_addItemClicked67,2022
void ABIParamItem::on_removeItemClicked(on_removeItemClicked72,2117
bool ABIParamItem::getIsDeleted(getIsDeleted77,2214
void ABIParamItem::setIsDeleted(setIsDeleted82,2288
bool ABIParamItem::isValid(isValid94,2567

src/qt/utilitydialog.cpp,477
HelpMessageDialog::HelpMessageDialog(34,733
HelpMessageDialog::~HelpMessageDialog(~HelpMessageDialog135,5590
void HelpMessageDialog::printToConsole(printToConsole140,5650
void HelpMessageDialog::showOrPrint(showOrPrint146,5838
void HelpMessageDialog::on_okButton_accepted(on_okButton_accepted157,6102
ShutdownWindow::ShutdownWindow(164,6193
QWidget *ShutdownWindow::showShutdownWindow(showShutdownWindow174,6546
void ShutdownWindow::closeEvent(closeEvent191,7170

src/qt/intro.h,276
#define BITCOIN_QT_INTRO_H6,222
static const bool DEFAULT_CHOOSE_DATADIR 12,307
namespace Ui 16,383
class Intro 24,565
    Ui::Intro *ui;ui65,1634
    QThread *thread;thread66,1653
    QMutex mutex;67,1674
    bool signalled;68,1692
    QString pathToCheck;69,1712

src/qt/transactionview.cpp,1421
TransactionView::TransactionView(39,960
void TransactionView::setModel(setModel173,7509
void TransactionView::chooseDate(chooseDate230,10395
void TransactionView::chooseType(chooseType278,11965
void TransactionView::chooseWatchonly(chooseWatchonly286,12145
void TransactionView::changedPrefix(changedPrefix294,12381
void TransactionView::changedAmount(changedAmount301,12545
void TransactionView::exportClicked(exportClicked316,12924
void TransactionView::contextualMenu(contextualMenu350,14442
void TransactionView::abandonTx(abandonTx368,15051
void TransactionView::copyAddress(copyAddress386,15674
void TransactionView::copyLabel(copyLabel391,15799
void TransactionView::copyAmount(copyAmount396,15920
void TransactionView::copyTxID(copyTxID401,16052
void TransactionView::copyTxHex(copyTxHex406,16171
void TransactionView::copyTxPlainText(copyTxPlainText411,16292
void TransactionView::editLabel(editLabel416,16425
void TransactionView::showDetails(showDetails462,18083
void TransactionView::openThirdPartyTxUrl(openThirdPartyTxUrl475,18458
QWidget *TransactionView::createDateRangeWidget(createDateRangeWidget484,18854
void TransactionView::dateRangeChanged(dateRangeChanged520,20068
void TransactionView::resizeEvent(resizeEvent531,20439
bool TransactionView::eventFilter(eventFilter538,20718
void TransactionView::updateWatchOnlyColumn(updateWatchOnlyColumn553,21202

src/qt/tokentransactionrecord.cpp,303
QList<TokenTransactionRecord> TokenTransactionRecord::decomposeTransaction(decomposeTransaction16,285
void TokenTransactionRecord::updateStatus(updateStatus77,1869
bool TokenTransactionRecord::statusUpdateNeeded(statusUpdateNeeded111,2811
QString TokenTransactionRecord::getTxID(getTxID117,2953

src/qt/contracttablemodel.cpp,1688
struct ContractTableEntry13,174
    QString label;15,202
    QString address;16,221
    QString abi;17,242
    ContractTableEntry(19,260
    ContractTableEntry(20,288
struct ContractTableEntryLessThan24,440
    bool operator()(operator()26,476
    bool operator()(operator()30,610
    bool operator()(operator()34,725
class ContractTablePriv41,870
    CWallet *wallet;wallet44,904
    QList<ContractTableEntry> cachedContractTable;45,925
    ContractTableModel *parent;parent46,976
    ContractTablePriv(48,1009
    void refreshContractTable(51,1124
    void updateEntry(71,2049
    int size(117,3951
    ContractTableEntry *index(index122,4022
ContractTableModel::ContractTableModel(135,4255
ContractTableModel::~ContractTableModel(~ContractTableModel143,4577
int ContractTableModel::rowCount(rowCount148,4641
int ContractTableModel::columnCount(columnCount154,4759
QVariant ContractTableModel::data(data160,4884
bool ContractTableModel::setData(setData199,5778
QVariant ContractTableModel::headerData(headerData258,7968
QModelIndex ContractTableModel::index(index270,8265
void ContractTableModel::updateEntry(updateEntry284,8568
QString ContractTableModel::addRow(addRow291,8797
bool ContractTableModel::removeRows(removeRows312,9359
QString ContractTableModel::labelForAddress(labelForAddress330,9862
QString ContractTableModel::abiForAddress(abiForAddress346,10381
int ContractTableModel::lookupAddress(lookupAddress360,10822
void ContractTableModel::resetEditStatus(resetEditStatus374,11144
void ContractTableModel::emitDataChanged(emitDataChanged379,11213
void ContractTableModel::updateEditStatus(updateEditStatus384,11369

src/qt/bitcoinaddressvalidator.cpp,284
BitcoinAddressEntryValidator::BitcoinAddressEntryValidator(18,485
QValidator::State BitcoinAddressEntryValidator::validate(validate23,591
BitcoinAddressCheckValidator::BitcoinAddressCheckValidator(83,2198
QValidator::State BitcoinAddressCheckValidator::validate(validate88,2304

src/qt/execrpccommand.h,249
#define EXECRPCCOMMAND_H2,26
class ExecRPCCommand 12,217
    QString m_command;44,1552
    QStringList m_mandatoryParams;45,1576
    QStringList m_optionalParams;46,1612
    QMap<QMap47,1647
    QMap<QString, QString> m_translations;47,1647

src/qt/walletframe.cpp,1979
WalletFrame::WalletFrame(17,382
WalletFrame::~WalletFrame(~WalletFrame34,977
void WalletFrame::setClientModel(setClientModel38,1010
bool WalletFrame::addWallet(addWallet43,1113
bool WalletFrame::setCurrentWallet(setCurrentWallet69,2115
bool WalletFrame::removeWallet(removeWallet80,2403
void WalletFrame::removeAllWallets(removeAllWallets90,2640
bool WalletFrame::handlePaymentRequest(handlePaymentRequest98,2885
void WalletFrame::showOutOfSyncWarning(showOutOfSyncWarning107,3116
void WalletFrame::gotoOverviewPage(gotoOverviewPage115,3373
void WalletFrame::gotoHistoryPage(gotoHistoryPage122,3583
void WalletFrame::gotoSendTokenPage(gotoSendTokenPage129,3791
void WalletFrame::gotoReceiveTokenPage(gotoReceiveTokenPage136,4003
void WalletFrame::gotoAddTokenPage(gotoAddTokenPage143,4221
void WalletFrame::gotoReceiveCoinsPage(gotoReceiveCoinsPage150,4431
void WalletFrame::gotoSendCoinsPage(gotoSendCoinsPage157,4649
void WalletFrame::gotoCreateContractPage(gotoCreateContractPage164,4877
void WalletFrame::gotoSendToContractPage(gotoSendToContractPage171,5099
void WalletFrame::gotoCallContractPage(gotoCallContractPage178,5321
void WalletFrame::gotoSignMessageTab(gotoSignMessageTab185,5539
void WalletFrame::gotoVerifyMessageTab(gotoVerifyMessageTab192,5711
void WalletFrame::encryptWallet(encryptWallet199,5887
void WalletFrame::backupWallet(backupWallet206,6050
void WalletFrame::restoreWallet(restoreWallet213,6194
void WalletFrame::changePassphrase(changePassphrase220,6340
void WalletFrame::unlockWallet(unlockWallet227,6492
void WalletFrame::lockWallet(lockWallet237,6793
void WalletFrame::usedSendingAddresses(usedSendingAddresses247,6987
void WalletFrame::usedReceivingAddresses(usedReceivingAddresses254,7147
WalletView *WalletFrame::currentWalletView(currentWalletView261,7311
void WalletFrame::outOfSyncWarningClicked(outOfSyncWarningClicked266,7429
void WalletFrame::pageChanged(pageChanged271,7517

src/qt/splashscreen.h,232
#define BITCOIN_QT_SPLASHSCREEN_H6,229
class SplashScreen 19,635
    QPixmap pixmap;46,1405
    QString curMessage;47,1425
    QColor curColor;48,1449
    int curAlignment;49,1470
    QList<CWallet*> connectedWallets;51,1493

src/qt/trafficgraphwidget.h,347
#define BITCOIN_QT_TRAFFICGRAPHWIDGET_H6,235
class TrafficGraphWidget 18,404
    QTimer *timer;timer38,824
    float fMax;39,843
    int nMins;40,859
    QQueue<float> vSamplesIn;41,874
    QQueue<float> vSamplesOut;42,904
    quint64 nLastBytesIn;43,935
    quint64 nLastBytesOut;44,961
    ClientModel *clientModel;clientModel45,988

src/qt/moc_rpcconsole.cpp,761
struct qt_meta_stringdata_RPCConsole_t 22,755
    QByteArrayData data[data23,796
    char stringdata0[stringdata024,825
#define QT_MOC_LITERAL(26,855
static const qt_meta_stringdata_RPCConsole_t qt_meta_stringdata_RPCConsole 31,1086
#undef QT_MOC_LITERAL123,5211
static const uint qt_meta_data_RPCConsole[qt_meta_data_RPCConsole125,5234
void RPCConsole::qt_static_metacall(qt_static_metacall217,8794
QT_INIT_METAOBJECT const QMetaObject RPCConsole::staticMetaObject 290,12930
const QMetaObject *RPCConsole::metaObject(metaObject296,13145
void *RPCConsole::qt_metacast(qt_metacast301,13297
int RPCConsole::qt_metacall(qt_metacall309,13539
void RPCConsole::stopExecutor(stopExecutor327,14029
void RPCConsole::cmdRequest(cmdRequest333,14142

src/qt/moc_optionsmodel.cpp,1053
struct qt_meta_stringdata_OptionsModel_t 22,761
    QByteArrayData data[data23,804
    char stringdata0[stringdata024,832
#define QT_MOC_LITERAL(26,862
static const qt_meta_stringdata_OptionsModel_t qt_meta_stringdata_OptionsModel 31,1095
#undef QT_MOC_LITERAL49,1807
static const uint qt_meta_data_OptionsModel[qt_meta_data_OptionsModel51,1830
void OptionsModel::qt_static_metacall(qt_static_metacall81,2710
QT_INIT_METAOBJECT const QMetaObject OptionsModel::staticMetaObject 134,4801
const QMetaObject *OptionsModel::metaObject(metaObject140,5033
void *OptionsModel::qt_metacast(qt_metacast145,5187
int OptionsModel::qt_metacall(qt_metacall153,5444
void OptionsModel::displayUnitChanged(displayUnitChanged171,5941
void OptionsModel::coinControlFeaturesChanged(coinControlFeaturesChanged178,6150
void OptionsModel::hideTrayIconChanged(hideTrayIconChanged185,6368
void OptionsModel::reserveBalanceChanged(reserveBalanceChanged192,6579
void OptionsModel::zeroBalanceAddressTokenChanged(zeroBalanceAddressTokenChanged199,6795

src/qt/moc_sendcoinsdialog.cpp,1549
struct qt_meta_stringdata_SendCoinsDialog_t 22,770
    QByteArrayData data[data23,816
    char stringdata0[stringdata024,845
#define QT_MOC_LITERAL(26,875
static const qt_meta_stringdata_SendCoinsDialog_t qt_meta_stringdata_SendCoinsDialog 31,1111
#undef QT_MOC_LITERAL100,4240
static const uint qt_meta_data_SendCoinsDialog[qt_meta_data_SendCoinsDialog102,4263
void SendCoinsDialog::qt_static_metacall(qt_static_metacall180,6970
QT_INIT_METAOBJECT const QMetaObject SendCoinsDialog::staticMetaObject 228,9785
const QMetaObject *SendCoinsDialog::metaObject(metaObject234,10015
void *SendCoinsDialog::qt_metacast(qt_metacast239,10172
int SendCoinsDialog::qt_metacall(qt_metacall247,10424
void SendCoinsDialog::message(message265,10917
struct qt_meta_stringdata_SendConfirmationDialog_t 270,11268
    QByteArrayData data[data271,11321
    char stringdata0[stringdata0272,11349
#define QT_MOC_LITERAL(274,11378
static const qt_meta_stringdata_SendConfirmationDialog_t qt_meta_stringdata_SendConfirmationDialog 279,11621
#undef QT_MOC_LITERAL290,11981
static const uint qt_meta_data_SendConfirmationDialog[qt_meta_data_SendConfirmationDialog292,12004
void SendConfirmationDialog::qt_static_metacall(qt_static_metacall316,12575
QT_INIT_METAOBJECT const QMetaObject SendConfirmationDialog::staticMetaObject 330,12993
const QMetaObject *SendConfirmationDialog::metaObject(metaObject336,13248
void *SendConfirmationDialog::qt_metacast(qt_metacast341,13412
int SendConfirmationDialog::qt_metacall(qt_metacall349,13682

src/qt/guiconstants.h,800
#define BITCOIN_QT_GUICONSTANTS_H6,229
static const int MODEL_UPDATE_DELAY 9,305
static const int MAX_PASSPHRASE_SIZE 12,405
static const int STATUSBAR_ICONSIZE 15,499
static const bool DEFAULT_SPLASHSCREEN 17,542
#define COLOR_UNCONFIRMED 20,640
#define COLOR_NEGATIVE 22,730
#define COLOR_BAREADDRESS 24,830
#define COLOR_TX_STATUS_OPENUNTILDATE 26,943
#define COLOR_TX_STATUS_OFFLINE 28,1058
#define COLOR_TX_STATUS_DANGER 30,1188
#define COLOR_BLACK 32,1304
#define CONFIRM_ICONS 35,1383
static const int TOOLTIP_WRAP_THRESHOLD 40,1524
static const int MAX_URI_LENGTH 43,1604
#define QR_IMAGE_SIZE 46,1697
#define SPINNER_FRAMES 49,1768
#define QAPP_ORG_NAME 51,1795
#define QAPP_ORG_DOMAIN 52,1824
#define QAPP_APP_NAME_DEFAULT 53,1858
#define QAPP_APP_NAME_TESTNET 54,1898

src/qt/moc_addressfield.cpp,737
struct qt_meta_stringdata_AddressField_t 22,761
    QByteArrayData data[data23,804
    char stringdata0[stringdata024,832
#define QT_MOC_LITERAL(26,862
static const qt_meta_stringdata_AddressField_t qt_meta_stringdata_AddressField 31,1095
#undef QT_MOC_LITERAL48,1736
static const uint qt_meta_data_AddressField[qt_meta_data_AddressField50,1759
void AddressField::qt_static_metacall(qt_static_metacall94,2794
QT_INIT_METAOBJECT const QMetaObject AddressField::staticMetaObject 138,4367
const QMetaObject *AddressField::metaObject(metaObject144,4590
void *AddressField::qt_metacast(qt_metacast149,4744
int AddressField::qt_metacall(qt_metacall157,4992
void AddressField::addressTypeChanged(addressTypeChanged192,6164

src/qt/bitcoingui.cpp,4685
const std::string BitcoinGUI::DEFAULT_UIPLATFORM 75,1584
const QString BitcoinGUI::DEFAULT_WALLET 87,1878
bool showBackupOverlay 90,1991
BitcoinGUI::BitcoinGUI(92,2024
BitcoinGUI::~BitcoinGUI(~BitcoinGUI316,10109
void BitcoinGUI::createActions(createActions332,10494
void BitcoinGUI::createMenuBar(createMenuBar508,22657
void BitcoinGUI::createToolBars(createToolBars556,24094
void BitcoinGUI::createTitleBars(createTitleBars584,25182
void BitcoinGUI::setClientModel(setClientModel595,25517
bool BitcoinGUI::addWallet(addWallet659,28189
bool BitcoinGUI::setCurrentWallet(setCurrentWallet672,28564
void BitcoinGUI::removeAllWallets(removeAllWallets679,28715
void BitcoinGUI::setWalletActionsEnabled(setWalletActionsEnabled688,28890
void BitcoinGUI::createTrayIcon(createTrayIcon707,29634
void BitcoinGUI::createTrayIconMenu(createTrayIconMenu720,30075
void BitcoinGUI::trayIconActivated(trayIconActivated757,31389
void BitcoinGUI::optionsClicked(optionsClicked767,31632
void BitcoinGUI::aboutClicked(aboutClicked777,31853
void BitcoinGUI::showDebugWindow(showDebugWindow786,31983
void BitcoinGUI::showDebugWindowActivateConsole(showDebugWindowActivateConsole794,32136
void BitcoinGUI::showHelpMessageClicked(showHelpMessageClicked800,32268
void BitcoinGUI::openClicked(openClicked806,32367
void BitcoinGUI::gotoOverviewPage(gotoOverviewPage815,32505
void BitcoinGUI::gotoHistoryPage(gotoHistoryPage821,32638
void BitcoinGUI::gotoSendTokenPage(gotoSendTokenPage827,32768
void BitcoinGUI::gotoReceiveTokenPage(gotoReceiveTokenPage834,32943
void BitcoinGUI::gotoAddTokenPage(gotoAddTokenPage841,33127
void BitcoinGUI::gotoReceiveCoinsPage(gotoReceiveCoinsPage848,33299
void BitcoinGUI::gotoSendCoinsPage(gotoSendCoinsPage854,33444
void BitcoinGUI::gotoCreateContractPage(gotoCreateContractPage860,33596
void BitcoinGUI::gotoSendToContractPage(gotoSendToContractPage865,33703
void BitcoinGUI::gotoCallContractPage(gotoCallContractPage870,33810
void BitcoinGUI::gotoSignMessageTab(gotoSignMessageTab875,33913
void BitcoinGUI::gotoVerifyMessageTab(gotoVerifyMessageTab880,34028
void BitcoinGUI::updateNetworkState(updateNetworkState886,34171
void BitcoinGUI::setNumConnections(setNumConnections915,35235
void BitcoinGUI::setNetworkActive(setNetworkActive920,35312
void BitcoinGUI::updateHeadersSyncProgressLabel(updateHeadersSyncProgressLabel925,35397
void BitcoinGUI::setNumBlocks(setNumBlocks934,35882
void BitcoinGUI::message(message1051,39832
void BitcoinGUI::changeEvent(changeEvent1110,41715
void BitcoinGUI::closeEvent(closeEvent1129,42306
void BitcoinGUI::showEvent(showEvent1152,42862
void BitcoinGUI::incomingTransaction(incomingTransaction1161,43111
void BitcoinGUI::incomingTokenTransaction(incomingTokenTransaction1175,43795
void BitcoinGUI::dragEnterEvent(dragEnterEvent1189,44406
void BitcoinGUI::dropEvent(dropEvent1196,44567
bool BitcoinGUI::eventFilter(eventFilter1208,44832
bool BitcoinGUI::handlePaymentRequest(handlePaymentRequest1221,45268
void BitcoinGUI::setHDStatus(setHDStatus1233,45557
void BitcoinGUI::setEncryptionStatus(setEncryptionStatus1242,46015
void BitcoinGUI::showNormalIfMinimized(showNormalIfMinimized1286,48006
void BitcoinGUI::toggleHidden(toggleHidden1311,48481
void BitcoinGUI::updateWeight(updateWeight1316,48551
void BitcoinGUI::updateStakingIcon(updateStakingIcon1335,48877
void BitcoinGUI::detectShutdown(detectShutdown1389,50929
void BitcoinGUI::showProgress(showProgress1399,51086
void BitcoinGUI::setTrayIconVisible(setTrayIconVisible1422,51742
void BitcoinGUI::showModalOverlay(showModalOverlay1430,51879
void BitcoinGUI::showModalBackupOverlay(showModalBackupOverlay1436,52048
void BitcoinGUI::setTabBarInfo(setTabBarInfo1442,52171
static bool ThreadSafeMessageBox(1450,52296
void BitcoinGUI::subscribeToCoreSignals(subscribeToCoreSignals1467,53183
void BitcoinGUI::unsubscribeFromCoreSignals(unsubscribeFromCoreSignals1474,53459
void BitcoinGUI::toggleNetworkActive(toggleNetworkActive1481,53750
void BitcoinGUI::addDockWindows(addDockWindows1488,53896
UnitDisplayStatusBarControl::UnitDisplayStatusBarControl(1500,54287
void UnitDisplayStatusBarControl::mousePressEvent(mousePressEvent1518,54920
void UnitDisplayStatusBarControl::createContextMenu(createContextMenu1524,55134
void UnitDisplayStatusBarControl::setOptionsModel(setOptionsModel1537,55616
void UnitDisplayStatusBarControl::updateDisplayUnit(updateDisplayUnit1552,56224
void UnitDisplayStatusBarControl::onDisplayUnitsClicked(onDisplayUnitsClicked1558,56415
void UnitDisplayStatusBarControl::onMenuSelection(onMenuSelection1565,56640

src/qt/transactiontablemodel.cpp,2784
static int column_alignments[column_alignments32,754
struct TxLessThan42,1178
    bool operator()(operator()44,1198
    bool operator()(operator()48,1324
    bool operator()(operator()52,1435
class TransactionTablePriv59,1576
    TransactionTablePriv(62,1613
    CWallet *wallet;wallet68,1752
    TransactionTableModel *parent;parent69,1773
    QList<TransactionRecord> cachedWallet;75,1944
    void refreshWallet(79,2039
    void updateWallet(98,2750
    int size(175,6217
    TransactionRecord *index(index180,6281
    QString describe(212,7428
    QString getTxHex(225,7833
TransactionTableModel::TransactionTableModel(238,8248
TransactionTableModel::~TransactionTableModel(~TransactionTableModel254,8945
void TransactionTableModel::updateAmountColumnTitle(updateAmountColumnTitle261,9172
void TransactionTableModel::updateTransaction(updateTransaction267,9399
void TransactionTableModel::updateConfirmations(updateConfirmations275,9625
int TransactionTableModel::rowCount(rowCount285,10054
int TransactionTableModel::columnCount(columnCount291,10175
QString TransactionTableModel::formatTxStatus(formatTxStatus297,10303
QString TransactionTableModel::formatTxDate(formatTxDate341,11913
QString TransactionTableModel::lookupAddress(lookupAddress353,12205
QString TransactionTableModel::formatTxType(formatTxType368,12660
QVariant TransactionTableModel::txAddressDecoration(txAddressDecoration392,13400
QString TransactionTableModel::formatTxToAddress(formatTxToAddress413,14379
QVariant TransactionTableModel::addressColor(addressColor439,15355
QString TransactionTableModel::formatTxAmount(formatTxAmount462,16080
QVariant TransactionTableModel::txStatusDecoration(txStatusDecoration475,16541
QVariant TransactionTableModel::txWatchonlyDecoration(txWatchonlyDecoration510,18296
QString TransactionTableModel::formatTooltip(formatTooltip518,18546
QVariant TransactionTableModel::data(data529,19007
QVariant TransactionTableModel::headerData(headerData668,23755
QModelIndex TransactionTableModel::index(index701,24887
void TransactionTableModel::updateDisplayUnit(updateDisplayUnit712,25167
struct TransactionNotification720,25472
    TransactionNotification(723,25513
    TransactionNotification(724,25546
    void invoke(727,25709
    uint256 hash;737,26185
    ChangeType status;738,26203
    bool showTransaction;739,26226
static bool fQueueNotifications 742,26256
static std::vector< TransactionNotification > vQueueNotifications;743,26297
static void NotifyTransactionChanged(745,26365
static void ShowProgress(763,27078
void TransactionTableModel::subscribeToCoreSignals(subscribeToCoreSignals784,27930
void TransactionTableModel::unsubscribeFromCoreSignals(unsubscribeFromCoreSignals791,28199

src/qt/forms/ui_debugwindow.h,6273
#define UI_DEBUGWINDOW_H10,390
class Ui_RPCConsole34,1022
    QVBoxLayout *verticalLayout_2;verticalLayout_237,1052
    QTabWidget *tabWidget;tabWidget38,1087
    QWidget *tab_info;tab_info39,1114
    QGridLayout *gridLayout;gridLayout40,1137
    QLabel *label_8;label_841,1166
    QLabel *clientVersion;clientVersion42,1187
    QLabel *label_7;label_743,1214
    QLabel *numberOfBlocks;numberOfBlocks44,1235
    QLabel *label_12;label_1245,1263
    QLabel *labelMempoolTitle;labelMempoolTitle46,1285
    QLabel *labelMemoryUsage;labelMemoryUsage47,1316
    QLabel *mempoolSize;mempoolSize48,1346
    QLabel *labelNumberOfTransactions;labelNumberOfTransactions49,1371
    QLabel *labelClientUserAgent;labelClientUserAgent50,1410
    QLabel *clientUserAgent;clientUserAgent51,1444
    QLabel *networkName;networkName52,1473
    QLabel *labelBlockChain;labelBlockChain53,1498
    QLabel *label_6;label_654,1527
    QLabel *labelNetwork;labelNetwork55,1548
    QLabel *labelLastBlockTime;labelLastBlockTime56,1574
    QLabel *labelGeneral;labelGeneral57,1606
    QLabel *dataDir;dataDir58,1632
    QLabel *label_3;label_359,1653
    QLabel *numberOfConnections;numberOfConnections60,1674
    QLabel *mempoolNumberTxs;mempoolNumberTxs61,1707
    QLabel *lastBlockTime;lastBlockTime62,1737
    QLabel *startupTime;startupTime63,1764
    QLabel *label_13;label_1364,1789
    QFrame *hLine4;hLine465,1811
    QLabel *berkeleyDBVersion;berkeleyDBVersion66,1831
    QFrame *hLine3;hLine367,1862
    QLabel *label_berkeleyDBVersion;label_berkeleyDBVersion68,1882
    QFrame *hLine2;hLine269,1919
    QFrame *hLine;hLine70,1939
    QSpacerItem *verticalSpacer_5;verticalSpacer_571,1958
    QSpacerItem *verticalSpacer_2;verticalSpacer_272,1993
    QSpacerItem *verticalSpacer_6;verticalSpacer_673,2028
    QSpacerItem *verticalSpacer;verticalSpacer74,2063
    QHBoxLayout *horizontalLayout_6;horizontalLayout_675,2096
    QSpacerItem *horizontalSpacer_2;horizontalSpacer_276,2133
    QLabel *labelDebugLogfile;labelDebugLogfile77,2170
    QPushButton *openDebugLogfileButton;openDebugLogfileButton78,2201
    QWidget *tab_console;tab_console79,2242
    QVBoxLayout *verticalLayout_3;verticalLayout_380,2268
    QHBoxLayout *horizontalLayout;horizontalLayout81,2303
    QSpacerItem *horizontalSpacer;horizontalSpacer82,2338
    QPushButton *fontSmallerButton;fontSmallerButton83,2373
    QFrame *vLine;vLine84,2409
    QPushButton *fontBiggerButton;fontBiggerButton85,2428
    QFrame *vLine2;vLine286,2463
    QPushButton *clearButton;clearButton87,2483
    QTextEdit *messagesWidget;messagesWidget88,2513
    QHBoxLayout *horizontalLayoutPrompt;horizontalLayoutPrompt89,2544
    QPushButton *promptIcon;promptIcon90,2585
    QLineEdit *lineEdit;lineEdit91,2614
    QWidget *tab_nettraffic;tab_nettraffic92,2639
    QHBoxLayout *horizontalLayout_3;horizontalLayout_393,2668
    QVBoxLayout *verticalLayout_4;verticalLayout_494,2705
    TrafficGraphWidget *trafficGraph;trafficGraph95,2740
    QHBoxLayout *horizontalLayout_2;horizontalLayout_296,2778
    QSlider *sldGraphRange;sldGraphRange97,2815
    QLabel *lblGraphRange;lblGraphRange98,2843
    QPushButton *btnClearTrafficGraph;btnClearTrafficGraph99,2870
    QVBoxLayout *verticalLayout;verticalLayout100,2909
    QGroupBox *groupBox;groupBox101,2942
    QVBoxLayout *verticalLayout_5;verticalLayout_5102,2967
    QHBoxLayout *horizontalLayout_4;horizontalLayout_4103,3002
    QFrame *line;line104,3039
    QLabel *label_16;label_16105,3057
    QLabel *lblBytesIn;lblBytesIn106,3079
    QHBoxLayout *horizontalLayout_5;horizontalLayout_5107,3103
    QFrame *line_2;line_2108,3140
    QLabel *label_17;label_17109,3160
    QLabel *lblBytesOut;lblBytesOut110,3182
    QSpacerItem *verticalSpacer_4;verticalSpacer_4111,3207
    QWidget *tab_peers;tab_peers112,3242
    QGridLayout *gridLayout_2;gridLayout_2113,3266
    QVBoxLayout *verticalLayout_101;verticalLayout_101114,3297
    QTableView *peerWidget;peerWidget115,3334
    QLabel *banHeading;banHeading116,3362
    QSpacerItem *verticalSpacer_7;verticalSpacer_7117,3386
    QTableView *banlistWidget;banlistWidget118,3421
    QLabel *peerHeading;peerHeading119,3452
    QWidget *detailWidget;detailWidget120,3477
    QGridLayout *gridLayout_3;gridLayout_3121,3504
    QLabel *label_30;label_30122,3535
    QLabel *peerWhitelisted;peerWhitelisted123,3557
    QLabel *label_23;label_23124,3586
    QLabel *peerDirection;peerDirection125,3608
    QLabel *label_21;label_21126,3635
    QLabel *peerVersion;peerVersion127,3657
    QLabel *label_28;label_28128,3682
    QLabel *peerSubversion;peerSubversion129,3704
    QLabel *label_4;label_4130,3732
    QLabel *peerServices;peerServices131,3753
    QLabel *label_29;label_29132,3779
    QLabel *peerHeight;peerHeight133,3801
    QLabel *label_27;label_27134,3825
    QLabel *peerSyncHeight;peerSyncHeight135,3847
    QLabel *label_25;label_25136,3875
    QLabel *peerCommonHeight;peerCommonHeight137,3897
    QLabel *label_24;label_24138,3927
    QLabel *peerBanScore;peerBanScore139,3949
    QLabel *label_22;label_22140,3975
    QLabel *peerConnTime;peerConnTime141,3997
    QLabel *label_15;label_15142,4023
    QLabel *peerLastSend;peerLastSend143,4045
    QLabel *label_19;label_19144,4071
    QLabel *peerLastRecv;peerLastRecv145,4093
    QLabel *label_18;label_18146,4119
    QLabel *peerBytesSent;peerBytesSent147,4141
    QLabel *label_20;label_20148,4168
    QLabel *peerBytesRecv;peerBytesRecv149,4190
    QLabel *label_26;label_26150,4217
    QLabel *peerPingTime;peerPingTime151,4239
    QLabel *peerPingWaitLabel;peerPingWaitLabel152,4265
    QLabel *peerPingWait;peerPingWait153,4296
    QLabel *peerMinPingLabel;peerMinPingLabel154,4322
    QLabel *peerMinPing;peerMinPing155,4352
    QLabel *label_timeoffset;label_timeoffset156,4377
    QLabel *timeoffset;timeoffset157,4407
    QSpacerItem *verticalSpacer_3;verticalSpacer_3158,4431
    void setupUi(160,4467
    void retranslateUi(995,41012
namespace Ui 1096,49191
    class RPCConsole:RPCConsole1097,49206

src/qt/forms/ui_createcontract.h,2504
#define UI_CREATECONTRACT_H10,396
class Ui_CreateContract32,977
    QVBoxLayout *verticalLayout_7;verticalLayout_735,1011
    QStackedWidget *stackedWidget;stackedWidget36,1046
    QWidget *createContractPage;createContractPage37,1081
    QVBoxLayout *verticalLayout_8;verticalLayout_838,1114
    QHBoxLayout *horizontalLayout;horizontalLayout39,1149
    QLabel *labelTitle;labelTitle40,1184
    QSpacerItem *horizontalSpacer_4;horizontalSpacer_441,1208
    QLabel *labelSolidity;labelSolidity42,1245
    QLabel *labelToken;labelToken43,1272
    QFrame *frameContract;frameContract44,1296
    QVBoxLayout *verticalLayout_10;verticalLayout_1045,1323
    QGridLayout *gridLayout;gridLayout46,1359
    QValidatedTextEdit *textEditBytecode;textEditBytecode47,1388
    QVBoxLayout *verticalLayout;verticalLayout48,1430
    QLabel *labelBytecode;labelBytecode49,1463
    QSpacerItem *verticalSpacer_2;verticalSpacer_250,1490
    QValidatedTextEdit *textEditInterface;textEditInterface51,1525
    QVBoxLayout *verticalLayout_3;verticalLayout_352,1568
    QLabel *labelInterface;labelInterface53,1603
    QSpacerItem *verticalSpacer;verticalSpacer54,1631
    QGroupBox *groupBoxConstructor;groupBoxConstructor55,1664
    QVBoxLayout *verticalLayout_2;verticalLayout_256,1700
    QScrollArea *scrollAreaConstructor;scrollAreaConstructor57,1735
    QWidget *scrollAreaWidgetContents;scrollAreaWidgetContents58,1775
    QVBoxLayout *verticalLayout_5;verticalLayout_559,1814
    QGroupBox *groupBoxOptional;groupBoxOptional60,1849
    QGridLayout *gridLayout_2;gridLayout_261,1882
    AddressField *lineEditSenderAddress;lineEditSenderAddress62,1913
    QLabel *labelSenderAddress;labelSenderAddress63,1954
    QLabel *labelGasPrice;labelGasPrice64,1986
    QLabel *labelGasLimit;labelGasLimit65,2013
    QSpinBox *lineEditGasLimit;lineEditGasLimit66,2040
    BitcoinAmountField *lineEditGasPrice;lineEditGasPrice67,2072
    QSpacerItem *horizontalSpacer_5;horizontalSpacer_568,2114
    QHBoxLayout *horizontalLayout_3;horizontalLayout_369,2151
    QSpacerItem *horizontalSpacer;horizontalSpacer70,2188
    QPushButton *pushButtonClearAll;pushButtonClearAll71,2223
    QSpacerItem *horizontalSpacer_3;horizontalSpacer_372,2260
    QPushButton *pushButtonCreateContract;pushButtonCreateContract73,2297
    void setupUi(75,2341
    void retranslateUi(324,13671
namespace Ui 343,15148
    class CreateContract:CreateContract344,15163

src/qt/forms/ui_modaloverlay.h,2884
#define UI_MODALOVERLAY_H10,392
class Ui_ModalOverlay28,842
    QVBoxLayout *verticalLayout;verticalLayout31,874
    QWidget *bgWidget;bgWidget32,907
    QVBoxLayout *verticalLayoutMain;verticalLayoutMain33,930
    QWidget *contentWidget;contentWidget34,967
    QVBoxLayout *verticalLayout_3;verticalLayout_335,995
    QStackedWidget *stackedWidget;stackedWidget36,1030
    QWidget *page;page37,1065
    QVBoxLayout *verticalLayout_2;verticalLayout_238,1084
    QHBoxLayout *horizontalLayoutIconText;horizontalLayoutIconText39,1119
    QVBoxLayout *verticalLayoutIcon;verticalLayoutIcon40,1162
    QPushButton *warningIcon;warningIcon41,1199
    QSpacerItem *verticalSpacerWarningIcon;verticalSpacerWarningIcon42,1229
    QVBoxLayout *verticalLayoutInfoText;verticalLayoutInfoText43,1273
    QLabel *infoText;infoText44,1314
    QLabel *infoTextStrong;infoTextStrong45,1336
    QSpacerItem *verticalSpacerInTextSpace;verticalSpacerInTextSpace46,1364
    QFormLayout *formLayout;formLayout47,1408
    QLabel *labelNumberOfBlocksLeft;labelNumberOfBlocksLeft48,1437
    QLabel *numberOfBlocksLeft;numberOfBlocksLeft49,1474
    QLabel *labelLastBlockTime;labelLastBlockTime50,1506
    QLabel *newestBlockDate;newestBlockDate51,1538
    QLabel *labelSyncDone;labelSyncDone52,1567
    QHBoxLayout *horizontalLayoutSync;horizontalLayoutSync53,1594
    QLabel *percentageProgress;percentageProgress54,1633
    QProgressBar *progressBar;progressBar55,1665
    QLabel *labelProgressIncrease;labelProgressIncrease56,1696
    QLabel *progressIncreasePerH;progressIncreasePerH57,1731
    QLabel *labelEstimatedTimeLeft;labelEstimatedTimeLeft58,1765
    QLabel *expectedTimeLeft;expectedTimeLeft59,1801
    QWidget *page_2;page_260,1831
    QVBoxLayout *verticalLayout_4;verticalLayout_461,1852
    QHBoxLayout *horizontalLayout_2;horizontalLayout_262,1887
    QSpacerItem *horizontalSpacer_4;horizontalSpacer_463,1924
    QPushButton *warningIconBackup;warningIconBackup64,1961
    QSpacerItem *horizontalSpacer_5;horizontalSpacer_565,1997
    QLabel *labelNote;labelNote66,2034
    QLabel *labelMessage;labelMessage67,2057
    QSpacerItem *verticalSpacer;verticalSpacer68,2083
    QHBoxLayout *horizontalLayout;horizontalLayout69,2116
    QSpacerItem *horizontalSpacer_2;horizontalSpacer_270,2151
    QPushButton *walletBackupButton;walletBackupButton71,2188
    QSpacerItem *horizontalSpacer_3;horizontalSpacer_372,2225
    QSpacerItem *verticalSpacerAfterText;verticalSpacerAfterText73,2262
    QHBoxLayout *horizontalLayoutButtons;horizontalLayoutButtons74,2304
    QSpacerItem *horizontalSpacer;horizontalSpacer75,2346
    QPushButton *closeButton;closeButton76,2381
    void setupUi(78,2412
    void retranslateUi(379,15300
namespace Ui 404,17765
    class ModalOverlay:ModalOverlay405,17780

src/qt/forms/ui_ecrctoken.h,574
#define UI_ECRCTOKEN_H10,386
class Ui_ECRCToken23,687
    QVBoxLayout *verticalLayout_2;verticalLayout_226,716
    QHBoxLayout *horizontalLayout;horizontalLayout27,751
    QVBoxLayout *verticalLayout_3;verticalLayout_328,786
    QListView *tokensList;tokensList29,821
    QStackedWidget *stackedWidgetToken;stackedWidgetToken30,848
    QSpacerItem *verticalSpacer;verticalSpacer31,888
    QVBoxLayout *tokenViewLayout;tokenViewLayout32,921
    void setupUi(34,956
    void retranslateUi(85,2797
namespace Ui 92,2964
    class ECRCToken:ECRCToken93,2979

src/qt/forms/ui_sendcoinsdialog.h,6663
#define UI_SENDCOINSDIALOG_H10,398
class Ui_SendCoinsDialog36,1104
    QVBoxLayout *verticalLayout;verticalLayout39,1139
    QGroupBox *groupBoxCoinControl;groupBoxCoinControl40,1172
    QVBoxLayout *verticalLayout_4;verticalLayout_441,1208
    QVBoxLayout *verticalLayoutCoinControl;verticalLayoutCoinControl42,1243
    QHBoxLayout *horizontalLayoutCoinControl2;horizontalLayoutCoinControl243,1287
    QPushButton *pushButtonCoinControl;pushButtonCoinControl44,1334
    QLabel *labelCoinControlAutomaticallySelected;labelCoinControlAutomaticallySelected45,1374
    QLabel *labelCoinControlInsuffFunds;labelCoinControlInsuffFunds46,1425
    QSpacerItem *horizontalSpacerCoinControl;horizontalSpacerCoinControl47,1466
    QWidget *widgetCoinControl;widgetCoinControl48,1512
    QHBoxLayout *horizontalLayoutCoinControl5;horizontalLayoutCoinControl549,1544
    QHBoxLayout *horizontalLayoutCoinControl3;horizontalLayoutCoinControl350,1591
    QFormLayout *formLayoutCoinControl1;formLayoutCoinControl151,1638
    QLabel *labelCoinControlQuantityText;labelCoinControlQuantityText52,1679
    QLabel *labelCoinControlQuantity;labelCoinControlQuantity53,1721
    QLabel *labelCoinControlBytesText;labelCoinControlBytesText54,1759
    QLabel *labelCoinControlBytes;labelCoinControlBytes55,1798
    QFormLayout *formLayoutCoinControl2;formLayoutCoinControl256,1833
    QLabel *labelCoinControlAmountText;labelCoinControlAmountText57,1874
    QLabel *labelCoinControlAmount;labelCoinControlAmount58,1914
    QLabel *labelCoinControlLowOutputText;labelCoinControlLowOutputText59,1950
    QLabel *labelCoinControlLowOutput;labelCoinControlLowOutput60,1993
    QFormLayout *formLayoutCoinControl3;formLayoutCoinControl361,2032
    QLabel *labelCoinControlFeeText;labelCoinControlFeeText62,2073
    QLabel *labelCoinControlFee;labelCoinControlFee63,2110
    QFormLayout *formLayoutCoinControl4;formLayoutCoinControl464,2143
    QLabel *labelCoinControlAfterFeeText;labelCoinControlAfterFeeText65,2184
    QLabel *labelCoinControlAfterFee;labelCoinControlAfterFee66,2226
    QLabel *labelCoinControlChangeText;labelCoinControlChangeText67,2264
    QLabel *labelCoinControlChange;labelCoinControlChange68,2304
    QHBoxLayout *horizontalLayoutCoinControl4;horizontalLayoutCoinControl469,2340
    QCheckBox *checkBoxCoinControlChange;checkBoxCoinControlChange70,2387
    QValidatedLineEdit *lineEditCoinControlChange;lineEditCoinControlChange71,2429
    QLabel *labelCoinControlChangeLabel;labelCoinControlChangeLabel72,2480
    QSpacerItem *verticalSpacerCoinControl;verticalSpacerCoinControl73,2521
    QWidget *widgetRecipients;widgetRecipients74,2565
    QVBoxLayout *verticalLayout_7;verticalLayout_775,2596
    QHBoxLayout *horizontalLayout_4;horizontalLayout_476,2631
    QLabel *labelRecipients;labelRecipients77,2668
    QSpacerItem *horizontalSpacer;horizontalSpacer78,2697
    QPushButton *addButton;addButton79,2732
    QScrollArea *scrollArea;scrollArea80,2760
    QWidget *scrollAreaWidgetContents;scrollAreaWidgetContents81,2789
    QVBoxLayout *verticalLayout_2;verticalLayout_282,2828
    QVBoxLayout *entries;entries83,2863
    QSpacerItem *verticalSpacer_7;verticalSpacer_784,2889
    QSpacerItem *verticalSpacer;verticalSpacer85,2924
    QSpacerItem *verticalSpacer_8;verticalSpacer_886,2957
    QGroupBox *groupBoxFee;groupBoxFee87,2992
    QVBoxLayout *verticalLayout_3;verticalLayout_388,3020
    QHBoxLayout *horizontalLayoutFee1;horizontalLayoutFee189,3055
    QWidget *widgetFee;widgetFee90,3094
    QHBoxLayout *horizontalLayout_3;horizontalLayout_391,3118
    QCheckBox *radioSmartFee;radioSmartFee92,3155
    QCheckBox *radioCustomFee;radioCustomFee93,3185
    QSpacerItem *horizontalSpacer_4;horizontalSpacer_494,3216
    QVBoxLayout *verticalLayoutFee2;verticalLayoutFee295,3253
    QStackedWidget *stackedFeeTypes;stackedFeeTypes96,3290
    QWidget *page;page97,3327
    QVBoxLayout *verticalLayout_5;verticalLayout_598,3346
    QHBoxLayout *horizontalLayoutFee12;horizontalLayoutFee1299,3381
    QLabel *labelSmartFee;labelSmartFee100,3421
    QLabel *labelFeeEstimation;labelFeeEstimation101,3448
    QLabel *labelSmartFee2;labelSmartFee2102,3480
    QSpacerItem *horizontalSpacer_5;horizontalSpacer_5103,3508
    QHBoxLayout *horizontalLayoutFee9;horizontalLayoutFee9104,3545
    QVBoxLayout *verticalLayoutFee6;verticalLayoutFee6105,3584
    QLabel *labelSmartFee3;labelSmartFee3106,3621
    QSpacerItem *verticalSpacer_3;verticalSpacer_3107,3649
    QVBoxLayout *verticalLayoutFee5;verticalLayoutFee5108,3684
    QSlider *sliderSmartFee;sliderSmartFee109,3721
    QHBoxLayout *horizontalLayoutFee10;horizontalLayoutFee10110,3750
    QLabel *labelSmartFeeNormal;labelSmartFeeNormal111,3790
    QSpacerItem *horizontalSpacer_7;horizontalSpacer_7112,3823
    QLabel *confirmationTargetLabel;confirmationTargetLabel113,3860
    QSpacerItem *horizontalSpacer_3;horizontalSpacer_3114,3897
    QLabel *labelSmartFeeFast;labelSmartFeeFast115,3934
    QSpacerItem *verticalSpacer_4;verticalSpacer_4116,3965
    QWidget *page_2;page_2117,4000
    QVBoxLayout *verticalLayout_6;verticalLayout_6118,4021
    QHBoxLayout *horizontalLayoutFee13;horizontalLayoutFee13119,4056
    QRadioButton *radioCustomPerKilobyte;radioCustomPerKilobyte120,4096
    QRadioButton *radioCustomAtLeast;radioCustomAtLeast121,4138
    BitcoinAmountField *customFee;customFee122,4176
    QSpacerItem *horizontalSpacer_6;horizontalSpacer_6123,4211
    QHBoxLayout *horizontalLayoutFee8;horizontalLayoutFee8124,4248
    QCheckBox *checkBoxMinimumFee;checkBoxMinimumFee125,4287
    QLabel *labelMinFeeWarning;labelMinFeeWarning126,4322
    QSpacerItem *horizontalSpacer_2;horizontalSpacer_2127,4354
    QSpacerItem *verticalSpacer_2;verticalSpacer_2128,4391
    QFrame *frameFeeSelection;frameFeeSelection129,4426
    QVBoxLayout *verticalLayoutFee12;verticalLayoutFee12130,4457
    QHBoxLayout *horizontalLayout;horizontalLayout131,4495
    QSpacerItem *horizontalSpacer_8;horizontalSpacer_8132,4530
    QPushButton *clearButton;clearButton133,4567
    QPushButton *sendButton;sendButton134,4597
    QHBoxLayout *horizontalLayout_2;horizontalLayout_2135,4626
    QLabel *label;label136,4663
    QLabel *labelBalance;labelBalance137,4682
    QButtonGroup *groupFee;groupFee138,4708
    QButtonGroup *groupCustomFee;groupCustomFee139,4736
    void setupUi(141,4771
    void retranslateUi(785,35552
namespace Ui 847,41208
    class SendCoinsDialog:SendCoinsDialog848,41223

src/qt/forms/ui_addressbookpage.h,856
#define UI_ADDRESSBOOKPAGE_H10,398
class Ui_AddressBookPage26,787
    QVBoxLayout *verticalLayout;verticalLayout29,822
    QVBoxLayout *verticalLayout_2;verticalLayout_230,855
    QLabel *labelExplanation;labelExplanation31,890
    QTableView *tableView;tableView32,920
    QWidget *buttonsContainerWhite;buttonsContainerWhite33,947
    QHBoxLayout *horizontalLayout_2;horizontalLayout_234,983
    QPushButton *newAddress;newAddress35,1020
    QPushButton *copyAddress;copyAddress36,1049
    QPushButton *deleteAddress;deleteAddress37,1079
    QSpacerItem *horizontalSpacer;horizontalSpacer38,1111
    QPushButton *exportButton;exportButton39,1146
    QPushButton *closeButton;closeButton40,1177
    void setupUi(42,1208
    void retranslateUi(153,5944
namespace Ui 180,7418
    class AddressBookPage:AddressBookPage181,7433

src/qt/forms/ui_callcontract.h,2008
#define UI_CALLCONTRACT_H10,392
class Ui_CallContract32,974
    QVBoxLayout *verticalLayout;verticalLayout35,1006
    QStackedWidget *stackedWidget;stackedWidget36,1039
    QWidget *callContractPage;callContractPage37,1074
    QVBoxLayout *verticalLayout_4;verticalLayout_438,1105
    QLabel *labelTitle;labelTitle39,1140
    QFrame *frameContract;frameContract40,1164
    QVBoxLayout *verticalLayout_2;verticalLayout_241,1191
    QGridLayout *gridLayout;gridLayout42,1226
    QLabel *labelContractAddress;labelContractAddress43,1255
    QValidatedTextEdit *textEditInterface;textEditInterface44,1289
    QHBoxLayout *horizontalLayout_2;horizontalLayout_245,1332
    QValidatedLineEdit *lineEditContractAddress;lineEditContractAddress46,1369
    QToolButton *loadInfoButton;loadInfoButton47,1418
    QFrame *vLine;vLine48,1451
    QToolButton *pasteAddressButton;pasteAddressButton49,1470
    QFrame *vLine2;vLine250,1507
    QToolButton *saveInfoButton;saveInfoButton51,1527
    QLabel *labelInterface;labelInterface52,1560
    QGroupBox *groupBoxFunction;groupBoxFunction53,1588
    QVBoxLayout *verticalLayout_3;verticalLayout_354,1621
    QScrollArea *scrollAreaFunction;scrollAreaFunction55,1656
    QWidget *scrollAreaWidgetContents;scrollAreaWidgetContents56,1693
    QGroupBox *groupBoxOptional;groupBoxOptional57,1732
    QGridLayout *gridLayout_3;gridLayout_358,1765
    AddressField *lineEditSenderAddress;lineEditSenderAddress59,1796
    QLabel *labelSenderAddress;labelSenderAddress60,1837
    QHBoxLayout *horizontalLayout;horizontalLayout61,1869
    QSpacerItem *horizontalSpacer;horizontalSpacer62,1904
    QPushButton *pushButtonClearAll;pushButtonClearAll63,1939
    QSpacerItem *horizontalSpacer_3;horizontalSpacer_364,1976
    QPushButton *pushButtonCallContract;pushButtonCallContract65,2013
    void setupUi(67,2055
    void retranslateUi(269,10873
namespace Ui 296,12504
    class CallContract:CallContract297,12519

src/qt/forms/ui_overviewpage.h,3343
#define UI_OVERVIEWPAGE_H10,392
class Ui_OverviewPage28,838
    QVBoxLayout *topLayout;topLayout31,870
    QLabel *labelAlerts;labelAlerts32,898
    QGridLayout *gridLayout_2;gridLayout_233,923
    QHBoxLayout *horizontalLayout_4;horizontalLayout_434,954
    QLabel *labelTokens;labelTokens35,991
    QToolButton *labelTokenStatus;labelTokenStatus36,1016
    QSpacerItem *horizontalSpacer_7;horizontalSpacer_737,1051
    QPushButton *buttonAddToken;buttonAddToken38,1088
    QFrame *frameOtherTokens;frameOtherTokens39,1121
    QVBoxLayout *verticalLayout_10;verticalLayout_1040,1151
    QListView *listTokens;listTokens41,1187
    QFrame *frameBalances;frameBalances42,1214
    QVBoxLayout *verticalLayout_4;verticalLayout_443,1241
    QGridLayout *gridLayout;gridLayout44,1276
    QFrame *hLine;hLine45,1305
    QLabel *labelTotalText;labelTotalText46,1324
    QSpacerItem *verticalSpacer;verticalSpacer47,1352
    QLabel *labelTotal;labelTotal48,1385
    QSpacerItem *horizontalSpacer_5;horizontalSpacer_549,1409
    QLabel *labelWatchStake;labelWatchStake50,1446
    QLabel *labelWatchImmature;labelWatchImmature51,1475
    QLabel *labelWatchTotal;labelWatchTotal52,1507
    QLabel *labelStake;labelStake53,1536
    QLabel *labelWatchPending;labelWatchPending54,1560
    QLabel *labelUnconfirmed;labelUnconfirmed55,1591
    QLabel *labelImmatureText;labelImmatureText56,1621
    QLabel *labelWatchonly;labelWatchonly57,1652
    QLabel *labelImmature;labelImmature58,1680
    QLabel *labelWatchAvailable;labelWatchAvailable59,1707
    QLabel *labelBalance;labelBalance60,1740
    QLabel *labelStakeText;labelStakeText61,1766
    QLabel *labelSpendable;labelSpendable62,1794
    QLabel *labelPendingText;labelPendingText63,1822
    QLabel *labelBalanceText;labelBalanceText64,1852
    QHBoxLayout *horizontalLayout_2;horizontalLayout_265,1882
    QLabel *labelBalances;labelBalances66,1919
    QToolButton *labelWalletStatus;labelWalletStatus67,1946
    QSpacerItem *horizontalSpacer;horizontalSpacer68,1982
    QSpacerItem *horizontalSpacer_4;horizontalSpacer_469,2017
    QSpacerItem *verticalSpacer_4;verticalSpacer_470,2054
    QHBoxLayout *horizontalLayout_6;horizontalLayout_671,2089
    QLabel *labelRecentTransactions;labelRecentTransactions72,2126
    QToolButton *labelTransactionsStatus;labelTransactionsStatus73,2163
    QSpacerItem *horizontalSpacer_3;horizontalSpacer_374,2205
    QVBoxLayout *verticalLayout_3;verticalLayout_375,2242
    QFrame *frameRecentTransactions;frameRecentTransactions76,2277
    QVBoxLayout *verticalLayout_8;verticalLayout_877,2314
    QHBoxLayout *horizontalLayout_3;horizontalLayout_378,2349
    QLabel *labelDate;labelDate79,2386
    QSpacerItem *horizontalSpacer_2;horizontalSpacer_280,2409
    QLabel *labelType;labelType81,2446
    QLabel *labelAddress;labelAddress82,2469
    QLabel *labelAmount;labelAmount83,2495
    QListView *listTransactions;listTransactions84,2520
    QHBoxLayout *horizontalLayout;horizontalLayout85,2553
    QSpacerItem *horizontalSpacer_6;horizontalSpacer_686,2588
    QPushButton *showMoreButton;showMoreButton87,2625
    void setupUi(89,2659
    void retranslateUi(498,21759
namespace Ui 559,26315
    class OverviewPage:OverviewPage560,26330

src/qt/forms/ui_openuridialog.h,784
#define UI_OPENURIDIALOG_H10,394
class Ui_OpenURIDialog26,792
    QVBoxLayout *verticalLayout;verticalLayout29,825
    QHBoxLayout *horizontalLayout_3;horizontalLayout_330,858
    QLabel *label_2;label_231,895
    QHBoxLayout *horizontalLayout;horizontalLayout32,916
    QLabel *label;label33,951
    QValidatedLineEdit *uriEdit;uriEdit34,970
    QPushButton *selectFileButton;selectFileButton35,1003
    QSpacerItem *verticalSpacer;verticalSpacer36,1038
    QWidget *buttonsContainerWhite;buttonsContainerWhite37,1071
    QHBoxLayout *horizontalLayout_2;horizontalLayout_238,1107
    QDialogButtonBox *buttonBox;buttonBox39,1144
    void setupUi(41,1178
    void retranslateUi(121,4418
namespace Ui 133,4968
    class OpenURIDialog:OpenURIDialog134,4983

src/qt/forms/ui_tokendescdialog.h,535
#define UI_TOKENDESCDIALOG_H10,398
class Ui_TokenDescDialog23,703
    QVBoxLayout *verticalLayout;verticalLayout26,738
    QHBoxLayout *horizontalLayout_2;horizontalLayout_227,771
    QTextEdit *detailText;detailText28,808
    QWidget *buttonsContainerWhite;buttonsContainerWhite29,835
    QHBoxLayout *horizontalLayout;horizontalLayout30,871
    QDialogButtonBox *buttonBox;buttonBox31,906
    void setupUi(33,940
    void retranslateUi(82,3063
namespace Ui 89,3250
    class TokenDescDialog:TokenDescDialog90,3265

src/qt/forms/ui_contractbookpage.h,894
#define UI_CONTRACTBOOKPAGE_H10,400
class Ui_ContractBookPage25,767
    QVBoxLayout *verticalLayout;verticalLayout28,803
    QVBoxLayout *verticalLayout_2;verticalLayout_229,836
    QLabel *labelExplanation;labelExplanation30,871
    QTableView *tableView;tableView31,901
    QWidget *buttonsContainerWhite;buttonsContainerWhite32,928
    QHBoxLayout *horizontalLayout_2;horizontalLayout_233,964
    QPushButton *newContractInfo;newContractInfo34,1001
    QPushButton *copyAddress;copyAddress35,1035
    QPushButton *deleteContractInfo;deleteContractInfo36,1065
    QSpacerItem *horizontalSpacer;horizontalSpacer37,1102
    QPushButton *exportButton;exportButton38,1137
    QPushButton *chooseContractInfo;chooseContractInfo39,1168
    void setupUi(41,1206
    void retranslateUi(134,5173
namespace Ui 159,6627
    class ContractBookPage:ContractBookPage160,6642

src/qt/forms/ui_optionsdialog.h,5627
#define UI_OPTIONSDIALOG_H10,394
class Ui_OptionsDialog34,1030
    QVBoxLayout *verticalLayout;verticalLayout37,1063
    QVBoxLayout *verticalLayout_3;verticalLayout_338,1096
    QTabWidget *tabWidget;tabWidget39,1131
    QWidget *tabMain;tabMain40,1158
    QVBoxLayout *verticalLayout_Main;verticalLayout_Main41,1180
    QCheckBox *bitcoinAtStartup;bitcoinAtStartup42,1218
    QGridLayout *gridLayout;gridLayout43,1251
    QLabel *databaseCacheLabel;databaseCacheLabel44,1280
    QHBoxLayout *horizontalLayoutReserveBalance;horizontalLayoutReserveBalance45,1312
    BitcoinAmountField *reserveBalance;reserveBalance46,1361
    QSpacerItem *horizontalSpacerReserveBalance;horizontalSpacerReserveBalance47,1401
    QHBoxLayout *horizontalLayout_2_Main;horizontalLayout_2_Main48,1450
    QSpinBox *databaseCache;databaseCache49,1492
    QLabel *databaseCacheUnitLabel;databaseCacheUnitLabel50,1521
    QSpacerItem *horizontalSpacer_2_Main;horizontalSpacer_2_Main51,1557
    QLabel *reserveBalanceLabel;reserveBalanceLabel52,1599
    QLabel *threadsScriptVerifLabel;threadsScriptVerifLabel53,1632
    QHBoxLayout *horizontalLayout_3_Main;horizontalLayout_3_Main54,1669
    QSpinBox *threadsScriptVerif;threadsScriptVerif55,1711
    QSpacerItem *horizontalSpacer_3_Main;horizontalSpacer_3_Main56,1745
    QCheckBox *logEvents;logEvents57,1787
    QSpacerItem *verticalSpacer_Main;verticalSpacer_Main58,1813
    QWidget *tabWallet;tabWallet59,1851
    QVBoxLayout *verticalLayout_Wallet;verticalLayout_Wallet60,1875
    QGroupBox *groupBoxExpert;groupBoxExpert61,1915
    QVBoxLayout *verticalLayout_2;verticalLayout_262,1946
    QCheckBox *coinControlFeatures;coinControlFeatures63,1981
    QCheckBox *spendZeroConfChange;spendZeroConfChange64,2017
    QCheckBox *zeroBalanceAddressToken;zeroBalanceAddressToken65,2053
    QCheckBox *notUseChangeAddress;notUseChangeAddress66,2093
    QCheckBox *checkForUpdates;checkForUpdates67,2129
    QSpacerItem *verticalSpacer_Wallet;verticalSpacer_Wallet68,2161
    QWidget *tabNetwork;tabNetwork69,2201
    QVBoxLayout *verticalLayout_Network;verticalLayout_Network70,2226
    QCheckBox *mapPortUpnp;mapPortUpnp71,2267
    QCheckBox *allowIncoming;allowIncoming72,2295
    QCheckBox *connectSocks;connectSocks73,2325
    QHBoxLayout *horizontalLayout_1_Network;horizontalLayout_1_Network74,2354
    QLabel *proxyIpLabel;proxyIpLabel75,2399
    QValidatedLineEdit *proxyIp;proxyIp76,2425
    QLabel *proxyPortLabel;proxyPortLabel77,2458
    QLineEdit *proxyPort;proxyPort78,2486
    QSpacerItem *horizontalSpacer_1_Network;horizontalSpacer_1_Network79,2512
    QHBoxLayout *horizontalLayout_2_Network;horizontalLayout_2_Network80,2557
    QLabel *proxyActiveNets;proxyActiveNets81,2602
    QCheckBox *proxyReachIPv4;proxyReachIPv482,2631
    QLabel *proxyReachIPv4Label;proxyReachIPv4Label83,2662
    QCheckBox *proxyReachIPv6;proxyReachIPv684,2695
    QLabel *proxyReachIPv6Label;proxyReachIPv6Label85,2726
    QCheckBox *proxyReachTor;proxyReachTor86,2759
    QLabel *proxyReachTorLabel;proxyReachTorLabel87,2789
    QSpacerItem *horizontalSpacer_2_Network;horizontalSpacer_2_Network88,2821
    QCheckBox *connectSocksTor;connectSocksTor89,2866
    QHBoxLayout *horizontalLayout_3_Network;horizontalLayout_3_Network90,2898
    QLabel *proxyIpTorLabel;proxyIpTorLabel91,2943
    QValidatedLineEdit *proxyIpTor;proxyIpTor92,2972
    QLabel *proxyPortTorLabel;proxyPortTorLabel93,3008
    QLineEdit *proxyPortTor;proxyPortTor94,3039
    QSpacerItem *horizontalSpacer_4_Network;horizontalSpacer_4_Network95,3068
    QSpacerItem *verticalSpacer_Network;verticalSpacer_Network96,3113
    QWidget *tabWindow;tabWindow97,3154
    QVBoxLayout *verticalLayout_Window;verticalLayout_Window98,3178
    QCheckBox *hideTrayIcon;hideTrayIcon99,3218
    QCheckBox *minimizeToTray;minimizeToTray100,3247
    QCheckBox *minimizeOnClose;minimizeOnClose101,3278
    QSpacerItem *verticalSpacer_Window;verticalSpacer_Window102,3310
    QWidget *tabDisplay;tabDisplay103,3350
    QVBoxLayout *verticalLayout_Display;verticalLayout_Display104,3375
    QGridLayout *gridLayout_2;gridLayout_2105,3416
    QValueComboBox *lang;lang106,3447
    QValueComboBox *unit;unit107,3473
    QLabel *langLabel;langLabel108,3499
    QLabel *unitLabel;unitLabel109,3522
    QLabel *thirdPartyTxUrlsLabel;thirdPartyTxUrlsLabel110,3545
    QLineEdit *thirdPartyTxUrls;thirdPartyTxUrls111,3580
    QSpacerItem *verticalSpacer_Display;verticalSpacer_Display112,3613
    QFrame *frame;frame113,3654
    QVBoxLayout *verticalLayout_Bottom;verticalLayout_Bottom114,3673
    QHBoxLayout *horizontalLayout_Bottom;horizontalLayout_Bottom115,3713
    QLabel *overriddenByCommandLineInfoLabel;overriddenByCommandLineInfoLabel116,3755
    QSpacerItem *horizontalSpacer_Bottom;horizontalSpacer_Bottom117,3801
    QLabel *overriddenByCommandLineLabel;overriddenByCommandLineLabel118,3843
    QWidget *buttonsContainerWhite;buttonsContainerWhite119,3885
    QHBoxLayout *horizontalLayout;horizontalLayout120,3921
    QPushButton *resetButton;resetButton121,3956
    QSpacerItem *horizontalSpacer_1;horizontalSpacer_1122,3986
    QLabel *statusLabel;statusLabel123,4023
    QSpacerItem *horizontalSpacer_2;horizontalSpacer_2124,4048
    QPushButton *okButton;okButton125,4085
    QPushButton *cancelButton;cancelButton126,4112
    void setupUi(128,4144
    void retranslateUi(639,25534
namespace Ui 759,35395
    class OptionsDialog:OptionsDialog760,35410

src/qt/forms/ui_receiverequestdialog.h,1106
#define UI_RECEIVEREQUESTDIALOG_H10,408
class Ui_ReceiveRequestDialog26,818
    QVBoxLayout *verticalLayout_2;verticalLayout_229,858
    QVBoxLayout *verticalLayout;verticalLayout30,893
    QHBoxLayout *horizontalLayout_3;horizontalLayout_331,926
    QRImageWidget *lblQRCode;lblQRCode32,963
    QVBoxLayout *verticalLayout_3;verticalLayout_333,993
    QSpacerItem *verticalSpacer;verticalSpacer34,1028
    QTextEdit *outUri;outUri35,1061
    QSpacerItem *verticalSpacer_2;verticalSpacer_236,1084
    QWidget *buttonsContainerWhite;buttonsContainerWhite37,1119
    QVBoxLayout *verticalLayout_4;verticalLayout_438,1155
    QHBoxLayout *horizontalLayout;horizontalLayout39,1190
    QPushButton *btnCopyURI;btnCopyURI40,1225
    QPushButton *btnSaveAs;btnSaveAs41,1254
    QPushButton *btnCopyAddress;btnCopyAddress42,1282
    QSpacerItem *horizontalSpacer;horizontalSpacer43,1315
    QDialogButtonBox *buttonBox;buttonBox44,1350
    void setupUi(46,1384
    void retranslateUi(171,6781
namespace Ui 184,7367
    class ReceiveRequestDialog:ReceiveRequestDialog185,7382

src/qt/forms/ui_restoredialog.h,1106
#define UI_RESTOREDIALOG_H10,394
class Ui_RestoreDialog28,856
    QVBoxLayout *verticalLayout_3;verticalLayout_331,889
    QVBoxLayout *verticalLayout_2;verticalLayout_232,924
    QGroupBox *gbWalletPath;gbWalletPath33,959
    QHBoxLayout *horizontalLayout;horizontalLayout34,988
    QLineEdit *txtWalletPath;txtWalletPath35,1023
    QPushButton *toolWalletPath;toolWalletPath36,1053
    QGroupBox *groupBox;groupBox37,1086
    QVBoxLayout *verticalLayout;verticalLayout38,1111
    QRadioButton *rbReindex;rbReindex39,1144
    QRadioButton *rbSalvage;rbSalvage40,1173
    QSpacerItem *verticalSpacer;verticalSpacer41,1202
    QLabel *lblInfo;lblInfo42,1235
    QWidget *buttonsContainerWhite;buttonsContainerWhite43,1256
    QHBoxLayout *horizontalLayout_2;horizontalLayout_244,1292
    QPushButton *btnReset;btnReset45,1329
    QSpacerItem *horizontalSpacer;horizontalSpacer46,1356
    QDialogButtonBox *btnBoxRestore;btnBoxRestore47,1391
    void setupUi(49,1429
    void retranslateUi(147,5337
namespace Ui 161,6328
    class RestoreDialog:RestoreDialog162,6343

src/qt/forms/ui_titlebar.h,769
#define UI_TITLEBAR_H10,384
class Ui_TitleBar23,674
    QHBoxLayout *horizontalLayout;horizontalLayout26,702
    QWidget *widgetLogo;widgetLogo27,737
    QVBoxLayout *verticalLayout_2;verticalLayout_228,762
    QSpacerItem *verticalSpacer;verticalSpacer29,797
    QSpacerItem *horizontalSpacer_3;horizontalSpacer_330,830
    QVBoxLayout *verticalLayout_3;verticalLayout_331,867
    QSpacerItem *verticalSpacer_3;verticalSpacer_332,902
    QTabBar *tabWidget;tabWidget33,937
    QSpacerItem *horizontalSpacer;horizontalSpacer34,961
    QVBoxLayout *verticalLayout;verticalLayout35,996
    QLabel *lblBalance;lblBalance36,1029
    void setupUi(38,1054
    void retranslateUi(113,3873
namespace Ui 121,4077
    class TitleBar:TitleBar122,4092

src/qt/forms/ui_receivecoinsdialog.h,2012
#define UI_RECEIVECOINSDIALOG_H10,404
class Ui_ReceiveCoinsDialog33,1018
    QVBoxLayout *verticalLayout;verticalLayout36,1056
    QHBoxLayout *horizontalLayout;horizontalLayout37,1089
    QLabel *label_7;label_738,1124
    QSpacerItem *horizontalSpacer_6;horizontalSpacer_639,1145
    QPushButton *clearButton;clearButton40,1182
    QSpacerItem *horizontalSpacer_5;horizontalSpacer_541,1212
    QPushButton *receiveButton;receiveButton42,1249
    QFrame *frameRequest;frameRequest43,1281
    QVBoxLayout *verticalLayout_3;verticalLayout_344,1307
    QGridLayout *gridLayout;gridLayout45,1342
    QLabel *label_8;label_846,1371
    QLabel *label_5;label_547,1392
    QRImageWidget *lblQRCode;lblQRCode48,1413
    QLabel *label;label49,1443
    QLineEdit *reqLabel;reqLabel50,1462
    QLabel *label_2;label_251,1487
    QLabel *label_3;label_352,1508
    QHBoxLayout *horizontalLayout_3;horizontalLayout_353,1529
    QLineEdit *leAddress;leAddress54,1566
    QToolButton *copyAddressButton;copyAddressButton55,1592
    QToolButton *refreshButton;refreshButton56,1628
    QLineEdit *reqMessage;reqMessage57,1660
    BitcoinAmountField *reqAmount;reqAmount58,1687
    QCheckBox *reuseAddress;reuseAddress59,1722
    QLabel *label_4;label_460,1751
    QSpacerItem *verticalSpacer_2;verticalSpacer_261,1772
    QHBoxLayout *horizontalLayout_2;horizontalLayout_262,1807
    QLabel *label_6;label_663,1844
    QSpacerItem *horizontalSpacer_3;horizontalSpacer_364,1865
    QPushButton *showRequestButton;showRequestButton65,1902
    QSpacerItem *horizontalSpacer_4;horizontalSpacer_466,1938
    QPushButton *removeRequestButton;removeRequestButton67,1975
    QFrame *frame;frame68,2013
    QVBoxLayout *verticalLayout_2;verticalLayout_269,2032
    QTableView *recentRequestsView;recentRequestsView70,2067
    void setupUi(72,2104
    void retranslateUi(321,12069
namespace Ui 374,16085
    class ReceiveCoinsDialog:ReceiveCoinsDialog375,16100

src/qt/forms/ui_editaddressdialog.h,713
#define UI_EDITADDRESSDIALOG_H10,402
class Ui_EditAddressDialog27,835
    QVBoxLayout *verticalLayout;verticalLayout30,872
    QFormLayout *formLayout;formLayout31,905
    QLabel *label;label32,934
    QLineEdit *labelEdit;labelEdit33,953
    QLabel *label_2;label_234,979
    QValidatedLineEdit *addressEdit;addressEdit35,1000
    QSpacerItem *verticalSpacer;verticalSpacer36,1037
    QWidget *buttonsContainerWhite;buttonsContainerWhite37,1070
    QHBoxLayout *horizontalLayout;horizontalLayout38,1106
    QDialogButtonBox *buttonBox;buttonBox39,1141
    void setupUi(41,1175
    void retranslateUi(116,4306
namespace Ui 131,5111
    class EditAddressDialog:EditAddressDialog132,5126

src/qt/forms/ui_receivetokenpage.h,1073
#define UI_RECEIVETOKENPAGE_H10,400
class Ui_ReceiveTokenPage23,702
    QVBoxLayout *verticalLayout;verticalLayout26,738
    QSpacerItem *verticalSpacer_4;verticalSpacer_427,771
    QHBoxLayout *horizontalLayout_2;horizontalLayout_228,806
    QLabel *lblQRCode;lblQRCode29,843
    QSpacerItem *horizontalSpacer_3;horizontalSpacer_330,866
    QVBoxLayout *verticalLayout_2;verticalLayout_231,903
    QSpacerItem *verticalSpacer_2;verticalSpacer_232,938
    QWidget *widgetAddress;widgetAddress33,973
    QVBoxLayout *verticalLayout_3;verticalLayout_334,1001
    QLabel *labelTokenAddressText;labelTokenAddressText35,1036
    QHBoxLayout *horizontalLayout;horizontalLayout36,1071
    QLabel *labelTokenAddress;labelTokenAddress37,1106
    QToolButton *copyAddressButton;copyAddressButton38,1137
    QSpacerItem *verticalSpacer_5;verticalSpacer_539,1173
    QSpacerItem *verticalSpacer;verticalSpacer40,1208
    void setupUi(42,1242
    void retranslateUi(135,5058
namespace Ui 145,5437
    class ReceiveTokenPage:ReceiveTokenPage146,5452

src/qt/forms/ui_helpmessagedialog.h,843
#define UI_HELPMESSAGEDIALOG_H10,402
class Ui_HelpMessageDialog27,831
    QHBoxLayout *horizontalLayout_2;horizontalLayout_230,868
    QVBoxLayout *verticalLayoutLogo;verticalLayoutLogo31,905
    QLabel *aboutLogo;aboutLogo32,942
    QFrame *frame;frame33,965
    QVBoxLayout *verticalLayout;verticalLayout34,984
    QTextEdit *helpMessage;helpMessage35,1017
    QScrollArea *scrollArea;scrollArea36,1045
    QWidget *scrollAreaWidgetContents;scrollAreaWidgetContents37,1074
    QVBoxLayout *verticalLayout_2;verticalLayout_238,1113
    QLabel *aboutMessage;aboutMessage39,1148
    QSpacerItem *verticalSpacer;verticalSpacer40,1174
    QDialogButtonBox *okButton;okButton41,1207
    void setupUi(43,1240
    void retranslateUi(140,5635
namespace Ui 147,5757
    class HelpMessageDialog:HelpMessageDialog148,5772

src/qt/forms/ui_sendtocontract.h,2415
#define UI_SENDTOCONTRACT_H10,396
class Ui_SendToContract34,1042
    QVBoxLayout *verticalLayout;verticalLayout37,1076
    QStackedWidget *stackedWidget;stackedWidget38,1109
    QWidget *sendContractPage;sendContractPage39,1144
    QVBoxLayout *verticalLayout_4;verticalLayout_440,1175
    QLabel *labelTitle;labelTitle41,1210
    QFrame *frameContract;frameContract42,1234
    QVBoxLayout *verticalLayout_2;verticalLayout_243,1261
    QGridLayout *gridLayout;gridLayout44,1296
    QHBoxLayout *horizontalLayout_2;horizontalLayout_245,1325
    QValidatedLineEdit *lineEditContractAddress;lineEditContractAddress46,1362
    QToolButton *loadInfoButton;loadInfoButton47,1411
    QFrame *vLine;vLine48,1444
    QToolButton *pasteAddressButton;pasteAddressButton49,1463
    QFrame *vLine2;vLine250,1500
    QToolButton *saveInfoButton;saveInfoButton51,1520
    QLabel *labelContractAddress;labelContractAddress52,1553
    QValidatedTextEdit *textEditInterface;textEditInterface53,1587
    QLabel *labelInterface;labelInterface54,1630
    QGroupBox *groupBoxFunction;groupBoxFunction55,1658
    QVBoxLayout *verticalLayout_3;verticalLayout_356,1691
    QScrollArea *scrollAreaFunction;scrollAreaFunction57,1726
    QWidget *scrollAreaWidgetContents;scrollAreaWidgetContents58,1763
    QGroupBox *groupBoxOptional;groupBoxOptional59,1802
    QGridLayout *gridLayout_2;gridLayout_260,1835
    BitcoinAmountField *lineEditAmount;lineEditAmount61,1866
    QLabel *labelGasLimit;labelGasLimit62,1906
    QLabel *labelGasPrice;labelGasPrice63,1933
    AddressField *lineEditSenderAddress;lineEditSenderAddress64,1960
    QLabel *labelAmount;labelAmount65,2001
    BitcoinAmountField *lineEditGasPrice;lineEditGasPrice66,2026
    QLabel *labelSenderAddress;labelSenderAddress67,2068
    QSpinBox *lineEditGasLimit;lineEditGasLimit68,2100
    QSpacerItem *horizontalSpacer_2;horizontalSpacer_269,2132
    QHBoxLayout *horizontalLayout;horizontalLayout70,2169
    QSpacerItem *horizontalSpacer;horizontalSpacer71,2204
    QPushButton *pushButtonClearAll;pushButtonClearAll72,2239
    QSpacerItem *horizontalSpacer_3;horizontalSpacer_373,2276
    QPushButton *pushButtonSendToContract;pushButtonSendToContract74,2313
    void setupUi(76,2357
    void retranslateUi(327,13518
namespace Ui 357,15472
    class SendToContract:SendToContract358,15487

src/qt/forms/ui_addtokenpage.h,1487
#define UI_ADDTOKENPAGE_H10,392
class Ui_AddTokenPage26,780
    QVBoxLayout *verticalLayout;verticalLayout29,812
    QSpacerItem *verticalSpacer_2;verticalSpacer_230,845
    QGridLayout *gridLayout;gridLayout31,880
    QLabel *labelTokenSymbol;labelTokenSymbol32,909
    QLineEdit *lineEditDecimals;lineEditDecimals33,939
    QLabel *labelDecimals;labelDecimals34,972
    QLineEdit *lineEditTokenName;lineEditTokenName35,999
    QLabel *labelContractAddress;labelContractAddress36,1033
    QLineEdit *lineEditTokenSymbol;lineEditTokenSymbol37,1067
    QLabel *labelTokenName;labelTokenName38,1103
    QLineEdit *lineEditContractAddress;lineEditContractAddress39,1131
    QVBoxLayout *verticalLayout_2;verticalLayout_240,1171
    AddressField *lineEditSenderAddress;lineEditSenderAddress41,1206
    QLabel *labelDescription;labelDescription42,1247
    QVBoxLayout *verticalLayout_3;verticalLayout_343,1277
    QLabel *label;label44,1312
    QLabel *labelSpacer;labelSpacer45,1331
    QSpacerItem *verticalSpacer;verticalSpacer46,1356
    QHBoxLayout *horizontalLayout;horizontalLayout47,1389
    QSpacerItem *horizontalSpacer;horizontalSpacer48,1424
    QPushButton *clearButton;clearButton49,1459
    QSpacerItem *horizontalSpacer_3;horizontalSpacer_350,1489
    QPushButton *confirmButton;confirmButton51,1526
    void setupUi(53,1559
    void retranslateUi(210,7919
namespace Ui 226,8856
    class AddTokenPage:AddTokenPage227,8871

src/qt/forms/ui_sendcoinsentry.h,2376
#define UI_SENDCOINSENTRY_H10,396
class Ui_SendCoinsEntry29,880
    QFrame *SendCoins;SendCoins32,914
    QGridLayout *gridLayout;gridLayout33,937
    QLabel *messageTextLabel;messageTextLabel34,966
    QLabel *payToLabel;payToLabel35,996
    QHBoxLayout *horizontalLayoutAmount;horizontalLayoutAmount36,1020
    BitcoinAmountField *payAmount;payAmount37,1061
    QSpacerItem *horizontalSpacer;horizontalSpacer38,1096
    QCheckBox *checkboxSubtractFeeFromAmount;checkboxSubtractFeeFromAmount39,1131
    QLineEdit *addAsLabel;addAsLabel40,1177
    QLabel *labellLabel;labellLabel41,1204
    QLabel *messageLabel;messageLabel42,1229
    QLabel *amountLabel;amountLabel43,1255
    QHBoxLayout *payToLayout;payToLayout44,1280
    QValidatedLineEdit *payTo;payTo45,1310
    QFrame *hLine;hLine46,1341
    QHBoxLayout *horizontalLayout_3;horizontalLayout_347,1360
    QToolButton *deleteButton;deleteButton48,1397
    QFrame *vLine;vLine49,1428
    QToolButton *addressBookButton;addressBookButton50,1447
    QFrame *vLine2;vLine251,1483
    QToolButton *pasteButton;pasteButton52,1503
    QFrame *SendCoins_UnauthenticatedPaymentRequest;SendCoins_UnauthenticatedPaymentRequest53,1533
    QGridLayout *gridLayout_is;gridLayout_is54,1586
    QLabel *payToLabel_is;payToLabel_is55,1618
    QHBoxLayout *payToLayout_is;payToLayout_is56,1645
    QLabel *payTo_is;payTo_is57,1678
    QToolButton *deleteButton_is;deleteButton_is58,1700
    QLabel *memoLabel_is;memoLabel_is59,1734
    QLabel *memoTextLabel_is;memoTextLabel_is60,1760
    QLabel *amountLabel_is;amountLabel_is61,1790
    BitcoinAmountField *payAmount_is;payAmount_is62,1818
    QFrame *SendCoins_AuthenticatedPaymentRequest;SendCoins_AuthenticatedPaymentRequest63,1856
    QGridLayout *gridLayout_s;gridLayout_s64,1907
    QLabel *payToLabel_s;payToLabel_s65,1938
    QHBoxLayout *payToLayout_s;payToLayout_s66,1964
    QLabel *payTo_s;payTo_s67,1996
    QToolButton *deleteButton_s;deleteButton_s68,2017
    QLabel *memoLabel_s;memoLabel_s69,2050
    QLabel *memoTextLabel_s;memoTextLabel_s70,2075
    QLabel *amountLabel_s;amountLabel_s71,2104
    BitcoinAmountField *payAmount_s;payAmount_s72,2131
    void setupUi(74,2169
    void retranslateUi(473,22082
namespace Ui 538,26168
    class SendCoinsEntry:SendCoinsEntry539,26183

src/qt/forms/ui_contractresult.h,2087
#define UI_CONTRACTRESULT_H10,396
class Ui_ContractResult26,794
    QWidget *pageCreateOrSendToResult;pageCreateOrSendToResult29,828
    QVBoxLayout *verticalLayout_3;verticalLayout_330,867
    QGroupBox *groupBoxCreateOrSendTo;groupBoxCreateOrSendTo31,902
    QGridLayout *gridLayout_2;gridLayout_232,941
    QLineEdit *lineEditTxID;lineEditTxID33,972
    QLabel *labelContractAddress;labelContractAddress34,1001
    QLabel *labelHash160;labelHash16035,1035
    QLineEdit *lineEditContractAddress;lineEditContractAddress36,1061
    QLabel *labelSenderAddress;labelSenderAddress37,1101
    QLineEdit *lineEditHash160;lineEditHash16038,1133
    QLineEdit *lineEditSenderAddress;lineEditSenderAddress39,1165
    QLabel *labelTxID;labelTxID40,1203
    QSpacerItem *verticalSpacer;verticalSpacer41,1226
    QWidget *pageCallResult;pageCallResult42,1259
    QVBoxLayout *verticalLayout;verticalLayout43,1288
    QGroupBox *groupBoxCallContract;groupBoxCallContract44,1321
    QGridLayout *gridLayout;gridLayout45,1358
    QLabel *labelCallContractAddress;labelCallContractAddress46,1387
    QLineEdit *lineEditCallContractAddress;lineEditCallContractAddress47,1425
    QScrollArea *scrollAreaParams;scrollAreaParams48,1469
    QWidget *scrollAreaWidgetContents;scrollAreaWidgetContents49,1504
    QVBoxLayout *verticalLayout_4;verticalLayout_450,1543
    QLabel *labelFunction;labelFunction51,1578
    QLineEdit *lineEditFunction;lineEditFunction52,1605
    QLineEdit *lineEditCallSenderAddress;lineEditCallSenderAddress53,1638
    QLabel *labelCallSenderAddress;labelCallSenderAddress54,1680
    QGroupBox *groupBoxResult;groupBoxResult55,1716
    QVBoxLayout *verticalLayout_2;verticalLayout_256,1747
    QScrollArea *scrollAreaResult;scrollAreaResult57,1782
    QWidget *scrollAreaWidgetContents_2;scrollAreaWidgetContents_258,1817
    QSpacerItem *verticalSpacer_4;verticalSpacer_459,1858
    void setupUi(61,1894
    void retranslateUi(271,12268
namespace Ui 288,13516
    class ContractResult:ContractResult289,13531

src/qt/forms/ui_intro.h,1199
#define UI_INTRO_H10,378
class Ui_Intro26,772
    QVBoxLayout *verticalLayout;verticalLayout29,797
    QLabel *welcomeLabel;welcomeLabel30,830
    QSpacerItem *verticalSpacer_4;verticalSpacer_431,856
    QLabel *storageLabel;storageLabel32,891
    QLabel *sizeWarningLabel;sizeWarningLabel33,917
    QRadioButton *dataDirDefault;dataDirDefault34,947
    QRadioButton *dataDirCustom;dataDirCustom35,981
    QHBoxLayout *horizontalLayout;horizontalLayout36,1014
    QSpacerItem *horizontalSpacer;horizontalSpacer37,1049
    QVBoxLayout *verticalLayout_2;verticalLayout_238,1084
    QHBoxLayout *horizontalLayout_2;horizontalLayout_239,1119
    QLineEdit *dataDirectory;dataDirectory40,1156
    QPushButton *ellipsisButton;ellipsisButton41,1186
    QSpacerItem *verticalSpacer_3;verticalSpacer_342,1219
    QLabel *freeSpace;freeSpace43,1254
    QSpacerItem *verticalSpacer_2;verticalSpacer_244,1277
    QLabel *errorMessage;errorMessage45,1312
    QSpacerItem *verticalSpacer;verticalSpacer46,1338
    QDialogButtonBox *buttonBox;buttonBox47,1371
    void setupUi(49,1405
    void retranslateUi(194,7262
namespace Ui 207,8214
    class Intro:Intro208,8229

src/qt/forms/ui_editcontractinfodialog.h,901
#define UI_EDITCONTRACTINFODIALOG_H10,412
class Ui_EditContractInfoDialog28,882
    QVBoxLayout *verticalLayout;verticalLayout31,924
    QGridLayout *gridLayout;gridLayout32,957
    QLineEdit *labelEdit;labelEdit33,986
    QLabel *labelName;labelName34,1012
    QLabel *labelAddress;labelAddress35,1035
    QValidatedLineEdit *addressEdit;addressEdit36,1061
    QValidatedTextEdit *ABIEdit;ABIEdit37,1098
    QVBoxLayout *verticalLayout_3;verticalLayout_338,1131
    QLabel *labelABI;labelABI39,1166
    QSpacerItem *verticalSpacer;verticalSpacer40,1188
    QWidget *buttonsContainerWhite;buttonsContainerWhite41,1221
    QHBoxLayout *horizontalLayout;horizontalLayout42,1257
    QDialogButtonBox *buttonBox;buttonBox43,1292
    void setupUi(45,1326
    void retranslateUi(129,4820
namespace Ui 139,5343
    class EditContractInfoDialog:EditContractInfoDialog140,5358

src/qt/forms/ui_askpassphrasedialog.h,1016
#define UI_ASKPASSPHRASEDIALOG_H10,406
class Ui_AskPassphraseDialog27,840
    QVBoxLayout *verticalLayout;verticalLayout30,879
    QVBoxLayout *verticalLayout_2;verticalLayout_231,912
    QLabel *warningLabel;warningLabel32,947
    QFormLayout *formLayout;formLayout33,973
    QLabel *passLabel1;passLabel134,1002
    QLineEdit *passEdit1;passEdit135,1026
    QLabel *passLabel2;passLabel236,1052
    QLineEdit *passEdit2;passEdit237,1076
    QLabel *passLabel3;passLabel338,1102
    QLineEdit *passEdit3;passEdit339,1126
    QLabel *capsLabel;capsLabel40,1152
    QCheckBox *stakingCheckBox;stakingCheckBox41,1175
    QSpacerItem *verticalSpacer;verticalSpacer42,1207
    QWidget *buttonsContainerWhite;buttonsContainerWhite43,1240
    QHBoxLayout *horizontalLayout;horizontalLayout44,1276
    QDialogButtonBox *buttonBox;buttonBox45,1311
    void setupUi(47,1345
    void retranslateUi(168,6643
namespace Ui 183,7564
    class AskPassphraseDialog:AskPassphraseDialog184,7579

src/qt/forms/ui_signverifymessagedialog.h,2586
#define UI_SIGNVERIFYMESSAGEDIALOG_H10,414
class Ui_SignVerifyMessageDialog30,934
    QVBoxLayout *verticalLayout;verticalLayout33,977
    QTabWidget *tabWidget;tabWidget34,1010
    QWidget *tabSignMessage;tabSignMessage35,1037
    QVBoxLayout *verticalLayout_SM;verticalLayout_SM36,1066
    QVBoxLayout *verticalLayout_3;verticalLayout_337,1102
    QLabel *infoLabel_SM;infoLabel_SM38,1137
    QHBoxLayout *horizontalLayout_1_SM;horizontalLayout_1_SM39,1163
    QValidatedLineEdit *addressIn_SM;addressIn_SM40,1203
    QPushButton *addressBookButton_SM;addressBookButton_SM41,1241
    QFrame *vLine;vLine42,1280
    QPushButton *pasteButton_SM;pasteButton_SM43,1299
    QPlainTextEdit *messageIn_SM;messageIn_SM44,1332
    QLabel *signatureLabel_SM;signatureLabel_SM45,1366
    QHBoxLayout *horizontalLayout_2_SM;horizontalLayout_2_SM46,1397
    QLineEdit *signatureOut_SM;signatureOut_SM47,1437
    QPushButton *copySignatureButton_SM;copySignatureButton_SM48,1469
    QWidget *buttonsContainerWhite;buttonsContainerWhite49,1510
    QHBoxLayout *horizontalLayout;horizontalLayout50,1546
    QPushButton *clearButton_SM;clearButton_SM51,1581
    QPushButton *signMessageButton_SM;signMessageButton_SM52,1614
    QSpacerItem *horizontalSpacer_1_SM;horizontalSpacer_1_SM53,1653
    QLabel *statusLabel_SM;statusLabel_SM54,1693
    QSpacerItem *horizontalSpacer_2_SM;horizontalSpacer_2_SM55,1721
    QWidget *tabVerifyMessage;tabVerifyMessage56,1761
    QVBoxLayout *verticalLayout_VM;verticalLayout_VM57,1792
    QVBoxLayout *verticalLayout_2;verticalLayout_258,1828
    QLabel *infoLabel_VM;infoLabel_VM59,1863
    QHBoxLayout *horizontalLayout_1_VM;horizontalLayout_1_VM60,1889
    QValidatedLineEdit *addressIn_VM;addressIn_VM61,1929
    QPushButton *addressBookButton_VM;addressBookButton_VM62,1967
    QPlainTextEdit *messageIn_VM;messageIn_VM63,2006
    QValidatedLineEdit *signatureIn_VM;signatureIn_VM64,2040
    QWidget *buttonsContainerWhite_;buttonsContainerWhite_65,2080
    QHBoxLayout *horizontalLayout_2;horizontalLayout_266,2117
    QPushButton *clearButton_VM;clearButton_VM67,2154
    QPushButton *verifyMessageButton_VM;verifyMessageButton_VM68,2187
    QSpacerItem *horizontalSpacer_1_VM;horizontalSpacer_1_VM69,2228
    QLabel *statusLabel_VM;statusLabel_VM70,2268
    QSpacerItem *horizontalSpacer_2_VM;horizontalSpacer_2_VM71,2296
    void setupUi(73,2337
    void retranslateUi(326,13259
namespace Ui 390,18082
    class SignVerifyMessageDialog:SignVerifyMessageDialog391,18097

src/qt/forms/ui_coincontroldialog.h,2180
#define UI_COINCONTROLDIALOG_H10,402
class Ui_CoinControlDialog29,906
    QVBoxLayout *verticalLayout;verticalLayout32,943
    QHBoxLayout *horizontalLayoutTop;horizontalLayoutTop33,976
    QFormLayout *formLayoutCoinControl1;formLayoutCoinControl134,1014
    QLabel *labelCoinControlQuantityText;labelCoinControlQuantityText35,1055
    QLabel *labelCoinControlQuantity;labelCoinControlQuantity36,1097
    QLabel *labelCoinControlBytesText;labelCoinControlBytesText37,1135
    QLabel *labelCoinControlBytes;labelCoinControlBytes38,1174
    QFormLayout *formLayoutCoinControl2;formLayoutCoinControl239,1209
    QLabel *labelCoinControlAmountText;labelCoinControlAmountText40,1250
    QLabel *labelCoinControlAmount;labelCoinControlAmount41,1290
    QLabel *labelCoinControlLowOutputText;labelCoinControlLowOutputText42,1326
    QLabel *labelCoinControlLowOutput;labelCoinControlLowOutput43,1369
    QFormLayout *formLayoutCoinControl3;formLayoutCoinControl344,1408
    QLabel *labelCoinControlFeeText;labelCoinControlFeeText45,1449
    QLabel *labelCoinControlFee;labelCoinControlFee46,1486
    QFormLayout *formLayoutCoinControl4;formLayoutCoinControl447,1519
    QLabel *labelCoinControlAfterFeeText;labelCoinControlAfterFeeText48,1560
    QLabel *labelCoinControlAfterFee;labelCoinControlAfterFee49,1602
    QLabel *labelCoinControlChangeText;labelCoinControlChangeText50,1640
    QLabel *labelCoinControlChange;labelCoinControlChange51,1680
    QFrame *frame;frame52,1716
    QHBoxLayout *horizontalLayout;horizontalLayout53,1735
    QHBoxLayout *horizontalLayoutPanel;horizontalLayoutPanel54,1770
    QPushButton *pushButtonSelectAll;pushButtonSelectAll55,1810
    QRadioButton *radioTreeMode;radioTreeMode56,1848
    QRadioButton *radioListMode;radioListMode57,1881
    QLabel *labelLocked;labelLocked58,1914
    QSpacerItem *horizontalSpacer;horizontalSpacer59,1939
    CoinControlTreeWidget *treeWidget;treeWidget60,1974
    QDialogButtonBox *buttonBox;buttonBox61,2013
    void setupUi(63,2047
    void retranslateUi(310,14921
namespace Ui 336,16999
    class CoinControlDialog:CoinControlDialog337,17014

src/qt/forms/ui_transactiondescdialog.h,559
#define UI_TRANSACTIONDESCDIALOG_H10,410
class Ui_TransactionDescDialog23,721
    QVBoxLayout *verticalLayout;verticalLayout26,762
    QHBoxLayout *horizontalLayout;horizontalLayout27,795
    QTextEdit *detailText;detailText28,830
    QWidget *buttonsContainerWhite;buttonsContainerWhite29,857
    QHBoxLayout *horizontalLayout_2;horizontalLayout_230,893
    QDialogButtonBox *buttonBox;buttonBox31,930
    void setupUi(33,964
    void retranslateUi(85,3337
namespace Ui 95,3665
    class TransactionDescDialog:TransactionDescDialog96,3680

src/qt/forms/ui_sendtokenpage.h,1250
#define UI_SENDTOKENPAGE_H10,394
class Ui_SendTokenPage29,881
    QVBoxLayout *verticalLayout;verticalLayout32,914
    QSpacerItem *verticalSpacer_2;verticalSpacer_233,947
    QGridLayout *gridLayout;gridLayout34,982
    QLabel *labelPayTo;labelPayTo35,1011
    QLabel *labelAmount;labelAmount36,1035
    QLabel *labelGasLimit;labelGasLimit37,1060
    QLabel *labelGasPrice;labelGasPrice38,1087
    QLabel *labelDescription;labelDescription39,1114
    QValidatedLineEdit *lineEditPayTo;lineEditPayTo40,1144
    QLineEdit *lineEditDescription;lineEditDescription41,1183
    BitcoinAmountField *lineEditGasPrice;lineEditGasPrice42,1219
    QSpinBox *lineEditGasLimit;lineEditGasLimit43,1261
    TokenAmountField *lineEditAmount;lineEditAmount44,1293
    QSpacerItem *verticalSpacer;verticalSpacer45,1331
    QHBoxLayout *horizontalLayout;horizontalLayout46,1364
    QSpacerItem *horizontalSpacer;horizontalSpacer47,1399
    QPushButton *clearButton;clearButton48,1434
    QSpacerItem *horizontalSpacer_2;horizontalSpacer_249,1464
    QPushButton *confirmButton;confirmButton50,1501
    void setupUi(52,1534
    void retranslateUi(171,6329
namespace Ui 185,7163
    class SendTokenPage:SendTokenPage186,7178

src/qt/moc_overviewpage.cpp,870
struct qt_meta_stringdata_OverviewPage_t 22,761
    QByteArrayData data[data23,804
    char stringdata0[stringdata024,833
#define QT_MOC_LITERAL(26,863
static const qt_meta_stringdata_OverviewPage_t qt_meta_stringdata_OverviewPage 31,1096
#undef QT_MOC_LITERAL72,2922
static const uint qt_meta_data_OverviewPage[qt_meta_data_OverviewPage74,2945
void OverviewPage::qt_static_metacall(qt_static_metacall122,4490
QT_INIT_METAOBJECT const QMetaObject OverviewPage::staticMetaObject 168,6643
const QMetaObject *OverviewPage::metaObject(metaObject174,6864
void *OverviewPage::qt_metacast(qt_metacast179,7018
int OverviewPage::qt_metacall(qt_metacall187,7264
void OverviewPage::showMoreClicked(showMoreClicked205,7754
void OverviewPage::outOfSyncWarningClicked(outOfSyncWarningClicked211,7872
void OverviewPage::addTokenClicked(addTokenClicked217,7998

src/qt/moc_peertablemodel.cpp,686
struct qt_meta_stringdata_PeerTableModel_t 22,767
    QByteArrayData data[data23,812
    char stringdata0[stringdata024,840
#define QT_MOC_LITERAL(26,869
static const qt_meta_stringdata_PeerTableModel_t qt_meta_stringdata_PeerTableModel 31,1104
#undef QT_MOC_LITERAL40,1356
static const uint qt_meta_data_PeerTableModel[qt_meta_data_PeerTableModel42,1379
void PeerTableModel::qt_static_metacall(qt_static_metacall64,1872
QT_INIT_METAOBJECT const QMetaObject PeerTableModel::staticMetaObject 77,2218
const QMetaObject *PeerTableModel::metaObject(metaObject83,2457
void *PeerTableModel::qt_metacast(qt_metacast88,2613
int PeerTableModel::qt_metacall(qt_metacall96,2875

src/qt/abiparamsfield.cpp,290
ABIParamsField::ABIParamsField(7,108
void ABIParamsField::updateParamsField(updateParamsField17,424
QStringList ABIParamsField::getParamValue(getParamValue33,1014
QList<QStringList> ABIParamsField::getParamsValues(getParamsValues39,1153
bool ABIParamsField::isValid(isValid49,1421

src/qt/moc_addressbookpage.cpp,753
struct qt_meta_stringdata_AddressBookPage_t 22,770
    QByteArrayData data[data23,816
    char stringdata0[stringdata024,845
#define QT_MOC_LITERAL(26,875
static const qt_meta_stringdata_AddressBookPage_t qt_meta_stringdata_AddressBookPage 31,1111
#undef QT_MOC_LITERAL62,2398
static const uint qt_meta_data_AddressBookPage[qt_meta_data_AddressBookPage64,2421
void AddressBookPage::qt_static_metacall(qt_static_metacall110,3818
QT_INIT_METAOBJECT const QMetaObject AddressBookPage::staticMetaObject 141,5220
const QMetaObject *AddressBookPage::metaObject(metaObject147,5450
void *AddressBookPage::qt_metacast(qt_metacast152,5607
int AddressBookPage::qt_metacall(qt_metacall160,5859
void AddressBookPage::sendCoins(sendCoins178,6352

src/qt/tokendescdialog.cpp,99
TokenDescDialog::TokenDescDialog(9,149
TokenDescDialog::~TokenDescDialog(~TokenDescDialog23,638

src/qt/moc_restoredialog.cpp,678
struct qt_meta_stringdata_RestoreDialog_t 22,764
    QByteArrayData data[data23,808
    char stringdata0[stringdata024,836
#define QT_MOC_LITERAL(26,866
static const qt_meta_stringdata_RestoreDialog_t qt_meta_stringdata_RestoreDialog 31,1100
#undef QT_MOC_LITERAL46,1649
static const uint qt_meta_data_RestoreDialog[qt_meta_data_RestoreDialog48,1672
void RestoreDialog::qt_static_metacall(qt_static_metacall76,2372
QT_INIT_METAOBJECT const QMetaObject RestoreDialog::staticMetaObject 92,2895
const QMetaObject *RestoreDialog::metaObject(metaObject98,3119
void *RestoreDialog::qt_metacast(qt_metacast103,3274
int RestoreDialog::qt_metacall(qt_metacall111,3522

src/qt/notificator.cpp,1055
const int FREEDESKTOP_NOTIFICATION_ICON_SIZE 33,993
Notificator::Notificator(36,1053
Notificator::~Notificator(~Notificator82,2648
class FreedesktopImage92,2818
    FreedesktopImage(95,2851
    int width,104,3064
    int width, height,104,3064
    int width, height, stride;104,3064
    bool hasAlpha;105,3095
    int channels;106,3114
    int bitsPerSample;107,3132
    QByteArray image;108,3155
const int CHANNELS 117,3425
const int BYTES_PER_PIXEL 118,3449
const int BITS_PER_SAMPLE 119,3480
FreedesktopImage::FreedesktopImage(121,3512
QDBusArgument &operator<<(operator<<145,4358
const QDBusArgument &operator>>(operator>>153,4594
int FreedesktopImage::metaType(metaType161,4836
QVariant FreedesktopImage::toVariant(toVariant166,4928
void Notificator::notifyDBus(notifyDBus172,5079
void Notificator::notifySystray(notifySystray229,6537
void Notificator::notifyGrowl(notifyGrowl244,7114
void Notificator::notifyMacUserNotificationCenter(notifyMacUserNotificationCenter290,9407
void Notificator::notify(notify297,9707

src/qt/moc_sendtocontract.cpp,690
struct qt_meta_stringdata_SendToContract_t 22,767
    QByteArrayData data[data23,812
    char stringdata0[stringdata024,841
#define QT_MOC_LITERAL(26,871
static const qt_meta_stringdata_SendToContract_t qt_meta_stringdata_SendToContract 31,1106
#undef QT_MOC_LITERAL54,2119
static const uint qt_meta_data_SendToContract[qt_meta_data_SendToContract56,2142
void SendToContract::qt_static_metacall(qt_static_metacall96,3247
QT_INIT_METAOBJECT const QMetaObject SendToContract::staticMetaObject 118,4073
const QMetaObject *SendToContract::metaObject(metaObject124,4300
void *SendToContract::qt_metacast(qt_metacast129,4456
int SendToContract::qt_metacall(qt_metacall137,4706

src/qt/sendcoinsdialog.h,475
#define BITCOIN_QT_SENDCOINSDIALOG_H6,232
namespace Ui 21,485
class SendCoinsDialog 30,614
    Ui::SendCoinsDialog *ui;ui59,1689
    ClientModel *clientModel;clientModel60,1718
    WalletModel *model;model61,1748
    bool fNewRecipientAllowed;62,1772
    const PlatformStyle *platformStyle;platformStyle63,1803
class SendConfirmationDialog 99,3104
    QAbstractButton *yesButton;yesButton112,3382
    QTimer countDownTimer;113,3414
    int secDelay;114,3441

src/qt/qvaluecombobox.cpp,250
QValueComboBox::QValueComboBox(7,224
QVariant QValueComboBox::value(value13,419
void QValueComboBox::setValue(setValue18,506
void QValueComboBox::setRole(setRole23,608
void QValueComboBox::handleSelectionChanged(handleSelectionChanged28,677

src/qt/addressbookpage.h,660
#define BITCOIN_QT_ADDRESSBOOKPAGE_H6,232
namespace Ui 14,357
class AddressBookPage 28,609
    enum Tabs 33,672
        SendingTab 34,688
        ReceivingTab 35,712
    enum Mode 38,745
        ForSelection,39,761
        ForEditing 40,825
    const QString &getReturnValue(getReturnValue47,1065
    Ui::AddressBookPage *ui;ui53,1185
    AddressTableModel *model;model54,1214
    Mode mode;55,1244
    Tabs tab;56,1259
    QString returnValue;57,1273
    QSortFilterProxyModel *proxyModel;proxyModel58,1298
    QMenu *contextMenu;contextMenu59,1337
    QAction *deleteAction;deleteAction60,1361
    QString newAddressToSelect;61,1427

src/qt/qvaluecombobox.h,115
#define BITCOIN_QT_QVALUECOMBOBOX_H6,231
class QValueComboBox 12,405
    Q_PROPERTY(16,461
    int role;31,835

src/qt/moc_editcontractinfodialog.cpp,767
struct qt_meta_stringdata_EditContractInfoDialog_t 22,791
    QByteArrayData data[data23,844
    char stringdata0[stringdata024,872
#define QT_MOC_LITERAL(26,901
static const qt_meta_stringdata_EditContractInfoDialog_t qt_meta_stringdata_EditContractInfoDialog 31,1144
#undef QT_MOC_LITERAL42,1502
static const uint qt_meta_data_EditContractInfoDialog[qt_meta_data_EditContractInfoDialog44,1525
void EditContractInfoDialog::qt_static_metacall(qt_static_metacall68,2094
QT_INIT_METAOBJECT const QMetaObject EditContractInfoDialog::staticMetaObject 82,2511
const QMetaObject *EditContractInfoDialog::metaObject(metaObject88,2762
void *EditContractInfoDialog::qt_metacast(qt_metacast93,2926
int EditContractInfoDialog::qt_metacall(qt_metacall101,3192

src/qt/moc_qvalidatedtextedit.cpp,728
struct qt_meta_stringdata_QValidatedTextEdit_t 22,779
    QByteArrayData data[data23,828
    char stringdata0[stringdata024,856
#define QT_MOC_LITERAL(26,885
static const qt_meta_stringdata_QValidatedTextEdit_t qt_meta_stringdata_QValidatedTextEdit 31,1124
#undef QT_MOC_LITERAL47,1668
static const uint qt_meta_data_QValidatedTextEdit[qt_meta_data_QValidatedTextEdit49,1691
void QValidatedTextEdit::qt_static_metacall(qt_static_metacall77,2439
QT_INIT_METAOBJECT const QMetaObject QValidatedTextEdit::staticMetaObject 92,2977
const QMetaObject *QValidatedTextEdit::metaObject(metaObject98,3218
void *QValidatedTextEdit::qt_metacast(qt_metacast103,3378
int QValidatedTextEdit::qt_metacall(qt_metacall111,3638

src/qt/transactiontablemodel.h,1137
#define BITCOIN_QT_TRANSACTIONTABLEMODEL_H6,238
class TransactionTableModel 22,530
    enum ColumnIndex 30,756
        Status 31,779
        Watchonly 32,799
        Date 33,822
        Type 34,840
        ToAddress 35,858
        Amount 36,881
    enum RoleIndex 42,1022
        TypeRole 44,1078
        DateRole,46,1169
        WatchonlyRole,48,1221
        WatchonlyDecorationRole,50,1275
        LongDescriptionRole,52,1354
        AddressRole,54,1421
        LabelRole,56,1497
        AmountRole,58,1557
        TxIDRole,60,1610
        TxHashRole,62,1660
        TxHexRole,64,1725
        TxPlainTextRole,66,1791
        ConfirmedRole,68,1857
        FormattedAmountRole,70,1947
        StatusRole,72,2038
        RawDecorationRole,74,2090
    bool processingQueuedTransactions(82,2468
    CWallet* wallet;85,2560
    WalletModel *walletModel;walletModel86,2581
    QStringList columns;87,2611
    TransactionTablePriv *priv;priv88,2636
    bool fProcessingQueuedTransactions;89,2668
    const PlatformStyle *platformStyle;platformStyle90,2708
    void setProcessingQueuedTransactions(115,4135

src/qt/paymentserver.cpp,2096
const int BITCOIN_IPC_CONNECT_TIMEOUT 49,1031
const char* BIP70_MESSAGE_PAYMENTACK 52,1171
const char* BIP70_MESSAGE_PAYMENTREQUEST 53,1224
const char* BIP71_MIMETYPE_PAYMENT 55,1323
const char* BIP71_MIMETYPE_PAYMENTACK 56,1391
const char* BIP71_MIMETYPE_PAYMENTREQUEST 57,1465
struct X509StoreDeleter 59,1548
      void operator()(operator()60,1574
struct X509Deleter 65,1655
      void operator()(operator()66,1676
    std::unique_ptr<std::unique_ptr71,1759
    std::unique_ptr<X509_STORE, X509StoreDeleter> certStore;71,1759
static QString ipcServerName(79,1911
static QList<QString> savedPaymentRequests;97,2378
static void ReportInvalidCertificate(99,2423
void PaymentServer::LoadRootCAs(LoadRootCAs111,3109
void PaymentServer::ipcParseCommandLine(ipcParseCommandLine202,6383
bool PaymentServer::ipcSendCommandLine(ipcSendCommandLine265,8671
PaymentServer::PaymentServer(298,9531
PaymentServer::~PaymentServer(~PaymentServer336,10819
bool PaymentServer::eventFilter(eventFilter346,11100
void PaymentServer::initNetManager(initNetManager361,11558
void PaymentServer::uiReady(uiReady388,12470
void PaymentServer::handleURIOrFile(handleURIOrFile400,12679
void PaymentServer::handleURIConnection(handleURIConnection476,15239
bool PaymentServer::readPaymentRequestFromFile(readPaymentRequestFromFile501,15948
bool PaymentServer::processPaymentRequest(processPaymentRequest519,16403
void PaymentServer::fetchRequest(fetchRequest611,20389
void PaymentServer::fetchPaymentACK(fetchPaymentACK621,20753
void PaymentServer::netRequestFinished(netRequestFinished676,23116
void PaymentServer::reportSslErrors(reportSslErrors738,25303
void PaymentServer::setOptionsModel(setOptionsModel750,25695
void PaymentServer::handlePaymentACK(handlePaymentACK755,25805
bool PaymentServer::verifyNetwork(verifyNetwork761,26080
bool PaymentServer::verifyExpired(verifyExpired773,26578
bool PaymentServer::verifySize(verifySize785,27099
bool PaymentServer::verifyAmount(verifyAmount797,27488
X509_STORE* PaymentServer::getCertStore(getCertStore809,27860

src/qt/restoredialog.cpp,549
RestoreDialog::RestoreDialog(9,168
RestoreDialog::~RestoreDialog(~RestoreDialog18,378
QString RestoreDialog::getParam(getParam23,430
QString RestoreDialog::getFileName(getFileName28,540
void RestoreDialog::setModel(setModel33,620
void RestoreDialog::on_btnReset_clicked(on_btnReset_clicked38,699
void RestoreDialog::on_btnBoxRestore_accepted(on_btnBoxRestore_accepted44,819
void RestoreDialog::on_btnBoxRestore_rejected(on_btnBoxRestore_rejected66,1624
void RestoreDialog::on_toolWalletPath_clicked(on_toolWalletPath_clicked71,1691

src/qt/modaloverlay.cpp,526
ModalOverlay::ModalOverlay(16,373
ModalOverlay::~ModalOverlay(~ModalOverlay44,1151
bool ModalOverlay::eventFilter(eventFilter49,1201
bool ModalOverlay::event(event66,1704
void ModalOverlay::setKnownBestHeight(setKnownBestHeight79,2053
void ModalOverlay::tipUpdate(tipUpdate87,2247
void ModalOverlay::toggleVisibility(toggleVisibility152,5139
void ModalOverlay::showHide(showHide159,5270
void ModalOverlay::closeClicked(closeClicked178,5961
void ModalOverlay::backupWalletClicked(backupWalletClicked184,6043

src/qt/splashscreen.cpp,577
SplashScreen::SplashScreen(29,607
SplashScreen::~SplashScreen(~SplashScreen114,3971
void SplashScreen::slotFinish(slotFinish119,4040
static void InitMessage(131,4353
static void ShowProgress(140,4667
void SplashScreen::ConnectWallet(ConnectWallet146,4848
void SplashScreen::subscribeToCoreSignals(subscribeToCoreSignals153,5025
void SplashScreen::unsubscribeFromCoreSignals(unsubscribeFromCoreSignals163,5376
void SplashScreen::showMessage(showMessage175,5802
void SplashScreen::paintEvent(paintEvent183,5990
void SplashScreen::closeEvent(closeEvent195,6356

src/qt/execrpccommand.cpp,132
ExecRPCCommand::ExecRPCCommand(6,105
bool ExecRPCCommand::exec(exec15,444
void ExecRPCCommand::appendParam(appendParam104,3325

src/qt/optionsmodel.h,1539
#define BITCOIN_QT_OPTIONSMODEL_H6,229
class OptionsModel 22,632
    explicit OptionsModel(27,703
    enum OptionID 29,780
        StartAtStartup,30,800
        HideTrayIcon,31,840
        MinimizeToTray,32,880
        MapPortUPnP,33,920
        MinimizeOnClose,34,960
        ProxyUse,35,1000
        ProxyIP,36,1040
        ProxyPort,37,1083
        ProxyUseTor,38,1122
        ProxyIPTor,39,1162
        ProxyPortTor,40,1205
        DisplayUnit,41,1244
        ThirdPartyTxUrls,42,1298
        Language,43,1341
        CoinControlFeatures,44,1384
        ThreadsScriptVerif,45,1424
        DatabaseCache,46,1463
        LogEvents,47,1502
        SpendZeroConfChange,48,1542
        ZeroBalanceAddressToken,49,1582
        Listen,50,1622
        NotUseChangeAddress,51,1662
        CheckForUpdates,52,1702
        ReserveBalance,53,1742
        OptionIDRowCount,54,1785
    void Init(57,1819
    void Reset(58,1862
    int rowCount(60,1881
    bool getHideTrayIcon(67,2296
    bool getMinimizeToTray(68,2349
    bool getMinimizeOnClose(69,2406
    int getDisplayUnit(70,2465
    QString getThirdPartyTxUrls(71,2515
    bool getCoinControlFeatures(73,2636
    const QString& getOverriddenByCommandLine(74,2703
    bool fHideTrayIcon;82,2933
    bool fMinimizeToTray;83,2957
    bool fMinimizeOnClose;84,2983
    QString language;85,3010
    int nDisplayUnit;86,3032
    QString strThirdPartyTxUrls;87,3054
    bool fCoinControlFeatures;88,3087
    QString strOverriddenByCommandLine;90,3174

src/qt/transactionview.h,1361
#define BITCOIN_QT_TRANSACTIONVIEW_H6,232
class TransactionView 31,748
    enum DateEnum41,969
        All,43,993
        Today,44,1006
        ThisWeek,45,1021
        ThisMonth,46,1039
        LastMonth,47,1058
        ThisYear,48,1077
        Range49,1095
    enum ColumnWidths 52,1117
        STATUS_COLUMN_WIDTH 53,1141
        WATCHONLY_COLUMN_WIDTH 54,1175
        DATE_COLUMN_WIDTH 55,1212
        TYPE_COLUMN_WIDTH 56,1245
        AMOUNT_MINIMUM_COLUMN_WIDTH 57,1278
        MINIMUM_COLUMN_WIDTH 58,1321
    WalletModel *model;model62,1372
    TransactionFilterProxy *transactionProxyModel;transactionProxyModel63,1396
    QTableView *transactionView;transactionView64,1447
    QComboBox *dateWidget;dateWidget66,1481
    QComboBox *typeWidget;typeWidget67,1508
    QComboBox *watchOnlyWidget;watchOnlyWidget68,1535
    QLineEdit *addressWidget;addressWidget69,1567
    QLineEdit *amountWidget;amountWidget70,1597
    QMenu *contextMenu;contextMenu72,1627
    QSignalMapper *mapperThirdPartyTxUrls;mapperThirdPartyTxUrls73,1651
    QFrame *dateRangeWidget;dateRangeWidget75,1695
    QDateTimeEdit *dateFrom;dateFrom76,1724
    QDateTimeEdit *dateTo;dateTo77,1753
    QAction *abandonAction;abandonAction78,1780
    GUIUtil::TableViewLastColumnResizingFixer *columnResizingFixer;columnResizingFixer82,1848

src/qt/notificator.h,558
#define BITCOIN_QT_NOTIFICATOR_H6,228
class Notificator:Notificator24,526
    enum Class36,826
        Information,38,847
        Warning,39,901
        Critical 40,966
    QWidget *parent;parent56,1632
    enum Mode 57,1653
        None,58,1669
        Freedesktop,59,1808
        QSystemTray,60,1891
        Growl12,61,1964
        Growl13,62,2057
        UserNotificationCenter 63,2150
    QString programName;65,2251
    Mode mode;66,2276
    QSystemTrayIcon *trayIcon;trayIcon67,2291
    QDBusInterface *interface;interface69,2338

src/qt/contractresult.cpp,411
ContractResult::ContractResult(9,167
ContractResult::~ContractResult(~ContractResult16,311
void ContractResult::setResultData(setResultData21,370
void ContractResult::setParamsData(setParamsData44,981
void ContractResult::updateCreateResult(updateCreateResult127,4298
void ContractResult::updateSendToResult(updateSendToResult140,4822
void ContractResult::updateCallResult(updateCallResult152,5265

src/qt/moc_intro.cpp,692
struct qt_meta_stringdata_Intro_t 22,740
    QByteArrayData data[data23,776
    char stringdata0[stringdata024,805
#define QT_MOC_LITERAL(26,835
static const qt_meta_stringdata_Intro_t qt_meta_stringdata_Intro 31,1061
#undef QT_MOC_LITERAL55,1978
static const uint qt_meta_data_Intro[qt_meta_data_Intro57,2001
void Intro::qt_static_metacall(qt_static_metacall95,3073
QT_INIT_METAOBJECT const QMetaObject Intro::staticMetaObject 129,4395
const QMetaObject *Intro::metaObject(metaObject135,4595
void *Intro::qt_metacast(qt_metacast140,4742
int Intro::qt_metacall(qt_metacall148,4974
void Intro::requestCheck(requestCheck166,5453
void Intro::stopThread(stopThread172,5561

src/qt/coincontroldialog.h,1158
#define BITCOIN_QT_COINCONTROLDIALOG_H6,234
namespace Ui 25,539
#define ASYMP_UTF8 29,586
class CCoinControlWidgetItem 31,621
    CCoinControlWidgetItem(34,685
    CCoinControlWidgetItem(35,785
    CCoinControlWidgetItem(36,856
class CoinControlDialog 42,1022
    static QList<CAmount> payAmounts;55,1353
    static CCoinControl *coinControl;coinControl56,1391
    static bool fSubtractFeeFromAmount;57,1429
    Ui::CoinControlDialog *ui;ui60,1479
    WalletModel *model;model61,1510
    int sortColumn;62,1534
    Qt::SortOrder sortOrder;63,1554
    QMenu *contextMenu;contextMenu65,1584
    QTreeWidgetItem *contextMenuItem;contextMenuItem66,1608
    QAction *copyTransactionHashAction;copyTransactionHashAction67,1646
    QAction *lockAction;lockAction68,1686
    QAction *unlockAction;unlockAction69,1711
    const PlatformStyle *platformStyle;platformStyle71,1739
        COLUMN_CHECKBOX 78,1858
        COLUMN_AMOUNT,79,1887
        COLUMN_LABEL,80,1910
        COLUMN_ADDRESS,81,1932
        COLUMN_DATE,82,1956
        COLUMN_CONFIRMATIONS,83,1977
        COLUMN_TXHASH,84,2007
        COLUMN_VOUT_INDEX,85,2030

src/qt/createcontract.h,389
#define CREATECONTRACT_H2,26
namespace Ui 14,227
class CreateContract 18,271
    Ui::CreateContract *ui;ui49,962
    WalletModel* m_model;50,991
    ClientModel* m_clientModel;51,1018
    ExecRPCCommand* m_execRPCCommand;52,1051
    ABIFunctionField* m_ABIFunctionField;53,1090
    ContractABI* m_contractABI;54,1133
    TabBarInfo* m_tabInfo;55,1166
    int m_results;56,1194

src/qt/moc_recentrequeststablemodel.cpp,787
struct qt_meta_stringdata_RecentRequestsTableModel_t 22,797
    QByteArrayData data[data23,852
    char stringdata0[stringdata024,880
#define QT_MOC_LITERAL(26,909
static const qt_meta_stringdata_RecentRequestsTableModel_t qt_meta_stringdata_RecentRequestsTableModel 31,1154
#undef QT_MOC_LITERAL45,1667
static const uint qt_meta_data_RecentRequestsTableModel[qt_meta_data_RecentRequestsTableModel47,1690
void RecentRequestsTableModel::qt_static_metacall(qt_static_metacall73,2410
QT_INIT_METAOBJECT const QMetaObject RecentRequestsTableModel::staticMetaObject 87,2964
const QMetaObject *RecentRequestsTableModel::metaObject(metaObject93,3233
void *RecentRequestsTableModel::qt_metacast(qt_metacast98,3399
int RecentRequestsTableModel::qt_metacall(qt_metacall106,3681

src/qt/tokenfilterproxy.cpp,675
const QDateTime TokenFilterProxy::MIN_DATE 8,139
const QDateTime TokenFilterProxy::MAX_DATE 10,269
int256_t abs_int256(12,352
TokenFilterProxy::TokenFilterProxy(17,444
void TokenFilterProxy::setDateRange(setDateRange30,691
void TokenFilterProxy::setAddressPrefix(setAddressPrefix37,857
void TokenFilterProxy::setTypeFilter(setTypeFilter43,996
void TokenFilterProxy::setMinAmount(setMinAmount49,1113
void TokenFilterProxy::setName(setName55,1240
void TokenFilterProxy::setLimit(setLimit61,1351
int TokenFilterProxy::rowCount(rowCount66,1433
bool TokenFilterProxy::filterAcceptsRow(filterAcceptsRow78,1704
bool TokenFilterProxy::lessThan(lessThan103,2711

src/qt/bitcoinamountfield.h,202
#define BITCOIN_QT_BITCOINAMOUNTFIELD_H6,235
class BitcoinAmountField:BitcoinAmountField20,444
    Q_PROPERTY(26,666
    AmountSpinBox *amount;amount70,1925
    QValueComboBox *unit;unit71,1952

src/qt/moc_tokentransactionview.cpp,751
struct qt_meta_stringdata_TokenTransactionView_t 22,785
    QByteArrayData data[data23,836
    char stringdata0[stringdata024,865
#define QT_MOC_LITERAL(26,895
static const qt_meta_stringdata_TokenTransactionView_t qt_meta_stringdata_TokenTransactionView 31,1136
#undef QT_MOC_LITERAL67,2629
static const uint qt_meta_data_TokenTransactionView[qt_meta_data_TokenTransactionView69,2652
void TokenTransactionView::qt_static_metacall(qt_static_metacall119,4387
QT_INIT_METAOBJECT const QMetaObject TokenTransactionView::staticMetaObject 145,5839
const QMetaObject *TokenTransactionView::metaObject(metaObject151,6084
void *TokenTransactionView::qt_metacast(qt_metacast156,6246
int TokenTransactionView::qt_metacall(qt_metacall164,6508

src/qt/guiutil.h,691
#define BITCOIN_QT_GUIUTIL_H6,224
namespace GUIUtil36,740
    class ToolTipToRichTextFilter 132,5302
        int size_threshold;143,5555
    class TableViewLastColumnResizingFixer:TableViewLastColumnResizingFixer156,6128
            QTableView* tableView;165,6449
            int lastColumnMinimumWidth;166,6484
            int allColumnsMinimumWidth;167,6524
            int lastColumnIndex;168,6564
            int columnCount;169,6597
            int secondToLastColumnIndex;170,6626
    class ClickableLabel 213,8386
    class ClickableProgressBar 226,8728
    class ProgressBar 243,9305
        bool event(245,9363
    typedef ClickableProgressBar ProgressBar;250,9515

src/qt/navigationbar.h,271
#define NAVIGATIONBAR_H2,25
class NavigationBar 13,226
    QList<QAction*> m_actions;87,2239
    QMap<QMap88,2271
    QMap<QAction*, QList<QAction*>> m_groups;88,2271
    Qt::ToolButtonStyle m_toolStyle;89,2318
    bool m_subBar;90,2356
    bool m_built;91,2376

src/qt/styleSheet.cpp,456
static const QString STYLE_FORMAT 16,298
static const QColor LINK_COLOR 17,350
class EcocStyle 19,397
    void polish(23,449
StyleSheet &StyleSheet::instance(instance84,2691
StyleSheet::StyleSheet(StyleSheet90,2782
void StyleSheet::setStyleSheet(setStyleSheet93,2814
void StyleSheet::setStyleSheet(setStyleSheet98,2953
QString StyleSheet::getStyleSheet(getStyleSheet122,3716
void StyleSheet::setObjectStyleSheet(setObjectStyleSheet135,4025

src/qt/moc_tokentransactiontablemodel.cpp,809
struct qt_meta_stringdata_TokenTransactionTableModel_t 22,803
    QByteArrayData data[data23,860
    char stringdata0[stringdata024,889
#define QT_MOC_LITERAL(26,919
static const qt_meta_stringdata_TokenTransactionTableModel_t qt_meta_stringdata_TokenTransactionTableModel 31,1166
#undef QT_MOC_LITERAL51,1987
static const uint qt_meta_data_TokenTransactionTableModel[qt_meta_data_TokenTransactionTableModel53,2010
void TokenTransactionTableModel::qt_static_metacall(qt_static_metacall81,2835
QT_INIT_METAOBJECT const QMetaObject TokenTransactionTableModel::staticMetaObject 96,3556
const QMetaObject *TokenTransactionTableModel::metaObject(metaObject102,3831
void *TokenTransactionTableModel::qt_metacast(qt_metacast107,3999
int TokenTransactionTableModel::qt_metacall(qt_metacall115,4285

src/qt/signverifymessagedialog.h,255
#define BITCOIN_QT_SIGNVERIFYMESSAGEDIALOG_H6,240
namespace Ui 13,347
class SignVerifyMessageDialog 17,400
    Ui::SignVerifyMessageDialog *ui;ui36,873
    WalletModel *model;model37,910
    const PlatformStyle *platformStyle;platformStyle38,934

src/qt/moc_splashscreen.cpp,669
struct qt_meta_stringdata_SplashScreen_t 22,761
    QByteArrayData data[data23,804
    char stringdata0[stringdata024,832
#define QT_MOC_LITERAL(26,861
static const qt_meta_stringdata_SplashScreen_t qt_meta_stringdata_SplashScreen 31,1094
#undef QT_MOC_LITERAL48,1658
static const uint qt_meta_data_SplashScreen[qt_meta_data_SplashScreen50,1681
void SplashScreen::qt_static_metacall(qt_static_metacall74,2335
QT_INIT_METAOBJECT const QMetaObject SplashScreen::staticMetaObject 98,3307
const QMetaObject *SplashScreen::metaObject(metaObject104,3528
void *SplashScreen::qt_metacast(qt_metacast109,3682
int SplashScreen::qt_metacall(qt_metacall117,3928

src/qt/tokentransactiontablemodel.h,1119
#define ECOC_QT_TOKENTOKENTRANSACTIONTABLEMODEL_H2,50
class TokenTransactionTableModel 18,359
    enum ColumnIndex 26,600
        Status 27,623
        Date 28,643
        Type 29,661
        ToAddress 30,679
        Name 31,702
        Amount 32,720
    enum RoleIndex 38,861
        TypeRole 40,917
        DateRole,42,1008
        LongDescriptionRole,44,1072
        NameRole,46,1134
        AddressRole,48,1190
        LabelRole,50,1266
        AmountRole,52,1326
        TxHashRole,54,1378
        TxHexRole,56,1443
        TxPlainTextRole,58,1509
        ConfirmedRole,60,1575
        FormattedAmountRole,62,1665
        FormattedAmountWithUnitRole,64,1737
        StatusRole,66,1841
        RawDecorationRole,68,1893
    bool processingQueuedTransactions(76,2271
    CWallet* wallet;79,2363
    WalletModel *walletModel;walletModel80,2384
    QStringList columns;81,2414
    TokenTransactionTablePriv *priv;priv82,2439
    bool fProcessingQueuedTransactions;83,2476
    const PlatformStyle *platformStyle;platformStyle84,2516
    void setProcessingQueuedTransactions(109,4083

src/qt/moc_clientmodel.cpp,1198
struct qt_meta_stringdata_ClientModel_t 22,758
    QByteArrayData data[data23,800
    char stringdata0[stringdata024,829
#define QT_MOC_LITERAL(26,859
static const qt_meta_stringdata_ClientModel_t qt_meta_stringdata_ClientModel 31,1091
#undef QT_MOC_LITERAL77,3059
static const uint qt_meta_data_ClientModel[qt_meta_data_ClientModel79,3082
void ClientModel::qt_static_metacall(qt_static_metacall131,4968
QT_INIT_METAOBJECT const QMetaObject ClientModel::staticMetaObject 221,8981
const QMetaObject *ClientModel::metaObject(metaObject227,9199
void *ClientModel::qt_metacast(qt_metacast232,9352
int ClientModel::qt_metacall(qt_metacall240,9596
void ClientModel::numConnectionsChanged(numConnectionsChanged258,10085
void ClientModel::numBlocksChanged(numBlocksChanged265,10296
void ClientModel::mempoolSizeChanged(mempoolSizeChanged272,10715
void ClientModel::networkActiveChanged(networkActiveChanged279,10992
void ClientModel::alertsChanged(alertsChanged286,11203
void ClientModel::bytesChanged(bytesChanged293,11418
void ClientModel::tipChanged(tipChanged300,11693
void ClientModel::message(message306,11805
void ClientModel::showProgress(showProgress313,12165

src/qt/recentrequeststablemodel.cpp,1192
RecentRequestsTableModel::RecentRequestsTableModel(16,387
RecentRequestsTableModel::~RecentRequestsTableModel(~RecentRequestsTableModel34,1086
int RecentRequestsTableModel::rowCount(rowCount39,1180
int RecentRequestsTableModel::columnCount(columnCount46,1306
QVariant RecentRequestsTableModel::data(data53,1438
bool RecentRequestsTableModel::setData(setData101,3024
QVariant RecentRequestsTableModel::headerData(headerData106,3144
void RecentRequestsTableModel::updateAmountColumnTitle(updateAmountColumnTitle119,3570
QString RecentRequestsTableModel::getAmountTitle(getAmountTitle126,3836
QModelIndex RecentRequestsTableModel::index(index131,4062
bool RecentRequestsTableModel::removeRows(removeRows138,4225
Qt::ItemFlags RecentRequestsTableModel::flags(flags161,4881
void RecentRequestsTableModel::addNewRequest(addNewRequest167,5062
void RecentRequestsTableModel::addNewRequest(addNewRequest184,5568
void RecentRequestsTableModel::addNewRequest(addNewRequest202,6017
void RecentRequestsTableModel::sort(sort209,6190
void RecentRequestsTableModel::updateDisplayUnit(updateDisplayUnit215,6458
bool RecentRequestEntryLessThan::operator()(operator()220,6545

src/qt/walletmodel.h,2746
#define BITCOIN_QT_WALLETMODEL_H6,228
class SendCoinsRecipient42,862
    explicit SendCoinsRecipient(45,897
    explicit SendCoinsRecipient(46,1025
    QString address;54,1666
    QString label;55,1687
    CAmount amount;56,1706
    QString message;58,1794
    PaymentRequestPlus paymentRequest;61,1894
    QString authenticatedMerchant;63,1998
    bool fSubtractFeeFromAmount;65,2034
    static const int CURRENT_VERSION 67,2083
    int nVersion;68,2125
    ADD_SERIALIZE_METHODS;70,2144
    template <typename Stream,72,2172
    inline void SerializationOp(73,2223
class WalletModel 103,3447
    enum StatusCode 111,3655
        OK,113,3706
        InvalidAmount,114,3718
        InvalidAddress,115,3741
        AmountExceedsBalance,116,3765
        AmountWithFeeExceedsBalance,117,3795
        DuplicateAddress,118,3832
        TransactionCreationFailed,119,3858
        TransactionCommitFailed,120,3939
        AbsurdFee,121,3972
        PaymentRequestExpired122,3991
    enum EncryptionStatus125,4029
        Unencrypted,127,4061
        Locked,128,4107
        Unlocked 129,4174
    struct SendCoinsReturn155,5197
        SendCoinsReturn(157,5230
        StatusCode status;162,5418
        QString reasonCommitFailed;163,5445
    class UnlockContext185,6386
        bool isValid(191,6524
        UnlockContext(194,6634
        UnlockContext& operator=(operator=195,6701
        WalletModel *wallet;wallet197,6806
        bool valid;198,6835
        mutable bool relock;199,6855
        bool stakingOnly;200,6933
    CWallet *wallet;wallet248,8533
    bool fHaveWatchOnly;249,8554
    bool fForceCheckBalanceChanged;250,8579
    OptionsModel *optionsModel;optionsModel254,8717
    AddressTableModel *addressTableModel;addressTableModel256,8750
    ContractTableModel *contractTableModel;contractTableModel257,8792
    TransactionTableModel *transactionTableModel;transactionTableModel258,8836
    RecentRequestsTableModel *recentRequestsTableModel;recentRequestsTableModel259,8886
    TokenItemModel *tokenItemModel;tokenItemModel260,8942
    TokenTransactionTableModel *tokenTransactionTableModel;tokenTransactionTableModel261,8978
    CAmount cachedBalance;264,9093
    CAmount cachedUnconfirmedBalance;265,9120
    CAmount cachedImmatureBalance;266,9158
    CAmount cachedStake;267,9193
    CAmount cachedWatchOnlyBalance;268,9218
    CAmount cachedWatchUnconfBalance;269,9254
    CAmount cachedWatchImmatureBalance;270,9292
    CAmount cachedWatchOnlyStake;271,9332
    EncryptionStatus cachedEncryptionStatus;272,9366
    int cachedNumBlocks;273,9411
    QTimer *pollTimer;pollTimer275,9437
    QString restorePath;277,9461
    QString restoreParam;278,9486

src/qt/versionchecker.h,452
#define ECOCVERSIONCHECKER_H2,30
#define ECOC_RELEASES 6,84
class Version 8,154
    int _major;11,182
    int _minor;12,199
    int _revision;13,216
    Version(15,238
    Version(19,283
    Version(27,427
    Version(40,749
    bool operator >(operator >46,880
    bool operator <(operator <56,1196
    bool operator ==(operator ==66,1512
    void SetNull(76,1831
class EcocVersionChecker 84,1937
    Version currentVersion;97,2210

src/qt/receivecoinsdialog.h,563
#define BITCOIN_QT_RECEIVECOINSDIALOG_H6,235
namespace Ui 22,504
class ReceiveCoinsDialog 31,657
    enum ColumnWidths 36,723
        DATE_COLUMN_WIDTH 37,747
        LABEL_COLUMN_WIDTH 38,780
        AMOUNT_MINIMUM_COLUMN_WIDTH 39,814
        MINIMUM_COLUMN_WIDTH 40,857
    Ui::ReceiveCoinsDialog *ui;ui57,1202
    GUIUtil::TableViewLastColumnResizingFixer *columnResizingFixer;columnResizingFixer58,1234
    WalletModel *model;model59,1302
    QMenu *contextMenu;contextMenu60,1326
    const PlatformStyle *platformStyle;platformStyle61,1350

src/qt/contractbookpage.cpp,937
ContractBookPage::ContractBookPage(15,315
ContractBookPage::~ContractBookPage(~ContractBookPage74,3342
void ContractBookPage::setModel(setModel79,3405
void ContractBookPage::onCopyNameAction(onCopyNameAction115,5090
void ContractBookPage::onCopyABIAction(onCopyABIAction120,5212
void ContractBookPage::on_copyAddress_clicked(on_copyAddress_clicked125,5331
void ContractBookPage::onEditAction(onEditAction130,5461
void ContractBookPage::on_newContractInfo_clicked(on_newContractInfo_clicked148,5956
void ContractBookPage::on_deleteContractInfo_clicked(on_deleteContractInfo_clicked161,6245
void ContractBookPage::selectionChanged(selectionChanged182,7138
void ContractBookPage::done(done201,7606
void ContractBookPage::on_exportButton_clicked(on_exportButton_clicked226,8394
void ContractBookPage::contextualMenu(contextualMenu250,9235
void ContractBookPage::selectNewContractInfo(selectNewContractInfo259,9442

src/qt/openuridialog.h,106
#define BITCOIN_QT_OPENURIDIALOG_H6,230
class OpenURIDialog 14,329
    Ui::OpenURIDialog *ui;ui31,587

src/qt/moc_contractbookpage.cpp,711
struct qt_meta_stringdata_ContractBookPage_t 22,773
    QByteArrayData data[data23,820
    char stringdata0[stringdata024,849
#define QT_MOC_LITERAL(26,879
static const qt_meta_stringdata_ContractBookPage_t qt_meta_stringdata_ContractBookPage 31,1116
#undef QT_MOC_LITERAL62,2413
static const uint qt_meta_data_ContractBookPage[qt_meta_data_ContractBookPage64,2436
void ContractBookPage::qt_static_metacall(qt_static_metacall106,3735
QT_INIT_METAOBJECT const QMetaObject ContractBookPage::staticMetaObject 128,4771
const QMetaObject *ContractBookPage::metaObject(metaObject134,5004
void *ContractBookPage::qt_metacast(qt_metacast139,5162
int ContractBookPage::qt_metacall(qt_metacall147,5416

src/qt/askpassphrasedialog.h,385
#define BITCOIN_QT_ASKPASSPHRASEDIALOG_H6,236
namespace Ui 12,318
class AskPassphraseDialog 18,483
    enum Mode 23,550
        Encrypt,24,566
        UnlockStaking,25,631
        Unlock,26,702
        ChangePass,27,760
        Decrypt 28,834
    Ui::AskPassphraseDialog *ui;ui39,1068
    Mode mode;40,1101
    WalletModel *model;model41,1116
    bool fCapsLock;42,1140

src/qt/moc_transactionfilterproxy.cpp,766
struct qt_meta_stringdata_TransactionFilterProxy_t 22,791
    QByteArrayData data[data23,844
    char stringdata0[stringdata024,872
#define QT_MOC_LITERAL(26,901
static const qt_meta_stringdata_TransactionFilterProxy_t qt_meta_stringdata_TransactionFilterProxy 31,1144
#undef QT_MOC_LITERAL38,1346
static const uint qt_meta_data_TransactionFilterProxy[qt_meta_data_TransactionFilterProxy40,1369
void TransactionFilterProxy::qt_static_metacall(qt_static_metacall56,1732
QT_INIT_METAOBJECT const QMetaObject TransactionFilterProxy::staticMetaObject 64,1913
const QMetaObject *TransactionFilterProxy::metaObject(metaObject70,2178
void *TransactionFilterProxy::qt_metacast(qt_metacast75,2342
int TransactionFilterProxy::qt_metacall(qt_metacall83,2622

src/qt/moc_bitcoinunits.cpp,666
struct qt_meta_stringdata_BitcoinUnits_t 22,761
    QByteArrayData data[data23,804
    char stringdata0[stringdata024,832
#define QT_MOC_LITERAL(26,861
static const qt_meta_stringdata_BitcoinUnits_t qt_meta_stringdata_BitcoinUnits 31,1094
#undef QT_MOC_LITERAL38,1256
static const uint qt_meta_data_BitcoinUnits[qt_meta_data_BitcoinUnits40,1279
void BitcoinUnits::qt_static_metacall(qt_static_metacall56,1632
QT_INIT_METAOBJECT const QMetaObject BitcoinUnits::staticMetaObject 64,1803
const QMetaObject *BitcoinUnits::metaObject(metaObject70,2035
void *BitcoinUnits::qt_metacast(qt_metacast75,2189
int BitcoinUnits::qt_metacall(qt_metacall83,2446

src/qt/clientmodel.h,564
#define BITCOIN_QT_CLIENTMODEL_H6,228
enum BlockSource 24,507
    BLOCK_SOURCE_NONE,25,526
    BLOCK_SOURCE_REINDEX,26,549
    BLOCK_SOURCE_DISK,27,575
    BLOCK_SOURCE_NETWORK28,598
enum NumConnections 31,627
    CONNECTIONS_NONE 32,649
    CONNECTIONS_IN 33,675
    CONNECTIONS_OUT 34,709
    CONNECTIONS_ALL 35,743
class ClientModel 39,847
    OptionsModel *optionsModel;optionsModel87,2580
    PeerTableModel *peerTableModel;peerTableModel88,2612
    BanTableModel *banTableModel;banTableModel89,2648
    QTimer *pollTimer;pollTimer91,2683

src/qt/macnotificationhandler.h,87
#define BITCOIN_QT_MACNOTIFICATIONHANDLER_H6,239
class MacNotificationHandler 12,397

src/qt/receivecoinsdialog.cpp,1612
ReceiveCoinsDialog::ReceiveCoinsDialog(26,680
void ReceiveCoinsDialog::setModel(setModel83,3434
ReceiveCoinsDialog::~ReceiveCoinsDialog(~ReceiveCoinsDialog113,4985
void ReceiveCoinsDialog::clear(clear118,5047
void ReceiveCoinsDialog::reject(reject132,5421
void ReceiveCoinsDialog::accept(accept137,5473
void ReceiveCoinsDialog::updateDisplayUnit(updateDisplayUnit142,5525
void ReceiveCoinsDialog::on_receiveButton_clicked(on_receiveButton_clicked150,5712
void ReceiveCoinsDialog::on_recentRequestsView_doubleClicked(on_recentRequestsView_doubleClicked195,7348
void ReceiveCoinsDialog::on_recentRequestsView_clicked(on_recentRequestsView_clicked205,7769
void ReceiveCoinsDialog::recentRequestsView_selectionChanged(recentRequestsView_selectionChanged223,8348
void ReceiveCoinsDialog::on_showRequestButton_clicked(on_showRequestButton_clicked231,8727
void ReceiveCoinsDialog::on_removeRequestButton_clicked(on_removeRequestButton_clicked242,9108
void ReceiveCoinsDialog::on_copyAddressButton_clicked(on_copyAddressButton_clicked254,9633
void ReceiveCoinsDialog::resizeEvent(resizeEvent261,9889
void ReceiveCoinsDialog::keyPressEvent(keyPressEvent267,10065
QModelIndex ReceiveCoinsDialog::selectedRow(selectedRow283,10466
void ReceiveCoinsDialog::copyColumnToClipboard(copyColumnToClipboard296,10961
void ReceiveCoinsDialog::showMenu(showMenu306,11280
void ReceiveCoinsDialog::copyURI(copyURI315,11470
void ReceiveCoinsDialog::copyLabel(copyLabel328,11844
void ReceiveCoinsDialog::copyMessage(copyMessage334,11983
void ReceiveCoinsDialog::copyAmount(copyAmount340,12125

src/qt/receiverequestdialog.cpp,834
QRImageWidget::QRImageWidget(33,724
QImage QRImageWidget::exportImage(exportImage45,1229
void QRImageWidget::mousePressEvent(mousePressEvent52,1345
void QRImageWidget::saveImage(saveImage68,1741
void QRImageWidget::copyImage(copyImage79,1990
void QRImageWidget::contextMenuEvent(contextMenuEvent86,2117
ReceiveRequestDialog::ReceiveRequestDialog(93,2262
ReceiveRequestDialog::~ReceiveRequestDialog(~ReceiveRequestDialog112,2826
void ReceiveRequestDialog::setModel(setModel117,2892
void ReceiveRequestDialog::setInfo(setInfo128,3137
bool ReceiveRequestDialog::createQRCode(createQRCode134,3248
void ReceiveRequestDialog::update(update192,5333
void ReceiveRequestDialog::on_btnCopyURI_clicked(on_btnCopyURI_clicked226,6674
void ReceiveRequestDialog::on_btnCopyAddress_clicked(on_btnCopyAddress_clicked231,6790

src/qt/rpcconsole.cpp,3745
const int CONSOLE_HISTORY 53,1185
const int INITIAL_TRAFFIC_GRAPH_MINS 54,1217
const char fontSizeSettingsKey[fontSizeSettingsKey56,1291
    const char *url;url59,1361
    const char *source;source60,1382
    PlatformStyle::TableColorType type;61,1406
} ICON_MAPPING[ICON_MAPPING62,1446
const QStringList historyFilter 73,1822
class RPCExecutor 86,2130
class QtRPCTimerBase:QtRPCTimerBase100,2404
    QtRPCTimerBase(104,2485
    ~QtRPCTimerBase(111,2720
    void timeout(113,2762
    QTimer timer;115,2802
class QtRPCTimerInterface:QtRPCTimerInterface119,2862
    ~QtRPCTimerInterface(122,2924
    const char *Name(Name123,2954
    RPCTimerBase* NewTimer(124,2994
bool RPCConsole::RPCParseCommandLine(RPCParseCommandLine152,4184
    enum CmdParseState157,4437
        STATE_EATING_SPACES,159,4466
        STATE_EATING_SPACES_IN_ARG,160,4495
        STATE_EATING_SPACES_IN_BRACKETS,161,4531
        STATE_ARGUMENT,162,4572
        STATE_SINGLEQUOTED,163,4596
        STATE_DOUBLEQUOTED,164,4624
        STATE_ESCAPE_OUTER,165,4652
        STATE_ESCAPE_DOUBLEQUOTED,166,4680
        STATE_COMMAND_EXECUTED,167,4715
        STATE_COMMAND_EXECUTED_INNER168,4747
void RPCExecutor::request(request380,13891
RPCConsole::RPCConsole(412,15131
RPCConsole::~RPCConsole(~RPCConsole477,18121
bool RPCConsole::eventFilter(eventFilter485,18304
void RPCConsole::setClientModel(setClientModel529,20106
static QString categoryClass(662,27671
void RPCConsole::fontBigger(fontBigger673,27990
void RPCConsole::fontSmaller(fontSmaller678,28061
void RPCConsole::setFontSize(setFontSize683,28133
void RPCConsole::clear(clear708,29092
void RPCConsole::keyPressEvent(keyPressEvent752,31138
void RPCConsole::message(message760,31290
void RPCConsole::updateNetworkState(updateNetworkState776,31900
void RPCConsole::setNumConnections(setNumConnections789,32418
void RPCConsole::setNetworkActive(setNetworkActive797,32534
void RPCConsole::setNumBlocks(setNumBlocks802,32619
void RPCConsole::setMempoolSize(setMempoolSize810,32882
void RPCConsole::on_lineEdit_returnPressed(on_lineEdit_returnPressed820,33228
void RPCConsole::browseHistory(browseHistory862,34478
void RPCConsole::startExecutor(startExecutor883,35041
void RPCConsole::on_tabWidget_currentChanged(on_tabWidget_currentChanged904,35894
void RPCConsole::on_openDebugLogfileButton_clicked(on_openDebugLogfileButton_clicked912,36135
void RPCConsole::scrollToEnd(scrollToEnd917,36226
void RPCConsole::on_sldGraphRange_valueChanged(on_sldGraphRange_valueChanged923,36378
QString RPCConsole::FormatBytes(FormatBytes930,36586
void RPCConsole::setTrafficGraphRange(setTrafficGraphRange942,36952
void RPCConsole::updateTrafficStats(updateTrafficStats948,37123
void RPCConsole::peerSelected(peerSelected954,37323
void RPCConsole::peerLayoutAboutToChange(peerLayoutAboutToChange966,37727
void RPCConsole::peerLayoutChanged(peerLayoutChanged977,38110
void RPCConsole::updateNodeDetail(updateNodeDetail1034,39704
void RPCConsole::resizeEvent(resizeEvent1080,42499
void RPCConsole::showEvent(showEvent1085,42587
void RPCConsole::hideEvent(hideEvent1096,42845
void RPCConsole::showPeersTableContextMenu(showPeersTableContextMenu1107,43101
void RPCConsole::showBanTableContextMenu(showBanTableContextMenu1114,43304
void RPCConsole::disconnectSelectedNode(disconnectSelectedNode1121,43506
void RPCConsole::banSelectedNode(banSelectedNode1138,44018
void RPCConsole::unbanSelectedNode(unbanSelectedNode1165,44885
void RPCConsole::clearSelectedNode(clearSelectedNode1187,45530
void RPCConsole::showOrHideBanTableIfRequired(showOrHideBanTableIfRequired1195,45766
void RPCConsole::setTabFocus(setTabFocus1205,46009

src/qt/tokenitemmodel.h,659
#define TOKENITEMMODEL_H2,26
class TokenItemModel 15,250
    enum ColumnIndex 19,326
        Name 20,350
        Symbol 21,369
        Balance 22,390
    enum DataRole{DataRole25,422
        HashRole 26,442
        AddressRole 27,480
        NameRole 28,521
        SymbolRole 29,559
        DecimalsRole 30,599
        SenderRole 31,641
        BalanceRole 32,681
        RawBalanceRole 33,722
    Token *tokenAbi;tokenAbi63,1708
    QStringList columns;64,1730
    WalletModel *walletModel;walletModel65,1756
    CWallet *wallet;wallet66,1787
    TokenItemPriv* priv;67,1809
    TokenTxWorker* worker;68,1835
    QThread t;69,1863

src/qt/csvmodelwriter.cpp,269
CSVModelWriter::CSVModelWriter(11,295
void CSVModelWriter::setModel(setModel17,431
void CSVModelWriter::addColumn(addColumn22,526
static void writeValue(32,717
static void writeSep(39,880
static void writeNewline(44,936
bool CSVModelWriter::write(write49,997

src/qt/contractabi.cpp,1884
namespace ContractABI_NS6,99
#define ReadJsonString(9,226
#define ReadJsonBool(11,364
#define ReadJsonArray(13,502
inline bool startsWithString(17,668
inline std::string startsWithNumber(27,936
const static int HEX_INSTRUCTION_SIZE 47,1358
ContractABI::ContractABI(ContractABI51,1441
bool ContractABI::loads(loads54,1475
void ContractABI::clean(clean109,3417
FunctionABI::FunctionABI(114,3476
bool FunctionABI::abiIn(abiIn128,3957
bool FunctionABI::abiOut(abiOut146,4538
std::string FunctionABI::selector(selector160,4997
std::string FunctionABI::defaultSelector(defaultSelector199,5736
QString FunctionABI::errorMessage(errorMessage204,5806
void FunctionABI::processDynamicParams(processDynamicParams239,7106
ParameterABI::ParameterABI(253,7626
ParameterABI::~ParameterABI(~ParameterABI260,7823
bool ParameterABI::abiInBasic(abiInBasic263,7860
bool ParameterABI::abiOutBasic(abiOutBasic297,8943
void ParameterABI::addDynamic(addDynamic352,10938
bool ParameterABI::abiIn(abiIn359,11219
bool ParameterABI::abiOut(abiOut426,13454
bool ParameterABI::getRegularExpession(getRegularExpession528,16656
ParameterABI::ErrorType ParameterABI::lastError(lastError579,17800
const ParameterType &ParameterABI::decodeType(decodeType584,17890
ParameterType::ParameterType(594,18082
bool ParameterType::determine(determine605,18304
size_t ParameterType::wholeBits(wholeBits746,21733
size_t ParameterType::decimalBits(decimalBits751,21803
size_t ParameterType::totalBytes(totalBytes756,21877
size_t ParameterType::length(length761,21974
bool ParameterType::isList(isList766,22042
bool ParameterType::isDynamic(isDynamic771,22108
bool ParameterType::isValid(isValid787,22516
const std::string& ParameterType::canonical(canonical792,22582
void ParameterType::clean(clean797,22668
ParameterType::Type ParameterType::type(type808,22869

src/qt/moc_qvalidatedlineedit.cpp,805
struct qt_meta_stringdata_QValidatedLineEdit_t 22,779
    QByteArrayData data[data23,828
    char stringdata0[stringdata024,857
#define QT_MOC_LITERAL(26,887
static const qt_meta_stringdata_QValidatedLineEdit_t qt_meta_stringdata_QValidatedLineEdit 31,1126
#undef QT_MOC_LITERAL51,1896
static const uint qt_meta_data_QValidatedLineEdit[qt_meta_data_QValidatedLineEdit53,1919
void QValidatedLineEdit::qt_static_metacall(qt_static_metacall87,2831
QT_INIT_METAOBJECT const QMetaObject QValidatedLineEdit::staticMetaObject 123,4299
const QMetaObject *QValidatedLineEdit::metaObject(metaObject129,4540
void *QValidatedLineEdit::qt_metacast(qt_metacast134,4700
int QValidatedLineEdit::qt_metacall(qt_metacall142,4960
void QValidatedLineEdit::validationDidChange(validationDidChange160,5456

src/qt/abifunctionfield.h,567
#define ABIFUNCTIONFIELD_H2,28
class ABIFunctionField 17,310
    Q_ENUMS(20,368
    enum FunctionType25,484
        Create,27,514
        SendTo,28,531
        Call29,548
    ContractABI *m_contractABI;m_contractABI92,2344
    QWidget *m_func;m_func93,2377
    QComboBox *m_comboBoxFunc;m_comboBoxFunc94,2399
    QLabel* m_labelFunction;95,2431
    QStackedWidget *m_paramsField;m_paramsField96,2461
    QVector<int> m_abiFunctionList;97,2497
    FunctionType m_functionType;98,2534
    const PlatformStyle *m_platformStyle;m_platformStyle99,2568

src/qt/walletframe.h,370
#define BITCOIN_QT_WALLETFRAME_H6,228
class WalletFrame 29,796
    QStackedWidget *walletStack;walletStack53,1464
    BitcoinGUI *gui;gui54,1497
    ClientModel *clientModel;clientModel55,1518
    QMap<QMap56,1548
    QMap<QString, WalletView*> mapWalletViews;56,1548
    bool bOutOfSync;58,1596
    const PlatformStyle *platformStyle;platformStyle60,1618

src/qt/tokentransactionview.cpp,1332
#define paternTokenAmount 28,650
TokenTransactionView::TokenTransactionView(30,713
void TokenTransactionView::setModel(setModel145,5554
QWidget *TokenTransactionView::createDateRangeWidget(createDateRangeWidget181,7498
void TokenTransactionView::refreshNameWidget(refreshNameWidget217,8753
void TokenTransactionView::addToNameWidget(addToNameWidget231,9165
void TokenTransactionView::removeFromNameWidget(removeFromNameWidget242,9541
void TokenTransactionView::resizeEvent(resizeEvent265,10275
bool TokenTransactionView::eventFilter(eventFilter271,10463
void TokenTransactionView::contextualMenu(contextualMenu285,10932
void TokenTransactionView::dateRangeChanged(dateRangeChanged298,11265
void TokenTransactionView::showDetails(showDetails307,11501
void TokenTransactionView::copyAddress(copyAddress320,11870
void TokenTransactionView::copyAmount(copyAmount325,12004
void TokenTransactionView::copyTxID(copyTxID330,12136
void TokenTransactionView::copyTxPlainText(copyTxPlainText335,12266
void TokenTransactionView::chooseDate(chooseDate340,12408
void TokenTransactionView::chooseType(chooseType388,13997
void TokenTransactionView::chooseName(chooseName396,14186
void TokenTransactionView::changedPrefix(changedPrefix404,14372
void TokenTransactionView::changedAmount(changedAmount411,14536

src/qt/moc_navigationbar.cpp,726
struct qt_meta_stringdata_NavigationBar_t 22,764
    QByteArrayData data[data23,808
    char stringdata0[stringdata024,836
#define QT_MOC_LITERAL(26,865
static const qt_meta_stringdata_NavigationBar_t qt_meta_stringdata_NavigationBar 31,1099
#undef QT_MOC_LITERAL46,1631
static const uint qt_meta_data_NavigationBar[qt_meta_data_NavigationBar48,1654
void NavigationBar::qt_static_metacall(qt_static_metacall78,2425
QT_INIT_METAOBJECT const QMetaObject NavigationBar::staticMetaObject 101,3323
const QMetaObject *NavigationBar::metaObject(metaObject107,3547
void *NavigationBar::qt_metacast(qt_metacast112,3702
int NavigationBar::qt_metacall(qt_metacall120,3950
void NavigationBar::resized(resized138,4437

src/qt/moc_bantablemodel.cpp,676
struct qt_meta_stringdata_BanTableModel_t 22,764
    QByteArrayData data[data23,808
    char stringdata0[stringdata024,836
#define QT_MOC_LITERAL(26,865
static const qt_meta_stringdata_BanTableModel_t qt_meta_stringdata_BanTableModel 31,1099
#undef QT_MOC_LITERAL40,1347
static const uint qt_meta_data_BanTableModel[qt_meta_data_BanTableModel42,1370
void BanTableModel::qt_static_metacall(qt_static_metacall64,1862
QT_INIT_METAOBJECT const QMetaObject BanTableModel::staticMetaObject 77,2205
const QMetaObject *BanTableModel::metaObject(metaObject83,2441
void *BanTableModel::qt_metacast(qt_metacast88,2596
int BanTableModel::qt_metacall(qt_metacall96,2856

src/qt/bitcoinunits.h,1031
#define BITCOIN_QT_BITCOINUNITS_H6,229
using namespace boost::multiprecision;13,378
#define REAL_THIN_SP_CP 16,456
#define REAL_THIN_SP_UTF8 17,487
#define REAL_THIN_SP_HTML 18,528
#define HAIR_SP_CP 21,604
#define HAIR_SP_UTF8 22,630
#define HAIR_SP_HTML 23,666
#define SIXPEREM_SP_CP 26,742
#define SIXPEREM_SP_UTF8 27,772
#define SIXPEREM_SP_HTML 28,812
#define FIGURE_SP_CP 31,888
#define FIGURE_SP_UTF8 32,916
#define FIGURE_SP_HTML 33,954
#define HTML_HACK_SP 39,1228
#define THIN_SP_CP 42,1380
#define THIN_SP_UTF8 43,1417
#define THIN_SP_HTML 44,1456
class BitcoinUnits:BitcoinUnits49,1619
    enum Unit59,1850
        BTC,61,1870
        mBTC,62,1883
        uBTC63,1897
    enum SeparatorStyle66,1918
        separatorNever,68,1948
        separatorStandard,69,1972
        separatorAlways70,1999
    enum RoleIndex 112,4019
        UnitRole 114,4071
    static QString removeSpaces(120,4233
    QList<BitcoinUnits::Unit> unitlist;134,4563
typedef BitcoinUnits::Unit BitcoinUnit;136,4606

src/qt/moc_walletframe.cpp,739
struct qt_meta_stringdata_WalletFrame_t 22,758
    QByteArrayData data[data23,800
    char stringdata0[stringdata024,829
#define QT_MOC_LITERAL(26,859
static const qt_meta_stringdata_WalletFrame_t qt_meta_stringdata_WalletFrame 31,1091
#undef QT_MOC_LITERAL77,3141
static const uint qt_meta_data_WalletFrame[qt_meta_data_WalletFrame79,3164
void WalletFrame::qt_static_metacall(qt_static_metacall155,5596
QT_INIT_METAOBJECT const QMetaObject WalletFrame::staticMetaObject 201,7690
const QMetaObject *WalletFrame::metaObject(metaObject207,7907
void *WalletFrame::qt_metacast(qt_metacast212,8060
int WalletFrame::qt_metacall(qt_metacall220,8303
void WalletFrame::requestedSyncWarningInfo(requestedSyncWarningInfo238,8791

src/qt/overviewpage.h,735
#define BITCOIN_QT_OVERVIEWPAGE_H6,229
namespace Ui 20,458
class OverviewPage 29,593
    Ui::OverviewPage *ui;ui53,1360
    ClientModel *clientModel;clientModel54,1386
    WalletModel *walletModel;walletModel55,1416
    CAmount currentBalance;56,1446
    CAmount currentUnconfirmedBalance;57,1474
    CAmount currentImmatureBalance;58,1513
    CAmount currentStake;59,1549
    CAmount currentWatchOnlyBalance;60,1575
    CAmount currentWatchUnconfBalance;61,1612
    CAmount currentWatchImmatureBalance;62,1651
    CAmount currentWatchOnlyStake;63,1692
    TxViewDelegate *txdelegate;txdelegate65,1728
    TknViewDelegate *tkndelegate;tkndelegate66,1760
    std::unique_ptr<TransactionFilterProxy> filter;67,1794

src/qt/token.cpp,2409
namespace Token_NS11,233
static const std::string TOKEN_ABI 13,256
static const QString PRC_CALL 15,3821
static const QString PRC_SENDTO 16,3870
static const QString PARAM_ADDRESS 17,3923
static const QString PARAM_DATAHEX 18,3972
static const QString PARAM_AMOUNT 19,4021
static const QString PARAM_GASLIMIT 20,4068
static const QString PARAM_GASPRICE 21,4119
static const QString PARAM_SENDER 22,4170
static const QString PARAM_BROADCAST 23,4217
static const QString PARAM_CHANGE_TO_SENDER 24,4270
struct TokenData29,4369
    QMap<QMap31,4390
    QMap<QString, QString> lstParams;31,4390
    std::string address;32,4429
    ExecRPCCommand* call;33,4455
    ExecRPCCommand* send;34,4482
    EventLog* eventLog;35,4509
    ContractABI* ABI;36,4534
    int funcName;37,4557
    int funcApprove;38,4576
    int funcTotalSupply;39,4598
    int funcTransferFrom;40,4624
    int funcDecimals;41,4651
    int funcBurn;42,4674
    int funcBalanceOf;43,4693
    int funcBurnFrom;44,4717
    int funcSymbol;45,4740
    int funcTransfer;46,4761
    int funcApproveAndCall;47,4784
    int funcAllowance;48,4813
    int evtTransfer;49,4837
    int evtBurn;50,4859
    std::string txid;52,4879
    TokenData(54,4904
bool ToHash160(75,5364
bool ToEcocAddress(88,5717
Token::Token(101,6070
Token::~Token(~Token198,8929
void Token::setAddress(setAddress217,9179
void Token::setDataHex(setDataHex222,9307
void Token::setAmount(setAmount227,9435
void Token::setGasLimit(setGasLimit232,9559
void Token::setGasPrice(setGasPrice237,9691
void Token::setSender(setSender242,9823
void Token::clear(clear247,9947
std::string Token::getTxId(getTxId259,10236
bool Token::name(name264,10295
bool Token::approve(approve282,10663
bool Token::totalSupply(totalSupply303,11162
bool Token::transferFrom(transferFrom321,11544
bool Token::decimals(decimals343,12098
bool Token::burn(burn361,12474
bool Token::balanceOf(balanceOf381,12906
bool Token::balanceOf(balanceOf392,13165
bool Token::burnFrom(burnFrom412,13604
bool Token::symbol(symbol433,14099
bool Token::transfer(transfer451,14471
bool Token::approveAndCall(approveAndCall467,14850
bool Token::allowance(allowance489,15428
bool Token::transferEvents(transferEvents510,15914
bool Token::burnEvents(burnEvents515,16097
bool Token::exec(exec520,16272
bool Token::execEvents(execEvents573,18088

src/qt/transactionfilterproxy.cpp,764
const QDateTime TransactionFilterProxy::MIN_DATE 15,400
const QDateTime TransactionFilterProxy::MAX_DATE 17,534
TransactionFilterProxy::TransactionFilterProxy(19,621
bool TransactionFilterProxy::filterAcceptsRow(filterAcceptsRow32,920
void TransactionFilterProxy::setDateRange(setDateRange62,2264
void TransactionFilterProxy::setAddressPrefix(setAddressPrefix69,2429
void TransactionFilterProxy::setTypeFilter(setTypeFilter75,2568
void TransactionFilterProxy::setMinAmount(setMinAmount81,2685
void TransactionFilterProxy::setWatchOnlyFilter(setWatchOnlyFilter87,2811
void TransactionFilterProxy::setLimit(setLimit93,2948
void TransactionFilterProxy::setShowInactive(setShowInactive98,3031
int TransactionFilterProxy::rowCount(rowCount104,3165

src/qt/optionsmodel.cpp,636
OptionsModel::OptionsModel(32,721
void OptionsModel::addOverriddenOption(addOverriddenOption38,848
void OptionsModel::Init(Init44,1100
void OptionsModel::Reset(Reset181,6968
int OptionsModel::rowCount(rowCount203,7556
QVariant OptionsModel::data(data209,7692
bool OptionsModel::setData(setData295,10676
void OptionsModel::setDisplayUnit(setDisplayUnit475,18226
bool OptionsModel::getProxySettings(getProxySettings486,18497
void OptionsModel::setRestartRequired(setRestartRequired504,19014
bool OptionsModel::isRestartRequired(isRestartRequired510,19158
void OptionsModel::checkAndMigrate(checkAndMigrate516,19289

src/qt/abiparamitem.h,271
#define ABIPARAMITEM_H2,24
class ABIParamItem 11,174
    QToolButton *m_buttonAdd;m_buttonAdd38,774
    QToolButton *m_buttonRemove;m_buttonRemove39,805
    QValidatedLineEdit *m_itemValue;m_itemValue40,839
    int m_position;41,877
    bool m_isDeleted;42,898

src/qt/moc_walletview.cpp,1145
struct qt_meta_stringdata_WalletView_t 22,755
    QByteArrayData data[data23,796
    char stringdata0[stringdata024,825
#define QT_MOC_LITERAL(26,855
static const qt_meta_stringdata_WalletView_t qt_meta_stringdata_WalletView 31,1086
#undef QT_MOC_LITERAL107,4568
static const uint qt_meta_data_WalletView[qt_meta_data_WalletView109,4591
void WalletView::qt_static_metacall(qt_static_metacall205,8324
QT_INIT_METAOBJECT const QMetaObject WalletView::staticMetaObject 303,13673
const QMetaObject *WalletView::metaObject(metaObject309,13895
void *WalletView::qt_metacast(qt_metacast314,14047
int WalletView::qt_metacall(qt_metacall322,14296
void WalletView::showNormalIfMinimized(showNormalIfMinimized340,14791
void WalletView::message(message346,14913
void WalletView::encryptionStatusChanged(encryptionStatusChanged353,15272
void WalletView::hdEnabledStatusChanged(hdEnabledStatusChanged360,15484
void WalletView::incomingTransaction(incomingTransaction367,15695
void WalletView::incomingTokenTransaction(incomingTokenTransaction374,16288
void WalletView::outOfSyncWarningClicked(outOfSyncWarningClicked381,16898

src/qt/trafficgraphwidget.cpp,545
#define DESIRED_SAMPLES 14,328
#define XMARGIN 16,365
#define YMARGIN 17,400
TrafficGraphWidget::TrafficGraphWidget(19,436
void TrafficGraphWidget::setClientModel(setClientModel34,753
int TrafficGraphWidget::getGraphRangeMins(getGraphRangeMins43,968
void TrafficGraphWidget::paintPath(paintPath48,1041
void TrafficGraphWidget::paintEvent(paintEvent63,1558
void TrafficGraphWidget::updateRates(updateRates121,3477
void TrafficGraphWidget::setGraphRangeMins(setGraphRangeMins152,4340
void TrafficGraphWidget::clear(clear162,4551

src/qt/tabbarinfo.h,404
#define TABBARINFO_H2,22
class TabBarInfo 13,291
    int m_current;86,1957
    QMap<QMap87,1977
    QMap<int, QString> m_mapName;87,1977
    QMap<QMap88,2012
    QMap<int, bool> m_mapVisible;88,2012
    QMap<QMap89,2047
    QMap<int, int> m_mapTabInfo;89,2047
    QStackedWidget* m_stack;90,2081
    QTabBar* m_tabBar;91,2111
    bool m_attached;92,2135
    QIcon* m_iconCloseTab;93,2157

src/qt/askpassphrasedialog.cpp,517
AskPassphraseDialog::AskPassphraseDialog(23,546
AskPassphraseDialog::~AskPassphraseDialog(~AskPassphraseDialog89,3341
void AskPassphraseDialog::setModel(setModel95,3434
void AskPassphraseDialog::accept(accept100,3521
void AskPassphraseDialog::textChanged(textChanged213,8263
bool AskPassphraseDialog::event(event234,9001
bool AskPassphraseDialog::eventFilter(eventFilter251,9486
static void SecureClearQLineEdit(277,10579
void AskPassphraseDialog::secureClearPassFields(secureClearPassFields284,10793

src/qt/addtokenpage.cpp,680
AddTokenPage::AddTokenPage(18,420
AddTokenPage::~AddTokenPage(~AddTokenPage50,1782
void AddTokenPage::setClientModel(setClientModel59,1908
void AddTokenPage::clearAll(clearAll69,2171
void AddTokenPage::setModel(setModel78,2434
void AddTokenPage::on_clearButton_clicked(on_clearButton_clicked85,2708
void AddTokenPage::on_confirmButton_clicked(on_confirmButton_clicked90,2778
void AddTokenPage::on_addressChanged(on_addressChanged129,4473
void AddTokenPage::on_numBlocksChanged(on_numBlocksChanged147,5175
void AddTokenPage::on_updateConfirmButton(on_updateConfirmButton152,5271
void AddTokenPage::on_zeroBalanceAddressToken(on_zeroBalanceAddressToken167,5612

src/qt/moc_transactiondescdialog.cpp,756
struct qt_meta_stringdata_TransactionDescDialog_t 22,788
    QByteArrayData data[data23,840
    char stringdata0[stringdata024,868
#define QT_MOC_LITERAL(26,897
static const qt_meta_stringdata_TransactionDescDialog_t qt_meta_stringdata_TransactionDescDialog 31,1139
#undef QT_MOC_LITERAL38,1337
static const uint qt_meta_data_TransactionDescDialog[qt_meta_data_TransactionDescDialog40,1360
void TransactionDescDialog::qt_static_metacall(qt_static_metacall56,1722
QT_INIT_METAOBJECT const QMetaObject TransactionDescDialog::staticMetaObject 64,1902
const QMetaObject *TransactionDescDialog::metaObject(metaObject70,2150
void *TransactionDescDialog::qt_metacast(qt_metacast75,2313
int TransactionDescDialog::qt_metacall(qt_metacall83,2577

src/qt/intro.cpp,1198
static const uint64_t GB_BYTES 24,467
static const uint64_t BLOCK_CHAIN_SIZE 26,573
static const uint64_t CHAIN_STATE_SIZE 28,719
static uint64_t requiredSpace;30,842
class FreespaceChecker 42,1368
    enum Status 49,1469
        ST_OK,50,1487
        ST_ERROR51,1502
    Intro *intro;intro61,1654
FreespaceChecker::FreespaceChecker(FreespaceChecker66,1698
void FreespaceChecker::check(check71,1779
Intro::Intro(118,3454
Intro::~Intro(~Intro140,4224
QString Intro::getDataDirectory(getDataDirectory148,4362
void Intro::setDataDirectory(setDataDirectory153,4439
QString Intro::getDefaultDataDirectory(getDefaultDataDirectory168,4883
bool Intro::pickDataDirectory(pickDataDirectory173,4990
void Intro::setStatus(setStatus223,7008
void Intro::on_dataDirectory_textChanged(on_dataDirectory_textChanged255,8175
void Intro::on_ellipsisButton_clicked(on_ellipsisButton_clicked262,8399
void Intro::on_dataDirDefault_clicked(on_dataDirDefault_clicked269,8642
void Intro::on_dataDirCustom_clicked(on_dataDirCustom_clicked274,8736
void Intro::startThread(startThread280,8863
void Intro::checkPath(checkPath295,9418
QString Intro::getPathToCheck(getPathToCheck307,9622

src/qt/guiutil.cpp,3469
#undef _WIN32_WINNT22,549
#define _WIN32_WINNT 24,576
#undef _WIN32_IE26,621
#define _WIN32_IE 28,645
#define WIN32_LEAN_AND_MEAN 29,670
#define NOMINMAX31,717
static boost::filesystem::detail::utf8_codecvt_facet utf8;72,1562
#define NSAppKitVersionNumber10_8 78,1728
#define NSAppKitVersionNumber10_9 81,1814
namespace GUIUtil 85,1868
QString dateTimeStr(87,1889
QString dateTimeStr(92,2037
QFont fixedPitchFont(97,2138
static const uint8_t dummydata[dummydata113,2528
static std::string DummyAddress(116,2767
void setupAddressWidget(129,3296
void setupAmountWidget(144,3897
bool parseBitcoinURI(153,4207
bool parseBitcoinURI(214,5833
QString formatBitcoinURI(228,6353
bool isDust(256,7115
QString HtmlEscape(264,7376
QString HtmlEscape(278,7660
void copyEntryData(283,7789
void copyEntryDataFromList(296,8125
QList<QModelIndex> getEntryData(308,8453
QString getSaveFileName(315,8662
QString getOpenFileName(365,10163
Qt::ConnectionType blockingGUIThreadConnection(400,11287
bool checkPoint(412,11507
bool isObscured(419,11692
void openDebugLogfile(428,12005
void SubstituteFonts(437,12293
ToolTipToRichTextFilter::ToolTipToRichTextFilter(473,13892
bool ToolTipToRichTextFilter::eventFilter(eventFilter480,14044
void TableViewLastColumnResizingFixer::connectViewHeadersSignals(connectViewHeadersSignals498,14731
void TableViewLastColumnResizingFixer::disconnectViewHeadersSignals(disconnectViewHeadersSignals505,15141
void TableViewLastColumnResizingFixer::setViewHeaderResizeMode(setViewHeaderResizeMode513,15592
void TableViewLastColumnResizingFixer::resizeColumn(resizeColumn522,15912
int TableViewLastColumnResizingFixer::getColumnsWidth(getColumnsWidth528,16121
int TableViewLastColumnResizingFixer::getAvailableWidthForColumn(getAvailableWidthForColumn538,16370
void TableViewLastColumnResizingFixer::adjustTableColumnsWidth(adjustTableColumnsWidth553,16863
void TableViewLastColumnResizingFixer::stretchColumnWidth(stretchColumnWidth568,17405
void TableViewLastColumnResizingFixer::on_sectionResized(on_sectionResized576,17691
void TableViewLastColumnResizingFixer::on_geometriesChanged(on_geometriesChanged588,18161
TableViewLastColumnResizingFixer::TableViewLastColumnResizingFixer(602,18620
boost::filesystem::path static StartupShortcutPath(617,19342
bool GetStartOnSystemStartup(627,19833
bool SetStartOnSystemStartup(633,19960
boost::filesystem::path static GetAutostartDir(706,22563
boost::filesystem::path static GetAutostartFilePath(717,22906
bool GetStartOnSystemStartup(725,23173
bool SetStartOnSystemStartup(744,23646
LSSharedFileListItemRef findStartupItemInList(786,25275
bool GetStartOnSystemStartup(818,26589
bool SetStartOnSystemStartup(826,26952
bool GetStartOnSystemStartup(845,27671
bool SetStartOnSystemStartup(846,27720
void saveWindowGeometry(850,27793
void restoreWindowGeometry(857,28008
void setClipboard(873,28540
boost::filesystem::path qstringToBoostPath(880,28753
QString boostPathToQString(885,28884
boost::filesystem::path qstringToBoostPath(891,29133
QString boostPathToQString(896,29258
QString formatDurationStr(902,29384
QString formatServicesStr(922,29964
QString formatPingTime(960,30932
QString formatTimeOffset(965,31166
QString formatNiceTimeOffset(970,31299
void ClickableLabel::mouseReleaseEvent(mouseReleaseEvent1007,32539
void ClickableProgressBar::mouseReleaseEvent(mouseReleaseEvent1012,32641
void formatToolButtons(1017,32745

src/qt/addresstablemodel.h,740
#define BITCOIN_QT_ADDRESSTABLEMODEL_H6,234
class AddressTableModel 19,499
    enum ColumnIndex 27,677
        Label 28,700
        Address 29,750
    enum RoleIndex 32,803
        TypeRole 33,824
    enum EditStatus 37,958
        OK,38,980
        NO_CHANGES,39,1034
        INVALID_ADDRESS,40,1117
        DUPLICATE_ADDRESS,41,1177
        WALLET_UNLOCK_FAILURE,42,1249
        KEY_GENERATION_FAILURE 43,1350
    static const QString Send;46,1457
    static const QString Receive;47,1524
    EditStatus getEditStatus(75,2728
    WalletModel *walletModel;walletModel78,2798
    CWallet *wallet;wallet79,2828
    AddressTablePriv *priv;priv80,2849
    QStringList columns;81,2877
    EditStatus editStatus;82,2902

src/qt/navigationbar.cpp,1148
namespace NavigationBar_NS10,204
static const int ToolButtonWidth 12,235
static const int ToolButtonHeight 13,276
static const int ToolButtonIconSize 14,317
static const int MarginLeft 15,360
static const int MarginRight 16,394
static const int MarginTop 17,429
static const int MarginBottom 18,462
static const int ButtonSpacing 19,498
static const int SubNavPaddingRight 20,535
class NavToolButton 24,618
    explicit NavToolButton(27,672
    void paintEvent(34,840
    void drawLabel(63,1555
    void updateIcon(110,3243
    bool m_subBar;129,3895
    bool m_iconCached;130,3915
    QIcon m_hoverIcon;131,3939
NavigationBar::NavigationBar(134,3969
void NavigationBar::addAction(addAction142,4138
QAction *NavigationBar::addGroup(addGroup148,4256
QAction *NavigationBar::addGroup(addGroup156,4486
void NavigationBar::buildUi(buildUi164,4691
void NavigationBar::onSubBarClick(onSubBarClick251,7949
void NavigationBar::setToolButtonStyle(setToolButtonStyle278,8583
void NavigationBar::resizeEvent(resizeEvent284,8738
void NavigationBar::mapGroup(mapGroup290,8859
void NavigationBar::setSubBar(setSubBar297,9030

src/qt/abiparamsfield.h,227
#define CONTRACTFUNCTIONFIELD_H2,33
class ABIParamsField 16,288
    QVBoxLayout *m_mainLayout;m_mainLayout52,1275
    QList<ABIParam*> m_listParams;53,1307
    const PlatformStyle *m_platfromStyle;m_platfromStyle54,1343

src/qt/receivetokenpage.cpp,342
ReceiveTokenPage::ReceiveTokenPage(9,181
ReceiveTokenPage::~ReceiveTokenPage(~ReceiveTokenPage21,674
void ReceiveTokenPage::setAddress(setAddress26,737
void ReceiveTokenPage::setSymbol(setSymbol32,844
void ReceiveTokenPage::on_copyAddressClicked(on_copyAddressClicked38,1053
void ReceiveTokenPage::createQRCode(createQRCode44,1182

src/qt/test/compattests.cpp,48
void CompatTests::bswapTests(bswapTests11,348

src/qt/test/paymentservertests.h,156
#define BITCOIN_QT_TEST_PAYMENTSERVERTESTS_H6,240
class PaymentServerTests 13,354
class RecipientCatcher 24,609
    SendCoinsRecipient recipient;32,735

src/qt/test/uritests.h,64
#define BITCOIN_QT_TEST_URITESTS_H6,230
class URITests 11,303

src/qt/test/test_main.cpp,17
int main(37,817

src/qt/test/paymentservertests.cpp,229
X509 *parse_b64der_cert(parse_b64der_cert23,542
static SendCoinsRecipient handleRequest(37,856
void PaymentServerTests::paymentServerTests(paymentServerTests65,1875
void RecipientCatcher::getRecipient(getRecipient208,8312

src/qt/test/rpcnestedtests.cpp,160
static UniValue rpcNestedTest_rpc(22,514
static const CRPCCommand vRPCCommands[vRPCCommands30,685
void RPCNestedTests::rpcNestedTests(rpcNestedTests35,796

src/qt/test/uritests.cpp,41
void URITests::uriTests(uriTests12,282

src/qt/test/rpcnestedtests.h,130
#define BITCOIN_QT_TEST_RPC_NESTED_TESTS_H6,233
class RPCNestedTests 14,356
    CCoinsViewDB *pcoinsdbview;pcoinsdbview22,468

src/qt/test/paymentrequestdata.h,586
const char* caCert1_BASE64 18,596
const char* caCert2_BASE64 43,1802
const char* paymentrequest1_cert1_BASE64 67,2937
const char* paymentrequest2_cert1_BASE64 92,4190
const char* paymentrequest3_cert1_BASE64 117,5452
const char* paymentrequest4_cert1_BASE64 229,12455
const char* paymentrequest5_cert1_BASE64 341,19448
const char* paymentrequest1_cert2_BASE64 363,20558
const char* paymentrequest2_cert2_BASE64 387,21791
const char* paymentrequest3_cert2_BASE64 411,23040
const char* paymentrequest4_cert2_BASE64 435,24317
const char* paymentrequest5_cert2_BASE64 459,25572

src/qt/test/compattests.h,70
#define BITCOIN_QT_TEST_COMPATTESTS_H6,233
class CompatTests 11,309

src/qt/moc_contractresult.cpp,686
struct qt_meta_stringdata_ContractResult_t 22,767
    QByteArrayData data[data23,812
    char stringdata0[stringdata024,840
#define QT_MOC_LITERAL(26,869
static const qt_meta_stringdata_ContractResult_t qt_meta_stringdata_ContractResult 31,1104
#undef QT_MOC_LITERAL38,1274
static const uint qt_meta_data_ContractResult[qt_meta_data_ContractResult40,1297
void ContractResult::qt_static_metacall(qt_static_metacall56,1652
QT_INIT_METAOBJECT const QMetaObject ContractResult::staticMetaObject 64,1825
const QMetaObject *ContractResult::metaObject(metaObject70,2059
void *ContractResult::qt_metacast(qt_metacast75,2215
int ContractResult::qt_metacall(qt_metacall83,2472

src/qt/addresstablemodel.cpp,1775
const QString AddressTableModel::Send 18,388
const QString AddressTableModel::Receive 19,433
struct AddressTableEntry21,482
    enum Type 23,509
        Sending,24,525
        Receiving,25,542
        Hidden 26,561
    Type type;29,634
    QString label;30,649
    QString address;31,668
    AddressTableEntry(33,690
    AddressTableEntry(34,717
struct AddressTableEntryLessThan38,861
    bool operator()(operator()40,896
    bool operator()(operator()44,1028
    bool operator()(operator()48,1142
static AddressTableEntry::Type translateTransactionType(55,1310
class AddressTablePriv69,1973
    CWallet *wallet;wallet72,2006
    QList<AddressTableEntry> cachedAddressTable;73,2027
    AddressTableModel *parent;parent74,2076
    AddressTablePriv(76,2108
    void refreshAddressTable(79,2221
    void updateEntry(102,3430
    int size(149,5442
    AddressTableEntry *index(index154,5512
AddressTableModel::AddressTableModel(167,5742
AddressTableModel::~AddressTableModel(~AddressTableModel175,6026
int AddressTableModel::rowCount(rowCount180,6088
int AddressTableModel::columnCount(columnCount186,6205
QVariant AddressTableModel::data(data192,6329
bool AddressTableModel::setData(setData239,7422
QVariant AddressTableModel::headerData(headerData295,9691
Qt::ItemFlags AddressTableModel::flags(flags307,9987
QModelIndex AddressTableModel::index(index324,10562
void AddressTableModel::updateEntry(updateEntry338,10863
QString AddressTableModel::addRow(addRow345,11122
bool AddressTableModel::removeRows(removeRows404,12814
QString AddressTableModel::labelForAddress(labelForAddress423,13442
int AddressTableModel::lookupAddress(lookupAddress437,13895
void AddressTableModel::emitDataChanged(emitDataChanged451,14216

src/qt/sendtokenpage.cpp,966
static const CAmount SINGLE_STEP 19,431
struct SelectedToken{SelectedToken21,486
    std::string address;22,509
    std::string sender;23,535
    std::string symbol;24,560
    int8_t decimals;25,585
    std::string balance;26,607
    SelectedToken(27,633
SendTokenPage::SendTokenPage(32,690
SendTokenPage::~SendTokenPage(~SendTokenPage67,2043
void SendTokenPage::setModel(setModel76,2171
void SendTokenPage::setClientModel(setClientModel81,2253
void SendTokenPage::clearAll(clearAll92,2521
bool SendTokenPage::isValidAddress(isValidAddress101,2795
bool SendTokenPage::isDataValid(isDataValid107,2924
void SendTokenPage::on_clearButton_clicked(on_clearButton_clicked123,3275
void SendTokenPage::on_numBlocksChanged(on_numBlocksChanged128,3346
void SendTokenPage::on_updateConfirmButton(on_updateConfirmButton144,4083
void SendTokenPage::on_confirmClicked(on_confirmClicked155,4335
void SendTokenPage::setTokenData(setTokenData217,7165

src/qt/bitcoinunits.cpp,1003
BitcoinUnits::BitcoinUnits(11,283
QList<BitcoinUnits::Unit> BitcoinUnits::availableUnits(availableUnits16,435
bool BitcoinUnits::valid(valid25,638
QString BitcoinUnits::name(name37,804
QString BitcoinUnits::description(description51,1069
qint64 BitcoinUnits::factor(factor65,1416
int256_t BitcoinUnits::tokenFactor(tokenFactor79,1637
int BitcoinUnits::decimals(decimals89,1856
QString BitcoinUnits::format(format103,2053
QString BitcoinUnits::formatWithUnit(formatWithUnit142,3576
QString BitcoinUnits::formatHtmlWithUnit(formatHtmlWithUnit147,3776
bool BitcoinUnits::parse(parse155,4103
bool BitcoinUnits::parseToken(parseToken189,5025
QString BitcoinUnits::formatToken(formatToken235,6102
QString BitcoinUnits::formatTokenWithUnit(formatTokenWithUnit271,7349
QString BitcoinUnits::getAmountColumnTitle(getAmountColumnTitle276,7587
int BitcoinUnits::rowCount(rowCount285,7823
QVariant BitcoinUnits::data(data291,7938
CAmount BitcoinUnits::maxMoney(maxMoney309,8438

src/qt/bitcoinamountfield.cpp,1460
class AmountSpinBox:AmountSpinBox20,533
    explicit AmountSpinBox(25,602
    QValidator::State validate(36,922
    void fixup(46,1281
    CAmount value(58,1615
    void setValue(63,1712
    void stepBy(70,1949
    void setDisplayUnit(79,2185
    void setSingleStep(92,2406
    QSize minimumSizeHint(97,2490
    CAmount minimum(130,3869
    void setMinimum(135,3936
    int currentUnit;143,4055
    CAmount singleStep;144,4076
    CAmount minAmount;145,4100
    mutable QSize cachedMinimumSizeHint;146,4123
    CAmount parse(153,4306
    bool event(168,4699
    StepEnabled stepEnabled(183,5302
BitcoinAmountField::BitcoinAmountField(209,5934
void BitcoinAmountField::clear(clear240,6947
void BitcoinAmountField::setEnabled(setEnabled246,7036
bool BitcoinAmountField::validate(validate252,7158
void BitcoinAmountField::setValid(setValid260,7281
bool BitcoinAmountField::eventFilter(eventFilter268,7454
QWidget *BitcoinAmountField::setupTabChain(setupTabChain278,7693
CAmount BitcoinAmountField::value(value285,7853
void BitcoinAmountField::setValue(setValue290,7952
void BitcoinAmountField::setReadOnly(setReadOnly295,8042
void BitcoinAmountField::unitChanged(unitChanged300,8136
void BitcoinAmountField::setDisplayUnit(setDisplayUnit311,8462
void BitcoinAmountField::setSingleStep(setSingleStep316,8549
CAmount BitcoinAmountField::minimum(minimum321,8647
void BitcoinAmountField::setMinimum(setMinimum326,8726

src/qt/restoredialog.h,152
#define RESTOREDIALOG_H2,24
namespace Ui 8,89
class RestoreDialog 15,191
    Ui::RestoreDialog *ui;ui72,1379
    WalletModel *model;model73,1406

src/qt/qrc_bitcoin.cpp,830
static const unsigned char qt_resource_data[qt_resource_data8,244
static const unsigned char qt_resource_name[qt_resource_name66715,5429883
static const unsigned char qt_resource_struct[qt_resource_struct67545,5456798
#  define QT_RCC_PREPEND_NAMESPACE(68033,5477558
#  define QT_RCC_MANGLE_NAMESPACE0(68034,5477620
#  define QT_RCC_MANGLE_NAMESPACE1(68035,5477660
#  define QT_RCC_MANGLE_NAMESPACE2(68036,5477709
#  define QT_RCC_MANGLE_NAMESPACE(68037,5477780
#   define QT_RCC_PREPEND_NAMESPACE(68040,5477934
#   define QT_RCC_MANGLE_NAMESPACE(68041,5477981
namespace QT_NAMESPACE 68045,5478055
int QT_RCC_MANGLE_NAMESPACE(68057,5478381
int QT_RCC_MANGLE_NAMESPACE(68065,5478635
   struct initializer 68073,5478847
       initializer(68074,5478871
       ~initializer(68075,5478947
   } dummy;68076,5479027

src/qt/moc_abiparam.cpp,627
struct qt_meta_stringdata_ABIParam_t 22,749
    QByteArrayData data[data23,788
    char stringdata0[stringdata024,816
#define QT_MOC_LITERAL(26,845
static const qt_meta_stringdata_ABIParam_t qt_meta_stringdata_ABIParam 31,1074
#undef QT_MOC_LITERAL43,1439
static const uint qt_meta_data_ABIParam[qt_meta_data_ABIParam45,1462
void ABIParam::qt_static_metacall(qt_static_metacall69,2061
QT_INIT_METAOBJECT const QMetaObject ABIParam::staticMetaObject 82,2495
const QMetaObject *ABIParam::metaObject(metaObject88,2704
void *ABIParam::qt_metacast(qt_metacast93,2854
int ABIParam::qt_metacall(qt_metacall101,3092

src/qt/moc_addresstablemodel.cpp,717
struct qt_meta_stringdata_AddressTableModel_t 22,776
    QByteArrayData data[data23,824
    char stringdata0[stringdata024,852
#define QT_MOC_LITERAL(26,881
static const qt_meta_stringdata_AddressTableModel_t qt_meta_stringdata_AddressTableModel 31,1119
#undef QT_MOC_LITERAL46,1631
static const uint qt_meta_data_AddressTableModel[qt_meta_data_AddressTableModel48,1654
void AddressTableModel::qt_static_metacall(qt_static_metacall70,2273
QT_INIT_METAOBJECT const QMetaObject AddressTableModel::staticMetaObject 82,2824
const QMetaObject *AddressTableModel::metaObject(metaObject88,3072
void *AddressTableModel::qt_metacast(qt_metacast93,3231
int AddressTableModel::qt_metacall(qt_metacall101,3499

src/qt/moc_guiutil.cpp,3604
struct qt_meta_stringdata_GUIUtil__ToolTipToRichTextFilter_t 22,746
    QByteArrayData data[data23,809
    char stringdata0[stringdata024,837
#define QT_MOC_LITERAL(26,866
static const qt_meta_stringdata_GUIUtil__ToolTipToRichTextFilter_t qt_meta_stringdata_GUIUtil__ToolTipToRichTextFilter 31,1119
#undef QT_MOC_LITERAL38,1361
static const uint qt_meta_data_GUIUtil__ToolTipToRichTextFilter[qt_meta_data_GUIUtil__ToolTipToRichTextFilter40,1384
void GUIUtil::ToolTipToRichTextFilter::qt_static_metacall(qt_static_metacall56,1757
QT_INIT_METAOBJECT const QMetaObject GUIUtil::ToolTipToRichTextFilter::staticMetaObject 64,1948
const QMetaObject *GUIUtil::ToolTipToRichTextFilter::metaObject(metaObject70,2229
void *GUIUtil::ToolTipToRichTextFilter::qt_metacast(qt_metacast75,2403
int GUIUtil::ToolTipToRichTextFilter::qt_metacall(qt_metacall83,2689
struct qt_meta_stringdata_GUIUtil__TableViewLastColumnResizingFixer_t 88,2846
    QByteArrayData data[data89,2918
    char stringdata0[stringdata090,2946
#define QT_MOC_LITERAL(92,2976
static const qt_meta_stringdata_GUIUtil__TableViewLastColumnResizingFixer_t qt_meta_stringdata_GUIUtil__TableViewLastColumnResizingFixer 97,3238
#undef QT_MOC_LITERAL112,3854
static const uint qt_meta_data_GUIUtil__TableViewLastColumnResizingFixer[qt_meta_data_GUIUtil__TableViewLastColumnResizingFixer114,3877
void GUIUtil::TableViewLastColumnResizingFixer::qt_static_metacall(qt_static_metacall138,4533
QT_INIT_METAOBJECT const QMetaObject GUIUtil::TableViewLastColumnResizingFixer::staticMetaObject 151,5092
const QMetaObject *GUIUtil::TableViewLastColumnResizingFixer::metaObject(metaObject157,5400
void *GUIUtil::TableViewLastColumnResizingFixer::qt_metacast(qt_metacast162,5583
int GUIUtil::TableViewLastColumnResizingFixer::qt_metacall(qt_metacall170,5887
struct qt_meta_stringdata_GUIUtil__ClickableLabel_t 186,6389
    QByteArrayData data[data187,6443
    char stringdata0[stringdata0188,6471
#define QT_MOC_LITERAL(190,6500
static const qt_meta_stringdata_GUIUtil__ClickableLabel_t qt_meta_stringdata_GUIUtil__ClickableLabel 195,6744
#undef QT_MOC_LITERAL205,7076
static const uint qt_meta_data_GUIUtil__ClickableLabel[qt_meta_data_GUIUtil__ClickableLabel207,7099
void GUIUtil::ClickableLabel::qt_static_metacall(qt_static_metacall229,7630
QT_INIT_METAOBJECT const QMetaObject GUIUtil::ClickableLabel::staticMetaObject 250,8364
const QMetaObject *GUIUtil::ClickableLabel::metaObject(metaObject256,8617
void *GUIUtil::ClickableLabel::qt_metacast(qt_metacast261,8782
int GUIUtil::ClickableLabel::qt_metacall(qt_metacall269,9049
void GUIUtil::ClickableLabel::clicked(clicked287,9545
struct qt_meta_stringdata_GUIUtil__ClickableProgressBar_t 292,9752
    QByteArrayData data[data293,9812
    char stringdata0[stringdata0294,9840
#define QT_MOC_LITERAL(296,9869
static const qt_meta_stringdata_GUIUtil__ClickableProgressBar_t qt_meta_stringdata_GUIUtil__ClickableProgressBar 301,10119
#undef QT_MOC_LITERAL312,10482
static const uint qt_meta_data_GUIUtil__ClickableProgressBar[qt_meta_data_GUIUtil__ClickableProgressBar314,10505
void GUIUtil::ClickableProgressBar::qt_static_metacall(qt_static_metacall336,11042
QT_INIT_METAOBJECT const QMetaObject GUIUtil::ClickableProgressBar::staticMetaObject 357,11806
const QMetaObject *GUIUtil::ClickableProgressBar::metaObject(metaObject363,12083
void *GUIUtil::ClickableProgressBar::qt_metacast(qt_metacast368,12254
int GUIUtil::ClickableProgressBar::qt_metacall(qt_metacall376,12539
void GUIUtil::ClickableProgressBar::clicked(clicked394,13047

src/qt/editaddressdialog.h,445
#define BITCOIN_QT_EDITADDRESSDIALOG_H6,234
namespace Ui 12,320
class EditAddressDialog 22,495
    enum Mode 27,560
        NewReceivingAddress,28,576
        NewSendingAddress,29,605
        EditReceivingAddress,30,632
        EditSendingAddress31,662
    Ui::EditAddressDialog *ui;ui49,1008
    QDataWidgetMapper *mapper;mapper50,1039
    Mode mode;51,1070
    AddressTableModel *model;model52,1085
    QString address;54,1116

src/qt/callcontract.h,484
#define CALLCONTRACT_H2,24
namespace Ui 15,250
class CallContract 19,292
    Ui::CallContract *ui;ui51,1132
    WalletModel* m_model;52,1159
    ClientModel* m_clientModel;53,1186
    ContractTableModel* m_contractModel;54,1219
    ExecRPCCommand* m_execRPCCommand;55,1261
    ABIFunctionField* m_ABIFunctionField;56,1300
    ContractABI* m_contractABI;57,1343
    TabBarInfo* m_tabInfo;58,1376
    const PlatformStyle* m_platformStyle;59,1404
    int m_results;60,1447

src/qt/moc_transactiondesc.cpp,696
struct qt_meta_stringdata_TransactionDesc_t 22,770
    QByteArrayData data[data23,816
    char stringdata0[stringdata024,844
#define QT_MOC_LITERAL(26,873
static const qt_meta_stringdata_TransactionDesc_t qt_meta_stringdata_TransactionDesc 31,1109
#undef QT_MOC_LITERAL38,1283
static const uint qt_meta_data_TransactionDesc[qt_meta_data_TransactionDesc40,1306
void TransactionDesc::qt_static_metacall(qt_static_metacall56,1662
QT_INIT_METAOBJECT const QMetaObject TransactionDesc::staticMetaObject 64,1836
const QMetaObject *TransactionDesc::metaObject(metaObject70,2066
void *TransactionDesc::qt_metacast(qt_metacast75,2223
int TransactionDesc::qt_metacall(qt_metacall83,2475

src/qt/moc_optionsdialog.cpp,1501
struct qt_meta_stringdata_ProxyAddressValidator_t 22,764
    QByteArrayData data[data23,816
    char stringdata0[stringdata024,844
#define QT_MOC_LITERAL(26,873
static const qt_meta_stringdata_ProxyAddressValidator_t qt_meta_stringdata_ProxyAddressValidator 31,1115
#undef QT_MOC_LITERAL38,1313
static const uint qt_meta_data_ProxyAddressValidator[qt_meta_data_ProxyAddressValidator40,1336
void ProxyAddressValidator::qt_static_metacall(qt_static_metacall56,1698
QT_INIT_METAOBJECT const QMetaObject ProxyAddressValidator::staticMetaObject 64,1878
const QMetaObject *ProxyAddressValidator::metaObject(metaObject70,2129
void *ProxyAddressValidator::qt_metacast(qt_metacast75,2292
int ProxyAddressValidator::qt_metacall(qt_metacall83,2559
struct qt_meta_stringdata_OptionsDialog_t 88,2708
    QByteArrayData data[data89,2752
    char stringdata0[stringdata090,2781
#define QT_MOC_LITERAL(92,2811
static const qt_meta_stringdata_OptionsDialog_t qt_meta_stringdata_OptionsDialog 97,3045
#undef QT_MOC_LITERAL128,4358
static const uint qt_meta_data_OptionsDialog[qt_meta_data_OptionsDialog130,4381
void OptionsDialog::qt_static_metacall(qt_static_metacall176,5764
QT_INIT_METAOBJECT const QMetaObject OptionsDialog::staticMetaObject 207,7177
const QMetaObject *OptionsDialog::metaObject(metaObject213,7401
void *OptionsDialog::qt_metacast(qt_metacast218,7556
int OptionsDialog::qt_metacall(qt_metacall226,7804
void OptionsDialog::proxyIpChecks(proxyIpChecks244,8295

src/qt/moc_csvmodelwriter.cpp,686
struct qt_meta_stringdata_CSVModelWriter_t 22,767
    QByteArrayData data[data23,812
    char stringdata0[stringdata024,840
#define QT_MOC_LITERAL(26,869
static const qt_meta_stringdata_CSVModelWriter_t qt_meta_stringdata_CSVModelWriter 31,1104
#undef QT_MOC_LITERAL38,1274
static const uint qt_meta_data_CSVModelWriter[qt_meta_data_CSVModelWriter40,1297
void CSVModelWriter::qt_static_metacall(qt_static_metacall56,1652
QT_INIT_METAOBJECT const QMetaObject CSVModelWriter::staticMetaObject 64,1825
const QMetaObject *CSVModelWriter::metaObject(metaObject70,2052
void *CSVModelWriter::qt_metacast(qt_metacast75,2208
int CSVModelWriter::qt_metacall(qt_metacall83,2458

src/qt/sendcoinsdialog.cpp,2745
#define SEND_CONFIRM_DELAY 34,865
SendCoinsDialog::SendCoinsDialog(36,897
void SendCoinsDialog::setClientModel(setClientModel119,5693
void SendCoinsDialog::setModel(setModel128,5950
SendCoinsDialog::~SendCoinsDialog(~SendCoinsDialog185,9428
void SendCoinsDialog::on_sendButton_clicked(on_sendButton_clicked197,9878
void SendCoinsDialog::clear(clear352,15435
void SendCoinsDialog::reject(reject364,15657
void SendCoinsDialog::accept(accept369,15706
SendCoinsEntry *SendCoinsDialog::addEntry(addEntry374,15755
void SendCoinsDialog::updateTabsAndLabels(updateTabsAndLabels396,16602
void SendCoinsDialog::removeEntry(removeEntry402,16704
QWidget *SendCoinsDialog::setupTabChain(setupTabChain415,16961
void SendCoinsDialog::setAddress(setAddress431,17456
void SendCoinsDialog::pasteEntry(pasteEntry451,17909
bool SendCoinsDialog::handlePaymentRequest(handlePaymentRequest475,18435
void SendCoinsDialog::setBalance(setBalance483,18632
void SendCoinsDialog::updateDisplayUnit(updateDisplayUnit500,19337
void SendCoinsDialog::processSendCoinsReturn(processSendCoinsReturn508,19573
void SendCoinsDialog::setMinimumFee(setMinimumFee558,21927
void SendCoinsDialog::updateFeeSectionControls(updateFeeSectionControls564,22080
void SendCoinsDialog::updateGlobalFeeVariables(updateGlobalFeeVariables583,23405
void SendCoinsDialog::updateMinFeeLabel(updateMinFeeLabel606,24400
void SendCoinsDialog::updateSmartFeeLabel(updateSmartFeeLabel614,24709
void SendCoinsDialog::coinControlClipboardQuantity(coinControlClipboardQuantity639,26016
void SendCoinsDialog::coinControlClipboardAmount(coinControlClipboardAmount645,26189
void SendCoinsDialog::coinControlClipboardFee(coinControlClipboardFee651,26409
void SendCoinsDialog::coinControlClipboardAfterFee(coinControlClipboardAfterFee657,26650
void SendCoinsDialog::coinControlClipboardBytes(coinControlClipboardBytes663,26902
void SendCoinsDialog::coinControlClipboardLowOutput(coinControlClipboardLowOutput669,27091
void SendCoinsDialog::coinControlClipboardChange(coinControlClipboardChange675,27266
void SendCoinsDialog::coinControlFeatureChanged(coinControlFeatureChanged681,27534
void SendCoinsDialog::coinControlButtonClicked(coinControlButtonClicked694,27947
void SendCoinsDialog::coinControlChangeChecked(coinControlChangeChecked703,28163
void SendCoinsDialog::coinControlChangeEdited(coinControlChangeEdited718,28653
void SendCoinsDialog::coinControlUpdateLabels(coinControlUpdateLabels775,31067
SendConfirmationDialog::SendConfirmationDialog(828,32832
int SendConfirmationDialog::exec(exec838,33268
void SendConfirmationDialog::countDown(countDown845,33395
void SendConfirmationDialog::updateYesButton(updateYesButton856,33546

src/qt/bantablemodel.cpp,816
bool BannedNodeLessThan::operator()(operator()17,373
class BanTablePriv37,920
    QList<CCombinedBan> cachedBanlist;41,992
    int sortColumn;43,1066
    Qt::SortOrder sortOrder;45,1146
    void refreshBanlist(48,1246
    int size(71,1992
    CCombinedBan *index(index76,2063
BanTableModel::BanTableModel(85,2223
BanTableModel::~BanTableModel(~BanTableModel98,2523
int BanTableModel::rowCount(rowCount103,2592
int BanTableModel::columnCount(columnCount109,2705
QVariant BanTableModel::data(data115,2825
QVariant BanTableModel::headerData(headerData137,3441
Qt::ItemFlags BanTableModel::flags(flags149,3733
QModelIndex BanTableModel::index(index158,3937
void BanTableModel::refresh(refresh168,4182
void BanTableModel::sort(sort175,4310
bool BanTableModel::shouldShow(shouldShow182,4448

src/qt/bitcoin.cpp,2222
Q_DECLARE_METATYPE(85,1877
static std::string Translate(96,2090
static QString GetLangTerritory(101,2216
static void initTranslations(117,2804
void DebugMessageHandler(156,4481
void DebugMessageHandler(162,4654
class BitcoinCore:BitcoinCore173,5048
    boost::thread_group threadGroup;189,5343
    CScheduler scheduler;190,5380
class BitcoinApplication:BitcoinApplication197,5558
    int getReturnValue(223,6293
    QThread *coreThread;coreThread243,6852
    OptionsModel *optionsModel;optionsModel244,6877
    ClientModel *clientModel;clientModel245,6909
    BitcoinGUI *window;window246,6939
    QTimer *pollShutdownTimer;pollShutdownTimer247,6963
    PaymentServer* paymentServer;249,7015
    WalletModel *walletModel;walletModel250,7049
    int returnValue;252,7086
    const PlatformStyle *platformStyle;platformStyle253,7107
    std::unique_ptr<QWidget> shutdownWindow;254,7147
    QString restorePath;258,7218
    QString restoreParam;259,7243
BitcoinCore::BitcoinCore(264,7297
void BitcoinCore::handleRunawayException(handleRunawayException269,7344
void BitcoinCore::initialize(initialize275,7540
void BitcoinCore::shutdown(shutdown304,8251
BitcoinApplication::BitcoinApplication(321,8676
BitcoinApplication::~BitcoinApplication(~BitcoinApplication347,9542
void BitcoinApplication::createPaymentServer(createPaymentServer370,10012
void BitcoinApplication::createOptionsModel(createOptionsModel376,10116
void BitcoinApplication::createWindow(createWindow381,10243
void BitcoinApplication::createSplashScreen(createSplashScreen390,10544
void BitcoinApplication::startThread(startThread400,11032
void BitcoinApplication::parameterSetup(parameterSetup421,11943
void BitcoinApplication::requestInitialize(requestInitialize427,12041
void BitcoinApplication::requestShutdown(requestShutdown434,12199
void BitcoinApplication::initializeResult(initializeResult463,13010
void BitcoinApplication::shutdownResult(shutdownResult520,15114
void BitcoinApplication::handleRunawayException(handleRunawayException526,15286
WId BitcoinApplication::getMainWinId(getMainWinId532,15561
void BitcoinApplication::restoreWallet(restoreWallet540,15675
int main(574,16647

src/qt/qvalidatedtextedit.cpp,835
QValidatedTextEdit::QValidatedTextEdit(6,85
void QValidatedTextEdit::clear(clear17,363
void QValidatedTextEdit::setCheckValidator(setCheckValidator23,451
bool QValidatedTextEdit::isValid(isValid28,549
void QValidatedTextEdit::setValid(setValid42,892
void QValidatedTextEdit::setEnabled(setEnabled60,1183
void QValidatedTextEdit::checkValidity(checkValidity76,1520
void QValidatedTextEdit::markValid(markValid99,2056
void QValidatedTextEdit::focusInEvent(focusInEvent105,2192
void QValidatedTextEdit::focusOutEvent(focusOutEvent111,2317
bool QValidatedTextEdit::getIsValidManually(getIsValidManually117,2445
void QValidatedTextEdit::setIsValidManually(setIsValidManually122,2535
bool QValidatedTextEdit::getEmptyIsValid(getEmptyIsValid127,2630
void QValidatedTextEdit::setEmptyIsValid(setEmptyIsValid132,2714

src/qt/winshutdownmonitor.cpp,193
bool WinShutdownMonitor::nativeEventFilter(nativeEventFilter19,542
void WinShutdownMonitor::registerShutdownBlockReason(registerShutdownBlockReason56,1719
    typedef BOOL (WINAPI 58,1823

src/qt/paymentrequestplus.h,344
#define BITCOIN_QT_PAYMENTREQUESTPLUS_H6,235
static const bool DEFAULT_SELFSIGNED_ROOTCERTS 21,529
class PaymentRequestPlus28,660
    PaymentRequestPlus(31,695
    QList<QList42,1088
    const payments::PaymentDetails& getDetails(44,1146
    payments::PaymentRequest paymentRequest;47,1231
    payments::PaymentDetails details;48,1276

src/qt/token.h,368
#define TOKEN_H2,17
struct TokenEvent{TokenEvent7,96
    std::string address;8,116
    std::string sender;9,142
    std::string receiver;10,167
    uint256 blockHash;11,194
    uint64_t blockNumber;12,218
    uint256 transactionHash;13,245
    uint256 value;14,275
    TokenEvent(16,297
    void SetNull(21,351
class Token32,530
    TokenData* d;77,2744

src/qt/bitcoinstrings.cpp,108
#define UNUSED 7,91
#define UNUSED9,136
static const char UNUSED *bitcoin_strings[bitcoin_strings11,158

src/qt/moc_coincontroldialog.cpp,721
struct qt_meta_stringdata_CoinControlDialog_t 22,776
    QByteArrayData data[data23,824
    char stringdata0[stringdata024,853
#define QT_MOC_LITERAL(26,883
static const qt_meta_stringdata_CoinControlDialog_t qt_meta_stringdata_CoinControlDialog 31,1121
#undef QT_MOC_LITERAL71,2895
static const uint qt_meta_data_CoinControlDialog[qt_meta_data_CoinControlDialog73,2918
void CoinControlDialog::qt_static_metacall(qt_static_metacall135,4956
QT_INIT_METAOBJECT const QMetaObject CoinControlDialog::staticMetaObject 178,6947
const QMetaObject *CoinControlDialog::metaObject(metaObject184,7183
void *CoinControlDialog::qt_metacast(qt_metacast189,7342
int CoinControlDialog::qt_metacall(qt_metacall197,7598

src/qt/paymentrequest.pb.h,25360
#define PROTOBUF_INCLUDED_paymentrequest_2eproto5,142
#define PROTOBUF_INTERNAL_EXPORT_protobuf_paymentrequest_2eproto 34,1287
struct TableStruct 38,1461
  static const ::google::protobuf::internal::ParseTableField entries[entries39,1482
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[aux40,1554
  static const ::google::protobuf::internal::ParseTable schema[schema41,1631
  static const ::google::protobuf::internal::FieldMetadata field_metadata[field_metadata42,1698
  static const ::google::protobuf::internal::SerializationTable serialization_table[serialization_table43,1775
  static const ::google::protobuf::uint32 offsets[offsets44,1862
namespace payments 48,1989
extern OutputDefaultTypeInternal _Output_default_instance_;51,2057
extern PaymentDefaultTypeInternal _Payment_default_instance_;54,2166
extern PaymentACKDefaultTypeInternal _PaymentACK_default_instance_;57,2283
extern PaymentDetailsDefaultTypeInternal _PaymentDetails_default_instance_;60,2414
extern PaymentRequestDefaultTypeInternal _PaymentRequest_default_instance_;63,2553
extern X509CertificatesDefaultTypeInternal _X509Certificates_default_instance_;66,2696
namespace google 68,2801
namespace protobuf 69,2820
namespace payments 78,3467
class Output 82,3561
  inline Output& operator=(operator=89,3752
  Output(94,3860
  inline Output& operator=(operator=99,3946
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields(108,4176
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields(111,4306
  static inline const Output* internal_default_instance(119,4611
  inline Output* New(133,4981
  Output* New(137,5068
  int GetCachedSize(154,5825
  inline ::google::protobuf::Arena* GetArenaNoVirtual(162,6036
  inline void* MaybeArenaPtr(165,6121
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;205,7299
  ::google::protobuf::internal::HasBits<1> _has_bits_;206,7378
  mutable ::google::protobuf::internal::CachedSize _cached_size_;207,7433
  ::google::protobuf::internal::ArenaStringPtr script_;208,7499
  ::google::protobuf::uint64 amount_;209,7555
class PaymentDetails 214,7732
  inline PaymentDetails& operator=(operator=221,7971
  PaymentDetails(226,8095
  inline PaymentDetails& operator=(operator=231,8205
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields(240,8451
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields(243,8581
  static inline const PaymentDetails* internal_default_instance(251,8894
  static constexpr int kIndexInFileMessages 255,9070
  inline PaymentDetails* New(265,9312
  PaymentDetails* New(269,9415
  int GetCachedSize(286,10204
  inline ::google::protobuf::Arena* GetArenaNoVirtual(294,10423
  inline void* MaybeArenaPtr(297,10508
  static const int kOutputsFieldNumber 311,10878
  static const int kNetworkFieldNumber 323,11347
  static const int kMemoFieldNumber 338,11843
  static const int kPaymentUrlFieldNumber 353,12330
  static const int kMerchantDataFieldNumber 368,12891
  static const int kTimeFieldNumber 383,13446
  static const int kExpiresFieldNumber 390,13668
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;409,14223
  ::google::protobuf::internal::HasBits<1> _has_bits_;410,14302
  mutable ::google::protobuf::internal::CachedSize _cached_size_;411,14357
  ::google::protobuf::RepeatedPtrField< ::payments::Output > outputs_;412,14423
  static ::google::protobuf::internal::ExplicitlyConstructed< ::std::string> _i_give_permission_to_break_this_code_default_network_;414,14504
  ::google::protobuf::internal::ArenaStringPtr network_;416,14648
  ::google::protobuf::internal::ArenaStringPtr memo_;417,14705
  ::google::protobuf::internal::ArenaStringPtr payment_url_;418,14759
  ::google::protobuf::internal::ArenaStringPtr merchant_data_;419,14820
  ::google::protobuf::uint64 time_;420,14883
  ::google::protobuf::uint64 expires_;421,14919
class PaymentRequest 426,15097
  inline PaymentRequest& operator=(operator=433,15336
  PaymentRequest(438,15460
  inline PaymentRequest& operator=(operator=443,15570
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields(452,15816
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields(455,15946
  static inline const PaymentRequest* internal_default_instance(463,16259
  static constexpr int kIndexInFileMessages 467,16435
  inline PaymentRequest* New(477,16677
  PaymentRequest* New(481,16780
  int GetCachedSize(498,17569
  inline ::google::protobuf::Arena* GetArenaNoVirtual(506,17788
  inline void* MaybeArenaPtr(509,17873
  static const int kPkiTypeFieldNumber 523,18255
  static const int kPkiDataFieldNumber 538,18771
  static const int kSerializedPaymentDetailsFieldNumber 553,19341
  static const int kSignatureFieldNumber 568,20039
  static const int kPaymentDetailsVersionFieldNumber 583,20626
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;600,21243
  ::google::protobuf::internal::HasBits<1> _has_bits_;601,21322
  mutable ::google::protobuf::internal::CachedSize _cached_size_;602,21377
  static ::google::protobuf::internal::ExplicitlyConstructed< ::std::string> _i_give_permission_to_break_this_code_default_pki_type_;604,21453
  ::google::protobuf::internal::ArenaStringPtr pki_type_;606,21598
  ::google::protobuf::internal::ArenaStringPtr pki_data_;607,21656
  ::google::protobuf::internal::ArenaStringPtr serialized_payment_details_;608,21714
  ::google::protobuf::internal::ArenaStringPtr signature_;609,21790
  ::google::protobuf::uint32 payment_details_version_;610,21849
class X509Certificates 615,22043
  inline X509Certificates& operator=(operator=622,22294
  X509Certificates(627,22422
  inline X509Certificates& operator=(operator=632,22538
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields(641,22788
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields(644,22918
  static inline const X509Certificates* internal_default_instance(652,23233
  static constexpr int kIndexInFileMessages 656,23415
  inline X509Certificates* New(666,23663
  X509Certificates* New(670,23770
  int GetCachedSize(687,24567
  inline ::google::protobuf::Arena* GetArenaNoVirtual(695,24788
  inline void* MaybeArenaPtr(698,24873
  static const int kCertificateFieldNumber 712,25244
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;734,26165
  ::google::protobuf::internal::HasBits<1> _has_bits_;735,26244
  mutable ::google::protobuf::internal::CachedSize _cached_size_;736,26299
  ::google::protobuf::RepeatedPtrField< ::std::string> certificate_;737,26365
class Payment 742,26573
  inline Payment& operator=(operator=749,26770
  Payment(754,26880
  inline Payment& operator=(operator=759,26969
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields(768,27201
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields(771,27331
  static inline const Payment* internal_default_instance(779,27637
  static constexpr int kIndexInFileMessages 783,27792
  inline Payment* New(793,28013
  Payment* New(797,28102
  int GetCachedSize(814,28863
  inline ::google::protobuf::Arena* GetArenaNoVirtual(822,29075
  inline void* MaybeArenaPtr(825,29160
  static const int kTransactionsFieldNumber 839,29534
  static const int kRefundToFieldNumber 861,30491
  static const int kMerchantDataFieldNumber 873,30969
  static const int kMemoFieldNumber 888,31524
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;907,32098
  ::google::protobuf::internal::HasBits<1> _has_bits_;908,32177
  mutable ::google::protobuf::internal::CachedSize _cached_size_;909,32232
  ::google::protobuf::RepeatedPtrField< ::std::string> transactions_;910,32298
  ::google::protobuf::RepeatedPtrField< ::payments::Output > refund_to_;911,32368
  ::google::protobuf::internal::ArenaStringPtr merchant_data_;912,32441
  ::google::protobuf::internal::ArenaStringPtr memo_;913,32504
class PaymentACK 918,32697
  inline PaymentACK& operator=(operator=925,32912
  PaymentACK(930,33028
  inline PaymentACK& operator=(operator=935,33126
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields(944,33364
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields(947,33494
  static inline const PaymentACK* internal_default_instance(955,33803
  static constexpr int kIndexInFileMessages 959,33967
  inline PaymentACK* New(969,34197
  PaymentACK* New(973,34292
  int GetCachedSize(990,35065
  inline ::google::protobuf::Arena* GetArenaNoVirtual(998,35280
  inline void* MaybeArenaPtr(1001,35365
  static const int kMemoFieldNumber 1015,35716
  static const int kPaymentFieldNumber 1030,36202
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;1046,36690
  ::google::protobuf::internal::HasBits<1> _has_bits_;1047,36769
  mutable ::google::protobuf::internal::CachedSize _cached_size_;1048,36824
  ::google::protobuf::internal::ArenaStringPtr memo_;1049,36890
  ::payments::Payment* payment_;1050,36944
inline bool Output::has_amount(has_amount1065,37364
inline void Output::set_has_amount(set_has_amount1068,37452
inline void Output::clear_has_amount(clear_has_amount1071,37525
inline void Output::clear_amount(clear_amount1074,37601
inline ::google::protobuf::uint64 Output::amount(amount1078,37695
inline void Output::set_amount(set_amount1082,37838
inline bool Output::has_script(has_script1089,38041
inline void Output::set_has_script(set_has_script1092,38129
inline void Output::clear_has_script(clear_has_script1095,38202
inline void Output::clear_script(clear_script1098,38278
inline const ::std::string& Output::script(script1102,38432
inline void Output::set_script(set_script1106,38582
inline void Output::set_script(set_script1112,38835
inline void Output::set_script(set_script1119,39100
inline void Output::set_script(set_script1125,39381
inline ::std::string* Output::mutable_script(mutable_script1131,39689
inline ::std::string* Output::release_script(release_script1136,39923
inline void Output::set_allocated_script(set_allocated_script1144,40213
inline bool PaymentDetails::has_network(has_network1159,40684
inline void PaymentDetails::set_has_network(set_has_network1162,40781
inline void PaymentDetails::clear_has_network(clear_has_network1165,40863
inline void PaymentDetails::clear_network(clear_network1168,40948
inline const ::std::string& PaymentDetails::network(network1172,41144
inline void PaymentDetails::set_network(set_network1176,41313
inline void PaymentDetails::set_network(set_network1182,41615
inline void PaymentDetails::set_network(set_network1189,41929
inline void PaymentDetails::set_network(set_network1195,42259
inline ::std::string* PaymentDetails::mutable_network(mutable_network1201,42616
inline ::std::string* PaymentDetails::release_network(release_network1206,42899
inline void PaymentDetails::set_allocated_network(set_allocated_network1214,43239
inline int PaymentDetails::outputs_size(outputs_size1225,43663
inline void PaymentDetails::clear_outputs(clear_outputs1228,43741
inline ::payments::Output* PaymentDetails::mutable_outputs(mutable_outputs1231,43809
PaymentDetails::mutable_outputs(mutable_outputs1236,44061
inline const ::payments::Output& PaymentDetails::outputs(outputs1240,44201
inline ::payments::Output* PaymentDetails::add_outputs(add_outputs1244,44382
PaymentDetails::outputs(outputs1249,44614
inline bool PaymentDetails::has_time(has_time1255,44773
inline void PaymentDetails::set_has_time(set_has_time1258,44867
inline void PaymentDetails::clear_has_time(clear_has_time1261,44946
inline void PaymentDetails::clear_time(clear_time1264,45028
inline ::google::protobuf::uint64 PaymentDetails::time(time1268,45124
inline void PaymentDetails::set_time(set_time1272,45277
inline bool PaymentDetails::has_expires(has_expires1279,45490
inline void PaymentDetails::set_has_expires(set_has_expires1282,45587
inline void PaymentDetails::clear_has_expires(clear_has_expires1285,45669
inline void PaymentDetails::clear_expires(clear_expires1288,45754
inline ::google::protobuf::uint64 PaymentDetails::expires(expires1292,45859
inline void PaymentDetails::set_expires(set_expires1296,46021
inline bool PaymentDetails::has_memo(has_memo1303,46243
inline void PaymentDetails::set_has_memo(set_has_memo1306,46337
inline void PaymentDetails::clear_has_memo(clear_has_memo1309,46416
inline void PaymentDetails::clear_memo(clear_memo1312,46498
inline const ::std::string& PaymentDetails::memo(memo1316,46654
inline void PaymentDetails::set_memo(set_memo1320,46814
inline void PaymentDetails::set_memo(set_memo1326,47075
inline void PaymentDetails::set_memo(set_memo1333,47348
inline void PaymentDetails::set_memo(set_memo1339,47637
inline ::std::string* PaymentDetails::mutable_memo(mutable_memo1345,47953
inline ::std::string* PaymentDetails::release_memo(release_memo1350,48195
inline void PaymentDetails::set_allocated_memo(set_allocated_memo1358,48491
inline bool PaymentDetails::has_payment_url(has_payment_url1369,48856
inline void PaymentDetails::set_has_payment_url(set_has_payment_url1372,48957
inline void PaymentDetails::clear_has_payment_url(clear_has_payment_url1375,49043
inline void PaymentDetails::clear_payment_url(clear_payment_url1378,49132
inline const ::std::string& PaymentDetails::payment_url(payment_url1382,49309
inline void PaymentDetails::set_payment_url(set_payment_url1386,49490
inline void PaymentDetails::set_payment_url(set_payment_url1392,49779
inline void PaymentDetails::set_payment_url(set_payment_url1399,50080
inline void PaymentDetails::set_payment_url(set_payment_url1405,50397
inline ::std::string* PaymentDetails::mutable_payment_url(mutable_payment_url1411,50741
inline ::std::string* PaymentDetails::release_payment_url(release_payment_url1416,51011
inline void PaymentDetails::set_allocated_payment_url(set_allocated_payment_url1424,51342
inline bool PaymentDetails::has_merchant_data(has_merchant_data1435,51764
inline void PaymentDetails::set_has_merchant_data(set_has_merchant_data1438,51867
inline void PaymentDetails::clear_has_merchant_data(clear_has_merchant_data1441,51955
inline void PaymentDetails::clear_merchant_data(clear_merchant_data1444,52046
inline const ::std::string& PaymentDetails::merchant_data(merchant_data1448,52229
inline void PaymentDetails::set_merchant_data(set_merchant_data1452,52416
inline void PaymentDetails::set_merchant_data(set_merchant_data1458,52713
inline void PaymentDetails::set_merchant_data(set_merchant_data1465,53022
inline void PaymentDetails::set_merchant_data(set_merchant_data1471,53347
inline ::std::string* PaymentDetails::mutable_merchant_data(mutable_merchant_data1477,53699
inline ::std::string* PaymentDetails::release_merchant_data(release_merchant_data1482,53977
inline void PaymentDetails::set_allocated_merchant_data(set_allocated_merchant_data1490,54318
inline bool PaymentRequest::has_payment_details_version(has_payment_details_version1505,54872
inline void PaymentRequest::set_has_payment_details_version(set_has_payment_details_version1508,54985
inline void PaymentRequest::clear_has_payment_details_version(clear_has_payment_details_version1511,55083
inline void PaymentRequest::clear_payment_details_version(clear_payment_details_version1514,55184
inline ::google::protobuf::uint32 PaymentRequest::payment_details_version(payment_details_version1518,55320
inline void PaymentRequest::set_payment_details_version(set_payment_details_version1522,55530
inline bool PaymentRequest::has_pki_type(has_pki_type1529,55839
inline void PaymentRequest::set_has_pki_type(set_has_pki_type1532,55937
inline void PaymentRequest::clear_has_pki_type(clear_has_pki_type1535,56020
inline void PaymentRequest::clear_pki_type(clear_pki_type1538,56106
inline const ::std::string& PaymentRequest::pki_type(pki_type1542,56306
inline void PaymentRequest::set_pki_type(set_pki_type1546,56478
inline void PaymentRequest::set_pki_type(set_pki_type1552,56785
inline void PaymentRequest::set_pki_type(set_pki_type1559,57104
inline void PaymentRequest::set_pki_type(set_pki_type1565,57439
inline ::std::string* PaymentRequest::mutable_pki_type(mutable_pki_type1571,57801
inline ::std::string* PaymentRequest::release_pki_type(release_pki_type1576,58089
inline void PaymentRequest::set_allocated_pki_type(set_allocated_pki_type1584,58435
inline bool PaymentRequest::has_pki_data(has_pki_data1595,58858
inline void PaymentRequest::set_has_pki_data(set_has_pki_data1598,58956
inline void PaymentRequest::clear_has_pki_data(clear_has_pki_data1601,59039
inline void PaymentRequest::clear_pki_data(clear_pki_data1604,59125
inline const ::std::string& PaymentRequest::pki_data(pki_data1608,59293
inline void PaymentRequest::set_pki_data(set_pki_data1612,59465
inline void PaymentRequest::set_pki_data(set_pki_data1618,59742
inline void PaymentRequest::set_pki_data(set_pki_data1625,60031
inline void PaymentRequest::set_pki_data(set_pki_data1631,60336
inline ::std::string* PaymentRequest::mutable_pki_data(mutable_pki_data1637,60668
inline ::std::string* PaymentRequest::release_pki_data(release_pki_data1642,60926
inline void PaymentRequest::set_allocated_pki_data(set_allocated_pki_data1650,61242
inline bool PaymentRequest::has_serialized_payment_details(has_serialized_payment_details1661,61653
inline void PaymentRequest::set_has_serialized_payment_details(set_has_serialized_payment_details1664,61769
inline void PaymentRequest::clear_has_serialized_payment_details(clear_has_serialized_payment_details1667,61870
inline void PaymentRequest::clear_serialized_payment_details(clear_serialized_payment_details1670,61974
inline const ::std::string& PaymentRequest::serialized_payment_details(serialized_payment_details1674,62196
inline void PaymentRequest::set_serialized_payment_details(set_serialized_payment_details1678,62422
inline void PaymentRequest::set_serialized_payment_details(set_serialized_payment_details1684,62771
inline void PaymentRequest::set_serialized_payment_details(set_serialized_payment_details1691,63132
inline void PaymentRequest::set_serialized_payment_details(set_serialized_payment_details1697,63509
inline ::std::string* PaymentRequest::mutable_serialized_payment_details(mutable_serialized_payment_details1703,63913
inline ::std::string* PaymentRequest::release_serialized_payment_details(release_serialized_payment_details1708,64243
inline void PaymentRequest::set_allocated_serialized_payment_details(set_allocated_serialized_payment_details1716,64649
inline bool PaymentRequest::has_signature(has_signature1727,65187
inline void PaymentRequest::set_has_signature(set_has_signature1730,65286
inline void PaymentRequest::clear_has_signature(clear_has_signature1733,65370
inline void PaymentRequest::clear_signature(clear_signature1736,65457
inline const ::std::string& PaymentRequest::signature(signature1740,65628
inline void PaymentRequest::set_signature(set_signature1744,65803
inline void PaymentRequest::set_signature(set_signature1750,66084
inline void PaymentRequest::set_signature(set_signature1757,66377
inline void PaymentRequest::set_signature(set_signature1763,66686
inline ::std::string* PaymentRequest::mutable_signature(mutable_signature1769,67022
inline ::std::string* PaymentRequest::release_signature(release_signature1774,67284
inline void PaymentRequest::set_allocated_signature(set_allocated_signature1782,67605
inline int X509Certificates::certificate_size(certificate_size1797,68102
inline void X509Certificates::clear_certificate(clear_certificate1800,68190
inline const ::std::string& X509Certificates::certificate(certificate1803,68268
inline ::std::string* X509Certificates::mutable_certificate(mutable_certificate1807,68460
inline void X509Certificates::set_certificate(set_certificate1811,68656
inline void X509Certificates::set_certificate(set_certificate1816,68885
inline void X509Certificates::set_certificate(set_certificate1821,69112
inline void X509Certificates::set_certificate(set_certificate1826,69354
inline ::std::string* X509Certificates::add_certificate(add_certificate1831,69622
inline void X509Certificates::add_certificate(add_certificate1835,69800
inline void X509Certificates::add_certificate(add_certificate1840,70009
inline void X509Certificates::add_certificate(add_certificate1845,70206
inline void X509Certificates::add_certificate(add_certificate1850,70428
X509Certificates::certificate(certificate1855,70738
X509Certificates::mutable_certificate(mutable_certificate1860,70944
inline bool Payment::has_merchant_data(has_merchant_data1870,71222
inline void Payment::set_has_merchant_data(set_has_merchant_data1873,71318
inline void Payment::clear_has_merchant_data(clear_has_merchant_data1876,71399
inline void Payment::clear_merchant_data(clear_merchant_data1879,71483
inline const ::std::string& Payment::merchant_data(merchant_data1883,71659
inline void Payment::set_merchant_data(set_merchant_data1887,71832
inline void Payment::set_merchant_data(set_merchant_data1893,72115
inline void Payment::set_merchant_data(set_merchant_data1900,72410
inline void Payment::set_merchant_data(set_merchant_data1906,72721
inline ::std::string* Payment::mutable_merchant_data(mutable_merchant_data1912,73059
inline ::std::string* Payment::release_merchant_data(release_merchant_data1917,73323
inline void Payment::set_allocated_merchant_data(set_allocated_merchant_data1925,73650
inline int Payment::transactions_size(transactions_size1936,74073
inline void Payment::clear_transactions(clear_transactions1939,74154
inline const ::std::string& Payment::transactions(transactions1942,74225
inline ::std::string* Payment::mutable_transactions(mutable_transactions1946,74402
inline void Payment::set_transactions(set_transactions1950,74583
inline void Payment::set_transactions(set_transactions1955,74797
inline void Payment::set_transactions(set_transactions1960,75009
inline void Payment::set_transactions(set_transactions1965,75236
inline ::std::string* Payment::add_transactions(add_transactions1970,75489
inline void Payment::add_transactions(add_transactions1974,75652
inline void Payment::add_transactions(add_transactions1979,75846
inline void Payment::add_transactions(add_transactions1984,76028
inline void Payment::add_transactions(add_transactions1989,76235
Payment::transactions(transactions1994,76530
Payment::mutable_transactions(mutable_transactions1999,76721
inline int Payment::refund_to_size(refund_to_size2005,76907
inline void Payment::clear_refund_to(clear_refund_to2008,76982
inline ::payments::Output* Payment::mutable_refund_to(mutable_refund_to2011,77047
Payment::mutable_refund_to(mutable_refund_to2016,77291
inline const ::payments::Output& Payment::refund_to(refund_to2020,77423
inline ::payments::Output* Payment::add_refund_to(add_refund_to2024,77596
Payment::refund_to(refund_to2029,77820
inline bool Payment::has_memo(has_memo2035,77971
inline void Payment::set_has_memo(set_has_memo2038,78058
inline void Payment::clear_has_memo(clear_has_memo2041,78130
inline void Payment::clear_memo(clear_memo2044,78205
inline const ::std::string& Payment::memo(memo2048,78354
inline void Payment::set_memo(set_memo2052,78500
inline void Payment::set_memo(set_memo2058,78747
inline void Payment::set_memo(set_memo2065,79006
inline void Payment::set_memo(set_memo2071,79281
inline ::std::string* Payment::mutable_memo(mutable_memo2077,79583
inline ::std::string* Payment::release_memo(release_memo2082,79811
inline void Payment::set_allocated_memo(set_allocated_memo2090,80093
inline bool PaymentACK::has_payment(has_payment2105,80538
inline void PaymentACK::set_has_payment(set_has_payment2108,80631
inline void PaymentACK::clear_has_payment(clear_has_payment2111,80709
inline void PaymentACK::clear_payment(clear_payment2114,80790
inline const ::payments::Payment& PaymentACK::_internal_payment(_internal_payment2118,80900
inline const ::payments::Payment& PaymentACK::payment(payment2121,80996
inline ::payments::Payment* PaymentACK::release_payment(release_payment2127,81295
inline ::payments::Payment* PaymentACK::mutable_payment(mutable_payment2134,81527
inline void PaymentACK::set_allocated_payment(set_allocated_payment2143,81826
inline bool PaymentACK::has_memo(has_memo2163,82462
inline void PaymentACK::set_has_memo(set_has_memo2166,82552
inline void PaymentACK::clear_has_memo(clear_has_memo2169,82627
inline void PaymentACK::clear_memo(clear_memo2172,82705
inline const ::std::string& PaymentACK::memo(memo2176,82857
inline void PaymentACK::set_memo(set_memo2180,83009
inline void PaymentACK::set_memo(set_memo2186,83262
inline void PaymentACK::set_memo(set_memo2193,83527
inline void PaymentACK::set_memo(set_memo2199,83808
inline ::std::string* PaymentACK::mutable_memo(mutable_memo2205,84116
inline ::std::string* PaymentACK::release_memo(release_memo2210,84350
inline void PaymentACK::set_allocated_memo(set_allocated_memo2218,84638

src/qt/moc_trafficgraphwidget.cpp,727
struct qt_meta_stringdata_TrafficGraphWidget_t 22,779
    QByteArrayData data[data23,828
    char stringdata0[stringdata024,856
#define QT_MOC_LITERAL(26,885
static const qt_meta_stringdata_TrafficGraphWidget_t qt_meta_stringdata_TrafficGraphWidget 31,1124
#undef QT_MOC_LITERAL44,1563
static const uint qt_meta_data_TrafficGraphWidget[qt_meta_data_TrafficGraphWidget46,1586
void TrafficGraphWidget::qt_static_metacall(qt_static_metacall72,2241
QT_INIT_METAOBJECT const QMetaObject TrafficGraphWidget::staticMetaObject 86,2704
const QMetaObject *TrafficGraphWidget::metaObject(metaObject92,2943
void *TrafficGraphWidget::qt_metacast(qt_metacast97,3103
int TrafficGraphWidget::qt_metacall(qt_metacall105,3361

src/qt/tokentransactiontablemodel.cpp,2970
static int column_alignments[column_alignments28,574
struct TokenTxLessThan38,993
    bool operator()(operator()40,1018
    bool operator()(operator()44,1154
    bool operator()(operator()48,1270
class TokenTransactionTablePriv55,1416
    TokenTransactionTablePriv(58,1458
    CWallet *wallet;wallet64,1607
    TokenTransactionTableModel *parent;parent65,1628
    QList<TokenTransactionRecord> cachedWallet;71,1804
    void refreshWallet(75,1904
    void updateWallet(103,3046
    int size(207,7754
    TokenTransactionRecord *index(index212,7818
    QString describe(245,9027
    QString getTxHex(258,9427
TokenTransactionTableModel::TokenTransactionTableModel(271,9847
TokenTransactionTableModel::~TokenTransactionTableModel(~TokenTransactionTableModel285,10376
void TokenTransactionTableModel::updateTransaction(updateTransaction291,10490
void TokenTransactionTableModel::updateConfirmations(updateConfirmations299,10721
int TokenTransactionTableModel::rowCount(rowCount309,11155
int TokenTransactionTableModel::columnCount(columnCount315,11281
QString TokenTransactionTableModel::formatTxStatus(formatTxStatus321,11414
QString TokenTransactionTableModel::formatTxDate(formatTxDate344,12128
QString TokenTransactionTableModel::lookupAddress(lookupAddress356,12430
QString TokenTransactionTableModel::formatTxType(formatTxType375,13001
QVariant TokenTransactionTableModel::txAddressDecoration(txAddressDecoration393,13550
QString TokenTransactionTableModel::formatTxToAddress(formatTxToAddress408,14158
QString TokenTransactionTableModel::formatTxTokenSymbol(formatTxTokenSymbol425,14755
QVariant TokenTransactionTableModel::addressColor(addressColor430,14910
QString TokenTransactionTableModel::formatTxAmount(formatTxAmount450,15537
QString TokenTransactionTableModel::formatTxAmountWithUnit(formatTxAmountWithUnit463,15978
QVariant TokenTransactionTableModel::txStatusDecoration(txStatusDecoration470,16351
QString TokenTransactionTableModel::formatTooltip(formatTooltip490,17264
QVariant TokenTransactionTableModel::data(data501,17755
QVariant TokenTransactionTableModel::headerData(headerData635,22350
QModelIndex TokenTransactionTableModel::index(index668,23425
void TokenTransactionTableModel::emitDataChanged(emitDataChanged679,23715
struct TokenTransactionNotification685,23957
    TokenTransactionNotification(688,24003
    TokenTransactionNotification(689,24041
    void invoke(692,24209
    uint256 hash;702,24690
    ChangeType status;703,24708
    bool showTransaction;704,24731
static bool fQueueNotifications 707,24761
static std::vector< TokenTransactionNotification > vQueueNotifications;708,24802
static void NotifyTokenTransactionChanged(710,24875
static void ShowProgress(731,25619
void TokenTransactionTableModel::subscribeToCoreSignals(subscribeToCoreSignals752,26481
void TokenTransactionTableModel::unsubscribeFromCoreSignals(unsubscribeFromCoreSignals759,26765

src/qt/receiverequestdialog.h,296
#define BITCOIN_QT_RECEIVEREQUESTDIALOG_H6,237
namespace Ui 17,403
class QRImageWidget 28,601
    QMenu *contextMenu;contextMenu45,934
class ReceiveRequestDialog 48,962
    Ui::ReceiveRequestDialog *ui;ui67,1423
    OptionsModel *model;model68,1457
    SendCoinsRecipient info;69,1482

src/qt/styleSheet.h,842
#define STYLESHEET_H2,22
#define SetObjectStyleSheet(10,124
namespace StyleSheetNames 14,302
    static const QString App 16,333
    static const QString Invalid 17,396
    static const QString TableViewLight 18,463
    static const QString ButtonBlack 19,537
    static const QString ButtonWhite 20,608
    static const QString ButtonBlue 21,679
    static const QString ButtonTransparent 22,749
    static const QString ButtonTransparentBordered 23,826
    static const QString ToolBlack 24,911
    static const QString ToolGroupBlack 25,980
    static const QString ToolSubBlack 26,1054
    static const QString TreeView 27,1126
    static const QString ScrollBarLight 28,1194
    static const QString ScrollBarDark 29,1268
class StyleSheet34,1395
    QMap<QMap48,1795
    QMap<QString, QString> m_cacheStyles;48,1795

src/qt/walletmodeltransaction.h,267
#define BITCOIN_QT_WALLETMODELTRANSACTION_H6,239
class WalletModelTransaction19,458
    QList<SendCoinsRecipient> recipients;41,1055
    CWalletTx *walletTransaction;walletTransaction42,1097
    CReserveKey *keyChange;keyChange43,1131
    CAmount fee;44,1159

src/qt/recentrequeststablemodel.h,970
#define BITCOIN_QT_RECENTREQUESTSTABLEMODEL_H6,241
class RecentRequestEntry16,406
    RecentRequestEntry(19,441
    static const int CURRENT_VERSION 21,526
    int nVersion;22,568
    int64_t id;23,586
    QDateTime date;24,602
    SendCoinsRecipient recipient;25,622
    ADD_SERIALIZE_METHODS;27,657
    template <typename Stream,29,685
    inline void SerializationOp(30,736
class RecentRequestEntryLessThan43,1058
    RecentRequestEntryLessThan(46,1101
    int column;51,1300
    Qt::SortOrder order;52,1316
class RecentRequestsTableModel:RecentRequestsTableModel58,1449
    enum ColumnIndex 66,1643
        Date 67,1666
        Label 68,1684
        Message 69,1703
        Amount 70,1724
        NUMBER_OF_COLUMNS71,1744
    const RecentRequestEntry &entry(entry86,2405
    WalletModel *walletModel;walletModel96,2774
    QStringList columns;97,2804
    QList<RecentRequestEntry> list;98,2829
    int64_t nReceiveRequestsMaxId;99,2865

src/qt/optionsdialog.h,249
#define BITCOIN_QT_OPTIONSDIALOG_H6,230
namespace Ui 18,417
class ProxyAddressValidator 24,530
class OptionsDialog 35,739
    Ui::OptionsDialog *ui;ui65,1536
    OptionsModel *model;model66,1563
    QDataWidgetMapper *mapper;mapper67,1588

src/qt/ecrctoken.cpp,1232
#define TOKEN_SIZE 17,386
#define SYMBOL_WIDTH 18,409
#define MARGIN 19,434
class TokenViewDelegate 21,454
    TokenViewDelegate(25,524
    void paint(30,692
    QSize sizeHint(85,3155
    const PlatformStyle *platformStyle;platformStyle90,3306
ECRCToken::ECRCToken(93,3353
ECRCToken::~ECRCToken(~ECRCToken151,5999
void ECRCToken::setModel(setModel156,6048
void ECRCToken::setClientModel(setClientModel187,7418
void ECRCToken::on_goToSendTokenPage(on_goToSendTokenPage194,7623
void ECRCToken::on_goToReceiveTokenPage(on_goToReceiveTokenPage199,7720
void ECRCToken::on_goToAddTokenPage(on_goToAddTokenPage204,7820
void ECRCToken::on_currentTokenChanged(on_currentTokenChanged209,7916
void ECRCToken::on_dataChanged(on_dataChanged240,9457
void ECRCToken::on_currentChanged(on_currentChanged256,9931
void ECRCToken::on_rowsInserted(on_rowsInserted263,10082
void ECRCToken::contextualMenu(contextualMenu277,10448
void ECRCToken::copyTokenAddress(copyTokenAddress290,10782
void ECRCToken::copyTokenBalance(copyTokenBalance295,10908
void ECRCToken::copyTokenName(copyTokenName300,11034
void ECRCToken::copySenderAddress(copySenderAddress305,11154
void ECRCToken::removeToken(removeToken310,11280

src/qt/qvalidatedlineedit.cpp,693
QValidatedLineEdit::QValidatedLineEdit(10,290
void QValidatedLineEdit::setValid(setValid19,513
void QValidatedLineEdit::focusInEvent(focusInEvent53,1206
void QValidatedLineEdit::focusOutEvent(focusOutEvent61,1357
bool QValidatedLineEdit::getEmptyIsValid(getEmptyIsValid68,1476
void QValidatedLineEdit::setEmptyIsValid(setEmptyIsValid73,1555
void QValidatedLineEdit::markValid(markValid78,1639
void QValidatedLineEdit::clear(clear84,1769
void QValidatedLineEdit::setEnabled(setEnabled90,1851
void QValidatedLineEdit::checkValidity(checkValidity106,2172
void QValidatedLineEdit::setCheckValidator(setCheckValidator133,2755
bool QValidatedLineEdit::isValid(isValid138,2848

src/qt/eventlog.h,159
#define EVENTLOG_H2,20
class EventLog10,143
    ExecRPCCommand* m_RPCCommand;52,1543
    QMap<QMap53,1578
    QMap<QString, QString> m_lstParams;53,1578

src/qt/addressbookpage.cpp,832
AddressBookPage::AddressBookPage(25,605
AddressBookPage::~AddressBookPage(~AddressBookPage115,4518
void AddressBookPage::setModel(setModel120,4574
void AddressBookPage::on_copyAddress_clicked(on_copyAddress_clicked165,6305
void AddressBookPage::onCopyLabelAction(onCopyLabelAction170,6428
void AddressBookPage::onEditAction(onEditAction175,6544
void AddressBookPage::on_newAddress_clicked(on_newAddress_clicked196,7099
void AddressBookPage::on_deleteAddress_clicked(on_deleteAddress_clicked212,7442
void AddressBookPage::selectionChanged(selectionChanged225,7751
void AddressBookPage::done(done258,8706
void AddressBookPage::on_exportButton_clicked(on_exportButton_clicked281,9327
void AddressBookPage::contextualMenu(contextualMenu304,10072
void AddressBookPage::selectNewAddress(selectNewAddress313,10269

src/qt/paymentserver.h,297
#define BITCOIN_QT_PAYMENTSERVER_H6,230
static const qint64 BIP70_MAX_PAYMENTREQUEST_SIZE 56,1547
class PaymentServer 58,1607
    bool saveURIs;140,4822
    QLocalServer* uriServer;141,4885
    QNetworkAccessManager* netManager;143,4915
    OptionsModel *optionsModel;optionsModel145,4990

src/qt/platformstyle.h,744
#define BITCOIN_QT_PLATFORMSTYLE_H6,225
class PlatformStyle13,367
    const QString &getName(getName19,549
    bool getImagesOnButtons(21,602
    bool getUseExtraSpacing(22,666
    QColor TextColor(24,731
    QColor SingleColor(25,782
    QColor MenuColor(26,837
    enum StateType{StateType49,1738
        NavBar 50,1758
        PushButton 51,1778
    enum TableColorType{TableColorType56,1982
        Normal 57,2007
        Input,58,2027
        Inout,59,2042
        Output,60,2057
        Error61,2073
    QString name;70,2452
    bool imagesOnButtons;71,2470
    bool colorizeIcons;72,2496
    bool useExtraSpacing;73,2520
    QColor singleColor;74,2546
    QColor textColor;75,2570
    QColor menuColor;76,2592

src/qt/coincontroltreewidget.h,85
#define BITCOIN_QT_COINCONTROLTREEWIDGET_H6,238
class CoinControlTreeWidget 11,327

src/qt/moc_tokendescdialog.cpp,696
struct qt_meta_stringdata_TokenDescDialog_t 22,770
    QByteArrayData data[data23,816
    char stringdata0[stringdata024,844
#define QT_MOC_LITERAL(26,873
static const qt_meta_stringdata_TokenDescDialog_t qt_meta_stringdata_TokenDescDialog 31,1109
#undef QT_MOC_LITERAL38,1283
static const uint qt_meta_data_TokenDescDialog[qt_meta_data_TokenDescDialog40,1306
void TokenDescDialog::qt_static_metacall(qt_static_metacall56,1662
QT_INIT_METAOBJECT const QMetaObject TokenDescDialog::staticMetaObject 64,1836
const QMetaObject *TokenDescDialog::metaObject(metaObject70,2066
void *TokenDescDialog::qt_metacast(qt_metacast75,2223
int TokenDescDialog::qt_metacall(qt_metacall83,2475

src/qt/walletmodel.cpp,4762
WalletModel::WalletModel(41,1005
WalletModel::~WalletModel(~WalletModel78,2425
CAmount WalletModel::getBalance(getBalance83,2492
CAmount WalletModel::getStake(getStake99,2927
CAmount WalletModel::getWatchStake(getWatchStake104,3001
CAmount WalletModel::getUnconfirmedBalance(getUnconfirmedBalance109,3089
CAmount WalletModel::getImmatureBalance(getImmatureBalance114,3189
bool WalletModel::haveWatchOnly(haveWatchOnly119,3283
CAmount WalletModel::getWatchBalance(getWatchBalance124,3355
CAmount WalletModel::getWatchUnconfirmedBalance(getWatchUnconfirmedBalance129,3447
CAmount WalletModel::getWatchImmatureBalance(getWatchImmatureBalance134,3561
void WalletModel::updateStatus(updateStatus139,3669
void WalletModel::pollBalanceChanged(pollBalanceChanged147,3889
void WalletModel::updateContractBook(updateContractBook185,5003
void WalletModel::checkBalanceChanged(checkBalanceChanged191,5220
void WalletModel::checkTokenBalanceChanged(checkTokenBalanceChanged225,6863
void WalletModel::updateTransaction(updateTransaction233,7000
void WalletModel::updateAddressBook(updateAddressBook239,7142
void WalletModel::updateWatchOnlyFlag(updateWatchOnlyFlag246,7393
bool WalletModel::validateAddress(validateAddress252,7545
WalletModel::SendCoinsReturn WalletModel::prepareTransaction(prepareTransaction258,7702
WalletModel::SendCoinsReturn WalletModel::sendCoins(sendCoins369,11451
OptionsModel *WalletModel::getOptionsModel(getOptionsModel439,14444
AddressTableModel *WalletModel::getAddressTableModel(getAddressTableModel444,14519
ContractTableModel *WalletModel::getContractTableModel(getContractTableModel449,14609
TransactionTableModel *WalletModel::getTransactionTableModel(getTransactionTableModel454,14702
RecentRequestsTableModel *WalletModel::getRecentRequestsTableModel(getRecentRequestsTableModel459,14804
TokenItemModel *WalletModel::getTokenItemModel(getTokenItemModel464,14915
TokenTransactionTableModel *WalletModel::getTokenTransactionTableModel(getTokenTransactionTableModel469,14996
WalletModel::EncryptionStatus WalletModel::getEncryptionStatus(getEncryptionStatus475,15114
bool WalletModel::setWalletEncrypted(setWalletEncrypted491,15372
bool WalletModel::setWalletLocked(setWalletLocked505,15650
bool WalletModel::changePassphrase(changePassphrase519,15890
bool WalletModel::backupWallet(backupWallet530,16220
bool WalletModel::hasWalletBackup(hasWalletBackup542,16576
bool WalletModel::restoreWallet(restoreWallet548,16703
static void NotifyKeyStoreStatusChanged(566,17208
static void NotifyAddressBookChanged(572,17433
static void NotifyTransactionChanged(589,18391
static void ShowProgress(597,18667
static void NotifyWatchonlyChanged(605,19011
static void NotifyContractBookChanged(611,19246
void WalletModel::subscribeToCoreSignals(subscribeToCoreSignals626,20022
void WalletModel::unsubscribeFromCoreSignals(unsubscribeFromCoreSignals637,20694
WalletModel::UnlockContext WalletModel::requestUnlock(requestUnlock649,21438
WalletModel::UnlockContext::UnlockContext(670,22025
WalletModel::UnlockContext::~UnlockContext(~UnlockContext683,22340
void WalletModel::UnlockContext::CopyFrom(CopyFrom697,22574
bool WalletModel::getPubKey(getPubKey704,22749
bool WalletModel::havePrivKey(havePrivKey709,22887
bool WalletModel::getPrivKey(getPrivKey714,22988
void WalletModel::getOutputs(getOutputs720,23169
bool WalletModel::isSpent(isSpent733,23680
bool WalletModel::isUnspentAddress(isUnspentAddress739,23838
void WalletModel::listCoins(listCoins760,24557
bool WalletModel::isLockedCoin(isLockedCoin797,26080
void WalletModel::lockCoin(lockCoin803,26233
void WalletModel::unlockCoin(unlockCoin809,26353
void WalletModel::listLockedCoins(listLockedCoins815,26477
void WalletModel::loadReceiveRequests(loadReceiveRequests821,26626
bool WalletModel::saveReceiveRequest(saveReceiveRequest830,27085
bool WalletModel::transactionCanBeAbandoned(transactionCanBeAbandoned845,27562
bool WalletModel::abandonTransaction(abandonTransaction854,27853
bool WalletModel::isWalletEnabled(isWalletEnabled860,27999
bool WalletModel::hdEnabled(hdEnabled865,28105
int WalletModel::getDefaultConfirmTarget(getDefaultConfirmTarget870,28180
bool WalletModel::addTokenEntry(addTokenEntry875,28263
bool WalletModel::addTokenTxEntry(addTokenTxEntry880,28372
bool WalletModel::existTokenEntry(existTokenEntry885,28516
bool WalletModel::removeTokenEntry(removeTokenEntry895,28776
QString WalletModel::getRestorePath(getRestorePath900,28902
QString WalletModel::getRestoreParam(getRestoreParam905,28969
std::vector<CTokenInfo> WalletModel::getInvalidTokens(getInvalidTokens910,29038
bool WalletModel::isMineAddress(isMineAddress928,29476

src/qt/moc_tokenitemmodel.cpp,687
struct qt_meta_stringdata_TokenItemModel_t 22,767
    QByteArrayData data[data23,812
    char stringdata0[stringdata024,840
#define QT_MOC_LITERAL(26,869
static const qt_meta_stringdata_TokenItemModel_t qt_meta_stringdata_TokenItemModel 31,1104
#undef QT_MOC_LITERAL45,1595
static const uint qt_meta_data_TokenItemModel[qt_meta_data_TokenItemModel47,1618
void TokenItemModel::qt_static_metacall(qt_static_metacall71,2251
QT_INIT_METAOBJECT const QMetaObject TokenItemModel::staticMetaObject 84,2756
const QMetaObject *TokenItemModel::metaObject(metaObject90,2994
void *TokenItemModel::qt_metacast(qt_metacast95,3150
int TokenItemModel::qt_metacall(qt_metacall103,3411

src/qt/moc_callcontract.cpp,670
struct qt_meta_stringdata_CallContract_t 22,761
    QByteArrayData data[data23,804
    char stringdata0[stringdata024,833
#define QT_MOC_LITERAL(26,863
static const qt_meta_stringdata_CallContract_t qt_meta_stringdata_CallContract 31,1096
#undef QT_MOC_LITERAL53,2020
static const uint qt_meta_data_CallContract[qt_meta_data_CallContract55,2043
void CallContract::qt_static_metacall(qt_static_metacall93,3078
QT_INIT_METAOBJECT const QMetaObject CallContract::staticMetaObject 114,3845
const QMetaObject *CallContract::metaObject(metaObject120,4066
void *CallContract::qt_metacast(qt_metacast125,4220
int CallContract::qt_metacall(qt_metacall133,4466

src/qt/walletmodeltransaction.cpp,858
WalletModelTransaction::WalletModelTransaction(10,287
WalletModelTransaction::~WalletModelTransaction(~WalletModelTransaction19,512
QList<SendCoinsRecipient> WalletModelTransaction::getRecipients(getRecipients25,619
CWalletTx *WalletModelTransaction::getTransaction(getTransaction30,713
unsigned int WalletModelTransaction::getTransactionSize(getTransactionSize35,800
CAmount WalletModelTransaction::getTransactionFee(getTransactionFee40,950
void WalletModelTransaction::setTransactionFee(setTransactionFee45,1023
void WalletModelTransaction::reassignAmounts(reassignAmounts50,1116
CAmount WalletModelTransaction::getTotalTransactionAmount(getTotalTransactionAmount82,2147
void WalletModelTransaction::newPossibleKeyChange(newPossibleKeyChange92,2402
CReserveKey *WalletModelTransaction::getPossibleKeyChange(getPossibleKeyChange97,2515

src/qt/moc_macnotificationhandler.cpp,766
struct qt_meta_stringdata_MacNotificationHandler_t 22,791
    QByteArrayData data[data23,844
    char stringdata0[stringdata024,872
#define QT_MOC_LITERAL(26,901
static const qt_meta_stringdata_MacNotificationHandler_t qt_meta_stringdata_MacNotificationHandler 31,1144
#undef QT_MOC_LITERAL38,1346
static const uint qt_meta_data_MacNotificationHandler[qt_meta_data_MacNotificationHandler40,1369
void MacNotificationHandler::qt_static_metacall(qt_static_metacall56,1732
QT_INIT_METAOBJECT const QMetaObject MacNotificationHandler::staticMetaObject 64,1913
const QMetaObject *MacNotificationHandler::metaObject(metaObject70,2164
void *MacNotificationHandler::qt_metacast(qt_metacast75,2328
int MacNotificationHandler::qt_metacall(qt_metacall83,2594

src/qt/moc_receiverequestdialog.cpp,1439
struct qt_meta_stringdata_QRImageWidget_t 22,785
    QByteArrayData data[data23,829
    char stringdata0[stringdata024,857
#define QT_MOC_LITERAL(26,886
static const qt_meta_stringdata_QRImageWidget_t qt_meta_stringdata_QRImageWidget 31,1120
#undef QT_MOC_LITERAL41,1424
static const uint qt_meta_data_QRImageWidget[qt_meta_data_QRImageWidget43,1447
void QRImageWidget::qt_static_metacall(qt_static_metacall67,2007
QT_INIT_METAOBJECT const QMetaObject QRImageWidget::staticMetaObject 81,2392
const QMetaObject *QRImageWidget::metaObject(metaObject87,2615
void *QRImageWidget::qt_metacast(qt_metacast92,2770
int QRImageWidget::qt_metacall(qt_metacall100,3017
struct qt_meta_stringdata_ReceiveRequestDialog_t 116,3490
    QByteArrayData data[data117,3541
    char stringdata0[stringdata0118,3569
#define QT_MOC_LITERAL(120,3598
static const qt_meta_stringdata_ReceiveRequestDialog_t qt_meta_stringdata_ReceiveRequestDialog 125,3839
#undef QT_MOC_LITERAL137,4282
static const uint qt_meta_data_ReceiveRequestDialog[qt_meta_data_ReceiveRequestDialog139,4305
void ReceiveRequestDialog::qt_static_metacall(qt_static_metacall165,4943
QT_INIT_METAOBJECT const QMetaObject ReceiveRequestDialog::staticMetaObject 180,5414
const QMetaObject *ReceiveRequestDialog::metaObject(metaObject186,5659
void *ReceiveRequestDialog::qt_metacast(qt_metacast191,5821
int ReceiveRequestDialog::qt_metacall(qt_metacall199,6083

src/qt/addressfield.cpp,700
AddressField::AddressField(17,447
QString AddressField::currentText(currentText33,845
bool AddressField::isValidAddress(isValidAddress49,1080
void AddressField::setComboBoxEditable(setComboBoxEditable63,1366
void AddressField::on_refresh(on_refresh77,1929
void AddressField::on_addressTypeChanged(on_addressTypeChanged135,3882
void AddressField::on_editingFinished(on_editingFinished141,3974
void AddressField::appendAddress(appendAddress146,4073
void AddressField::setReceive(setReceive156,4340
void AddressField::setTypeRole(setTypeRole161,4424
void AddressField::setAddressColumn(setAddressColumn166,4501
void AddressField::setAddressTableModel(setAddressTableModel171,4598

src/qt/transactionrecord.cpp,446
std::string toStringHash160(19,470
bool TransactionRecord::showTransaction(showTransaction29,746
QList<TransactionRecord> TransactionRecord::decomposeTransaction(decomposeTransaction45,1114
void TransactionRecord::updateStatus(updateStatus219,7369
bool TransactionRecord::statusUpdateNeeded(statusUpdateNeeded306,10095
QString TransactionRecord::getTxID(getTxID312,10232
int TransactionRecord::getOutputIndex(getOutputIndex317,10332

src/qt/utilitydialog.h,189
#define BITCOIN_QT_UTILITYDIALOG_H6,230
namespace Ui 14,343
class HelpMessageDialog 19,423
    Ui::HelpMessageDialog *ui;ui31,637
    QString text;32,668
class ShutdownWindow 40,767

src/qt/transactiondesc.h,117
#define BITCOIN_QT_TRANSACTIONDESC_H6,232
class TransactionDesc:TransactionDesc18,445
    TransactionDesc(26,611

src/qt/moc_paymentserver.cpp,871
struct qt_meta_stringdata_PaymentServer_t 23,788
    QByteArrayData data[data24,832
    char stringdata0[stringdata025,861
#define QT_MOC_LITERAL(27,891
static const qt_meta_stringdata_PaymentServer_t qt_meta_stringdata_PaymentServer 32,1125
#undef QT_MOC_LITERAL69,2652
static const uint qt_meta_data_PaymentServer[qt_meta_data_PaymentServer71,2675
void PaymentServer::qt_static_metacall(qt_static_metacall115,4175
QT_INIT_METAOBJECT const QMetaObject PaymentServer::staticMetaObject 159,6426
const QMetaObject *PaymentServer::metaObject(metaObject165,6650
void *PaymentServer::qt_metacast(qt_metacast170,6805
int PaymentServer::qt_metacall(qt_metacall178,7053
void PaymentServer::receivedPaymentRequest(receivedPaymentRequest196,7544
void PaymentServer::receivedPaymentACK(receivedPaymentACK203,7773
void PaymentServer::message(message210,7995

src/qt/moc_transactionview.cpp,809
struct qt_meta_stringdata_TransactionView_t 22,770
    QByteArrayData data[data23,816
    char stringdata0[stringdata024,845
#define QT_MOC_LITERAL(26,875
static const qt_meta_stringdata_TransactionView_t qt_meta_stringdata_TransactionView 31,1111
#undef QT_MOC_LITERAL77,3043
static const uint qt_meta_data_TransactionView[qt_meta_data_TransactionView79,3066
void TransactionView::qt_static_metacall(qt_static_metacall145,5296
QT_INIT_METAOBJECT const QMetaObject TransactionView::staticMetaObject 193,7647
const QMetaObject *TransactionView::metaObject(metaObject199,7877
void *TransactionView::qt_metacast(qt_metacast204,8034
int TransactionView::qt_metacall(qt_metacall212,8286
void TransactionView::doubleClicked(doubleClicked230,8779
void TransactionView::message(message237,9002

src/qt/tokentransactiondesc.h,133
#define ECOC_QT_TOKENTRANSACTIONDESC_H2,39
class TokenTransactionDesc:TokenTransactionDesc14,264
    TokenTransactionDesc(22,429

src/qt/qrc_bitcoin_locale.cpp,862
static const unsigned char qt_resource_data[qt_resource_data8,244
static const unsigned char qt_resource_name[qt_resource_name217386,16903893
static const unsigned char qt_resource_struct[qt_resource_struct217825,16911197
#  define QT_RCC_PREPEND_NAMESPACE(218094,16922247
#  define QT_RCC_MANGLE_NAMESPACE0(218095,16922309
#  define QT_RCC_MANGLE_NAMESPACE1(218096,16922349
#  define QT_RCC_MANGLE_NAMESPACE2(218097,16922398
#  define QT_RCC_MANGLE_NAMESPACE(218098,16922469
#   define QT_RCC_PREPEND_NAMESPACE(218101,16922623
#   define QT_RCC_MANGLE_NAMESPACE(218102,16922670
namespace QT_NAMESPACE 218106,16922744
int QT_RCC_MANGLE_NAMESPACE(218118,16923077
int QT_RCC_MANGLE_NAMESPACE(218126,16923345
   struct initializer 218134,16923564
       initializer(218135,16923588
       ~initializer(218136,16923671
   } dummy;218137,16923758

src/qt/moc_bitcoinaddressvalidator.cpp,1663
struct qt_meta_stringdata_BitcoinAddressEntryValidator_t 22,794
    QByteArrayData data[data23,853
    char stringdata0[stringdata024,881
#define QT_MOC_LITERAL(26,910
static const qt_meta_stringdata_BitcoinAddressEntryValidator_t qt_meta_stringdata_BitcoinAddressEntryValidator 31,1159
#undef QT_MOC_LITERAL38,1385
static const uint qt_meta_data_BitcoinAddressEntryValidator[qt_meta_data_BitcoinAddressEntryValidator40,1408
void BitcoinAddressEntryValidator::qt_static_metacall(qt_static_metacall56,1777
QT_INIT_METAOBJECT const QMetaObject BitcoinAddressEntryValidator::staticMetaObject 64,1964
const QMetaObject *BitcoinAddressEntryValidator::metaObject(metaObject70,2236
void *BitcoinAddressEntryValidator::qt_metacast(qt_metacast75,2406
int BitcoinAddressEntryValidator::qt_metacall(qt_metacall83,2687
struct qt_meta_stringdata_BitcoinAddressCheckValidator_t 88,2843
    QByteArrayData data[data89,2902
    char stringdata0[stringdata090,2930
#define QT_MOC_LITERAL(92,2959
static const qt_meta_stringdata_BitcoinAddressCheckValidator_t qt_meta_stringdata_BitcoinAddressCheckValidator 97,3208
#undef QT_MOC_LITERAL104,3434
static const uint qt_meta_data_BitcoinAddressCheckValidator[qt_meta_data_BitcoinAddressCheckValidator106,3457
void BitcoinAddressCheckValidator::qt_static_metacall(qt_static_metacall122,3826
QT_INIT_METAOBJECT const QMetaObject BitcoinAddressCheckValidator::staticMetaObject 130,4013
const QMetaObject *BitcoinAddressCheckValidator::metaObject(metaObject136,4285
void *BitcoinAddressCheckValidator::qt_metacast(qt_metacast141,4455
int BitcoinAddressCheckValidator::qt_metacall(qt_metacall149,4736

src/qt/signverifymessagedialog.cpp,1322
SignVerifyMessageDialog::SignVerifyMessageDialog(24,573
SignVerifyMessageDialog::~SignVerifyMessageDialog(~SignVerifyMessageDialog68,3093
void SignVerifyMessageDialog::setModel(setModel73,3165
void SignVerifyMessageDialog::setAddress_SM(setAddress_SM78,3256
void SignVerifyMessageDialog::setAddress_VM(setAddress_VM84,3403
void SignVerifyMessageDialog::showTab_SM(showTab_SM90,3550
void SignVerifyMessageDialog::showTab_VM(showTab_VM97,3684
void SignVerifyMessageDialog::on_addressBookButton_SM_clicked(on_addressBookButton_SM_clicked104,3818
void SignVerifyMessageDialog::on_pasteButton_SM_clicked(on_pasteButton_SM_clicked117,4205
void SignVerifyMessageDialog::on_signMessageButton_SM_clicked(on_signMessageButton_SM_clicked122,4322
void SignVerifyMessageDialog::on_copySignatureButton_SM_clicked(on_copySignatureButton_SM_clicked180,6430
void SignVerifyMessageDialog::on_clearButton_SM_clicked(on_clearButton_SM_clicked185,6557
void SignVerifyMessageDialog::on_addressBookButton_VM_clicked(on_addressBookButton_VM_clicked195,6784
void SignVerifyMessageDialog::on_verifyMessageButton_VM_clicked(on_verifyMessageButton_VM_clicked208,7169
void SignVerifyMessageDialog::on_clearButton_VM_clicked(on_clearButton_VM_clicked261,9295
bool SignVerifyMessageDialog::eventFilter(eventFilter271,9521

src/qt/moc_openuridialog.cpp,677
struct qt_meta_stringdata_OpenURIDialog_t 22,764
    QByteArrayData data[data23,808
    char stringdata0[stringdata024,836
#define QT_MOC_LITERAL(26,865
static const qt_meta_stringdata_OpenURIDialog_t qt_meta_stringdata_OpenURIDialog 31,1099
#undef QT_MOC_LITERAL41,1434
static const uint qt_meta_data_OpenURIDialog[qt_meta_data_OpenURIDialog43,1457
void OpenURIDialog::qt_static_metacall(qt_static_metacall67,2021
QT_INIT_METAOBJECT const QMetaObject OpenURIDialog::staticMetaObject 81,2421
const QMetaObject *OpenURIDialog::metaObject(metaObject87,2645
void *OpenURIDialog::qt_metacast(qt_metacast92,2800
int OpenURIDialog::qt_metacall(qt_metacall100,3048

src/qt/moc_walletmodel.cpp,1080
struct qt_meta_stringdata_WalletModel_t 22,758
    QByteArrayData data[data23,800
    char stringdata0[stringdata024,829
#define QT_MOC_LITERAL(26,859
static const qt_meta_stringdata_WalletModel_t qt_meta_stringdata_WalletModel 31,1091
#undef QT_MOC_LITERAL89,3591
static const uint qt_meta_data_WalletModel[qt_meta_data_WalletModel91,3614
void WalletModel::qt_static_metacall(qt_static_metacall141,5659
QT_INIT_METAOBJECT const QMetaObject WalletModel::staticMetaObject 216,9758
const QMetaObject *WalletModel::metaObject(metaObject222,9976
void *WalletModel::qt_metacast(qt_metacast227,10129
int WalletModel::qt_metacall(qt_metacall235,10373
void WalletModel::balanceChanged(balanceChanged253,10862
void WalletModel::encryptionStatusChanged(encryptionStatusChanged260,11617
void WalletModel::requireUnlock(requireUnlock267,11830
void WalletModel::message(message273,11945
void WalletModel::coinsSent(coinsSent280,12305
void WalletModel::showProgress(showProgress287,12662
void WalletModel::notifyWatchonlyChanged(notifyWatchonlyChanged294,12941

src/qt/modaloverlay.h,518
#define BITCOIN_QT_MODALOVERLAY_H6,224
static constexpr int HEADER_HEIGHT_DELTA_SYNC 12,410
class ModalOverlay 19,576
    enum OverlayType24,636
        Sync 26,663
        Backup 27,681
    bool isLayerVisible(42,1180
    Ui::ModalOverlay *ui;ui52,1370
    int bestHeaderHeight;53,1396
    QDateTime bestHeaderDate;54,1465
    QVector<QVector55,1495
    QVector<QPair<qint64, double> > blockProcessTime;55,1495
    bool layerIsVisible;56,1549
    bool userClosed;57,1574
    OverlayType type;58,1595

src/qt/coincontroltreewidget.cpp,116
CoinControlTreeWidget::CoinControlTreeWidget(8,262
void CoinControlTreeWidget::keyPressEvent(keyPressEvent14,356

src/qt/sendtocontract.cpp,1777
namespace SendToContract_NS25,618
static const QString PRC_COMMAND 28,671
static const QString PARAM_ADDRESS 29,724
static const QString PARAM_DATAHEX 30,772
static const QString PARAM_AMOUNT 31,820
static const QString PARAM_GASLIMIT 32,866
static const QString PARAM_GASPRICE 33,916
static const QString PARAM_SENDER 34,966
static const CAmount SINGLE_STEP 36,1013
static const CAmount HIGH_GASPRICE 37,1065
SendToContract::SendToContract(41,1152
SendToContract::~SendToContract(~SendToContract124,5329
void SendToContract::setModel(setModel130,5409
bool SendToContract::isValidContractAddress(isValidContractAddress136,5543
bool SendToContract::isValidInterfaceABI(isValidInterfaceABI142,5695
bool SendToContract::isDataValid(isDataValid148,5832
void SendToContract::setContractAddress(setContractAddress161,6107
void SendToContract::setClientModel(setClientModel167,6272
void SendToContract::on_clearAllClicked(on_clearAllClicked178,6530
void SendToContract::on_sendToContractClicked(on_sendToContractClicked191,6977
void SendToContract::on_numBlocksChanged(on_numBlocksChanged257,10166
void SendToContract::on_updateSendToContractButton(on_updateSendToContractButton275,10938
void SendToContract::on_newContractABI(on_newContractABI288,11287
void SendToContract::on_functionChanged(on_functionChanged305,11727
void SendToContract::on_saveInfoClicked(on_saveInfoClicked315,11925
void SendToContract::on_loadInfoClicked(on_loadInfoClicked350,12928
void SendToContract::on_pasteAddressClicked(on_pasteAddressClicked361,13213
void SendToContract::on_contractAddressChanged(on_contractAddressChanged366,13323
QString SendToContract::toDataHex(toDataHex382,13873
bool SendToContract::isFunctionPayable(isFunctionPayable405,14577

src/qt/transactionrecord.h,1386
#define BITCOIN_QT_TRANSACTIONRECORD_H6,234
class TransactionStatus19,507
    TransactionStatus(22,541
    enum Status 27,703
        Confirmed,28,721
        OpenUntilDate,30,874
        OpenUntilBlock,31,954
        Offline,32,1035
        Unconfirmed,33,1100
        Confirming,34,1164
        Conflicted,35,1268
        Abandoned,36,1349
        Immature,38,1455
        MaturesWarning,39,1522
        NotAccepted 40,1625
    bool countsForBalance;44,1745
    std::string sortKey;46,1808
    int matures_in;50,1891
    Status status;55,1966
    qint64 depth;56,1985
    qint64 open_for;57,2003
    int cur_num_blocks;63,2288
class TransactionRecord69,2450
    enum Type72,2484
        Other,74,2504
        Generated,75,2519
        SendToAddress,76,2538
        SendToOther,77,2561
        RecvWithAddress,78,2582
        RecvFromOther,79,2607
        SendToSelf,80,2630
        ContractRecv,81,2650
        ContractSend82,2672
    static const int RecommendedNumConfirmations 86,2775
    TransactionRecord(88,2831
    TransactionRecord(93,2952
    TransactionRecord(99,3121
    uint256 hash;114,3720
    qint64 time;115,3738
    Type type;116,3755
    std::string address;117,3770
    CAmount debit;118,3795
    CAmount credit;119,3814
    int idx;123,3893
    TransactionStatus status;126,3961
    bool involvesWatchAddress;129,4071

src/qt/bantablemodel.h,484
#define BITCOIN_QT_BANTABLEMODEL_H6,230
struct CCombinedBan 16,379
    CSubNet subnet;17,401
    CBanEntry banEntry;18,421
class BannedNodeLessThan21,449
    BannedNodeLessThan(24,484
    int column;29,676
    Qt::SortOrder order;30,692
class BanTableModel 37,856
    enum ColumnIndex 47,1062
        Address 48,1085
        Bantime 49,1106
    ClientModel *clientModel;clientModel68,1717
    QStringList columns;69,1747
    std::unique_ptr<BanTablePriv> priv;70,1772

src/qt/macdockiconhandler.h,216
#define BITCOIN_QT_MACDOCKICONHANDLER_H6,235
class MacDockIconHandler 19,443
    QWidget *m_dummyWidget;m_dummyWidget39,826
    QMenu *m_dockMenu;m_dockMenu40,854
    QMainWindow *mainWindow;mainWindow41,877

src/qt/moc_notificator.cpp,658
struct qt_meta_stringdata_Notificator_t 22,758
    QByteArrayData data[data23,800
    char stringdata0[stringdata024,828
#define QT_MOC_LITERAL(26,857
static const qt_meta_stringdata_Notificator_t qt_meta_stringdata_Notificator 31,1089
#undef QT_MOC_LITERAL47,1607
static const uint qt_meta_data_Notificator[qt_meta_data_Notificator49,1630
void Notificator::qt_static_metacall(qt_static_metacall75,2578
QT_INIT_METAOBJECT const QMetaObject Notificator::staticMetaObject 89,3481
const QMetaObject *Notificator::metaObject(metaObject95,3699
void *Notificator::qt_metacast(qt_metacast100,3852
int Notificator::qt_metacall(qt_metacall108,4096

src/qt/createcontract.cpp,1208
namespace CreateContract_NS23,565
static const QString PRC_COMMAND 26,621
static const QString PARAM_BYTECODE 27,675
static const QString PARAM_GASLIMIT 28,726
static const QString PARAM_GASPRICE 29,777
static const QString PARAM_SENDER 30,828
static const CAmount SINGLE_STEP 32,877
static const CAmount HIGH_GASPRICE 33,930
CreateContract::CreateContract(37,1021
CreateContract::~CreateContract(~CreateContract102,3926
void CreateContract::setLinkLabels(setLinkLabels108,4012
void CreateContract::setModel(setModel117,4384
bool CreateContract::isValidBytecode(isValidBytecode122,4467
bool CreateContract::isValidInterfaceABI(isValidInterfaceABI128,4604
bool CreateContract::isDataValid(isDataValid134,4747
void CreateContract::setClientModel(setClientModel150,5142
void CreateContract::on_clearAllClicked(on_clearAllClicked161,5411
void CreateContract::on_createContractClicked(on_createContractClicked171,5735
void CreateContract::on_numBlocksChanged(on_numBlocksChanged233,8593
void CreateContract::on_updateCreateButton(on_updateCreateButton251,9383
void CreateContract::on_newContractABI(on_newContractABI263,9672
QString CreateContract::toDataHex(toDataHex280,10121

src/qt/tokentransactiondesc.cpp,121
QString TokenTransactionDesc::FormatTxStatus(FormatTxStatus10,212
QString TokenTransactionDesc::toHTML(toHTML43,1300

src/qt/receivetokenpage.h,194
#define RECEIVETOKENPAGE_H2,28
class ReceiveTokenPage 11,148
    Ui::ReceiveTokenPage *ui;ui26,477
    QString m_address;27,508
    const PlatformStyle *platformStyle;platformStyle31,562

src/qt/moc_receivecoinsdialog.cpp,731
struct qt_meta_stringdata_ReceiveCoinsDialog_t 22,779
    QByteArrayData data[data23,828
    char stringdata0[stringdata024,857
#define QT_MOC_LITERAL(26,887
static const qt_meta_stringdata_ReceiveCoinsDialog_t qt_meta_stringdata_ReceiveCoinsDialog 31,1126
#undef QT_MOC_LITERAL71,2883
static const uint qt_meta_data_ReceiveCoinsDialog[qt_meta_data_ReceiveCoinsDialog73,2906
void ReceiveCoinsDialog::qt_static_metacall(qt_static_metacall125,4553
QT_INIT_METAOBJECT const QMetaObject ReceiveCoinsDialog::staticMetaObject 164,6357
const QMetaObject *ReceiveCoinsDialog::metaObject(metaObject170,6596
void *ReceiveCoinsDialog::qt_metacast(qt_metacast175,6756
int ReceiveCoinsDialog::qt_metacall(qt_metacall183,7014

src/qt/coincontroldialog.cpp,1928
QList<CAmount> CoinControlDialog::payAmounts;36,887
CCoinControl* CoinControlDialog::coinControl 37,933
bool CoinControlDialog::fSubtractFeeFromAmount 38,1000
bool CCoinControlWidgetItem::operator<(operator<40,1057
CoinControlDialog::CoinControlDialog(47,1481
CoinControlDialog::~CoinControlDialog(~CoinControlDialog156,7307
void CoinControlDialog::setModel(setModel166,7592
void CoinControlDialog::buttonBoxClicked(buttonBoxClicked179,7887
void CoinControlDialog::buttonSelectAllClicked(buttonSelectAllClicked186,8105
void CoinControlDialog::showMenu(showMenu208,8913
void CoinControlDialog::copyAmount(copyAmount243,10170
void CoinControlDialog::copyLabel(copyLabel249,10340
void CoinControlDialog::copyAddress(copyAddress258,10695
void CoinControlDialog::copyTransactionHash(copyTransactionHash267,11065
void CoinControlDialog::lockCoin(lockCoin273,11215
void CoinControlDialog::unlockCoin(unlockCoin286,11762
void CoinControlDialog::clipboardQuantity(clipboardQuantity296,12128
void CoinControlDialog::clipboardAmount(clipboardAmount302,12278
void CoinControlDialog::clipboardFee(clipboardFee308,12475
void CoinControlDialog::clipboardAfterFee(clipboardAfterFee314,12693
void CoinControlDialog::clipboardBytes(clipboardBytes320,12922
void CoinControlDialog::clipboardLowOutput(clipboardLowOutput326,13088
void CoinControlDialog::clipboardChange(clipboardChange332,13240
void CoinControlDialog::sortView(sortView338,13446
void CoinControlDialog::headerSectionClicked(headerSectionClicked347,13713
void CoinControlDialog::radioTreeMode(radioTreeMode368,14447
void CoinControlDialog::radioListMode(radioListMode375,14572
void CoinControlDialog::viewItemChanged(viewItemChanged382,14705
void CoinControlDialog::updateLabelLocked(updateLabelLocked412,16144
void CoinControlDialog::updateLabels(updateLabels424,16465
void CoinControlDialog::updateView(updateView640,25891

src/qt/moc_editaddressdialog.cpp,716
struct qt_meta_stringdata_EditAddressDialog_t 22,776
    QByteArrayData data[data23,824
    char stringdata0[stringdata024,852
#define QT_MOC_LITERAL(26,881
static const qt_meta_stringdata_EditAddressDialog_t qt_meta_stringdata_EditAddressDialog 31,1119
#undef QT_MOC_LITERAL40,1381
static const uint qt_meta_data_EditAddressDialog[qt_meta_data_EditAddressDialog42,1404
void EditAddressDialog::qt_static_metacall(qt_static_metacall64,1900
QT_INIT_METAOBJECT const QMetaObject EditAddressDialog::staticMetaObject 77,2254
const QMetaObject *EditAddressDialog::metaObject(metaObject83,2490
void *EditAddressDialog::qt_metacast(qt_metacast88,2649
int EditAddressDialog::qt_metacall(qt_metacall96,2905

src/qt/moc_addtokenpage.cpp,670
struct qt_meta_stringdata_AddTokenPage_t 22,761
    QByteArrayData data[data23,804
    char stringdata0[stringdata024,832
#define QT_MOC_LITERAL(26,862
static const qt_meta_stringdata_AddTokenPage_t qt_meta_stringdata_AddTokenPage 31,1095
#undef QT_MOC_LITERAL49,1831
static const uint qt_meta_data_AddTokenPage[qt_meta_data_AddTokenPage51,1854
void AddTokenPage::qt_static_metacall(qt_static_metacall83,2714
QT_INIT_METAOBJECT const QMetaObject AddTokenPage::staticMetaObject 100,3350
const QMetaObject *AddTokenPage::metaObject(metaObject106,3571
void *AddTokenPage::qt_metacast(qt_metacast111,3725
int AddTokenPage::qt_metacall(qt_metacall119,3971

src/qt/abiparam.cpp,304
ABIParam::ABIParam(9,172
QStringList ABIParam::getValue(getValue80,2756
bool ABIParam::isValid(isValid91,3031
void ABIParam::updateParamItemsPosition(updateParamItemsPosition102,3296
void ABIParam::addNewParamItem(addNewParamItem110,3465
void ABIParam::removeParamItem(removeParamItem135,4334

src/qt/networkstyle.cpp,418
    const char *networkId;networkId12,296
    const char *appName;appName13,323
    const int iconColorHueShift;14,348
    const int iconColorSaturationReduction;15,381
    const char *titleAddText;titleAddText16,425
} network_styles[network_styles17,455
static const unsigned network_styles_count 22,682
NetworkStyle::NetworkStyle(25,825
const NetworkStyle *NetworkStyle::instantiate(instantiate82,2530

src/qt/optionsdialog.cpp,991
OptionsDialog::OptionsDialog(34,822
OptionsDialog::~OptionsDialog(~OptionsDialog146,6148
void OptionsDialog::setModel(setModel151,6200
void OptionsDialog::setMapper(setMapper190,7801
void OptionsDialog::setOkButtonState(setOkButtonState231,9689
void OptionsDialog::on_resetButton_clicked(on_resetButton_clicked236,9782
void OptionsDialog::on_okButton_clicked(on_okButton_clicked254,10370
void OptionsDialog::on_cancelButton_clicked(on_cancelButton_clicked261,10483
void OptionsDialog::on_hideTrayIcon_stateChanged(on_hideTrayIcon_stateChanged266,10548
void OptionsDialog::showRestartWarning(showRestartWarning279,10802
void OptionsDialog::clearStatusLabel(clearStatusLabel296,11370
void OptionsDialog::updateProxyValidationState(updateProxyValidationState304,11531
void OptionsDialog::updateDefaultProxyNets(updateDefaultProxyNets321,12262
ProxyAddressValidator::ProxyAddressValidator(343,13333
QValidator::State ProxyAddressValidator::validate(validate348,13421

src/qt/sendcoinsentry.h,273
#define BITCOIN_QT_SENDCOINSENTRY_H6,231
namespace Ui 15,362
class SendCoinsEntry 24,560
    SendCoinsRecipient recipient;65,1632
    Ui::SendCoinsEntry *ui;ui66,1666
    WalletModel *model;model67,1694
    const PlatformStyle *platformStyle;platformStyle68,1718

src/qt/moc_abiparamitem.cpp,806
struct qt_meta_stringdata_ABIParamItem_t 22,761
    QByteArrayData data[data23,804
    char stringdata0[stringdata024,832
#define QT_MOC_LITERAL(26,861
static const qt_meta_stringdata_ABIParamItem_t qt_meta_stringdata_ABIParamItem 31,1094
#undef QT_MOC_LITERAL43,1491
static const uint qt_meta_data_ABIParamItem[qt_meta_data_ABIParamItem45,1514
void ABIParamItem::qt_static_metacall(qt_static_metacall77,2327
QT_INIT_METAOBJECT const QMetaObject ABIParamItem::staticMetaObject 108,3473
const QMetaObject *ABIParamItem::metaObject(metaObject114,3694
void *ABIParamItem::qt_metacast(qt_metacast119,3848
int ABIParamItem::qt_metacall(qt_metacall127,4094
void ABIParamItem::on_addItemClicked(on_addItemClicked145,4580
void ABIParamItem::on_removeItemClicked(on_removeItemClicked152,4788

src/qt/moc_bitcoinamountfield.cpp,791
struct qt_meta_stringdata_BitcoinAmountField_t 22,779
    QByteArrayData data[data23,828
    char stringdata0[stringdata024,856
#define QT_MOC_LITERAL(26,885
static const qt_meta_stringdata_BitcoinAmountField_t qt_meta_stringdata_BitcoinAmountField 31,1124
#undef QT_MOC_LITERAL44,1551
static const uint qt_meta_data_BitcoinAmountField[qt_meta_data_BitcoinAmountField46,1574
void BitcoinAmountField::qt_static_metacall(qt_static_metacall80,2358
QT_INIT_METAOBJECT const QMetaObject BitcoinAmountField::staticMetaObject 122,3831
const QMetaObject *BitcoinAmountField::metaObject(metaObject128,4070
void *BitcoinAmountField::qt_metacast(qt_metacast133,4230
int BitcoinAmountField::qt_metacall(qt_metacall141,4488
void BitcoinAmountField::valueChanged(valueChanged176,5664

src/qt/tokenitemmodel.cpp,2139
class TokenItemEntry15,293
    TokenItemEntry(18,327
    TokenItemEntry(21,359
    TokenItemEntry(32,858
    bool update(44,1220
    bool update(50,1338
    ~TokenItemEntry(75,1939
    uint256 hash;78,1972
    QDateTime createTime;79,1991
    QString contractAddress;80,2018
    QString tokenName;81,2048
    QString tokenSymbol;82,2072
    quint8 decimals;83,2098
    QString senderAddress;84,2120
    int256_t balance;85,2148
class TokenTxWorker 88,2177
    CWallet *wallet;wallet92,2241
    bool first;93,2263
    Token tokenTxAbi;94,2280
    TokenTxWorker(95,2303
    void updateTokenTx(99,2406
struct TokenItemEntryLessThan180,5289
    bool operator()(operator()182,5323
    bool operator()(operator()186,5447
    bool operator()(operator()190,5559
class TokenItemPriv196,5677
    CWallet *wallet;wallet199,5710
    QList<TokenItemEntry> cachedTokenItem;200,5732
    TokenItemModel *parent;parent201,5776
    TokenItemPriv(203,5807
    void refreshTokenItem(206,5917
    void updateEntry(224,6560
    int size(269,8352
    TokenItemEntry *index(index274,8424
TokenItemModel::TokenItemModel(287,8658
TokenItemModel::~TokenItemModel(~TokenItemModel309,9173
QModelIndex TokenItemModel::index(index329,9437
QModelIndex TokenItemModel::parent(parent340,9718
int TokenItemModel::rowCount(rowCount346,9843
int TokenItemModel::columnCount(columnCount352,9963
QVariant TokenItemModel::data(data358,10090
Token *TokenItemModel::getTokenAbi(getTokenAbi410,11622
void TokenItemModel::updateToken(updateToken415,11690
void TokenItemModel::checkTokenBalanceChanged(checkTokenBalanceChanged438,12320
void TokenItemModel::emitDataChanged(emitDataChanged464,13087
struct TokenNotification469,13244
    TokenNotification(472,13282
    TokenNotification(473,13310
    void invoke(476,13452
    uint256 hash;487,13922
    ChangeType status;488,13941
    bool showToken;489,13965
static void NotifyTokenChanged(492,13992
void TokenItemModel::subscribeToCoreSignals(subscribeToCoreSignals504,14407
void TokenItemModel::unsubscribeFromCoreSignals(unsubscribeFromCoreSignals510,14588

src/qt/abiparam.h,488
#define CONTRACTPARAMFIELD_H2,30
class ABIParam 16,317
    int m_ParamID;44,1026
    QLabel *m_paramName;m_paramName45,1046
    QHBoxLayout *m_mainLayout;m_mainLayout46,1072
    QVBoxLayout *m_paramItemsLayout;m_paramItemsLayout47,1104
    ParameterABI m_param;48,1142
    QList<ABIParamItem*> m_listParamItems;49,1169
    const PlatformStyle *m_platformStyle;m_platformStyle50,1213
    QSpacerItem *m_vSpacer;m_vSpacer51,1256
    QSpacerItem *m_hSpacer;m_hSpacer52,1285

src/qt/tokendescdialog.h,166
#define TOKENDESCDIALOG_H2,27
class TokenDescDialog 15,221
    explicit TokenDescDialog(20,289
    ~TokenDescDialog(21,365
    Ui::TokenDescDialog *ui;ui24,402

src/qt/tokenamountfield.h,178
#define TOKENAMOUNTFIELD_H2,28
using namespace boost::multiprecision;8,146
class TokenAmountField 14,263
    Q_PROPERTY(18,323
    TokenAmountSpinBox *amount;amount60,1436

src/qt/versionchecker.cpp,364
#define paternVersion 13,282
EcocVersionChecker::EcocVersionChecker(15,348
EcocVersionChecker::~EcocVersionChecker(~EcocVersionChecker20,531
bool EcocVersionChecker::newVersionAvailable(newVersionAvailable25,584
QList<Version> EcocVersionChecker::getVersions(getVersions39,826
Version EcocVersionChecker::getMaxReleaseVersion(getMaxReleaseVersion65,1697

src/qt/moc_tabbarinfo.cpp,647
struct qt_meta_stringdata_TabBarInfo_t 22,755
    QByteArrayData data[data23,796
    char stringdata0[stringdata024,824
#define QT_MOC_LITERAL(26,853
static const qt_meta_stringdata_TabBarInfo_t qt_meta_stringdata_TabBarInfo 31,1084
#undef QT_MOC_LITERAL43,1465
static const uint qt_meta_data_TabBarInfo[qt_meta_data_TabBarInfo45,1488
void TabBarInfo::qt_static_metacall(qt_static_metacall69,2067
QT_INIT_METAOBJECT const QMetaObject TabBarInfo::staticMetaObject 82,2478
const QMetaObject *TabBarInfo::metaObject(metaObject88,2693
void *TabBarInfo::qt_metacast(qt_metacast93,2845
int TabBarInfo::qt_metacall(qt_metacall101,3087

src/qt/platformstyle.cpp,1190
    const char *platformId;platformId17,389
    const bool imagesOnButtons;19,456
    const bool colorizeIcons;21,527
    const bool useExtraSpacing;23,609
} platform_styles[platform_styles24,641
static const unsigned platform_styles_count 30,806
void MakeSingleColorImage(35,973
QPixmap MakeSingleColorPixmap(51,1504
QIcon ColorizeIcon(57,1684
QImage ColorizeImage(70,2029
QIcon ColorizeIcon(77,2218
PlatformStyle::PlatformStyle(85,2399
QImage PlatformStyle::SingleColorImage(SingleColorImage103,2955
QIcon PlatformStyle::SingleColorIcon(SingleColorIcon110,3143
QIcon PlatformStyle::SingleColorIcon(SingleColorIcon117,3322
QIcon PlatformStyle::TextColorIcon(TextColorIcon124,3480
QIcon PlatformStyle::TextColorIcon(TextColorIcon129,3604
QIcon PlatformStyle::MenuColorIcon(MenuColorIcon134,3718
QIcon PlatformStyle::MenuColorIcon(MenuColorIcon139,3842
QIcon PlatformStyle::MultiStatesIcon(MultiStatesIcon144,3956
QIcon PlatformStyle::TableColorIcon(TableColorIcon178,5074
QImage PlatformStyle::TableColorImage(TableColorImage205,5865
void PlatformStyle::TableColor(TableColor221,6231
const PlatformStyle *PlatformStyle::instantiate(instantiate254,6882

src/qt/moc_tokentransactiondesc.cpp,746
struct qt_meta_stringdata_TokenTransactionDesc_t 22,785
    QByteArrayData data[data23,836
    char stringdata0[stringdata024,864
#define QT_MOC_LITERAL(26,893
static const qt_meta_stringdata_TokenTransactionDesc_t qt_meta_stringdata_TokenTransactionDesc 31,1134
#undef QT_MOC_LITERAL38,1328
static const uint qt_meta_data_TokenTransactionDesc[qt_meta_data_TokenTransactionDesc40,1351
void TokenTransactionDesc::qt_static_metacall(qt_static_metacall56,1712
QT_INIT_METAOBJECT const QMetaObject TokenTransactionDesc::staticMetaObject 64,1891
const QMetaObject *TokenTransactionDesc::metaObject(metaObject70,2136
void *TokenTransactionDesc::qt_metacast(qt_metacast75,2298
int TokenTransactionDesc::qt_metacall(qt_metacall83,2560

src/qt/editaddressdialog.cpp,436
EditAddressDialog::EditAddressDialog(16,414
EditAddressDialog::~EditAddressDialog(~EditAddressDialog52,1483
void EditAddressDialog::setModel(setModel57,1543
void EditAddressDialog::loadRow(loadRow68,1831
bool EditAddressDialog::saveCurrentRow(saveCurrentRow73,1911
void EditAddressDialog::accept(accept98,2511
QString EditAddressDialog::getAddress(getAddress140,3990
void EditAddressDialog::setAddress(setAddress145,4061

src/qt/callcontract.cpp,1361
namespace CallContract_NS20,483
static const QString PRC_COMMAND 23,534
static const QString PARAM_ADDRESS 24,585
static const QString PARAM_DATAHEX 25,633
static const QString PARAM_SENDER 26,681
CallContract::CallContract(30,763
CallContract::~CallContract(~CallContract96,4004
void CallContract::setClientModel(setClientModel102,4080
void CallContract::setModel(setModel113,4336
bool CallContract::isValidContractAddress(isValidContractAddress119,4468
bool CallContract::isValidInterfaceABI(isValidInterfaceABI125,4618
bool CallContract::isDataValid(isDataValid131,4753
void CallContract::setContractAddress(setContractAddress147,5107
void CallContract::on_clearAllClicked(on_clearAllClicked153,5270
void CallContract::on_callContractClicked(on_callContractClicked161,5469
void CallContract::on_numBlocksChanged(on_numBlocksChanged196,6901
void CallContract::on_updateCallContractButton(on_updateCallContractButton204,7030
void CallContract::on_newContractABI(on_newContractABI217,7373
void CallContract::on_saveInfoClicked(on_saveInfoClicked234,7809
void CallContract::on_loadInfoClicked(on_loadInfoClicked269,8810
void CallContract::on_pasteAddressClicked(on_pasteAddressClicked280,9093
void CallContract::on_contractAddressChanged(on_contractAddressChanged285,9201
QString CallContract::toDataHex(toDataHex301,9749

src/qt/titlebar.h,183
#define TITLEBAR_H2,20
class TitleBar 20,302
    Ui::TitleBar *ui;ui63,1512
    WalletModel *model;model64,1535
    TabBarInfo* m_tab;65,1560
    QIcon m_iconCloseTab;66,1584

src/qt/openuridialog.cpp,262
OpenURIDialog::OpenURIDialog(14,341
OpenURIDialog::~OpenURIDialog(~OpenURIDialog28,753
QString OpenURIDialog::getURI(getURI33,805
void OpenURIDialog::accept(accept38,874
void OpenURIDialog::on_selectFileButton_clicked(on_selectFileButton_clicked50,1112

src/qt/clientmodel.cpp,2528
static const int64_t nClientStartupTime 30,642
static int64_t nLastHeaderTipUpdateNotification 31,695
static int64_t nLastBlockTipUpdateNotification 32,748
ClientModel::ClientModel(34,801
ClientModel::~ClientModel(~ClientModel50,1264
int ClientModel::getNumConnections(getNumConnections55,1331
int ClientModel::getNumBlocks(getNumBlocks71,1812
int ClientModel::getHeaderTipHeight(getHeaderTipHeight77,1907
int64_t ClientModel::getHeaderTipTime(getHeaderTipTime85,2058
quint64 ClientModel::getTotalBytesRecv(getTotalBytesRecv93,2218
quint64 ClientModel::getTotalBytesSent(getTotalBytesSent100,2350
QDateTime ClientModel::getLastBlockDate(getLastBlockDate107,2482
long ClientModel::getMempoolSize(getMempoolSize117,2773
size_t ClientModel::getMempoolDynamicUsage(getMempoolDynamicUsage122,2846
double ClientModel::getVerificationProgress(getVerificationProgress127,2943
void ClientModel::updateTimer(updateTimer138,3225
void ClientModel::updateNumConnections(updateNumConnections146,3503
void ClientModel::updateNetworkActive(updateNetworkActive151,3617
void ClientModel::updateAlert(updateAlert156,3728
bool ClientModel::inInitialBlockDownload(inInitialBlockDownload161,3815
enum BlockSource ClientModel::getBlockSource(getBlockSource166,3906
void ClientModel::setNetworkActive(setNetworkActive178,4184
bool ClientModel::getNetworkActive(getNetworkActive185,4310
QString ClientModel::getStatusBarWarnings(getStatusBarWarnings193,4449
void ClientModel::getGasInfo(getGasInfo198,4559
OptionsModel *ClientModel::getOptionsModel(getOptionsModel207,4843
PeerTableModel *ClientModel::getPeerTableModel(getPeerTableModel212,4918
BanTableModel *ClientModel::getBanTableModel(getBanTableModel217,4999
QString ClientModel::formatFullVersion(formatFullVersion222,5077
QString ClientModel::formatSubVersion(formatSubVersion227,5185
bool ClientModel::isReleaseVersion(isReleaseVersion232,5286
QString ClientModel::formatClientStartupTime(formatClientStartupTime237,5372
QString ClientModel::dataDir(dataDir242,5495
void ClientModel::updateBanlist(updateBanlist247,5591
static void ShowProgress(253,5689
static void NotifyNumConnectionsChanged(261,6033
static void NotifyNetworkActiveChanged(268,6378
static void NotifyAlertChanged(274,6615
static void BannedListChanged(280,6796
static void BlockTipChanged(286,7021
void ClientModel::subscribeToCoreSignals(subscribeToCoreSignals328,8670
void ClientModel::unsubscribeFromCoreSignals(unsubscribeFromCoreSignals340,9384

src/qt/contractbookpage.h,593
#define CONTRACTBOOKPAGE_H2,28
namespace Ui 9,131
class ContractBookPage 17,259
    enum ColumnWidths 25,445
            LABEL_COLUMN_WIDTH 26,470
            ADDRESS_COLUMN_WIDTH 27,509
    const QString &getAddressValue(getAddressValue31,611
    const QString &getABIValue(getABIValue32,680
    Ui::ContractBookPage *ui;ui39,802
    ContractTableModel *model;model40,833
    QString addressValue;41,865
    QString ABIValue;42,892
    QSortFilterProxyModel *proxyModel;proxyModel43,915
    QMenu *contextMenu;contextMenu44,955
    QString newContractInfoToSelect;45,980

src/qt/overviewpage.cpp,1543
#define NUM_ITEMS 31,797
#define TOKEN_SIZE 32,817
#define MARGIN 33,839
#define SYMBOL_WIDTH 34,856
#define TX_SIZE 36,881
#define DECORATION_SIZE 37,900
#define DATE_WIDTH 38,927
#define TYPE_WIDTH 39,950
#define AMOUNT_WIDTH 40,973
class TxViewDelegate 42,999
    TxViewDelegate(46,1074
    inline void paint(53,1272
    inline QSize sizeHint(147,5165
    int unit;152,5312
    const PlatformStyle *platformStyle;platformStyle153,5326
class TknViewDelegate 157,5371
    TknViewDelegate(160,5434
    void paint(165,5595
    QSize sizeHint(199,6939
    const PlatformStyle *platformStyle;platformStyle211,7343
OverviewPage::OverviewPage(216,7416
void OverviewPage::handleOutOfSyncWarningClicks(handleOutOfSyncWarningClicks284,10260
OverviewPage::~OverviewPage(~OverviewPage289,10353
void OverviewPage::setBalance(setBalance294,10403
void OverviewPage::checkForInvalidTokens(checkForInvalidTokens332,13327
void OverviewPage::updateWatchOnlyLabels(updateWatchOnlyLabels352,14057
void OverviewPage::setClientModel(setClientModel367,14704
void OverviewPage::setWalletModel(setWalletModel378,15020
void OverviewPage::updateDisplayUnit(updateDisplayUnit425,17063
void OverviewPage::updateAlerts(updateAlerts440,17614
void OverviewPage::showOutOfSyncWarning(showOutOfSyncWarning446,17782
void OverviewPage::on_buttonAddToken_clicked(on_buttonAddToken_clicked453,17982
void OverviewPage::on_showMoreButton_clicked(on_showMoreButton_clicked458,18064
void OverviewPage::showDetails(showDetails463,18146

src/qt/moc_tokenamountfield.cpp,769
struct qt_meta_stringdata_TokenAmountField_t 22,773
    QByteArrayData data[data23,820
    char stringdata0[stringdata024,848
#define QT_MOC_LITERAL(26,877
static const qt_meta_stringdata_TokenAmountField_t qt_meta_stringdata_TokenAmountField 31,1114
#undef QT_MOC_LITERAL43,1486
static const uint qt_meta_data_TokenAmountField[qt_meta_data_TokenAmountField45,1509
void TokenAmountField::qt_static_metacall(qt_static_metacall73,2125
QT_INIT_METAOBJECT const QMetaObject TokenAmountField::staticMetaObject 115,3525
const QMetaObject *TokenAmountField::metaObject(metaObject121,3758
void *TokenAmountField::qt_metacast(qt_metacast126,3916
int TokenAmountField::qt_metacall(qt_metacall134,4170
void TokenAmountField::valueChanged(valueChanged169,5344

src/qt/moc_contracttablemodel.cpp,727
struct qt_meta_stringdata_ContractTableModel_t 22,779
    QByteArrayData data[data23,828
    char stringdata0[stringdata024,856
#define QT_MOC_LITERAL(26,885
static const qt_meta_stringdata_ContractTableModel_t qt_meta_stringdata_ContractTableModel 31,1124
#undef QT_MOC_LITERAL45,1586
static const uint qt_meta_data_ContractTableModel[qt_meta_data_ContractTableModel47,1609
void ContractTableModel::qt_static_metacall(qt_static_metacall69,2206
QT_INIT_METAOBJECT const QMetaObject ContractTableModel::staticMetaObject 81,2723
const QMetaObject *ContractTableModel::metaObject(metaObject87,2974
void *ContractTableModel::qt_metacast(qt_metacast92,3134
int ContractTableModel::qt_metacall(qt_metacall100,3404

src/qt/transactionfilterproxy.h,649
#define BITCOIN_QT_TRANSACTIONFILTERPROXY_H6,239
class TransactionFilterProxy 14,429
    static const QDateTime MIN_DATE;22,639
    static const QDateTime MAX_DATE;24,741
    static const quint32 ALL_TYPES 26,823
    static quint32 TYPE(28,873
    enum WatchOnlyFilter30,928
        WatchOnlyFilter_All,32,959
        WatchOnlyFilter_Yes,33,988
        WatchOnlyFilter_No34,1017
    QDateTime dateFrom;58,1775
    QDateTime dateTo;59,1799
    QString addrPrefix;60,1821
    quint32 typeFilter;61,1845
    WatchOnlyFilter watchOnlyFilter;62,1869
    CAmount minAmount;63,1906
    int limitRows;64,1929
    bool showInactive;65,1948

src/qt/tokenamountfield.cpp,1421
class TokenAmountSpinBox:TokenAmountSpinBox16,354
    explicit TokenAmountSpinBox(21,433
    QValidator::State validate(33,762
    void fixup(43,1131
    int256_t value(55,1486
    void setValue(60,1589
    void stepBy(67,1843
    int256_t minimum(76,2080
    void setMinimum(81,2153
    void setTotalSupply(87,2269
    void setDecimalUnits(92,2363
    int decimalUnits;99,2483
    int256_t totalSupply;100,2529
    int256_t singleStep;101,2578
    int256_t minAmount;102,2604
    int256_t parse(109,2777
    void setSingleStep(123,3168
    int256_t getMax(133,3360
    int256_t getMin(137,3452
    bool event(142,3556
    StepEnabled stepEnabled(157,4174
TokenAmountField::TokenAmountField(183,4823
void TokenAmountField::clear(clear200,5274
void TokenAmountField::setEnabled(setEnabled205,5336
bool TokenAmountField::validate(validate210,5429
void TokenAmountField::setValid(setValid218,5558
bool TokenAmountField::eventFilter(eventFilter226,5737
int256_t TokenAmountField::value(value236,5984
void TokenAmountField::setValue(setValue241,6087
void TokenAmountField::setReadOnly(setReadOnly246,6181
int256_t TokenAmountField::minimum(minimum251,6278
void TokenAmountField::setMinimum(setMinimum256,6361
void TokenAmountField::setTotalSupply(setTotalSupply261,6455
void TokenAmountField::setDecimalUnits(setDecimalUnits266,6561
QString TokenAmountField::text(text271,6657

src/qt/transactiondesc.cpp,111
QString TransactionDesc::FormatTxStatus(FormatTxStatus24,565
QString TransactionDesc::toHTML(toHTML50,1624

src/qt/moc_bitcoingui.cpp,1554
struct qt_meta_stringdata_BitcoinGUI_t 22,755
    QByteArrayData data[data23,796
    char stringdata0[stringdata024,825
#define QT_MOC_LITERAL(26,855
static const qt_meta_stringdata_BitcoinGUI_t qt_meta_stringdata_BitcoinGUI 31,1086
#undef QT_MOC_LITERAL131,5688
static const uint qt_meta_data_BitcoinGUI[qt_meta_data_BitcoinGUI133,5711
void BitcoinGUI::qt_static_metacall(qt_static_metacall247,10313
QT_INIT_METAOBJECT const QMetaObject BitcoinGUI::staticMetaObject 313,14828
const QMetaObject *BitcoinGUI::metaObject(metaObject319,15047
void *BitcoinGUI::qt_metacast(qt_metacast324,15199
int BitcoinGUI::qt_metacall(qt_metacall332,15445
void BitcoinGUI::receivedURI(receivedURI350,15937
struct qt_meta_stringdata_UnitDisplayStatusBarControl_t 355,16136
    QByteArrayData data[data356,16194
    char stringdata0[stringdata0357,16222
#define QT_MOC_LITERAL(359,16251
static const qt_meta_stringdata_UnitDisplayStatusBarControl_t qt_meta_stringdata_UnitDisplayStatusBarControl 364,16499
#undef QT_MOC_LITERAL379,17049
static const uint qt_meta_data_UnitDisplayStatusBarControl[qt_meta_data_UnitDisplayStatusBarControl381,17072
void UnitDisplayStatusBarControl::qt_static_metacall(qt_static_metacall405,17692
QT_INIT_METAOBJECT const QMetaObject UnitDisplayStatusBarControl::staticMetaObject 429,18629
const QMetaObject *UnitDisplayStatusBarControl::metaObject(metaObject435,18894
void *UnitDisplayStatusBarControl::qt_metacast(qt_metacast440,19063
int UnitDisplayStatusBarControl::qt_metacall(qt_metacall448,19338

src/qt/contracttablemodel.h,504
#define CONTRACTTABLEMODEL_H2,29
class ContractTableModel 15,287
    enum ColumnIndex 23,468
        Label 24,491
        Address 25,541
        ABI 26,587
    enum EditStatus 30,687
        OK 31,709
        NO_CHANGES,32,767
        DUPLICATE_ADDRESS,33,850
    EditStatus getEditStatus(65,2140
    WalletModel *walletModel;walletModel70,2239
    CWallet *wallet;wallet71,2269
    ContractTablePriv *priv;priv72,2290
    QStringList columns;73,2319
    EditStatus editStatus;74,2344

src/qt/moc_askpassphrasedialog.cpp,737
struct qt_meta_stringdata_AskPassphraseDialog_t 22,782
    QByteArrayData data[data23,832
    char stringdata0[stringdata024,860
#define QT_MOC_LITERAL(26,889
static const qt_meta_stringdata_AskPassphraseDialog_t qt_meta_stringdata_AskPassphraseDialog 31,1129
#undef QT_MOC_LITERAL42,1494
static const uint qt_meta_data_AskPassphraseDialog[qt_meta_data_AskPassphraseDialog44,1517
void AskPassphraseDialog::qt_static_metacall(qt_static_metacall68,2085
QT_INIT_METAOBJECT const QMetaObject AskPassphraseDialog::staticMetaObject 82,2502
const QMetaObject *AskPassphraseDialog::metaObject(metaObject88,2744
void *AskPassphraseDialog::qt_metacast(qt_metacast93,2905
int AskPassphraseDialog::qt_metacall(qt_metacall101,3165

src/qt/rpcconsole.h,1277
#define BITCOIN_QT_RPCCONSOLE_H6,227
namespace Ui 21,455
class RPCConsole:RPCConsole31,601
    static bool RPCExecuteCommandLine(40,907
    enum MessageClass 46,1181
        MC_ERROR,47,1205
        MC_DEBUG,48,1223
        CMD_REQUEST,49,1241
        CMD_REPLY,50,1262
        CMD_ERROR51,1281
    enum TabTypes 54,1307
        TAB_INFO 55,1327
        TAB_CONSOLE 56,1349
        TAB_GRAPH 57,1374
        TAB_PEERS 58,1397
    enum ColumnWidths132,4375
        ADDRESS_COLUMN_WIDTH 134,4403
        SUBVERSION_COLUMN_WIDTH 135,4439
        PING_COLUMN_WIDTH 136,4478
        BANSUBNET_COLUMN_WIDTH 137,4510
        BANTIME_COLUMN_WIDTH 138,4548
    Ui::RPCConsole *ui;ui142,4592
    ClientModel *clientModel;clientModel143,4616
    QStringList history;144,4646
    int historyPtr;145,4671
    QString cmdBeforeBrowsing;146,4691
    QList<NodeId> cachedNodeids;147,4722
    const PlatformStyle *platformStyle;platformStyle148,4755
    RPCTimerInterface *rpcTimerInterface;rpcTimerInterface149,4795
    QMenu *peersTableContextMenu;peersTableContextMenu150,4837
    QMenu *banTableContextMenu;banTableContextMenu151,4871
    int consoleFontSize;152,4903
    QCompleter *autoCompleter;autoCompleter153,4928
    QThread thread;154,4959

src/qt/moc_qvaluecombobox.cpp,747
struct qt_meta_stringdata_QValueComboBox_t 22,767
    QByteArrayData data[data23,812
    char stringdata0[stringdata024,840
#define QT_MOC_LITERAL(26,869
static const qt_meta_stringdata_QValueComboBox_t qt_meta_stringdata_QValueComboBox 31,1104
#undef QT_MOC_LITERAL44,1537
static const uint qt_meta_data_QValueComboBox[qt_meta_data_QValueComboBox46,1560
void QValueComboBox::qt_static_metacall(qt_static_metacall80,2340
QT_INIT_METAOBJECT const QMetaObject QValueComboBox::staticMetaObject 122,3792
const QMetaObject *QValueComboBox::metaObject(metaObject128,4021
void *QValueComboBox::qt_metacast(qt_metacast133,4177
int QValueComboBox::qt_metacall(qt_metacall141,4429
void QValueComboBox::valueChanged(valueChanged176,5603

src/qt/transactiondescdialog.h,208
#define BITCOIN_QT_TRANSACTIONDESCDIALOG_H6,238
class TransactionDescDialog 19,452
    explicit TransactionDescDialog(24,521
    ~TransactionDescDialog(25,602
    Ui::TransactionDescDialog *ui;ui28,642

src/qt/abifunctionfield.cpp,729
ABIFunctionField::ABIFunctionField(12,254
void ABIFunctionField::updateABIFunctionField(updateABIFunctionField48,1675
void ABIFunctionField::clear(clear101,3777
void ABIFunctionField::paintEvent(paintEvent113,4082
void ABIFunctionField::setContractABI(setContractABI121,4271
QStringList ABIFunctionField::getParamValue(getParamValue127,4409
QList<QStringList> ABIFunctionField::getParamsValues(getParamsValues135,4640
std::vector<std::vector<std::string>> ABIFunctionField::getValuesVector(getValuesVector143,4871
int ABIFunctionField::getSelectedFunction(getSelectedFunction160,5398
bool ABIFunctionField::isValid(isValid170,5649
void ABIFunctionField::on_currentIndexChanged(on_currentIndexChanged178,5834

src/qt/moc_titlebar.cpp,629
struct qt_meta_stringdata_TitleBar_t 22,749
    QByteArrayData data[data23,788
    char stringdata0[stringdata024,817
#define QT_MOC_LITERAL(26,847
static const qt_meta_stringdata_TitleBar_t qt_meta_stringdata_TitleBar 31,1076
#undef QT_MOC_LITERAL55,2010
static const uint qt_meta_data_TitleBar[qt_meta_data_TitleBar57,2033
void TitleBar::qt_static_metacall(qt_static_metacall81,2788
QT_INIT_METAOBJECT const QMetaObject TitleBar::staticMetaObject 94,3562
const QMetaObject *TitleBar::metaObject(metaObject100,3771
void *TitleBar::qt_metacast(qt_metacast105,3921
int TitleBar::qt_metacall(qt_metacall113,4159

src/qt/addressfield.h,482
#define ADDRESSFIELD_H6,209
class AddressField:AddressField15,344
    Q_PROPERTY(18,396
    enum AddressType 24,601
    enum AddressType { UTXO 24,601
    Q_ENUM(26,633
    AddressType addressType(42,1003
    QStringList m_stringList;96,2175
    QStringListModel m_stringModel;97,2205
    AddressType m_addressType;98,2241
    QAbstractItemModel* m_addressTableModel;99,2272
    int m_addressColumn;100,2317
    int m_typeRole;101,2342
    QString m_receive;102,2362

src/qt/moc_transactiontablemodel.cpp,760
struct qt_meta_stringdata_TransactionTableModel_t 22,788
    QByteArrayData data[data23,840
    char stringdata0[stringdata024,869
#define QT_MOC_LITERAL(26,899
static const qt_meta_stringdata_TransactionTableModel_t qt_meta_stringdata_TransactionTableModel 31,1141
#undef QT_MOC_LITERAL52,1991
static const uint qt_meta_data_TransactionTableModel[qt_meta_data_TransactionTableModel54,2014
void TransactionTableModel::qt_static_metacall(qt_static_metacall84,2880
QT_INIT_METAOBJECT const QMetaObject TransactionTableModel::staticMetaObject 100,3607
const QMetaObject *TransactionTableModel::metaObject(metaObject106,3867
void *TransactionTableModel::qt_metacast(qt_metacast111,4030
int TransactionTableModel::qt_metacall(qt_metacall119,4306

src/qt/moc_receivetokenpage.cpp,706
struct qt_meta_stringdata_ReceiveTokenPage_t 22,773
    QByteArrayData data[data23,820
    char stringdata0[stringdata024,848
#define QT_MOC_LITERAL(26,877
static const qt_meta_stringdata_ReceiveTokenPage_t qt_meta_stringdata_ReceiveTokenPage 31,1114
#undef QT_MOC_LITERAL41,1410
static const uint qt_meta_data_ReceiveTokenPage[qt_meta_data_ReceiveTokenPage43,1433
void ReceiveTokenPage::qt_static_metacall(qt_static_metacall65,1929
QT_INIT_METAOBJECT const QMetaObject ReceiveTokenPage::staticMetaObject 78,2295
const QMetaObject *ReceiveTokenPage::metaObject(metaObject84,2528
void *ReceiveTokenPage::qt_metacast(qt_metacast89,2686
int ReceiveTokenPage::qt_metacall(qt_metacall97,2940

src/qt/walletview.h,923
#define BITCOIN_QT_WALLETVIEW_H6,227
class WalletView 38,993
    ClientModel *clientModel;clientModel62,1766
    WalletModel *walletModel;walletModel63,1796
    OverviewPage *overviewPage;overviewPage65,1827
    QWidget *transactionsPage;transactionsPage66,1859
    ReceiveCoinsDialog *receiveCoinsPage;receiveCoinsPage67,1890
    SendCoinsDialog *sendCoinsPage;sendCoinsPage68,1932
    AddressBookPage *usedSendingAddressesPage;usedSendingAddressesPage69,1968
    AddressBookPage *usedReceivingAddressesPage;usedReceivingAddressesPage70,2015
    CreateContract* createContractPage;71,2064
    SendToContract* sendToContractPage;72,2104
    CallContract* callContractPage;73,2144
    ECRCToken* ECRCTokenPage;74,2180
    TransactionView *transactionView;transactionView76,2211
    QProgressDialog *progressDialog;progressDialog78,2250
    const PlatformStyle *platformStyle;platformStyle79,2287

src/qt/eventlog.cpp,634
namespace EventLog_NS8,149
static const QString RPC_SERACH_LOGS 10,175
static const QString PARAM_FROM_BLOCK 11,229
static const QString PARAM_TO_BLOCK 12,283
static const QString PARAM_ADDRESSES 13,333
static const QString PARAM_TOPICS 14,384
QString createJsonString(18,466
EventLog::EventLog(36,960
EventLog::~EventLog(~EventLog49,1403
bool EventLog::searchTokenTx(searchTokenTx58,1527
bool EventLog::search(search75,2173
void EventLog::setStartBlock(setStartBlock89,2622
void EventLog::setEndBlock(setEndBlock94,2744
void EventLog::setAddresses(setAddresses99,2858
void EventLog::setTopics(setTopics104,3015

src/qt/moc_createcontract.cpp,689
struct qt_meta_stringdata_CreateContract_t 22,767
    QByteArrayData data[data23,812
    char stringdata0[stringdata024,840
#define QT_MOC_LITERAL(26,870
static const qt_meta_stringdata_CreateContract_t qt_meta_stringdata_CreateContract 31,1105
#undef QT_MOC_LITERAL46,1697
static const uint qt_meta_data_CreateContract[qt_meta_data_CreateContract48,1720
void CreateContract::qt_static_metacall(qt_static_metacall78,2485
QT_INIT_METAOBJECT const QMetaObject CreateContract::staticMetaObject 95,3047
const QMetaObject *CreateContract::metaObject(metaObject101,3274
void *CreateContract::qt_metacast(qt_metacast106,3430
int CreateContract::qt_metacall(qt_metacall114,3680

src/qt/sendcoinsentry.cpp,976
SendCoinsEntry::SendCoinsEntry(18,462
SendCoinsEntry::~SendCoinsEntry(~SendCoinsEntry55,2299
void SendCoinsEntry::on_pasteButton_clicked(on_pasteButton_clicked60,2353
void SendCoinsEntry::on_addressBookButton_clicked(on_addressBookButton_clicked66,2517
void SendCoinsEntry::on_payTo_textChanged(on_payTo_textChanged79,2876
void SendCoinsEntry::setModel(setModel84,2973
void SendCoinsEntry::clear(clear94,3225
void SendCoinsEntry::deleteClicked(deleteClicked117,3944
bool SendCoinsEntry::validate(validate122,4016
SendCoinsRecipient SendCoinsEntry::getValue(getValue161,4809
QWidget *SendCoinsEntry::setupTabChain(setupTabChain177,5300
void SendCoinsEntry::setValue(setValue189,5822
void SendCoinsEntry::setAddress(setAddress227,7351
bool SendCoinsEntry::isClear(isClear233,7476
void SendCoinsEntry::setFocus(setFocus238,7619
void SendCoinsEntry::updateDisplayUnit(updateDisplayUnit243,7683
bool SendCoinsEntry::updateLabel(updateLabel254,8087

src/qt/transactiondescdialog.cpp,130
TransactionDescDialog::TransactionDescDialog(13,353
TransactionDescDialog::~TransactionDescDialog(~TransactionDescDialog27,834

src/qt/moc_ecrctoken.cpp,641
struct qt_meta_stringdata_ECRCToken_t 23,778
    QByteArrayData data[data24,818
    char stringdata0[stringdata025,847
#define QT_MOC_LITERAL(27,877
static const qt_meta_stringdata_ECRCToken_t qt_meta_stringdata_ECRCToken 32,1107
#undef QT_MOC_LITERAL71,2761
static const uint qt_meta_data_ECRCToken[qt_meta_data_ECRCToken73,2784
void ECRCToken::qt_static_metacall(qt_static_metacall121,4439
QT_INIT_METAOBJECT const QMetaObject ECRCToken::staticMetaObject 157,6364
const QMetaObject *ECRCToken::metaObject(metaObject163,6576
void *ECRCToken::qt_metacast(qt_metacast168,6727
int ECRCToken::qt_metacall(qt_metacall176,6967

src/qt/addtokenpage.h,261
#define ADDTOKENPAGE_H2,24
namespace Ui 9,126
class AddTokenPage 13,168
    Ui::AddTokenPage *ui;ui35,690
    Token *m_tokenABI;m_tokenABI36,717
    WalletModel* m_model;37,741
    ClientModel* m_clientModel;38,768
    bool m_validTokenAddress;39,801

src/qt/ecrctoken.h,798
#define ECRCTOKEN_H2,21
namespace Ui 19,342
class ECRCToken 23,381
    Ui::ECRCToken *ui;ui52,1295
    SendTokenPage* m_sendTokenPage;53,1319
    ReceiveTokenPage* m_receiveTokenPage;54,1356
    AddTokenPage* m_addTokenPage;55,1399
    WalletModel* m_model;56,1434
    ClientModel* m_clientModel;57,1461
    QAbstractItemModel* m_tokenModel;58,1494
    TokenViewDelegate* m_tokenDelegate;59,1533
    QAction *m_sendAction;m_sendAction60,1574
    QAction *m_receiveAction;m_receiveAction61,1602
    QAction *m_addTokenAction;m_addTokenAction62,1633
    QString m_selectedTokenHash;63,1665
    TokenTransactionView *m_tokenTransactionView;m_tokenTransactionView64,1699
    const PlatformStyle *m_platformStyle;m_platformStyle65,1750
    QMenu *contextMenu;contextMenu66,1793

src/qt/moc_macdockiconhandler.cpp,794
struct qt_meta_stringdata_MacDockIconHandler_t 22,779
    QByteArrayData data[data23,828
    char stringdata0[stringdata024,856
#define QT_MOC_LITERAL(26,885
static const qt_meta_stringdata_MacDockIconHandler_t qt_meta_stringdata_MacDockIconHandler 31,1124
#undef QT_MOC_LITERAL40,1409
static const uint qt_meta_data_MacDockIconHandler[qt_meta_data_MacDockIconHandler42,1432
void MacDockIconHandler::qt_static_metacall(qt_static_metacall64,1933
QT_INIT_METAOBJECT const QMetaObject MacDockIconHandler::staticMetaObject 86,2653
const QMetaObject *MacDockIconHandler::metaObject(metaObject92,2892
void *MacDockIconHandler::qt_metacast(qt_metacast97,3052
int MacDockIconHandler::qt_metacall(qt_metacall105,3310
void MacDockIconHandler::dockIconClicked(dockIconClicked123,3802

src/qt/editcontractinfodialog.h,436
#define EDITCONTRACTINFODIALOG_H2,34
namespace Ui 9,141
class EditContractInfoDialog 19,312
    enum Mode 24,387
        NewContractInfo,25,404
        EditContractInfo26,430
    Ui::EditContractInfoDialog *ui;ui51,1001
    QDataWidgetMapper *mapper;mapper52,1038
    Mode mode;53,1070
    ContractTableModel *model;model54,1086
    ContractABI* m_contractABI;55,1118
    QString address;57,1153
    QString ABI;58,1175

src/qt/moc_signverifymessagedialog.cpp,780
struct qt_meta_stringdata_SignVerifyMessageDialog_t 22,794
    QByteArrayData data[data23,848
    char stringdata0[stringdata024,877
#define QT_MOC_LITERAL(26,907
static const qt_meta_stringdata_SignVerifyMessageDialog_t qt_meta_stringdata_SignVerifyMessageDialog 31,1151
#undef QT_MOC_LITERAL55,2198
static const uint qt_meta_data_SignVerifyMessageDialog[qt_meta_data_SignVerifyMessageDialog57,2221
void SignVerifyMessageDialog::qt_static_metacall(qt_static_metacall93,3207
QT_INIT_METAOBJECT const QMetaObject SignVerifyMessageDialog::staticMetaObject 113,4024
const QMetaObject *SignVerifyMessageDialog::metaObject(metaObject119,4278
void *SignVerifyMessageDialog::qt_metacast(qt_metacast124,4443
int SignVerifyMessageDialog::qt_metacall(qt_metacall132,4711

src/qt/moc_modaloverlay.cpp,726
struct qt_meta_stringdata_ModalOverlay_t 22,761
    QByteArrayData data[data23,804
    char stringdata0[stringdata024,833
#define QT_MOC_LITERAL(26,863
static const qt_meta_stringdata_ModalOverlay_t qt_meta_stringdata_ModalOverlay 31,1096
#undef QT_MOC_LITERAL56,2101
static const uint qt_meta_data_ModalOverlay[qt_meta_data_ModalOverlay58,2124
void ModalOverlay::qt_static_metacall(qt_static_metacall102,3525
QT_INIT_METAOBJECT const QMetaObject ModalOverlay::staticMetaObject 133,4984
const QMetaObject *ModalOverlay::metaObject(metaObject139,5205
void *ModalOverlay::qt_metacast(qt_metacast144,5359
int ModalOverlay::qt_metacall(qt_metacall152,5605
void ModalOverlay::backupWallet(backupWallet170,6095

src/qt/moc_versionchecker.cpp,726
struct qt_meta_stringdata_EcocVersionChecker_t 22,767
    QByteArrayData data[data23,816
    char stringdata0[stringdata024,844
#define QT_MOC_LITERAL(26,873
static const qt_meta_stringdata_EcocVersionChecker_t qt_meta_stringdata_EcocVersionChecker 31,1112
#undef QT_MOC_LITERAL38,1298
static const uint qt_meta_data_EcocVersionChecker[qt_meta_data_EcocVersionChecker40,1321
void EcocVersionChecker::qt_static_metacall(qt_static_metacall56,1680
QT_INIT_METAOBJECT const QMetaObject EcocVersionChecker::staticMetaObject 64,1857
const QMetaObject *EcocVersionChecker::metaObject(metaObject70,2096
void *EcocVersionChecker::qt_metacast(qt_metacast75,2256
int EcocVersionChecker::qt_metacall(qt_metacall83,2514

src/qt/sendtokenpage.h,287
#define SENDTOKENPAGE_H2,25
namespace Ui 11,153
class SendTokenPage 15,196
    Ui::SendTokenPage *ui;ui38,798
    WalletModel* m_model;39,826
    ClientModel* m_clientModel;40,853
    Token *m_tokenABI;m_tokenABI41,886
    SelectedToken *m_selectedToken;m_selectedToken42,910

src/qt/editcontractinfodialog.cpp,900
EditContractInfoDialog::EditContractInfoDialog(13,285
EditContractInfoDialog::~EditContractInfoDialog(~EditContractInfoDialog52,1558
bool EditContractInfoDialog::isValidContractAddress(isValidContractAddress58,1660
bool EditContractInfoDialog::isValidInterfaceABI(isValidInterfaceABI64,1802
bool EditContractInfoDialog::isDataValid(isDataValid70,1933
void EditContractInfoDialog::setModel(setModel82,2163
void EditContractInfoDialog::loadRow(loadRow94,2546
bool EditContractInfoDialog::saveCurrentRow(saveCurrentRow99,2636
void EditContractInfoDialog::accept(accept127,3421
void EditContractInfoDialog::on_newContractABI(on_newContractABI157,4351
QString EditContractInfoDialog::getAddress(getAddress171,4686
void EditContractInfoDialog::setAddress(setAddress176,4767
QString EditContractInfoDialog::getABI(getABI182,4913
void EditContractInfoDialog::setABI(setABI187,4986

src/qt/moc_tokenfilterproxy.cpp,706
struct qt_meta_stringdata_TokenFilterProxy_t 22,773
    QByteArrayData data[data23,820
    char stringdata0[stringdata024,848
#define QT_MOC_LITERAL(26,877
static const qt_meta_stringdata_TokenFilterProxy_t qt_meta_stringdata_TokenFilterProxy 31,1114
#undef QT_MOC_LITERAL38,1292
static const uint qt_meta_data_TokenFilterProxy[qt_meta_data_TokenFilterProxy40,1315
void TokenFilterProxy::qt_static_metacall(qt_static_metacall56,1672
QT_INIT_METAOBJECT const QMetaObject TokenFilterProxy::staticMetaObject 64,1847
const QMetaObject *TokenFilterProxy::metaObject(metaObject70,2094
void *TokenFilterProxy::qt_metacast(qt_metacast75,2252
int TokenFilterProxy::qt_metacall(qt_metacall83,2520

src/qt/peertablemodel.cpp,1133
bool NodeLessThan::operator()(operator()18,409
class PeerTablePriv42,1131
    QList<CNodeCombinedStats> cachedNodeStats;46,1204
    int sortColumn;48,1286
    Qt::SortOrder sortOrder;50,1366
    std::map<std::map52,1431
    std::map<NodeId, int> mapNodeRows;52,1431
    void refreshPeers(55,1535
    int size(98,3121
    CNodeCombinedStats *index(index103,3194
PeerTableModel::PeerTableModel(112,3364
PeerTableModel::~PeerTableModel(~PeerTableModel131,3879
void PeerTableModel::startAutoRefresh(startAutoRefresh136,3950
void PeerTableModel::stopAutoRefresh(stopAutoRefresh141,4015
int PeerTableModel::rowCount(rowCount146,4078
int PeerTableModel::columnCount(columnCount152,4192
QVariant PeerTableModel::data(data158,4313
QVariant PeerTableModel::headerData(headerData185,5139
Qt::ItemFlags PeerTableModel::flags(flags197,5432
QModelIndex PeerTableModel::index(index206,5637
const CNodeCombinedStats *PeerTableModel::getNodeStats(getNodeStats216,5889
void PeerTableModel::refresh(refresh221,5987
int PeerTableModel::getRowByNodeId(getRowByNodeId228,6114
void PeerTableModel::sort(sort237,6324

src/qt/qvalidatedlineedit.h,192
#define BITCOIN_QT_QVALIDATEDLINEEDIT_H6,235
class QValidatedLineEdit 13,460
    bool valid;31,843
    const QValidator *checkValidator;checkValidator32,859
    bool emptyIsValid;33,897

src/httpserver.h,837
#define BITCOIN_HTTPSERVER_H6,224
static const int DEFAULT_HTTP_THREADS=14,362
static const int DEFAULT_HTTP_WORKQUEUE=15,403
static const int DEFAULT_HTTP_SERVER_TIMEOUT=16,447
typedef std::function<bool(bool38,1054
class HTTPRequest55,1688
    struct evhttp_request* req;58,1717
    bool replySent;59,1749
    bool startedChunkTransfer;60,1769
    bool connClosed;61,1800
    std::mutex cs;63,1822
    std::condition_variable closeCv;64,1841
    enum RequestMethod 73,2017
        UNKNOWN,74,2042
        GET,75,2059
        POST,76,2072
        HEAD,77,2086
        PUT78,2100
    std::pair<std::pair101,2562
class HTTPClosure146,3693
    virtual ~HTTPClosure(150,3756
class HTTPEvent155,3877
    bool deleteWhenTriggered;170,4439
    struct evbuffer *databuf;databuf173,4517
    struct event* ev;174,4547

src/rest.cpp,1168
static const size_t MAX_GETUTXOS_OUTPOINTS 23,597
enum RetFormat 25,699
    RF_UNDEF,26,716
    RF_BINARY,27,730
    RF_HEX,28,745
    RF_JSON,29,757
    enum RetFormat rf;33,796
    const char* name;34,819
} rf_names[rf_names35,841
struct CCoin 42,958
    uint32_t nHeight;43,973
    CTxOut out;44,995
    ADD_SERIALIZE_METHODS;46,1012
    CCoin(48,1040
    CCoin(49,1068
    template <typename Stream,51,1139
    inline void SerializationOp(52,1190
static bool RESTERR(68,1834
static enum RetFormat ParseDataFormat(75,2043
static std::string AvailableDataFormatsString(96,2611
static bool ParseHashStr(112,3027
static bool CheckWarmup(121,3207
static bool rest_headers(129,3450
static bool rest_block(203,5989
static bool rest_block_extended(266,8073
static bool rest_block_notxdetails(271,8205
static bool rest_chaininfo(279,8477
static bool rest_mempool_info(305,9294
static bool rest_mempool_contents(330,10012
static bool rest_tx(355,10726
static bool rest_getutxos(407,12337
    const char* prefix;595,19393
} uri_prefixes[uri_prefixes597,19483
bool StartREST(608,19873
void InterruptREST(615,20059
void StopREST(619,20085

src/netbase.h,284
#define BITCOIN_NETBASE_H6,221
static const int DEFAULT_CONNECT_TIMEOUT 24,518
static const int DEFAULT_NAME_LOOKUP 26,584
class proxyType28,630
    proxyType(31,656
    proxyType(32,705
    bool IsValid(34,844
    CService proxy;36,898
    bool randomize_credentials;37,918

src/timedata.cpp,244
static CCriticalSection cs_nTimeOffset;20,457
static int64_t nTimeOffset 21,497
int64_t GetTimeOffset(30,769
int64_t GetAdjustedTime(36,848
static int64_t abs64(41,919
#define BITCOIN_TIMEDATA_MAX_SAMPLES 46,986
void AddTimeData(48,1028

src/ui_interface.cpp,154
CClientUIInterface uiInterface;8,240
bool InitError(10,273
void InitWarning(16,413
std::string AmountHighWarn(21,539
std::string AmountErrMsg(26,657

src/torcontrol.cpp,3193
const std::string DEFAULT_TOR_CONTROL 33,889
static const int TOR_COOKIE_SIZE 35,994
static const int TOR_NONCE_SIZE 37,1083
static const std::string TOR_SAFE_SERVERKEY 39,1167
static const std::string TOR_SAFE_CLIENTKEY 41,1319
static const float RECONNECT_TIMEOUT_START 43,1495
static const float RECONNECT_TIMEOUT_EXP 45,1602
static const int MAX_LINE_LENGTH 50,1882
class TorControlReply55,2027
    TorControlReply(58,2059
    int code;60,2095
    std::vector<std::string> lines;61,2109
    void Clear(63,2146
class TorControlConnection73,2347
    typedef boost::function<void(TorControlConnection&)> ConnectionCB;76,2384
    typedef boost::function<void(TorControlConnection &,const TorControlReply &)> ReplyHandlerCB;77,2455
    boost::signals2::signal<void(TorControlConnection &,const TorControlReply &)> async_handler;105,3453
    boost::function<void(TorControlConnection&)> connected;108,3598
    boost::function<void(TorControlConnection&)> disconnected;110,3699
    struct event_base *base;base112,3793
    struct bufferevent *b_conn;b_conn114,3862
    TorControlReply message;116,3928
    std::deque<ReplyHandlerCB> reply_handlers;118,3986
TorControlConnection::TorControlConnection(125,4210
TorControlConnection::~TorControlConnection(~TorControlConnection130,4312
void TorControlConnection::readcb(readcb136,4413
void TorControlConnection::eventcb(eventcb181,6336
bool TorControlConnection::Connect(Connect197,6920
bool TorControlConnection::Disconnect(Disconnect227,8109
bool TorControlConnection::Command(Command235,8237
static std::pair<std::string,std::string> SplitTorReplyLine(253,8766
static std::map<std::string,std::string> ParseTorReplyMapping(268,9194
static std::pair<bool,std::string> ReadBinaryFile(316,11168
static bool WriteBinaryFile(336,11761
class TorController354,12269
    struct event_base* base;366,12563
    std::string target;367,12592
    TorControlConnection conn;368,12616
    std::string private_key;369,12647
    std::string service_id;370,12676
    bool reconnect;371,12704
    struct event *reconnect_ev;reconnect_ev372,12724
    float reconnect_timeout;373,12756
    CService service;374,12785
    std::vector<uint8_t> cookie;376,12845
    std::vector<uint8_t> clientNonce;378,12921
TorController::TorController(397,13802
TorController::~TorController(~TorController418,14756
void TorController::add_onion_cb(add_onion_cb429,14948
void TorController::auth_cb(auth_cb457,16355
static std::vector<uint8_t> ComputeResponse(500,18279
void TorController::authchallenge_cb(authchallenge_cb511,18861
void TorController::protocolinfo_cb(protocolinfo_cb542,20504
void TorController::connected_cb(connected_cb616,24686
void TorController::disconnected_cb(disconnected_cb624,25063
void TorController::Reconnect(Reconnect642,25656
std::string TorController::GetPrivateKeyFile(GetPrivateKeyFile653,26053
void TorController::reconnect_cb(reconnect_cb658,26163
struct event_base *base;base665,26339
boost::thread torControlThread;666,26364
static void TorControlThread(668,26397
void StartTorControl(675,26539
void InterruptTorControl(692,26968
void StopTorControl(700,27104

src/utilstrencodings.cpp,1058
static const string CHARS_ALPHA_NUM 17,393
static const string SAFE_CHARS[SAFE_CHARS19,498
string SanitizeString(25,657
const signed char p_util_hexdigit[p_util_hexdigit36,934
signed char HexDigit(54,1797
bool IsHex(59,1877
vector<unsigned char> ParseHex(69,2109
vector<unsigned char> ParseHex(90,2577
string EncodeBase64(95,2666
string EncodeBase64(141,3759
vector<unsigned char> DecodeBase64(146,3875
string DecodeBase64(229,6880
string EncodeBase32(235,7079
string EncodeBase32(294,8640
vector<unsigned char> DecodeBase32(299,8756
string DecodeBase32(416,13064
static bool ParsePrechecks(422,13263
bool ParseInt32(433,13629
bool ParseInt64(449,14297
bool ParseUInt32(464,14909
bool ParseUInt64(481,15710
bool ParseDouble(498,16457
std::string FormatParagraph(512,16861
std::string i64tostr(553,18287
std::string itostr(558,18355
int64_t atoi64(563,18417
int64_t atoi64(572,18543
int atoi(581,18692
static const int64_t UPPER_BOUND 594,19086
static inline bool ProcessMantissaDigit(597,19194
bool ParseFixedPoint(613,19608

src/blockencodings.cpp,455
#define MIN_TRANSACTION_BASE_SIZE 18,461
CBlockHeaderAndShortTxIDs::CBlockHeaderAndShortTxIDs(20,599
void CBlockHeaderAndShortTxIDs::FillShortTxIDSelector(FillShortTxIDSelector32,1198
uint64_t CBlockHeaderAndShortTxIDs::GetShortID(GetShortID43,1619
ReadStatus PartiallyDownloadedBlock::InitData(InitData50,1876
bool PartiallyDownloadedBlock::IsTxAvailable(IsTxAvailable172,8443
ReadStatus PartiallyDownloadedBlock::FillBlock(FillBlock178,8633

src/bench/verify_script.cpp,161
static CMutableTransaction BuildCreditingTransaction(15,449
static CMutableTransaction BuildSpendingTransaction(32,1030
static void VerifyScriptBench(51,1733

src/bench/rollingbloom.cpp,33
static void RollingBloom(11,272

src/bench/perf.h,113
#define H_PERF7,252
static inline uint64_t perf_cpucycles(13,312
static inline uint64_t perf_cpucycles(22,472

src/bench/ccoins_caching.cpp,60
SetupDummyInputs(20,610
static void CCoinsCaching(56,2218

src/bench/perf.cpp,270
void perf_init(12,371
void perf_fini(13,396
static int fd 21,524
static struct perf_event_attr attr;22,544
void perf_init(24,581
void perf_fini(31,748
uint64_t perf_cpucycles(38,819
void perf_init(49,1037
void perf_fini(50,1062
uint64_t perf_cpucycles(51,1087

src/bench/data/blockbench.raw.h,54
static unsigned const char blockbench[blockbench1,0

src/bench/coin_selection.cpp,63
static void addCoin(13,329
static void CoinSelection(37,1361

src/bench/bench_bitcoin.cpp,13
main(12,279

src/bench/base58.cpp,105
static void Base58Encode(14,293
static void Base58CheckEncode(28,653
static void Base58Decode(44,1080

src/bench/mempool_eviction.cpp,63
static void AddTx(12,300
static void MempoolEviction(28,1013

src/bench/checkblock.cpp,121
namespace block_bench 12,315
static void DeserializeBlockTest(20,563
static void DeserializeAndCheckBlockTest(35,1026

src/bench/Examples.cpp,84
static void Sleep100ms(11,354
volatile double sum 23,552
static void Trig(25,622

src/bench/lockedpool.cpp,97
#define ASIZE 12,282
#define BITER 13,301
#define MSIZE 14,320
static void LockedPool(16,340

src/bench/crypto_hash.cpp,217
static const uint64_t BUFFER_SIZE 18,464
static void RIPEMD160(20,512
static void SHA1(28,748
static void SHA256(36,969
static void SHA256_32b(44,1196
static void SHA512(54,1446
static void SipHash_32b(62,1673

src/bench/bench.h,830
#define BITCOIN_BENCH_BENCH_H6,225
    class State 39,1003
        std::string name;40,1021
        double maxElapsed;41,1047
        double beginTime;42,1074
        double lastTime,43,1100
        double lastTime, minTime,43,1100
        double lastTime, minTime, maxTime,43,1100
        double lastTime, minTime, maxTime, countMaskInv;43,1100
        uint64_t count;44,1157
        uint64_t countMask;45,1181
        uint64_t beginCycles;46,1209
        uint64_t lastCycles;47,1239
        uint64_t minCycles;48,1268
        uint64_t maxCycles;49,1296
        State(51,1336
    typedef boost::function<void(void62,1800
    class BenchRunner64,1858
        typedef std::map<std::string,std::string66,1886
        typedef std::map<std::string, BenchFunction> BenchmarkMap;66,1886
#define BENCHMARK(77,2216

src/bench/checkqueue.cpp,636
static const int MIN_CORES 18,510
static const size_t BATCHES 19,542
static const size_t BATCH_SIZE 20,577
static const int PREVECTOR_SIZE 21,614
static const int QUEUE_BATCH_SIZE 22,652
static void CCheckQueueSpeed(23,693
    struct FakeJobNoWork 25,749
        bool operator()(operator()26,776
        void swap(30,847
static void CCheckQueueSpeedPrevectorJob(64,2139
    struct PrevectorJob 66,2207
        prevector<prevector67,2233
        prevector<PREVECTOR_SIZE, uint8_t> p;67,2233
        PrevectorJob(68,2279
        PrevectorJob(70,2313
        bool operator()(operator()73,2446
        void swap(77,2517

src/bench/bench.cpp,286
benchmark::BenchRunner::BenchmarkMap &benchmark::BenchRunner::benchmarks(benchmarks12,295
static double gettimedouble(17,477
benchmark::BenchRunner::BenchRunner(BenchRunner23,614
benchmark::BenchRunner::RunAll(RunAll29,762
bool benchmark::State::KeepRunning(KeepRunning42,1175

src/bitcoin-cli.cpp,686
static const char DEFAULT_RPCCONNECT[DEFAULT_RPCCONNECT26,641
static const int DEFAULT_HTTP_CLIENT_TIMEOUT=27,695
static const bool DEFAULT_NAMED=28,745
static const int CONTINUE_EXECUTION=29,784
std::string HelpMessageCli(31,825
class CConnectionFailed 60,2562
    explicit inline CConnectionFailed(64,2625
static int AppInitRPC(74,2894
struct HTTPReply126,5052
    HTTPReply(128,5071
    int status;130,5113
    int error;131,5129
    std::string body;132,5144
const char *http_errorstring(http_errorstring135,5170
static void http_request_done(157,5805
static void http_error_cb(183,6568
UniValue CallRPC(190,6725
int CommandLineRPC(264,10212
int main(357,13456

src/torcontrol.h,82
#define BITCOIN_TORCONTROL_H9,272
static const bool DEFAULT_LISTEN_ONION 14,372

src/streams.h,4065
#define BITCOIN_STREAMS_H7,265
class OverrideStream26,607
    Stream* stream;28,630
    const int nType;30,651
    const int nVersion;31,672
    OverrideStream(34,705
    OverrideStream<Stream>& operator<<(37,851
    OverrideStream<Stream>& operator>>(45,1035
    void write(52,1194
    void read(57,1288
    int GetVersion(62,1374
    int GetType(63,1422
OverrideStream<S> WithOrVersion(67,1489
class CVectorWriter76,1762
    CVectorWriter(87,2186
    CVectorWriter(97,2578
    void write(101,2824
    CVectorWriter& operator<<(114,3372
    int GetVersion(120,3521
    int GetType(124,3585
    void seek(128,3643
    const int nType;135,3783
    const int nVersion;136,3804
    std::vector<unsigned char>& vchData;137,3828
    size_t nPos;138,3869
class CDataStream146,4136
    typedef CSerializeData vector_type;149,4167
    vector_type vch;150,4207
    unsigned int nReadPos;151,4228
    int nType;153,4256
    int nVersion;154,4271
    typedef vector_type::allocator_type   allocator_type;157,4298
    typedef vector_type::size_type        size_type;158,4356
    typedef vector_type::difference_type  difference_type;159,4409
    typedef vector_type::reference        reference;160,4468
    typedef vector_type::const_reference  const_reference;161,4521
    typedef vector_type::value_type       value_type;162,4580
    typedef vector_type::iterator         iterator;163,4634
    typedef vector_type::const_iterator   const_iterator;164,4686
    typedef vector_type::reverse_iterator reverse_iterator;165,4744
    explicit CDataStream(167,4805
    CDataStream(172,4907
    CDataStream(177,5064
    CDataStream(182,5215
    CDataStream(187,5368
    CDataStream(192,5527
    CDataStream(198,5727
    void Init(204,5897
    CDataStream& operator+=(operator+=211,6031
    friend CDataStream operator+(217,6167
    std::string str(224,6326
    const_iterator begin(233,6449
    iterator begin(234,6537
    const_iterator end(235,6625
    iterator end(236,6700
    size_type size(237,6775
    bool empty(238,6862
    void resize(239,6950
    void reserve(240,7036
    void clear(243,7290
    iterator insert(244,7374
    void insert(245,7459
    value_type* data(246,7542
    const value_type* data(247,7629
    void insert(249,7717
    void insert(262,8209
    iterator erase(275,8657
    iterator erase(292,9157
    inline void Compact(312,9670
    bool Rewind(318,9787
    bool eof(331,10035
    CDataStream* rdbuf(332,10092
    int in_avail(333,10142
    void SetType(335,10195
    int GetType(336,10243
    void SetVersion(337,10294
    int GetVersion(338,10345
    void read(340,10400
    void ignore(359,10964
    void write(377,11518
    void Serialize(384,11698
    CDataStream& operator<<(392,11941
    CDataStream& operator>>(400,12114
    void GetAndClear(407,12262
    void Xor(417,12532
class CAutoFile451,13392
    const int nType;458,13520
    const int nVersion;459,13541
    FILE* file;461,13566
    CAutoFile(464,13592
    ~CAutoFile(469,13726
    void fclose(474,13774
    FILE* release(486,14108
    FILE* Get(492,14405
    bool IsNull(496,14530
    int GetType(501,14625
    int GetVersion(502,14676
    void read(504,14731
    void ignore(512,15054
    void write(525,15543
    CAutoFile& operator<<(534,15855
    CAutoFile& operator>>(544,16133
class CBufferedFile560,16720
    const int nType;567,16868
    const int nVersion;568,16889
    FILE *src;src570,16914
    uint64_t nSrcPos;571,16955
    uint64_t nReadPos;572,17026
    uint64_t nReadLimit;573,17095
    uint64_t nRewind;574,17167
    std::vector<char> vchBuf;575,17234
    bool Fill(579,17342
    CBufferedFile(597,17970
    ~CBufferedFile(603,18246
    int GetVersion(608,18298
    int GetType(609,18346
    void fclose(611,18389
    bool eof(620,18557
    void read(625,18666
    uint64_t GetPos(647,19487
    bool SetPos(652,19585
    bool Seek(665,19913
    bool SetLimit(679,20312
    CBufferedFile& operator>>(687,20499
    void FindByte(694,20719

src/undo.h,630
#define BITCOIN_UNDO_H7,262
class TxInUndoSerializer21,698
    const Coin* txout;23,725
    void Serialize(27,787
    TxInUndoSerializer(37,1205
class TxInUndoDeserializer40,1267
    Coin* txout;42,1296
    void Unserialize(46,1352
    TxInUndoDeserializer(61,1960
static const size_t MAX_INPUTS_PER_BLOCK 64,2018
class CTxUndo66,2183
    std::vector<Coin> vprevout;70,2245
    void Serialize(73,2309
    void Unserialize(83,2652
class CBlockUndo98,3142
    std::vector<CTxUndo> vtxundo;101,3169
    ADD_SERIALIZE_METHODS;103,3232
    template <typename Stream,105,3260
    inline void SerializationOp(106,3311

src/util.cpp,2974
#undef _POSIX_C_SOURCE31,700
#define _POSIX_C_SOURCE 34,731
#undef _WIN32_WINNT53,1045
#define _WIN32_WINNT 55,1072
#undef _WIN32_IE58,1118
#define _WIN32_IE 60,1142
#define WIN32_LEAN_AND_MEAN 62,1168
#define NOMINMAX64,1215
namespace boost 92,2308
    namespace program_options 94,2327
const char * const BITCOIN_CONF_FILENAME 102,2463
const char * const BITCOIN_PID_FILENAME 103,2519
CCriticalSection cs_args;105,2575
map<string, string> mapArgs;106,2601
static map<string, vector<string> > _mapMultiArgs;107,2630
const map<string, vector<string> >& mapMultiArgs 108,2681
bool fDebug 109,2747
bool fPrintToConsole 110,2768
bool fPrintToDebugLog 111,2798
bool fLogTimestamps 113,2829
bool fLogTimeMicros 114,2874
bool fLogIPs 115,2919
CTranslationInterface translationInterface;117,2992
static CCriticalSection** ppmutexOpenSSL;120,3088
void locking_callback(121,3130
class CInit131,3389
    CInit(134,3411
    ~CInit(157,4504
instance_of_cinit;168,4840
static boost::once_flag debugPrintInitFlag 181,5372
static FILE* fileout 192,5830
static boost::mutex* mutexDebugLog 193,5859
static list<string> *vMsgsBeforeOpenLog;vMsgsBeforeOpenLog194,5902
static FILE* fileoutVM 197,6024
static int FileWriteStr(200,6128
static void DebugPrintInit(205,6241
void OpenDebugLog(212,6393
bool LogAcceptCategory(247,7677
static std::string LogTimestampStr(284,9168
int LogPrintStr(308,9814
static bool InterpretBool(357,11287
static void InterpretNegativeSetting(365,11455
void ParseParameters(374,11731
bool IsArgSet(410,12669
std::string GetArg(416,12768
int64_t GetArg(424,12955
bool GetBoolArg(432,13131
bool SoftSetArg(440,13312
bool SoftSetBoolArg(449,13510
void ForceSetArg(457,13706
static const int screenWidth 465,13837
static const int optIndent 466,13872
static const int msgIndent 467,13904
std::string HelpMessageGroup(469,13937
std::string HelpMessageOpt(473,14054
static std::string FormatException(480,14369
void PrintExceptionContinue(496,14898
boost::filesystem::path GetDefaultDataDir(503,15178
static boost::filesystem::path pathCached;530,15900
static boost::filesystem::path pathCachedNetSpecific;531,15943
static CCriticalSection csPathCached;532,15997
const boost::filesystem::path &GetDataDir(GetDataDir534,16036
void ClearDatadirCache(564,16786
boost::filesystem::path GetConfigFile(572,16940
void ReadConfigFile(581,17194
boost::filesystem::path GetPidFile(608,18114
void CreatePidFile(615,18337
bool RenameOver(626,18552
bool TryCreateDirectory(642,19110
void FileCommit(656,19511
bool TruncateFile(673,19928
int RaiseFileDescriptorLimit(685,20291
void AllocateFileRange(708,21058
void ShrinkDebugFile(750,22470
boost::filesystem::path GetSpecialFolderPath(779,23544
void runCommand(795,23925
void RenameThread(802,24119
void SetupEnvironment(818,24551
bool SetupNetworking(837,25441
int GetNumCores(849,25726
std::string CopyrightHolders(858,25974
bool CheckHex(869,26488

src/utiltime.cpp,280
static int64_t nMockTime 17,436
int64_t GetTime(19,489
void SetMockTime(28,616
int64_t GetTimeMillis(33,688
int64_t GetTimeMicros(41,928
int64_t GetSystemTimeInSeconds(49,1168
int64_t GetLogTimeMicros(55,1288
void MilliSleep(62,1394
std::string DateTimeStrFormat(80,1936

src/compressor.h,459
#define BITCOIN_COMPRESSOR_H7,268
class CScriptCompressor28,889
    static const unsigned int nSpecialScripts 37,1213
    CScript &script;script39,1265
    CScriptCompressor(56,2030
    void Serialize(59,2125
    void Unserialize(71,2460
class CTxOutCompressor93,3154
    CTxOut &txout;txout96,3188
    CTxOutCompressor(102,3327
    ADD_SERIALIZE_METHODS;104,3387
    template <typename Stream,106,3415
    inline void SerializationOp(107,3466

src/secp256k1/include/secp256k1_recovery.h,198
# define _SECP256K1_RECOVERY_2,29
    unsigned char data[data25,827
} secp256k1_ecdsa_recoverable_signature;26,855
SECP256K1_API int secp256k1_ecdsa_recoverable_signature_parse_compact(36,1236

src/secp256k1/include/secp256k1.h,1432
# define _SECP256K1_2,20
typedef struct secp256k1_context_struct secp256k1_context;43,1794
    unsigned char data[data54,2339
} secp256k1_pubkey;55,2367
    unsigned char data[data67,2907
} secp256k1_ecdsa_signature;68,2935
typedef int (*secp256k1_nonce_function)secp256k1_nonce_function86,3945
#   define SECP256K1_GNUC_PREREQ(97,4242
#   define SECP256K1_GNUC_PREREQ(100,4350
#   define SECP256K1_INLINE 106,4514
#   define SECP256K1_INLINE 108,4581
#   define SECP256K1_INLINE110,4626
#  define SECP256K1_INLINE 113,4670
#   define SECP256K1_API 119,4781
#   define SECP256K1_API121,4836
#  define SECP256K1_API 124,4923
#  define SECP256K1_API126,4995
#  define SECP256K1_WARN_UNUSED_RESULT 134,5232
#  define SECP256K1_WARN_UNUSED_RESULT136,5319
#  define SECP256K1_ARG_NONNULL(139,5449
#  define SECP256K1_ARG_NONNULL(141,5527
#define SECP256K1_FLAGS_TYPE_MASK 145,5651
#define SECP256K1_FLAGS_TYPE_CONTEXT 146,5700
#define SECP256K1_FLAGS_TYPE_COMPRESSION 147,5746
#define SECP256K1_FLAGS_BIT_CONTEXT_VERIFY 149,5865
#define SECP256K1_FLAGS_BIT_CONTEXT_SIGN 150,5917
#define SECP256K1_FLAGS_BIT_COMPRESSION 151,5967
#define SECP256K1_CONTEXT_VERIFY 154,6067
#define SECP256K1_CONTEXT_SIGN 155,6168
#define SECP256K1_CONTEXT_NONE 156,6265
#define SECP256K1_EC_COMPRESSED 159,6414
#define SECP256K1_EC_UNCOMPRESSED 160,6515
SECP256K1_API secp256k1_context* secp256k1_context_create(167,6738

src/secp256k1/include/secp256k1_ecdh.h,101
# define _SECP256K1_ECDH_2,25
SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ecdh(20,687

src/secp256k1/src/testrand_impl.h,691
#define _SECP256K1_TESTRAND_IMPL_H_8,398
static secp256k1_rfc6979_hmac_sha256_t secp256k1_test_rng;16,517
static uint32_t secp256k1_test_rng_precomputed[secp256k1_test_rng_precomputed17,576
static int secp256k1_test_rng_precomputed_used 18,627
static uint64_t secp256k1_test_rng_integer;19,679
static int secp256k1_test_rng_integer_bits_left 20,723
SECP256K1_INLINE static void secp256k1_rand_seed(22,777
SECP256K1_INLINE static uint32_t secp256k1_rand32(26,939
static uint32_t secp256k1_rand_bits(34,1352
static uint32_t secp256k1_rand_int(47,1837
static void secp256k1_rand256(86,3286
static void secp256k1_rand_bytes_test(90,3415
static void secp256k1_rand256_test(106,3874

src/secp256k1/src/scalar_impl.h,2480
#define _SECP256K1_SCALAR_IMPL_H_8,396
static void secp256k1_scalar_get_num(28,804
static void secp256k1_scalar_order_get_num(35,1073
static void secp256k1_scalar_inverse(55,1653
    secp256k1_scalar *t;t67,2107
    int i;68,2132
    secp256k1_scalar x2,70,2203
    secp256k1_scalar x2, x3,70,2203
    secp256k1_scalar x2, x3, x4,70,2203
    secp256k1_scalar x2, x3, x4, x6,70,2203
    secp256k1_scalar x2, x3, x4, x6, x7,70,2203
    secp256k1_scalar x2, x3, x4, x6, x7, x8,70,2203
    secp256k1_scalar x2, x3, x4, x6, x7, x8, x15,70,2203
    secp256k1_scalar x2, x3, x4, x6, x7, x8, x15, x30,70,2203
    secp256k1_scalar x2, x3, x4, x6, x7, x8, x15, x30, x60,70,2203
    secp256k1_scalar x2, x3, x4, x6, x7, x8, x15, x30, x60, x120,70,2203
    secp256k1_scalar x2, x3, x4, x6, x7, x8, x15, x30, x60, x120, x127;70,2203
    secp256k1_scalar_sqr(&x2,  x)72,2276
    secp256k1_scalar_mul(&x2, &x2,  x)73,2311
    secp256k1_scalar_sqr(&x3, &x2)x275,2352
    secp256k1_scalar_mul(&x3, &x3,  x)76,2388
    secp256k1_scalar_sqr(&x4, &x3)x378,2429
    secp256k1_scalar_mul(&x4, &x4,  x)79,2465
    secp256k1_scalar_sqr(&x6, &x4)x481,2506
    secp256k1_scalar_sqr(&x6, &x6)x682,2542
    secp256k1_scalar_mul(&x6, &x6, &x2)x283,2578
    secp256k1_scalar_sqr(&x7, &x6)x685,2620
    secp256k1_scalar_mul(&x7, &x7,  x)86,2656
    secp256k1_scalar_sqr(&x8, &x7)x788,2697
    secp256k1_scalar_mul(&x8, &x8,  x)89,2733
    secp256k1_scalar_sqr(&x15, &x8)x891,2774
        secp256k1_scalar_sqr(&x15, &x15)x1593,2841
    secp256k1_scalar_mul(&x15, &x15, &x7)x795,2889
    secp256k1_scalar_sqr(&x30, &x15)x1597,2933
        secp256k1_scalar_sqr(&x30, &x30)x3099,3002
    secp256k1_scalar_mul(&x30, &x30, &x15)x15101,3050
    secp256k1_scalar_sqr(&x60, &x30)x30103,3095
        secp256k1_scalar_sqr(&x60, &x60)x60105,3164
    secp256k1_scalar_mul(&x60, &x60, &x30)x30107,3212
    secp256k1_scalar_sqr(&x120, &x60)x60109,3257
        secp256k1_scalar_sqr(&x120, &x120)x120111,3327
    secp256k1_scalar_mul(&x120, &x120, &x60)x60113,3377
    secp256k1_scalar_sqr(&x127, &x120)x120115,3424
        secp256k1_scalar_sqr(&x127, &x127)x127117,3494
    secp256k1_scalar_mul(&x127, &x127, &x7)x7119,3544
    t 122,3653
SECP256K1_INLINE static int secp256k1_scalar_is_even(257,7826
static void secp256k1_scalar_inverse_var(262,7945
static void secp256k1_scalar_split_lambda(291,9044
static void secp256k1_scalar_split_lambda(334,11505

src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.h,52
#define _Included_org_bitcoin_NativeSecp256k17,200

src/secp256k1/src/java/org_bitcoin_Secp256k1Context.h,53
#define _Included_org_bitcoin_Secp256k1Context7,202

src/secp256k1/src/testrand.h,37
#define _SECP256K1_TESTRAND_H_8,393

src/secp256k1/src/eckey_impl.h,354
#define _SECP256K1_ECKEY_IMPL_H_8,395
static int secp256k1_eckey_pubkey_parse(17,532
static int secp256k1_eckey_pubkey_serialize(36,1307
static int secp256k1_eckey_privkey_tweak_add(54,1860
static int secp256k1_eckey_pubkey_tweak_add(62,2086
static int secp256k1_eckey_privkey_tweak_mul(76,2512
static int secp256k1_eckey_pubkey_tweak_mul(85,2741

src/secp256k1/src/num_gmp.h,159
#define _SECP256K1_NUM_REPR_8,391
#define NUM_LIMBS 12,439
    mp_limb_t data[data15,513
    int neg;16,546
    int limbs;17,559
} secp256k1_num;18,574

src/secp256k1/src/field_5x52_int128_impl.h,227
#define _SECP256K1_FIELD_INNER5X52_IMPL_H_8,405
#define VERIFY_BITS(13,484
#define VERIFY_BITS(15,548
SECP256K1_INLINE static void secp256k1_fe_mul_inner(18,598
SECP256K1_INLINE static void secp256k1_fe_sqr_inner(155,5167

src/secp256k1/src/ecmult_const_impl.h,258
#define _SECP256K1_ECMULT_CONST_IMPL_8,400
    #define WNAF_BITS 16,554
    #define WNAF_BITS 18,586
#define WNAF_SIZE(20,619
#define ECMULT_CONST_TABLE_GET_GE(23,733
static int secp256k1_wnaf_const(57,2289
static void secp256k1_ecmult_const(122,4735

src/secp256k1/src/ecdsa.h,32
#define _SECP256K1_ECDSA_8,388

src/secp256k1/src/ecmult.h,170
#define _SECP256K1_ECMULT_8,389
    secp256k1_ge_storage (*pre_g)pre_g15,528
    secp256k1_ge_storage (*pre_g_128)pre_g_12817,629
} secp256k1_ecmult_context;19,716

src/secp256k1/src/field_impl.h,366
#define _SECP256K1_FIELD_IMPL_H_8,395
SECP256K1_INLINE static int secp256k1_fe_equal(24,691
SECP256K1_INLINE static int secp256k1_fe_equal_var(31,925
static int secp256k1_fe_sqrt(38,1167
static void secp256k1_fe_inv(136,3869
static void secp256k1_fe_inv_var(226,6057
static void secp256k1_fe_inv_all_var(263,7432
static int secp256k1_fe_is_quad_var(290,7956

src/secp256k1/src/group.h,627
#define _SECP256K1_GROUP_8,388
    secp256k1_fe x;15,539
    secp256k1_fe y;16,559
    int infinity;17,579
} secp256k1_ge;18,649
#define SECP256K1_GE_CONST(20,666
#define SECP256K1_GE_CONST_INFINITY 21,851
    secp256k1_fe x;25,1069
    secp256k1_fe y;26,1111
    secp256k1_fe z;27,1153
    int infinity;28,1173
} secp256k1_gej;29,1243
#define SECP256K1_GEJ_CONST(31,1261
#define SECP256K1_GEJ_CONST_INFINITY 32,1491
    secp256k1_fe_storage x;35,1682
    secp256k1_fe_storage y;36,1710
} secp256k1_ge_storage;37,1738
#define SECP256K1_GE_STORAGE_CONST(39,1763
#define SECP256K1_GE_STORAGE_CONST_GET(41,1970

src/secp256k1/src/scalar_4x64.h,129
#define _SECP256K1_SCALAR_REPR_8,394
    uint64_t d[d14,528
} secp256k1_scalar;15,547
#define SECP256K1_SCALAR_CONST(17,568

src/secp256k1/src/scalar_low_impl.h,1123
#define _SECP256K1_SCALAR_REPR_IMPL_H_8,401
SECP256K1_INLINE static int secp256k1_scalar_is_even(14,483
SECP256K1_INLINE static void secp256k1_scalar_clear(18,590
SECP256K1_INLINE static void secp256k1_scalar_set_int(19,675
SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits(21,779
SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits_var(28,1029
SECP256K1_INLINE static int secp256k1_scalar_check_overflow(32,1225
static int secp256k1_scalar_add(34,1353
static void secp256k1_scalar_cadd_bit(39,1529
static void secp256k1_scalar_set_b32(47,1753
static void secp256k1_scalar_get_b32(58,2120
SECP256K1_INLINE static int secp256k1_scalar_is_zero(63,2310
static void secp256k1_scalar_negate(67,2415
SECP256K1_INLINE static int secp256k1_scalar_is_one(75,2599
static int secp256k1_scalar_is_high(79,2703
static int secp256k1_scalar_cond_negate(83,2814
static void secp256k1_scalar_mul(88,2961
static int secp256k1_scalar_shr_int(92,3118
static void secp256k1_scalar_sqr(101,3312
static void secp256k1_scalar_split_128(105,3442
SECP256K1_INLINE static int secp256k1_scalar_eq(110,3584

src/secp256k1/src/num_gmp_impl.h,911
#define _SECP256K1_NUM_REPR_IMPL_H_8,398
static void secp256k1_num_sanity(18,543
#define secp256k1_num_sanity(22,689
static void secp256k1_num_copy(25,745
static void secp256k1_num_get_bin(29,836
static void secp256k1_num_set_bin(45,1374
static void secp256k1_num_add_abs(62,1811
static void secp256k1_num_sub_abs(71,2118
static void secp256k1_num_mod(81,2440
static void secp256k1_num_mod_inverse(101,2997
static int secp256k1_num_jacobi(147,4349
static int secp256k1_num_is_one(169,4883
static int secp256k1_num_is_zero(173,4991
static int secp256k1_num_is_neg(177,5100
static int secp256k1_num_cmp(181,5217
static int secp256k1_num_eq(191,5458
static void secp256k1_num_subadd(204,5816
static void secp256k1_num_add(223,6418
static void secp256k1_num_sub(229,6615
static void secp256k1_num_mul(235,6812
static void secp256k1_num_shift(262,7652
static void secp256k1_num_negate(284,8296

src/secp256k1/src/field_10x26.h,401
#define _SECP256K1_FIELD_REPR_8,393
    uint32_t n[n14,509
    int magnitude;16,543
    int normalized;17,562
} secp256k1_fe;19,589
#define SECP256K1_FE_CONST_INNER(22,675
#define SECP256K1_FE_CONST(36,1329
#define SECP256K1_FE_CONST(38,1475
    uint32_t n[n42,1634
} secp256k1_fe_storage;43,1653
#define SECP256K1_FE_STORAGE_CONST(45,1678
#define SECP256K1_FE_STORAGE_CONST_GET(46,1798

src/secp256k1/src/field_5x52_asm_impl.h,172
#define _SECP256K1_FIELD_INNER5X52_IMPL_H_15,658
SECP256K1_INLINE static void secp256k1_fe_mul_inner(17,702
SECP256K1_INLINE static void secp256k1_fe_sqr_inner(287,7644

src/secp256k1/src/ecmult_const.h,39
#define _SECP256K1_ECMULT_CONST_8,395

src/secp256k1/src/field_5x52_impl.h,1237
#define _SECP256K1_FIELD_REPR_IMPL_H_8,400
static void secp256k1_fe_verify(33,1230
static void secp256k1_fe_verify(53,1997
static void secp256k1_fe_normalize(58,2077
static void secp256k1_fe_normalize_weak(101,3745
static void secp256k1_fe_normalize_var(125,4592
static int secp256k1_fe_normalizes_to_zero(169,6232
static int secp256k1_fe_normalizes_to_zero_var(192,7278
SECP256K1_INLINE static void secp256k1_fe_set_int(233,8524
SECP256K1_INLINE static int secp256k1_fe_is_zero(243,8761
SECP256K1_INLINE static int secp256k1_fe_is_odd(252,9002
SECP256K1_INLINE static void secp256k1_fe_clear(260,9184
static int secp256k1_fe_cmp_var(271,9384
static int secp256k1_fe_set_b32(290,9803
static void secp256k1_fe_get_b32(313,10544
SECP256K1_INLINE static void secp256k1_fe_negate(331,10978
SECP256K1_INLINE static void secp256k1_fe_mul_int(348,11553
SECP256K1_INLINE static void secp256k1_fe_add(361,11817
static void secp256k1_fe_mul(377,12183
static void secp256k1_fe_sqr(393,12617
static SECP256K1_INLINE void secp256k1_fe_cmov(406,12911
static SECP256K1_INLINE void secp256k1_fe_storage_cmov(423,13499
static void secp256k1_fe_to_storage(433,13919
static SECP256K1_INLINE void secp256k1_fe_from_storage(443,14236

src/secp256k1/src/hash_impl.h,953
#define _SECP256K1_HASH_IMPL_H_8,394
#define Ch(16,507
#define Maj(17,553
#define Sigma0(18,608
#define Sigma1(19,703
#define sigma0(20,797
#define sigma1(21,879
#define Round(23,964
#define BE32(31,1200
#define BE32(33,1226
static void secp256k1_sha256_initialize(36,1352
static void secp256k1_sha256_transform(49,1774
static void secp256k1_sha256_write(131,7309
static void secp256k1_sha256_finalize(148,7913
static void secp256k1_hmac_sha256_initialize(164,8681
static void secp256k1_hmac_sha256_write(192,9542
static void secp256k1_hmac_sha256_finalize(196,9712
static void secp256k1_rfc6979_hmac_sha256_initialize(205,10022
static void secp256k1_rfc6979_hmac_sha256_generate(235,11308
static void secp256k1_rfc6979_hmac_sha256_finalize(266,12396
#undef BE32272,12564
#undef Round273,12576
#undef sigma1274,12589
#undef sigma0275,12603
#undef Sigma1276,12617
#undef Sigma0277,12631
#undef Maj278,12645
#undef Ch279,12656

src/secp256k1/src/scalar.h,33
#define _SECP256K1_SCALAR_8,389

src/secp256k1/src/basic-config.h,579
#define _SECP256K1_BASIC_CONFIG_8,395
#undef USE_ASM_X86_6412,454
#undef USE_ENDOMORPHISM13,476
#undef USE_FIELD_10X2614,500
#undef USE_FIELD_5X5215,523
#undef USE_FIELD_INV_BUILTIN16,545
#undef USE_FIELD_INV_NUM17,574
#undef USE_NUM_GMP18,599
#undef USE_NUM_NONE19,618
#undef USE_SCALAR_4X6420,638
#undef USE_SCALAR_8X3221,661
#undef USE_SCALAR_INV_BUILTIN22,684
#undef USE_SCALAR_INV_NUM23,714
#define USE_NUM_NONE 25,741
#define USE_FIELD_INV_BUILTIN 26,764
#define USE_SCALAR_INV_BUILTIN 27,796
#define USE_FIELD_10X26 28,829
#define USE_SCALAR_8X32 29,855

src/secp256k1/src/ecmult_impl.h,963
#define _SECP256K1_ECMULT_IMPL_H_8,396
#    define WINDOW_A 21,759
#    define WINDOW_G 22,782
#    define WINDOW_A 24,839
#    define WINDOW_G 25,862
#    define WINDOW_A 27,893
#    define WINDOW_G 28,916
#define WINDOW_A 32,1003
#define WINDOW_G 37,1220
#define WINDOW_G 40,1294
#define ECMULT_TABLE_SIZE(45,1408
static void secp256k1_ecmult_odd_multiples_table(52,1754
static void secp256k1_ecmult_odd_multiples_table_globalz_windowa(102,3603
static void secp256k1_ecmult_odd_multiples_table_storage_var(112,4122
#define ECMULT_TABLE_GET_GE(134,5062
#define ECMULT_TABLE_GET_GE_STORAGE(145,5388
static void secp256k1_ecmult_context_init(157,5795
static void secp256k1_ecmult_context_build(164,5954
static void secp256k1_ecmult_context_clone(196,7010
static int secp256k1_ecmult_context_is_built(216,7804
static void secp256k1_ecmult_context_clear(220,7922
static int secp256k1_ecmult_wnaf(235,8598
static void secp256k1_ecmult(286,9766

src/secp256k1/src/scalar_4x64_impl.h,2088
#define _SECP256K1_SCALAR_REPR_IMPL_H_8,401
#define SECP256K1_N_0 11,477
#define SECP256K1_N_1 12,533
#define SECP256K1_N_2 13,589
#define SECP256K1_N_3 14,645
#define SECP256K1_N_C_0 17,750
#define SECP256K1_N_C_1 18,795
#define SECP256K1_N_C_2 19,836
#define SECP256K1_N_H_0 22,906
#define SECP256K1_N_H_1 23,964
#define SECP256K1_N_H_2 24,1022
#define SECP256K1_N_H_3 25,1080
SECP256K1_INLINE static void secp256k1_scalar_clear(27,1139
SECP256K1_INLINE static void secp256k1_scalar_set_int(34,1285
SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits(41,1449
SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits_var(46,1729
SECP256K1_INLINE static int secp256k1_scalar_check_overflow(57,2260
SECP256K1_INLINE static int secp256k1_scalar_reduce(69,2674
static int secp256k1_scalar_add(83,3241
static void secp256k1_scalar_cadd_bit(99,3908
static void secp256k1_scalar_set_b32(117,4759
static void secp256k1_scalar_get_b32(129,5850
SECP256K1_INLINE static int secp256k1_scalar_is_zero(136,6717
static void secp256k1_scalar_negate(140,6859
SECP256K1_INLINE static int secp256k1_scalar_is_one(152,7374
static int secp256k1_scalar_is_high(156,7521
static int secp256k1_scalar_cond_negate(168,7936
#define muladd(187,8847
#define muladd_fast(202,9465
#define muladd2(216,10003
#define sumadd(238,11286
#define sumadd_fast(247,11679
#define extract(255,12042
#define extract_fast(263,12246
static void secp256k1_scalar_reduce_512(270,12351
static void secp256k1_scalar_mul_512(579,20477
static void secp256k1_scalar_sqr_512(746,24807
#undef sumadd883,28301
#undef sumadd_fast884,28315
#undef muladd885,28334
#undef muladd_fast886,28348
#undef muladd2887,28367
#undef extract888,28382
#undef extract_fast889,28397
static void secp256k1_scalar_mul(891,28418
static int secp256k1_scalar_shr_int(897,28628
static void secp256k1_scalar_sqr(909,29005
static void secp256k1_scalar_split_128(916,29209
SECP256K1_INLINE static int secp256k1_scalar_eq(928,29499
SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(932,29711

src/secp256k1/src/eckey.h,32
#define _SECP256K1_ECKEY_8,388

src/secp256k1/src/num.h,30
#define _SECP256K1_NUM_8,386

src/secp256k1/src/hash.h,382
#define _SECP256K1_HASH_8,387
    uint32_t s[s14,471
    uint32_t buf[buf15,490
    size_t bytes;16,532
} secp256k1_sha256_t;17,550
    secp256k1_sha256_t inner,24,847
    secp256k1_sha256_t inner, outer;24,847
} secp256k1_hmac_sha256_t;25,884
    unsigned char v[v32,1255
    unsigned char k[k33,1280
    int retry;34,1305
} secp256k1_rfc6979_hmac_sha256_t;35,1320

src/secp256k1/src/group_impl.h,1842
#define _SECP256K1_GROUP_IMPL_H_8,395
const secp256k1_ge secp256k1_ge_const_g 41,1638
const int CURVE_B 48,1911
const secp256k1_ge secp256k1_ge_const_g 50,1970
const int CURVE_B 56,2242
static const secp256k1_ge secp256k1_ge_const_g 64,2476
const int CURVE_B 71,2788
static void secp256k1_ge_set_gej_zinv(74,2819
static void secp256k1_ge_set_xy(84,3156
static int secp256k1_ge_is_infinity(90,3307
static void secp256k1_ge_neg(94,3395
static void secp256k1_ge_set_gej(100,3564
static void secp256k1_ge_set_gej_var(113,3954
static void secp256k1_ge_set_all_gej_var(129,4397
static void secp256k1_ge_set_table_gej_var(155,5145
static void secp256k1_ge_globalz_set_table_gej(173,5781
static void secp256k1_gej_set_infinity(196,6496
static void secp256k1_ge_set_infinity(203,6672
static void secp256k1_gej_clear(209,6815
static void secp256k1_ge_clear(216,6984
static int secp256k1_ge_set_xquad(222,7120
static int secp256k1_ge_set_xo_var(233,7439
static void secp256k1_gej_set_ge(245,7744
static int secp256k1_gej_eq_x_var(252,7920
static void secp256k1_gej_neg(260,8217
static int secp256k1_gej_is_infinity(269,8458
static int secp256k1_gej_is_valid_var(273,8548
static int secp256k1_ge_is_valid_var(293,9176
static void secp256k1_gej_double_var(307,9596
static SECP256K1_INLINE void secp256k1_gej_double_nonzero(362,12253
static void secp256k1_gej_add_var(367,12467
static void secp256k1_gej_add_ge_var(420,14355
static void secp256k1_gej_add_zinv_var(469,16155
static void secp256k1_gej_add_ge(526,18558
static void secp256k1_gej_rescale(648,25690
static void secp256k1_ge_to_storage(659,26163
static void secp256k1_ge_from_storage(670,26479
static SECP256K1_INLINE void secp256k1_ge_storage_cmov(676,26681
static void secp256k1_ge_mul_lambda(682,26933
static int secp256k1_gej_has_quad_y_var(692,27268

src/secp256k1/src/libsecp256k1-config.h,1120
#define LIBSECP256K1_CONFIG_H6,202
#define ENABLE_MODULE_ECDH 12,382
#define ENABLE_MODULE_RECOVERY 15,480
#define HAVE_BUILTIN_EXPECT 21,670
#define HAVE_DLFCN_H 24,758
#define HAVE_INTTYPES_H 27,842
#define HAVE_LIBCRYPTO 30,920
#define HAVE_MEMORY_H 36,1078
#define HAVE_STDINT_H 39,1161
#define HAVE_STDLIB_H 42,1244
#define HAVE_STRINGS_H 45,1328
#define HAVE_STRING_H 48,1412
#define HAVE_SYS_STAT_H 51,1497
#define HAVE_SYS_TYPES_H 54,1585
#define HAVE_UNISTD_H 57,1671
#define HAVE___INT128 60,1753
#define LT_OBJDIR 63,1856
#define PACKAGE 66,1906
#define PACKAGE_BUGREPORT 69,2017
#define PACKAGE_NAME 72,2094
#define PACKAGE_STRING 75,2190
#define PACKAGE_TARNAME 78,2292
#define PACKAGE_URL 81,2380
#define PACKAGE_VERSION 84,2449
#define STDC_HEADERS 87,2535
#define USE_ASM_X86_64 90,2624
#define USE_ECMULT_STATIC_PRECOMPUTATION 93,2718
#define USE_FIELD_5X52 106,3125
#define USE_FIELD_INV_BUILTIN 109,3223
#define USE_NUM_NONE 118,3506
#define USE_SCALAR_4X64 121,3593
#define USE_SCALAR_INV_BUILTIN 127,3786
#define VERSION 133,3961
#  define WORDS_BIGENDIAN 139,4195

src/secp256k1/src/ecmult_static_context.h,192
#define _SECP256K1_ECMULT_STATIC_CONTEXT_2,42
#define SC 4,103
static const secp256k1_ge_storage secp256k1_ecmult_static_context[secp256k1_ecmult_static_context5,141
#undef SC1159,217471

src/secp256k1/src/field_10x26_impl.h,1436
#define _SECP256K1_FIELD_REPR_IMPL_H_8,400
static void secp256k1_fe_verify(15,508
static void secp256k1_fe_verify(42,1433
static void secp256k1_fe_normalize(47,1513
static void secp256k1_fe_normalize_weak(102,3746
static void secp256k1_fe_normalize_var(133,4929
static int secp256k1_fe_normalizes_to_zero(189,7154
static int secp256k1_fe_normalizes_to_zero_var(218,8543
SECP256K1_INLINE static void secp256k1_fe_set_int(270,10155
SECP256K1_INLINE static int secp256k1_fe_is_zero(280,10442
SECP256K1_INLINE static int secp256k1_fe_is_odd(289,10718
SECP256K1_INLINE static void secp256k1_fe_clear(297,10900
static int secp256k1_fe_cmp_var(308,11101
static int secp256k1_fe_set_b32(327,11520
static void secp256k1_fe_get_b32(351,12376
SECP256K1_INLINE static void secp256k1_fe_negate(369,12810
SECP256K1_INLINE static void secp256k1_fe_mul_int(391,13605
SECP256K1_INLINE static void secp256k1_fe_add(409,13959
#define VERIFY_BITS(439,14699
#define VERIFY_BITS(441,14763
SECP256K1_INLINE static void secp256k1_fe_mul_inner(444,14813
SECP256K1_INLINE static void secp256k1_fe_sqr_inner(773,29163
static void secp256k1_fe_mul(1048,41996
static void secp256k1_fe_sqr(1064,42430
static SECP256K1_INLINE void secp256k1_fe_cmov(1077,42724
static SECP256K1_INLINE void secp256k1_fe_storage_cmov(1099,43577
static void secp256k1_fe_to_storage(1113,44209
static SECP256K1_INLINE void secp256k1_fe_from_storage(1127,44718

src/secp256k1/src/modules/recovery/main_impl.h,500
#define _SECP256K1_MODULE_RECOVERY_MAIN_8,403
static void secp256k1_ecdsa_recoverable_signature_load(12,486
static void secp256k1_ecdsa_recoverable_signature_save(27,1225
int secp256k1_ecdsa_recoverable_signature_parse_compact(38,1664
int secp256k1_ecdsa_recoverable_signature_serialize_compact(60,2345
int secp256k1_ecdsa_recoverable_signature_convert(74,2846
static int secp256k1_ecdsa_sig_recover(87,3271
int secp256k1_ecdsa_sign_recoverable(123,4561
int secp256k1_ecdsa_recover(170,6293

src/secp256k1/src/modules/recovery/tests_impl.h,172
#define _SECP256K1_MODULE_RECOVERY_TESTS_8,404
void test_ecdsa_recovery_end_to_end(10,447
void test_ecdsa_recovery_edge_cases(69,3671
void run_recovery_tests(242,12904

src/secp256k1/src/modules/ecdh/main_impl.h,70
#define _SECP256K1_MODULE_ECDH_MAIN_8,399
int secp256k1_ecdh(13,505

src/secp256k1/src/modules/ecdh/tests_impl.h,146
#define _SECP256K1_MODULE_ECDH_TESTS_8,400
void test_ecdh_generator_basepoint(10,439
void test_bad_scalar(44,1751
void run_ecdh_tests(70,2672

src/secp256k1/src/field_5x52.h,353
#define _SECP256K1_FIELD_REPR_8,393
    uint64_t n[n14,509
    int magnitude;16,542
    int normalized;17,561
} secp256k1_fe;19,588
#define SECP256K1_FE_CONST_INNER(22,674
#define SECP256K1_FE_CONST(31,1124
#define SECP256K1_FE_CONST(33,1270
    uint64_t n[n37,1429
} secp256k1_fe_storage;38,1448
#define SECP256K1_FE_STORAGE_CONST(40,1473

src/secp256k1/src/num_impl.h,37
#define _SECP256K1_NUM_IMPL_H_8,393

src/secp256k1/src/field.h,32
#define _SECP256K1_FIELD_8,388

src/secp256k1/src/scalar_low.h,80
#define _SECP256K1_SCALAR_REPR_8,394
typedef uint32_t secp256k1_scalar;13,511

src/secp256k1/src/ecmult_gen_impl.h,416
#define _SECP256K1_ECMULT_GEN_IMPL_H_8,400
static void secp256k1_ecmult_gen_context_init(17,607
static void secp256k1_ecmult_gen_context_build(21,715
static int secp256k1_ecmult_gen_context_is_built(94,3376
static void secp256k1_ecmult_gen_context_clone(98,3501
static void secp256k1_ecmult_gen_context_clear(115,4105
static void secp256k1_ecmult_gen(124,4364
static void secp256k1_ecmult_gen_blind(159,5947

src/secp256k1/src/bench.h,123
#define _SECP256K1_BENCH_H_8,390
static double gettimedouble(14,479
void print_number(20,616
void run_benchmark(33,811

src/secp256k1/src/scalar_8x32.h,129
#define _SECP256K1_SCALAR_REPR_8,394
    uint32_t d[d14,528
} secp256k1_scalar;15,547
#define SECP256K1_SCALAR_CONST(17,568

src/secp256k1/src/scalar_8x32_impl.h,2413
#define _SECP256K1_SCALAR_REPR_IMPL_H_8,401
#define SECP256K1_N_0 11,477
#define SECP256K1_N_1 12,524
#define SECP256K1_N_2 13,571
#define SECP256K1_N_3 14,618
#define SECP256K1_N_4 15,665
#define SECP256K1_N_5 16,712
#define SECP256K1_N_6 17,759
#define SECP256K1_N_7 18,806
#define SECP256K1_N_C_0 21,902
#define SECP256K1_N_C_1 22,947
#define SECP256K1_N_C_2 23,988
#define SECP256K1_N_C_3 24,1029
#define SECP256K1_N_C_4 25,1070
#define SECP256K1_N_H_0 28,1140
#define SECP256K1_N_H_1 29,1189
#define SECP256K1_N_H_2 30,1238
#define SECP256K1_N_H_3 31,1287
#define SECP256K1_N_H_4 32,1336
#define SECP256K1_N_H_5 33,1385
#define SECP256K1_N_H_6 34,1434
#define SECP256K1_N_H_7 35,1483
SECP256K1_INLINE static void secp256k1_scalar_clear(37,1533
SECP256K1_INLINE static void secp256k1_scalar_set_int(48,1747
SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits(59,1979
SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits_var(64,2247
SECP256K1_INLINE static int secp256k1_scalar_check_overflow(75,2778
SECP256K1_INLINE static int secp256k1_scalar_reduce(93,3507
static int secp256k1_scalar_add(115,4368
static void secp256k1_scalar_cadd_bit(139,5322
static void secp256k1_scalar_set_b32(165,6620
static void secp256k1_scalar_get_b32(181,7735
SECP256K1_INLINE static int secp256k1_scalar_is_zero(192,8590
static void secp256k1_scalar_negate(196,8772
SECP256K1_INLINE static int secp256k1_scalar_is_one(216,9609
static int secp256k1_scalar_is_high(220,9796
static int secp256k1_scalar_cond_negate(238,10545
#define muladd(266,11859
#define muladd_fast(281,12459
#define muladd2(295,12979
#define sumadd(317,14212
#define sumadd_fast(326,14605
#define extract(334,14968
#define extract_fast(342,15172
static void secp256k1_scalar_reduce_512(349,15277
static void secp256k1_scalar_mul_512(491,19333
static void secp256k1_scalar_sqr_512(579,21823
#undef sumadd639,23466
#undef sumadd_fast640,23480
#undef muladd641,23499
#undef muladd_fast642,23513
#undef muladd2643,23532
#undef extract644,23547
#undef extract_fast645,23562
static void secp256k1_scalar_mul(647,23583
static int secp256k1_scalar_shr_int(653,23794
static void secp256k1_scalar_sqr(669,24387
static void secp256k1_scalar_split_128(676,24592
SECP256K1_INLINE static int secp256k1_scalar_eq(696,25050
SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(700,25350

src/secp256k1/src/ecmult_gen.h,194
#define _SECP256K1_ECMULT_GEN_8,393
    secp256k1_ge_storage (*prec)prec26,1261
    secp256k1_scalar blind;27,1341
    secp256k1_gej initial;28,1369
} secp256k1_ecmult_gen_context;29,1396

src/secp256k1/src/ecdsa_impl.h,610
#define _SECP256K1_ECDSA_IMPL_H_9,396
static const secp256k1_fe secp256k1_ecdsa_const_order_as_fe 31,1072
static const secp256k1_fe secp256k1_ecdsa_const_p_minus_order 45,1661
static int secp256k1_der_read_len(49,1820
static int secp256k1_der_parse_integer(101,3256
static int secp256k1_ecdsa_sig_parse(147,4514
static int secp256k1_ecdsa_sig_serialize(179,5374
static int secp256k1_ecdsa_sig_verify(203,6172
    secp256k1_fe_set_b32(&xr, c)240,7361
    secp256k1_fe_add(&xr, &secp256k1_ecdsa_const_order_as_fe)secp256k1_ecdsa_const_order_as_fe266,8675
static int secp256k1_ecdsa_sig_sign(275,8904

src/secp256k1/src/util.h,964
#define _SECP256K1_UTIL_H_8,389
    void (*fn)fn19,561
    const void* data;20,607
} secp256k1_callback;21,629
static SECP256K1_INLINE void secp256k1_callback_call(23,652
#define TEST_FAILURE(28,828
#define TEST_FAILURE(33,930
#define EXPECT(40,1087
#define EXPECT(42,1139
#define CHECK(46,1192
#define CHECK(52,1325
#define VERIFY_CHECK 61,1553
#define VERIFY_SETUP(62,1580
#define VERIFY_CHECK(64,1635
#define VERIFY_SETUP(65,1692
static SECP256K1_INLINE void *checked_malloc(checked_malloc68,1727
# define SECP256K1_RESTRICT78,2065
#   define SECP256K1_RESTRICT 82,2199
#   define SECP256K1_RESTRICT 84,2290
#   define SECP256K1_RESTRICT86,2339
#  define SECP256K1_RESTRICT 89,2385
# define I64FORMAT 94,2459
# define I64uFORMAT 95,2485
# define I64FORMAT 97,2518
# define I64uFORMAT 98,2543
#  define SECP256K1_GNUC_EXT 103,2627
#  define SECP256K1_GNUC_EXT105,2677
SECP256K1_GNUC_EXT typedef unsigned __int128 uint128_t;107,2714

src/secp256k1/contrib/lax_der_parsing.h,97
#define _SECP256K1_CONTRIB_LAX_DER_PARSING_H_52,2517
int ecdsa_signature_parse_der_lax(80,3637

src/secp256k1/contrib/lax_der_privatekey_parsing.h,117
#define _SECP256K1_CONTRIB_BER_PRIVATEKEY_H_29,1274
SECP256K1_WARN_UNUSED_RESULT int ec_privkey_export_der(57,2389

src/coins.cpp,1866
bool CCoinsView::GetCoin(GetCoin13,312
bool CCoinsView::HaveCoin(HaveCoin14,400
uint256 CCoinsView::GetBestBlock(GetBestBlock15,477
bool CCoinsView::BatchWrite(BatchWrite16,540
CCoinsViewCursor *CCoinsView::Cursor(Cursor17,633
CCoinsViewBacked::CCoinsViewBacked(20,694
bool CCoinsViewBacked::GetCoin(GetCoin21,768
bool CCoinsViewBacked::HaveCoin(HaveCoin22,886
uint256 CCoinsViewBacked::GetBestBlock(GetBestBlock23,988
void CCoinsViewBacked::SetBackend(SetBackend24,1068
bool CCoinsViewBacked::BatchWrite(BatchWrite25,1142
CCoinsViewCursor *CCoinsViewBacked::Cursor(Cursor26,1273
size_t CCoinsViewBacked::EstimateSize(EstimateSize27,1351
SaltedOutpointHasher::SaltedOutpointHasher(29,1431
CCoinsViewCache::CCoinsViewCache(31,1583
size_t CCoinsViewCache::DynamicMemoryUsage(DynamicMemoryUsage33,1688
CCoinsMap::iterator CCoinsViewCache::FetchCoin(FetchCoin37,1810
bool CCoinsViewCache::GetCoin(GetCoin54,2532
void CCoinsViewCache::AddCoin(AddCoin63,2779
void AddCoins(84,3679
void CCoinsViewCache::SpendCoin(SpendCoin95,4211
double CCoinsViewCache::GetPriority(GetPriority110,4703
static const Coin coinEmpty;129,5327
const Coin& CCoinsViewCache::AccessCoin(AccessCoin131,5357
bool CCoinsViewCache::HaveCoin(HaveCoin140,5602
bool CCoinsViewCache::HaveCoinInCache(HaveCoinInCache145,5794
uint256 CCoinsViewCache::GetBestBlock(GetBestBlock150,5967
void CCoinsViewCache::SetBestBlock(SetBestBlock156,6110
bool CCoinsViewCache::BatchWrite(BatchWrite160,6207
bool CCoinsViewCache::Flush(Flush216,9532
void CCoinsViewCache::Uncache(Uncache223,9689
unsigned int CCoinsViewCache::GetCacheSize(GetCacheSize232,9960
CAmount CCoinsViewCache::GetValueIn(GetValueIn236,10046
bool CCoinsViewCache::HaveInputs(HaveInputs248,10321
static const size_t MAX_OUTPUTS_PER_BLOCK 260,10601
const Coin& AccessByTxid(262,10777

src/prevector.h,4467
#define _BITCOIN_PREVECTOR_H_6,225
template<unsigned int N,34,1228
template<unsigned int N, typename T,34,1228
template<unsigned int N, typename T, typename Size 34,1228
    typedef Size size_type;37,1342
    typedef Diff difference_type;38,1370
    typedef T value_type;39,1404
    typedef value_type& reference;40,1430
    typedef const value_type& const_reference;41,1465
    typedef value_type* pointer;42,1512
    typedef const value_type*value_type43,1545
    class iterator 45,1591
        T* ptr;46,1612
        typedef Diff difference_type;48,1640
        typedef T value_type;49,1678
        typedef T* pointer;50,1708
        typedef T& reference;51,1736
        typedef std::random_access_iterator_tag iterator_category;52,1766
        iterator(53,1833
        T& operator*(54,1874
        T* operator->(55,1920
        iterator& operator++(58,2094
        iterator& operator--(59,2150
        iterator operator++(60,2206
        iterator operator--(61,2289
        difference_type friend operator-(62,2372
        iterator operator+(63,2465
        iterator& operator+=(operator+=64,2535
        iterator operator-(65,2605
        iterator& operator-=(operator-=66,2675
        bool operator==(operator==67,2745
        bool operator!=(operator!=68,2812
        bool operator>=(operator>=69,2879
        bool operator<=(operator<=70,2946
        bool operator>(71,3013
        bool operator<(72,3078
    class reverse_iterator 75,3151
        T* ptr;76,3180
        typedef Diff difference_type;78,3208
        typedef T value_type;79,3246
        typedef T* pointer;80,3276
        typedef T& reference;81,3304
        typedef std::bidirectional_iterator_tag iterator_category;82,3334
        reverse_iterator(83,3401
        T& operator*(84,3450
        const T& operator*(85,3490
        T* operator->(86,3542
        const T* operator->(87,3582
        reverse_iterator& operator--(88,3634
        reverse_iterator& operator++(89,3698
        reverse_iterator operator++(90,3762
        reverse_iterator operator--(91,3861
        bool operator==(operator==92,3960
        bool operator!=(operator!=93,4035
    class const_iterator 96,4118
        const T* ptr;97,4145
        typedef Diff difference_type;99,4179
        typedef const T value_type;100,4217
        typedef const T* pointer;101,4253
        typedef const T& reference;102,4287
        typedef std::random_access_iterator_tag iterator_category;103,4323
        const_iterator(104,4390
        const_iterator(105,4443
        const T& operator*(106,4494
        const T* operator->(107,4546
        const_iterator& operator++(109,4668
        const_iterator& operator--(110,4730
        const_iterator operator++(111,4792
        const_iterator operator--(112,4887
        difference_type friend operator-(113,4982
        const_iterator operator+(114,5087
        const_iterator& operator+=(operator+=115,5169
        const_iterator operator-(116,5245
        const_iterator& operator-=(operator-=117,5327
        bool operator==(operator==118,5403
        bool operator!=(operator!=119,5476
        bool operator>=(operator>=120,5549
        bool operator<=(operator<=121,5622
        bool operator>(122,5695
        bool operator<(123,5766
    class const_reverse_iterator 126,5845
        const T* ptr;127,5880
        typedef Diff difference_type;129,5914
        typedef const T value_type;130,5952
        typedef const T* pointer;131,5988
        typedef const T& reference;132,6022
        typedef std::bidirectional_iterator_tag iterator_category;133,6058
        const_reverse_iterator(134,6125
        const_reverse_iterator(135,6180
        const T& operator*(136,6247
        const T* operator->(137,6299
        const_reverse_iterator& operator--(138,6351
        const_reverse_iterator& operator++(139,6421
        const_reverse_iterator operator++(140,6491
        const_reverse_iterator operator--(141,6602
        bool operator==(operator==142,6713
        bool operator!=(operator!=143,6794
    union direct_or_indirect 148,6913
        char direct[direct149,6944
            size_type capacity;151,6997
            char* indirect;152,7029
    prevector& operator=(operator=261,10888
    prevector& operator=(operator=276,11304
    bool operator==(operator==442,15819
    bool operator!=(operator!=459,16257
    bool operator<(463,16368

src/amount.cpp,165
const std::string CURRENCY_UNIT 11,308
CFeeRate::CFeeRate(CFeeRate13,358
CAmount CFeeRate::GetFee(GetFee24,636
std::string CFeeRate::ToString(ToString41,1031

src/support/events.h,287
#define BITCOIN_SUPPORT_EVENTS_H6,223
#define MAKE_RAII(14,343
raii_event_base obtain_event_base(30,696
raii_event obtain_event(37,894
raii_evhttp obtain_evhttp(41,1074
raii_evhttp_request obtain_evhttp_request(45,1172
raii_evhttp_connection obtain_evhttp_connection_base(49,1335

src/support/allocators/secure.h,1022
#define BITCOIN_SUPPORT_ALLOCATORS_SECURE_H7,283
struct secure_allocator 19,549
    typedef std::allocator<T> base;21,650
    typedef typename base::size_type size_type;22,686
    typedef typename base::difference_type difference_type;23,734
    typedef typename base::pointer pointer;24,794
    typedef typename base::const_pointer const_pointer;25,838
    typedef typename base::reference reference;26,894
    typedef typename base::const_reference const_reference;27,942
    typedef typename base::value_type value_type;28,1002
    secure_allocator(29,1052
    secure_allocator(30,1086
    secure_allocator(32,1181
    ~secure_allocator(35,1262
    struct rebind 37,1328
        typedef secure_allocator<_Other> other;38,1348
    T* allocate(41,1404
    void deallocate(46,1554
typedef std::basic_string<char,char56,1805
typedef std::basic_string<char, std::char_traits<std::char_traits56,1805
typedef std::basic_string<char, std::char_traits<char>, secure_allocator<char> > SecureString;56,1805

src/support/allocators/zeroafterfree.h,955
#define BITCOIN_SUPPORT_ALLOCATORS_ZEROAFTERFREE_H7,290
struct zero_after_free_allocator 15,431
    typedef std::allocator<T> base;17,541
    typedef typename base::size_type size_type;18,577
    typedef typename base::difference_type difference_type;19,625
    typedef typename base::pointer pointer;20,685
    typedef typename base::const_pointer const_pointer;21,729
    typedef typename base::reference reference;22,785
    typedef typename base::const_reference const_reference;23,833
    typedef typename base::value_type value_type;24,893
    zero_after_free_allocator(25,943
    zero_after_free_allocator(26,986
    zero_after_free_allocator(28,1099
    ~zero_after_free_allocator(31,1198
    struct rebind 33,1273
        typedef zero_after_free_allocator<_Other> other;34,1293
    void deallocate(37,1358
typedef std::vector<char,char46,1586
typedef std::vector<char, zero_after_free_allocator<char> > CSerializeData;46,1586

src/support/lockedpool.h,1598
#define BITCOIN_SUPPORT_LOCKEDPOOL_H6,227
class LockedPageAllocator18,459
    virtual ~LockedPageAllocator(21,495
class Arena47,1490
    struct Stats54,1619
        size_t used;56,1642
        size_t free;57,1663
        size_t total;58,1684
        size_t chunks_used;59,1706
        size_t chunks_free;60,1734
    bool addressInArena(86,2442
    std::map<std::map94,2822
    std::map<char*, size_t> chunks_free;94,2822
    std::map<std::map95,2863
    std::map<char*, size_t> chunks_used;95,2863
    char* base;97,2937
    char* end;99,2985
    size_t alignment;101,3035
class LockedPool117,3671
    static const size_t ARENA_SIZE 125,3980
    static const size_t ARENA_ALIGN 129,4178
    typedef bool (*LockingFailed_Callback)LockingFailed_Callback133,4290
    struct Stats136,4367
        size_t used;138,4390
        size_t free;139,4411
        size_t total;140,4432
        size_t locked;141,4454
        size_t chunks_used;142,4477
        size_t chunks_free;143,4505
    std::unique_ptr<LockedPageAllocator> allocator;174,5684
    class LockedPageArena:LockedPageArena177,5782
        void *base;base183,5979
        size_t size;184,5999
        LockedPageAllocator *allocator;allocator185,6020
    std::list<LockedPageArena> arenas;190,6116
    LockingFailed_Callback lf_cb;191,6155
    size_t cumulative_bytes_locked;192,6189
    mutable std::mutex mutex;195,6313
class LockedPoolManager 209,6934
    static LockedPoolManager& Instance(213,7046
    static LockedPoolManager* _instance;227,7505
    static std::once_flag init_flag;228,7546

src/support/cleanse.cpp,28
void memory_cleanse(10,290

src/support/lockedpool.cpp,1889
#undef _WIN32_WINNT14,355
#define _WIN32_WINNT 16,382
#define WIN32_LEAN_AND_MEAN 17,410
#define NOMINMAX19,457
LockedPoolManager* LockedPoolManager::_instance 31,686
std::once_flag LockedPoolManager::init_flag;32,742
static inline size_t align_up(38,916
Arena::Arena(46,1126
Arena::~Arena(~Arena53,1406
void* Arena::alloc(alloc57,1427
template <class Iterator, class Pair> bool extend(80,2215
void Arena::free(free88,2432
Arena::Stats Arena::stats(stats112,3200
void printchunk(124,3520
void Arena::walk(walk130,3774
class Win32LockedPageAllocator:Win32LockedPageAllocator147,4249
    size_t page_size;155,4487
Win32LockedPageAllocator::Win32LockedPageAllocator(Win32LockedPageAllocator158,4513
void *Win32LockedPageAllocator::AllocateLocked(AllocateLocked165,4706
void Win32LockedPageAllocator::FreeLocked(FreeLocked178,5345
size_t Win32LockedPageAllocator::GetLimit(GetLimit185,5532
class PosixLockedPageAllocator:PosixLockedPageAllocator199,5925
    size_t page_size;207,6163
PosixLockedPageAllocator::PosixLockedPageAllocator(PosixLockedPageAllocator210,6189
#define MAP_ANONYMOUS 223,6584
void *PosixLockedPageAllocator::AllocateLocked(AllocateLocked226,6623
void PosixLockedPageAllocator::FreeLocked(FreeLocked236,6935
size_t PosixLockedPageAllocator::GetLimit(GetLimit243,7119
LockedPool::LockedPool(260,7533
LockedPool::~LockedPool(~LockedPool265,7730
void* LockedPool::alloc(alloc268,7760
void LockedPool::free(free290,8282
LockedPool::Stats LockedPool::stats(stats304,8722
bool LockedPool::new_arena(new_arena319,9139
LockedPool::LockedPageArena::LockedPageArena(348,10218
LockedPool::LockedPageArena::~LockedPageArena(~LockedPageArena352,10444
LockedPoolManager::LockedPoolManager(360,10658
bool LockedPoolManager::LockingFailed(LockingFailed365,10821
void LockedPoolManager::CreateInstance(CreateInstance371,10944

src/support/cleanse.h,40
#define BITCOIN_SUPPORT_CLEANSE_H7,273

src/keystore.h,994
#define BITCOIN_KEYSTORE_H7,266
class CKeyStore19,516
    mutable CCriticalSection cs_KeyStore;22,545
    virtual ~CKeyStore(25,596
typedef std::map<CKeyID,CKeyID49,1710
typedef std::map<CKeyID, CKey> KeyMap;49,1710
typedef std::map<CKeyID,CKeyID50,1749
typedef std::map<CKeyID, CPubKey> WatchKeyMap;50,1749
typedef std::map<CScriptID,CScriptID51,1796
typedef std::map<CScriptID, CScript > ScriptMap;51,1796
typedef std::set<CScript> WatchOnlySet;52,1845
class CBasicKeyStore 55,1952
    KeyMap mapKeys;58,2005
    WatchKeyMap mapWatchKeys;59,2025
    ScriptMap mapScripts;60,2055
    WatchOnlySet setWatchOnly;61,2081
    bool HaveKey(66,2256
    void GetKeys(75,2460
    bool GetKey(88,2799
typedef std::vector<unsigned char,111,3549
typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;111,3549
typedef std::map<CKeyID,CKeyID112,3635
typedef std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;112,3635

src/core_write.cpp,229
std::string FormatScript(21,536
const std::map<unsigned char, std::string> mapSigHashTypes 56,1772
std::string ScriptToAsmStr(73,2927
std::string EncodeHexTx(117,4997
void ScriptPubKeyToUniv(124,5201
void TxToUniv(149,5964

src/blockencodings.h,2102
#define BITCOIN_BLOCK_ENCODINGS_H6,224
struct TransactionCompressor 15,396
    CTransactionRef& tx;17,436
    TransactionCompressor(19,469
    ADD_SERIALIZE_METHODS;21,533
    template <typename Stream,23,561
    inline void SerializationOp(24,612
class BlockTransactionsRequest 29,741
    uint256 blockhash;32,824
    std::vector<uint16_t> indexes;33,847
    ADD_SERIALIZE_METHODS;35,883
    template <typename Stream,37,911
    inline void SerializationOp(38,962
class BlockTransactions 71,2349
    uint256 blockhash;74,2418
    std::vector<CTransactionRef> txn;75,2441
    BlockTransactions(77,2480
    BlockTransactions(78,2507
    ADD_SERIALIZE_METHODS;81,2630
    template <typename Stream,83,2658
    inline void SerializationOp(84,2709
struct PrefilledTransaction 103,3456
    uint16_t index;106,3639
    CTransactionRef tx;107,3659
    ADD_SERIALIZE_METHODS;109,3684
    template <typename Stream,111,3712
    inline void SerializationOp(112,3763
typedef enum ReadStatus_t122,4105
    READ_STATUS_OK,124,4133
    READ_STATUS_INVALID,125,4153
    READ_STATUS_FAILED,126,4224
    READ_STATUS_CHECKBLOCK_FAILED,127,4276
} ReadStatus;129,4412
class CBlockHeaderAndShortTxIDs 131,4427
    mutable uint64_t shorttxidk0,133,4470
    mutable uint64_t shorttxidk0, shorttxidk1;133,4470
    uint64_t nonce;134,4517
    static const int SHORTTXIDS_LENGTH 140,4623
    std::vector<uint64_t> shorttxids;142,4678
    std::vector<PrefilledTransaction> prefilledtxn;143,4716
    CBlockHeader header;146,4777
    CBlockHeaderAndShortTxIDs(149,4836
    size_t BlockTxCount(155,4996
    ADD_SERIALIZE_METHODS;157,5081
    template <typename Stream,159,5109
    inline void SerializationOp(160,5160
class PartiallyDownloadedBlock 194,6419
    std::vector<CTransactionRef> txn_available;196,6463
    size_t prefilled_count 197,6511
    size_t prefilled_count = 0, mempool_count 197,6511
    size_t prefilled_count = 0, mempool_count = 0, extra_count 197,6511
    CTxMemPool* pool;198,6579
    CBlockHeader header;200,6609
    PartiallyDownloadedBlock(201,6634

src/netaddress.cpp,3355
static const unsigned char pchIPv4[pchIPv415,400
static const unsigned char pchOnionCat[pchOnionCat16,487
void CNetAddr::Init(Init18,564
void CNetAddr::SetIP(SetIP24,639
void CNetAddr::SetRaw(SetRaw29,724
bool CNetAddr::SetSpecial(SetSpecial45,1072
CNetAddr::CNetAddr(CNetAddr59,1613
CNetAddr::CNetAddr(CNetAddr64,1651
CNetAddr::CNetAddr(CNetAddr69,1756
unsigned int CNetAddr::GetByte(GetByte75,1905
bool CNetAddr::IsIPv4(IsIPv480,1975
bool CNetAddr::IsIPv6(IsIPv685,2066
bool CNetAddr::IsRFC1918(IsRFC191890,2137
bool CNetAddr::IsRFC2544(IsRFC254498,2352
bool CNetAddr::IsRFC3927(IsRFC3927103,2474
bool CNetAddr::IsRFC6598(IsRFC6598108,2577
bool CNetAddr::IsRFC5737(IsRFC5737113,2698
bool CNetAddr::IsRFC3849(IsRFC3849120,2963
bool CNetAddr::IsRFC3964(IsRFC3964125,3102
bool CNetAddr::IsRFC6052(IsRFC6052130,3197
bool CNetAddr::IsRFC4380(IsRFC4380136,3379
bool CNetAddr::IsRFC4862(IsRFC4862141,3514
bool CNetAddr::IsRFC4193(IsRFC4193147,3685
bool CNetAddr::IsRFC6145(IsRFC6145152,3766
bool CNetAddr::IsRFC4843(IsRFC4843158,3945
bool CNetAddr::IsTor(IsTor163,4095
bool CNetAddr::IsLocal(IsLocal168,4193
bool CNetAddr::IsMulticast(IsMulticast182,4516
bool CNetAddr::IsValid(IsValid188,4649
bool CNetAddr::IsRoutable(IsRoutable224,5653
enum Network CNetAddr::GetNetwork(GetNetwork229,5864
std::string CNetAddr::ToStringIP(ToStringIP243,6073
std::string CNetAddr::ToString(ToString265,7068
bool operator==(operator==270,7137
bool operator!=(operator!=275,7238
bool operator<(280,7339
bool CNetAddr::GetInAddr(GetInAddr285,7438
bool CNetAddr::GetIn6Addr(GetIn6Addr293,7592
std::vector<unsigned char> CNetAddr::GetGroup(GetGroup301,7827
uint64_t CNetAddr::GetHash(GetHash368,9576
static const int NET_UNKNOWN 378,9845
static const int NET_TEREDO 379,9889
int static GetExtNetwork(380,9933
int CNetAddr::GetReachabilityFrom(GetReachabilityFrom390,10197
    enum Reachability 392,10269
        REACH_UNREACHABLE,393,10293
        REACH_DEFAULT,394,10320
        REACH_TEREDO,395,10343
        REACH_IPV6_WEAK,396,10365
        REACH_IPV4,397,10390
        REACH_IPV6_STRONG,398,10410
        REACH_PRIVATE399,10437
void CService::Init(Init448,12041
CService::CService(CService453,12082
CService::CService(458,12120
CService::CService(462,12218
CService::CService(466,12332
CService::CService(470,12447
CService::CService(475,12597
bool CService::SetSockAddr(SetSockAddr480,12771
unsigned short CService::GetPort(GetPort494,13108
bool operator==(operator==499,13171
bool operator!=(operator!=504,13289
bool operator<(509,13407
bool CService::GetSockAddr(GetSockAddr514,13554
std::vector<unsigned char> CService::GetKey(GetKey544,14583
std::string CService::ToStringPort(ToStringPort554,14809
std::string CService::ToStringIPPort(ToStringIPPort559,14891
std::string CService::ToString(ToString568,15102
void CService::SetPort(SetPort573,15175
CSubNet::CSubNet(578,15245
CSubNet::CSubNet(CSubNet584,15328
CSubNet::CSubNet(CSubNet609,16077
CSubNet::CSubNet(627,16621
bool CSubNet::Match(Match634,16755
static inline int NetmaskBits(644,16992
std::string CSubNet::ToString(ToString660,17379
bool CSubNet::IsValid(IsValid698,18682
bool operator==(operator==703,18735
bool operator!=(operator!=708,18886
bool operator<(713,18963

src/timedata.h,346
#define BITCOIN_TIMEDATA_H6,222
static const int64_t DEFAULT_MAX_TIME_ADJUSTMENT 13,330
class CMedianFilter22,525
    std::vector<T> vValues;25,556
    std::vector<T> vSorted;26,584
    unsigned int nSize;27,612
    CMedianFilter(30,645
    void input(37,826
    T median(49,1150
    int size(62,1471
    std::vector<T> sorted(67,1536

src/cpp-ethereum/libweb3jsonrpc/AdminNet.cpp,492
AdminNet::AdminNet(13,283
bool AdminNet::admin_net_start(admin_net_start15,382
bool AdminNet::admin_net_stop(admin_net_stop22,500
bool AdminNet::admin_net_connect(admin_net_connect29,616
Json::Value AdminNet::admin_net_peers(admin_net_peers35,751
Json::Value AdminNet::admin_net_nodeInfo(admin_net_nodeInfo41,858
Json::Value AdminNet::admin_nodeInfo(admin_nodeInfo55,1204
Json::Value AdminNet::admin_peers(admin_peers73,1763
bool AdminNet::admin_addPeer(admin_addPeer81,1922

src/cpp-ethereum/libweb3jsonrpc/PersonalFace.h,479
#define JSONRPC_CPP_STUB_DEV_RPC_PERSONALFACE_H_6,127
        class PersonalFace 12,241
                PersonalFace(15,337
                inline virtual void personal_newAccountI(24,1650
                inline virtual void personal_unlockAccountI(28,1876
                inline virtual void personal_signAndSendTransactionI(32,2153
                inline virtual void personal_sendTransactionI(36,2416
                inline virtual void personal_listAccountsI(40,2665

src/cpp-ethereum/libweb3jsonrpc/Whisper.h,409
class Whisper:Whisper41,952
	Whisper(45,1060
	virtual RPCModules implementedModules(46,1137
	virtual void setIdentities(51,1246
	std::map<std::map52,1314
	std::map<dev::Public, dev::Secret> const& ids(52,1314
	WebThreeDirect& m_web3;67,2103
	std::map<std::map68,2128
	std::map<dev::Public, dev::Secret> m_ids;68,2128
	std::map<std::map69,2171
	std::map<unsigned, dev::Public> m_watches;69,2171

src/cpp-ethereum/libweb3jsonrpc/Personal.cpp,407
Personal::Personal(16,366
std::string Personal::personal_newAccount(personal_newAccount23,544
string Personal::personal_sendTransaction(personal_sendTransaction30,794
string Personal::personal_signAndSendTransaction(personal_signAndSendTransaction50,1310
bool Personal::personal_unlockAccount(personal_unlockAccount55,1481
Json::Value Personal::personal_listAccounts(personal_listAccounts60,1705

src/cpp-ethereum/libweb3jsonrpc/MemoryDB.h,187
class MemoryDB:MemoryDB32,854
	virtual RPCModules implementedModules(35,904
	virtual bool db_put(39,1011
	std::map<std::map43,1220
	std::map<std::string, std::string> m_db;43,1220

src/cpp-ethereum/libweb3jsonrpc/JsonHelper.h,321
namespace p2p37,1127
namespace eth44,1195
using Transactions 52,1319
using UncleHashes 53,1366
using TransactionHashes 54,1393
class AddressResolver74,2743
namespace shh82,2835
std::pair<std::pair88,3057
namespace rpc92,3122
Json::Value toJson(98,3201
Json::Value toJson(107,3371
Json::Value toJson(116,3548

src/cpp-ethereum/libweb3jsonrpc/AdminNet.h,197
class AdminNet:AdminNet14,117
	AdminNet(17,173
	virtual RPCModules implementedModules(18,228
	virtual bool admin_net_start(22,338
	NetworkFace& m_network;32,894
	SessionManager& m_sm;33,919

src/cpp-ethereum/libweb3jsonrpc/SafeHttpServer.h,185
class SafeHttpServer:SafeHttpServer30,837
	SafeHttpServer(34,986
	bool virtual SendResponse(38,1215
	std::string const& allowedOrigin(42,1451
	std::string m_allowedOrigin;45,1531

src/cpp-ethereum/libweb3jsonrpc/DBFace.h,214
#define JSONRPC_CPP_STUB_DEV_RPC_DBFACE_H_6,121
        class DBFace 12,229
                DBFace(15,313
                inline virtual void db_putI(21,846
                inline virtual void db_getI(25,1094

src/cpp-ethereum/libweb3jsonrpc/Debug.h,132
class Debug:Debug18,162
	explicit Debug(21,202
	virtual RPCModules implementedModules(23,245
	eth::Client const& m_eth;39,1172

src/cpp-ethereum/libweb3jsonrpc/UnixSocketServer.h,188
class UnixDomainSocketServer:UnixDomainSocketServer33,889
	UnixDomainSocketServer(36,955
	~UnixDomainSocketServer(37,1007
	bool StartListening(38,1035
	sockaddr_un m_address;47,1317

src/cpp-ethereum/libweb3jsonrpc/JsonHelper.cpp,919
namespace dev38,1149
Json::Value toJson(41,1166
Json::Value toJson(49,1346
Json::Value toJson(57,1548
namespace p2p65,1796
Json::Value toJson(68,1813
namespace eth90,2504
Json::Value toJson(93,2521
Json::Value toJson(121,3445
Json::Value toJson(141,4073
Json::Value toJson(157,4657
Json::Value toJson(173,5164
Json::Value toJson(185,5478
Json::Value toJson(195,5724
Json::Value toJson(209,6222
Json::Value toJson(227,6782
Json::Value toJson(247,7364
Json::Value toJson(279,8234
Json::Value toJson(290,8498
Json::Value toJsonByBlock(332,9675
TransactionSkeleton toTransactionSkeleton(354,10165
dev::eth::LogFilter toLogFilter(387,11132
dev::eth::LogFilter toLogFilter(422,12327
namespace shh462,13748
Json::Value toJson(465,13765
shh::Message toMessage(482,14264
shh::Envelope toSealed(494,14598
pair<shh::Topics, Public> toWatch(522,15291
namespace rpc543,15777
h256 h256fromHex(545,15793

src/cpp-ethereum/libweb3jsonrpc/Personal.h,228
class Personal:Personal17,150
	Personal(20,206
	virtual RPCModules implementedModules(21,315
	dev::eth::KeyManager& m_keyManager;32,940
	dev::eth::AccountHolder& m_accountHolder;33,977
	dev::eth::Interface& m_eth;34,1020

src/cpp-ethereum/libweb3jsonrpc/SessionManager.cpp,173
std::string SessionManager::newSession(newSession8,129
void SessionManager::addSession(addSession15,283
bool SessionManager::hasPrivilegeLevel(hasPrivilegeLevel20,407

src/cpp-ethereum/libweb3jsonrpc/NetFace.h,289
#define JSONRPC_CPP_STUB_DEV_RPC_NETFACE_H_6,122
        class NetFace 12,231
                NetFace(15,317
                inline virtual void net_versionI(22,902
                inline virtual void net_peerCountI(27,1125
                inline virtual void net_listeningI(32,1352

src/cpp-ethereum/libweb3jsonrpc/EthFace.h,3592
#define JSONRPC_CPP_STUB_DEV_RPC_ETHFACE_H_6,122
        class EthFace 12,231
                EthFace(15,317
                inline virtual void eth_protocolVersionI(70,11573
                inline virtual void eth_hashrateI(75,11812
                inline virtual void eth_coinbaseI(80,12037
                inline virtual void eth_miningI(85,12262
                inline virtual void eth_gasPriceI(90,12483
                inline virtual void eth_accountsI(95,12708
                inline virtual void eth_blockNumberI(100,12933
                inline virtual void eth_getBalanceI(105,13164
                inline virtual void eth_getStorageAtI(109,13404
                inline virtual void eth_getStorageRootI(113,13672
                inline virtual void eth_getTransactionCountI(117,13920
                inline virtual void eth_pendingTransactionsI(121,14178
                inline virtual void eth_getBlockTransactionCountByHashI(126,14425
                inline virtual void eth_getBlockTransactionCountByNumberI(130,14681
                inline virtual void eth_getUncleCountByBlockHashI(134,14941
                inline virtual void eth_getUncleCountByBlockNumberI(138,15185
                inline virtual void eth_getCodeI(142,15433
                inline virtual void eth_sendTransactionI(146,15667
                inline virtual void eth_callI(150,15882
                inline virtual void eth_flushI(154,16099
                inline virtual void eth_getBlockByHashI(159,16318
                inline virtual void eth_getBlockByNumberI(163,16564
                inline virtual void eth_getTransactionByHashI(167,16814
                inline virtual void eth_getTransactionByBlockHashAndIndexI(171,17050
                inline virtual void eth_getTransactionByBlockNumberAndIndexI(175,17336
                inline virtual void eth_getTransactionReceiptI(179,17626
                inline virtual void eth_getUncleByBlockHashAndIndexI(183,17864
                inline virtual void eth_getUncleByBlockNumberAndIndexI(187,18138
                inline virtual void eth_newFilterI(191,18416
                inline virtual void eth_newFilterExI(195,18619
                inline virtual void eth_newBlockFilterI(199,18826
                inline virtual void eth_newPendingTransactionFilterI(204,19063
                inline virtual void eth_uninstallFilterI(209,19326
                inline virtual void eth_getFilterChangesI(213,19552
                inline virtual void eth_getFilterChangesExI(217,19780
                inline virtual void eth_getFilterLogsI(221,20012
                inline virtual void eth_getFilterLogsExI(225,20234
                inline virtual void eth_getLogsI(229,20460
                inline virtual void eth_getLogsExI(233,20659
                inline virtual void eth_getWorkI(237,20862
                inline virtual void eth_submitWorkI(242,21085
                inline virtual void eth_submitHashrateI(246,21349
                inline virtual void eth_registerI(250,21597
                inline virtual void eth_unregisterI(254,21809
                inline virtual void eth_fetchQueuedTransactionsI(258,22025
                inline virtual void eth_signTransactionI(262,22267
                inline virtual void eth_inspectTransactionI(266,22482
                inline virtual void eth_sendRawTransactionI(270,22714
                inline virtual void eth_notePasswordI(274,22946
                inline virtual void eth_syncingI(278,23166
                inline virtual void eth_estimateGasI(283,23389

src/cpp-ethereum/libweb3jsonrpc/Net.cpp,168
Net::Net(32,948
std::string Net::net_version(net_version34,1005
std::string Net::net_peerCount(net_peerCount39,1082
bool Net::net_listening(net_listening44,1157

src/cpp-ethereum/libweb3jsonrpc/AdminEth.h,395
class AdminEth:AdminEth19,172
	AdminEth(22,218
	virtual RPCModules implementedModules(24,328
	virtual bool admin_eth_setMining(29,466
	virtual void setMiningBenefactorChanger(50,2294
	eth::Client& m_eth;52,2423
	eth::TrivialGasPricer& m_gp;53,2444
	eth::KeyManager& m_keyManager;54,2474
	SessionManager& m_sm;55,2506
	std::function<void(Address const&)> m_setMiningBenefactor;56,2529

src/cpp-ethereum/libweb3jsonrpc/LevelDB.cpp,115
LevelDB::LevelDB(LevelDB36,1058
bool LevelDB::db_put(db_put46,1291
std::string LevelDB::db_get(db_get55,1634

src/cpp-ethereum/libweb3jsonrpc/Debug.cpp,704
Debug::Debug(14,345
StandardTrace::DebugOptions debugOptions(18,401
h256 Debug::blockHash(blockHash34,933
Json::Value Debug::traceTransaction(traceTransaction48,1269
Json::Value Debug::traceBlock(traceBlock62,1606
Json::Value Debug::debug_traceTransaction(debug_traceTransaction77,2020
Json::Value Debug::debug_traceBlock(debug_traceBlock100,2675
Json::Value Debug::debug_traceBlockByHash(debug_traceBlockByHash107,2900
Json::Value Debug::debug_traceBlockByNumber(debug_traceBlockByNumber115,3123
Json::Value Debug::debug_storageRangeAt(debug_storageRangeAt123,3363
std::string Debug::debug_preimage(debug_preimage171,4822
Json::Value Debug::debug_traceCall(debug_traceCall179,5086

src/cpp-ethereum/libweb3jsonrpc/IpcServerBase.cpp,996
int const c_bufferSize 34,978
struct IpcSendChannel:IpcSendChannel36,1010
struct IpcSendChannel: public LogChannel { static const char* name(36,1010
struct IpcSendChannel: public LogChannel { static const char* name() { return "I>"; } static const int verbosity 36,1010
struct IpcReceiveChannel:IpcReceiveChannel37,1132
struct IpcReceiveChannel: public LogChannel { static const char* name(37,1132
struct IpcReceiveChannel: public LogChannel { static const char* name() { return "I<"; } static const int verbosity 37,1132
#define cipcs 38,1257
#define cipcr 39,1316
template <class S> IpcServerBase<S>::IpcServerBase(IpcServerBase41,1379
template <class S> bool IpcServerBase<S>::StartListening(StartListening46,1472
template <class S> bool IpcServerBase<S>::StopListening(StopListening57,1667
template <class S> bool IpcServerBase<S>::SendResponse(SendResponse74,1935
template <class S> void IpcServerBase<S>::GenerateResponse(GenerateResponse97,2565
namespace dev157,3721

src/cpp-ethereum/libweb3jsonrpc/Whisper.cpp,653
Whisper::Whisper(39,1142
void Whisper::setIdentities(setIdentities44,1273
shh::Interface* Whisper::shh(shh51,1412
bool Whisper::shh_post(shh_post56,1486
std::string Whisper::shh_newIdentity(shh_newIdentity78,1991
bool Whisper::shh_hasIdentity(shh_hasIdentity85,2124
std::string Whisper::shh_newGroup(shh_newGroup97,2345
std::string Whisper::shh_addToGroup(shh_addToGroup104,2470
std::string Whisper::shh_newFilter(shh_newFilter111,2603
bool Whisper::shh_uninstallFilter(shh_uninstallFilter126,2938
Json::Value Whisper::shh_getFilterChanges(shh_getFilterChanges139,3174
Json::Value Whisper::shh_getMessages(shh_getMessages172,3906

src/cpp-ethereum/libweb3jsonrpc/AdminNetFace.h,620
#define JSONRPC_CPP_STUB_DEV_RPC_ADMINNETFACE_H_6,127
        class AdminNetFace 12,241
                AdminNetFace(15,337
                inline virtual void admin_net_startI(27,2084
                inline virtual void admin_net_stopI(31,2302
                inline virtual void admin_net_connectI(35,2518
                inline virtual void admin_net_peersI(39,2764
                inline virtual void admin_net_nodeInfoI(43,2982
                inline virtual void admin_nodeInfoI(47,3206
                inline virtual void admin_peersI(52,3435
                inline virtual void admin_addPeerI(57,3658

src/cpp-ethereum/libweb3jsonrpc/WinPipeServer.h,99
class WindowsPipeServer:WindowsPipeServer35,928
	WindowsPipeServer(38,992
	void Listen(41,1051

src/cpp-ethereum/libweb3jsonrpc/LevelDB.h,152
class LevelDB:LevelDB37,887
	LevelDB(40,936
	virtual RPCModules implementedModules(41,948
	virtual bool db_put(45,1055
	leveldb::DB* m_db;49,1264

src/cpp-ethereum/libweb3jsonrpc/ModularServer.h,1758
template <class I> using AbstractMethodPointer 35,1065
template <class I> using AbstractNotificationPointer 36,1179
class ServerInterface39,1297
	using MethodPointer 42,1329
	using NotificationPointer 43,1378
	using MethodBinding 45,1440
	using NotificationBinding 46,1521
	using Methods 47,1614
	using Notifications 48,1659
	struct RPCModule 49,1716
	struct RPCModule { std::string name;49,1716
	struct RPCModule { std::string name; std::string version;49,1716
	using RPCModules 50,1778
	virtual ~ServerInterface(52,1823
	Methods const& methods(53,1854
	Notifications const& notifications(54,1908
	void bindAndAddMethod(59,2137
	void bindAndAddNotification(60,2262
	Methods m_methods;63,2415
	Notifications m_notifications;64,2435
class ModularServer:ModularServer68,2494
	ModularServer(71,2569
	inline virtual void modules(77,2858
	virtual ~ModularServer(83,2997
	virtual void StartListening(85,3045
	virtual void StopListening(91,3159
	virtual void HandleMethodCall(97,3271
	virtual void HandleNotificationCall(103,3472
	unsigned addConnector(110,3655
	jsonrpc::AbstractServerConnector* connector(117,3849
	std::vector<std::unique_ptr<jsonrpc::AbstractServerConnector>> m_connectors;123,3967
	std::unique_ptr<jsonrpc::IProtocolHandler> m_handler;124,4045
	Json::Value m_implementedModules;126,4186
	using MethodPointer 133,4327
	using NotificationPointer 134,4376
	ModularServer<I, Is...>(I* _i, Is*... _is): ModularServer<Is...>(_is...), m_interface(136,4438
	virtual void HandleMethodCall(156,5139
	virtual void HandleNotificationCall(165,5490
	std::unique_ptr<I> m_interface;175,5834
	std::map<std::string, MethodPointer> m_methods;176,5867
	std::map<std::string, NotificationPointer> m_notifications;177,5916

src/cpp-ethereum/libweb3jsonrpc/AccountHolder.h,1338
enum class TransactionRepercussion43,1083
	Unknown,45,1120
	UnknownAccount,46,1130
	Locked,47,1147
	Refused,48,1156
	ProxySuccess,49,1166
	Success50,1181
struct TransactionNotification53,1194
	TransactionRepercussion r;55,1227
	h256 hash;56,1255
	Address created;57,1267
class AccountHolder64,1471
	explicit AccountHolder(67,1501
	bool isRealAccount(75,1856
	bool isProxyAccount(76,1954
	virtual bool unlockAccount(82,2322
	using TransactionQueue 102,2796
	std::unordered_map<std::unordered_map104,2862
	std::unordered_map<Address, int> m_proxyAccounts;104,2862
	std::unordered_map<std::unordered_map105,2913
	std::unordered_map<int, std::pair<Address, TransactionQueue>> m_transactionQueues;105,2913
class SimpleAccountHolder:SimpleAccountHolder108,3001
	SimpleAccountHolder(111,3059
	std::function<bool(TransactionSkeleton const&, bool)> m_getAuthorisation;125,3770
	KeyManager& m_keyManager;126,3845
	std::map<std::map127,3872
	std::map<Address, std::pair<std::chrono::steady_clock::time_point, unsigned>> m_unlockedAccounts;127,3872
class FixedAccountHolder:FixedAccountHolder130,3975
	FixedAccountHolder(133,4032
	void setAccounts(139,4199
	dev::AddressHash realAccounts(145,4342
	std::unordered_map<std::unordered_map158,4684
	std::unordered_map<dev::Address, dev::Secret> m_accounts;158,4684

src/cpp-ethereum/libweb3jsonrpc/Eth.h,286
class Eth:Eth64,1327
	Eth(67,1373
	virtual RPCModules implementedModules(69,1436
	eth::AccountHolder const& ethAccounts(74,1545
	virtual bool eth_notePassword(125,5723
	eth::Interface* client(131,5920
	eth::Interface& m_eth;133,5967
	eth::AccountHolder& m_ethAccounts;134,5991

src/cpp-ethereum/libweb3jsonrpc/Net.h,115
class Net:Net35,871
	Net(38,907
	virtual RPCModules implementedModules(39,936
	NetworkFace& m_network;48,1186

src/cpp-ethereum/libweb3jsonrpc/AdminUtils.cpp,198
AdminUtils::AdminUtils(12,249
bool AdminUtils::admin_setVerbosity(admin_setVerbosity17,374
bool AdminUtils::admin_verbosity(admin_verbosity23,493
bool AdminUtils::admin_exit(admin_exit29,575

src/cpp-ethereum/libweb3jsonrpc/IpcServerBase.h,370
template <class S> class IpcServerBase:IpcServerBase33,930
	IpcServerBase(36,1020
	virtual bool StartListening(37,1062
	virtual bool StopListening(38,1094
	virtual bool SendResponse(39,1125
	void GenerateResponse(46,1431
	std::string m_path;50,1507
	std::unordered_set<S> m_sockets;51,1528
	std::mutex x_sockets;52,1562
	std::thread m_listeningThread;53,1585

src/cpp-ethereum/libweb3jsonrpc/UnixSocketServer.cpp,594
		#define MSG_NOSIGNAL 38,1200
int const c_pathMaxSize 46,1320
string ipcSocketPath(48,1411
UnixDomainSocketServer::UnixDomainSocketServer(63,1789
UnixDomainSocketServer::~UnixDomainSocketServer(~UnixDomainSocketServer68,1950
bool UnixDomainSocketServer::StartListening(StartListening73,2023
bool UnixDomainSocketServer::StopListening(StopListening96,2630
void UnixDomainSocketServer::Listen(Listen109,2845
void UnixDomainSocketServer::CloseConnection(CloseConnection126,3223
size_t UnixDomainSocketServer::Write(Write132,3304
size_t UnixDomainSocketServer::Read(Read140,3489

src/cpp-ethereum/libweb3jsonrpc/AdminEthFace.h,1482
#define JSONRPC_CPP_STUB_DEV_RPC_ADMINETHFACE_H_6,127
        class AdminEthFace 12,241
                AdminEthFace(15,337
                inline virtual void admin_eth_blockQueueStatusI(39,5220
                inline virtual void admin_eth_setAskPriceI(43,5460
                inline virtual void admin_eth_setBidPriceI(47,5714
                inline virtual void admin_eth_setMiningI(51,5968
                inline virtual void admin_eth_findBlockI(55,6216
                inline virtual void admin_eth_blockQueueFirstUnknownI(59,6466
                inline virtual void admin_eth_blockQueueRetryUnknownI(63,6718
                inline virtual void admin_eth_allAccountsI(67,6970
                inline virtual void admin_eth_newAccountI(71,7200
                inline virtual void admin_eth_setMiningBenefactorI(75,7441
                inline virtual void admin_eth_inspectI(79,7711
                inline virtual void admin_eth_reprocessI(83,7957
                inline virtual void admin_eth_vmTraceI(87,8207
                inline virtual void admin_eth_getReceiptByHashAndIndexI(91,8474
                inline virtual void miner_startI(95,8775
                inline virtual void miner_stopI(99,8982
                inline virtual void miner_setEtherbaseI(104,9203
                inline virtual void miner_setExtraI(108,9427
                inline virtual void miner_setGasPriceI(112,9643
                inline virtual void miner_hashrateI(116,9865

src/cpp-ethereum/libweb3jsonrpc/IpcServer.h,21
namespace dev27,818

src/cpp-ethereum/libweb3jsonrpc/Test.cpp,300
Test::Test(34,1024
bool Test::test_setChainParams(test_setChainParams36,1071
bool Test::test_mineBlocks(test_mineBlocks52,1400
bool Test::test_modifyTimestamp(test_modifyTimestamp66,1628
bool Test::test_addBlock(test_addBlock79,1877
bool Test::test_rewindToBlock(test_rewindToBlock92,2109

src/cpp-ethereum/libweb3jsonrpc/Web3Face.h,234
#define JSONRPC_CPP_STUB_DEV_RPC_WEB3FACE_H_6,123
        class Web3Face 12,233
                Web3Face(15,321
                inline virtual void web3_sha3I(21,769
                inline virtual void web3_clientVersionI(25,975

src/cpp-ethereum/libweb3jsonrpc/AccountHolder.cpp,864
vector<TransactionSkeleton> g_emptyQueue;35,1018
static Mutex x_rngMutex;37,1116
vector<Address> AccountHolder::allAccounts(allAccounts39,1142
Address const& AccountHolder::defaultTransactAccount(defaultTransactAccount49,1382
int AccountHolder::addProxyAccount(addProxyAccount61,1730
bool AccountHolder::removeProxyAccount(removeProxyAccount73,2178
void AccountHolder::queueTransaction(queueTransaction82,2393
vector<TransactionSkeleton> const& AccountHolder::queuedTransactions(queuedTransactions90,2637
void AccountHolder::clearQueue(clearQueue97,2831
AddressHash SimpleAccountHolder::realAccounts(realAccounts103,2959
TransactionNotification SimpleAccountHolder::authenticate(authenticate108,3055
bool SimpleAccountHolder::unlockAccount(unlockAccount150,4221
TransactionNotification FixedAccountHolder::authenticate(authenticate175,4795

src/cpp-ethereum/libweb3jsonrpc/Test.h,157
class Test:Test37,860
	Test(40,898
	virtual RPCModules implementedModules(41,924
	virtual bool test_setChainParams(46,1034
	eth::Client& m_eth;53,1348

src/cpp-ethereum/libweb3jsonrpc/MemoryDB.cpp,82
bool MemoryDB::db_put(db_put28,839
std::string MemoryDB::db_get(db_get35,1013

src/cpp-ethereum/libweb3jsonrpc/WhisperFace.h,678
#define JSONRPC_CPP_STUB_DEV_RPC_WHISPERFACE_H_6,126
        class WhisperFace 12,239
                WhisperFace(15,333
                inline virtual void shh_postI(28,2340
                inline virtual void shh_newIdentityI(32,2533
                inline virtual void shh_hasIdentityI(37,2764
                inline virtual void shh_newGroupI(41,2982
                inline virtual void shh_addToGroupI(45,3218
                inline virtual void shh_newFilterI(49,3458
                inline virtual void shh_uninstallFilterI(53,3661
                inline virtual void shh_getFilterChangesI(57,3887
                inline virtual void shh_getMessagesI(61,4115

src/cpp-ethereum/libweb3jsonrpc/Web3.h,168
class Web3:Web39,69
	Web3(12,107
	virtual RPCModules implementedModules(13,200
	virtual std::string web3_clientVersion(18,378
	std::string m_clientVersion;21,468

src/cpp-ethereum/libweb3jsonrpc/AdminEth.cpp,1484
AdminEth::AdminEth(16,414
bool AdminEth::admin_eth_setMining(admin_eth_setMining23,601
Json::Value AdminEth::admin_eth_blockQueueStatus(admin_eth_blockQueueStatus33,764
bool AdminEth::admin_eth_setAskPrice(admin_eth_setAskPrice48,1196
bool AdminEth::admin_eth_setBidPrice(admin_eth_setBidPrice55,1338
Json::Value AdminEth::admin_eth_findBlock(admin_eth_findBlock62,1480
string AdminEth::admin_eth_blockQueueFirstUnknown(admin_eth_blockQueueFirstUnknown83,1977
bool AdminEth::admin_eth_blockQueueRetryUnknown(admin_eth_blockQueueRetryUnknown89,2117
Json::Value AdminEth::admin_eth_allAccounts(admin_eth_allAccounts96,2243
Json::Value AdminEth::admin_eth_newAccount(admin_eth_newAccount126,3125
bool AdminEth::admin_eth_setMiningBenefactor(admin_eth_setMiningBenefactor148,3747
Json::Value AdminEth::admin_eth_inspect(admin_eth_inspect154,3907
h256 AdminEth::blockHash(blockHash169,4401
Json::Value AdminEth::admin_eth_reprocess(admin_eth_reprocess183,4740
Json::Value AdminEth::admin_eth_vmTrace(admin_eth_vmTrace195,5056
Json::Value AdminEth::admin_eth_getReceiptByHashAndIndex(admin_eth_getReceiptByHashAndIndex228,5791
bool AdminEth::miner_start(miner_start242,6332
bool AdminEth::miner_stop(miner_stop248,6406
bool AdminEth::miner_setEtherbase(miner_setEtherbase254,6475
bool AdminEth::miner_setExtra(miner_setExtra272,6881
bool AdminEth::miner_setGasPrice(miner_setGasPrice278,6998
string AdminEth::miner_hashrate(miner_hashrate284,7110

src/cpp-ethereum/libweb3jsonrpc/DebugFace.h,517
#define JSONRPC_CPP_STUB_DEV_RPC_DEBUGFACE_H_6,124
        class DebugFace 12,235
                DebugFace(15,325
                inline virtual void debug_traceTransactionI(25,1983
                inline virtual void debug_storageRangeAtI(29,2228
                inline virtual void debug_preimageI(33,2546
                inline virtual void debug_traceBlockByNumberI(37,2762
                inline virtual void debug_traceBlockByHashI(41,3008
                inline virtual void debug_traceCallI(45,3253

src/cpp-ethereum/libweb3jsonrpc/SafeHttpServer.cpp,339
struct mhd_coninfo30,918
	struct MHD_PostProcessor *postprocessor;postprocessor32,939
	MHD_Connection* connection;33,981
	stringstream request;34,1010
	jsonrpc::HttpServer* server;35,1033
	int code;36,1063
bool SafeHttpServer::SendResponse(SendResponse39,1078
bool SafeHttpServer::SendOptionsResponse(SendOptionsResponse56,1729

src/cpp-ethereum/libweb3jsonrpc/WinPipeServer.cpp,280
int const c_bufferSize 32,921
WindowsPipeServer::WindowsPipeServer(34,953
void WindowsPipeServer::CloseConnection(CloseConnection39,1068
size_t WindowsPipeServer::Write(Write44,1154
size_t WindowsPipeServer::Read(Read51,1349
void WindowsPipeServer::Listen(Listen58,1515

src/cpp-ethereum/libweb3jsonrpc/AdminUtils.h,179
class SystemManager11,98
class AdminUtils:AdminUtils17,158
	virtual RPCModules implementedModules(21,293
	SessionManager& m_sm;30,605
	SystemManager* m_systemManager 31,628

src/cpp-ethereum/libweb3jsonrpc/TestFace.h,435
#define JSONRPC_CPP_STUB_DEV_RPC_TESTFACE_H_6,123
        class TestFace 12,233
                TestFace(15,321
                inline virtual void test_setChainParamsI(24,1463
                inline virtual void test_mineBlocksI(28,1678
                inline virtual void test_modifyTimestampI(32,1893
                inline virtual void test_addBlockI(36,2118
                inline virtual void test_rewindToBlockI(40,2332

src/cpp-ethereum/libweb3jsonrpc/Web3.cpp,50
std::string rpc::Web3::web3_sha3(web3_sha38,124

src/cpp-ethereum/libweb3jsonrpc/SessionManager.h,377
#define RPC_ADMIN 5,64
enum class Privilege12,228
	Admin14,251
		size_t operator()(operator()24,331
namespace dev28,419
namespace rpc30,435
struct SessionPermissions33,452
	std::unordered_set<Privilege> privileges;35,480
class SessionManager38,527
	std::unordered_map<std::unordered_map46,774
	std::unordered_map<std::string, SessionPermissions> m_sessions;46,774

src/cpp-ethereum/libweb3jsonrpc/Eth.cpp,3491
const unsigned dev::SensibleHttpThreads 45,1312
const unsigned dev::SensibleHttpThreads 47,1363
const unsigned dev::SensibleHttpPort 49,1415
Eth::Eth(51,1461
string Eth::eth_protocolVersion(eth_protocolVersion57,1575
string Eth::eth_coinbase(eth_coinbase62,1652
string Eth::eth_hashrate(eth_hashrate67,1718
bool Eth::eth_mining(eth_mining79,1925
string Eth::eth_gasPrice(eth_gasPrice91,2122
Json::Value Eth::eth_accounts(eth_accounts96,2193
string Eth::eth_blockNumber(eth_blockNumber101,2275
string Eth::eth_getBalance(eth_getBalance107,2345
string Eth::eth_getStorageAt(eth_getStorageAt119,2626
string Eth::eth_getStorageRoot(eth_getStorageRoot131,2977
string Eth::eth_pendingTransactions(eth_pendingTransactions143,3268
string Eth::eth_getTransactionCount(eth_getTransactionCount162,3629
Json::Value Eth::eth_getBlockTransactionCountByHash(eth_getBlockTransactionCountByHash174,3917
Json::Value Eth::eth_getBlockTransactionCountByNumber(eth_getBlockTransactionCountByNumber190,4285
Json::Value Eth::eth_getUncleCountByBlockHash(eth_getUncleCountByBlockHash206,4692
Json::Value Eth::eth_getUncleCountByBlockNumber(eth_getUncleCountByBlockNumber222,5048
string Eth::eth_getCode(eth_getCode238,5425
void Eth::setTransactionDefaults(setTransactionDefaults250,5700
string Eth::eth_sendTransaction(eth_sendTransaction256,5830
string Eth::eth_signTransaction(eth_signTransaction291,6940
Json::Value Eth::eth_inspectTransaction(eth_inspectTransaction315,7625
string Eth::eth_sendRawTransaction(eth_sendRawTransaction327,7896
string Eth::eth_call(eth_call345,8305
string Eth::eth_estimateGas(eth_estimateGas360,8745
bool Eth::eth_flush(eth_flush375,9147
Json::Value Eth::eth_getBlockByHash(eth_getBlockByHash381,9220
Json::Value Eth::eth_getBlockByNumber(eth_getBlockByNumber400,9861
Json::Value Eth::eth_getTransactionByHash(eth_getTransactionByHash419,10517
Json::Value Eth::eth_getTransactionByBlockHashAndIndex(eth_getTransactionByBlockHashAndIndex435,10880
Json::Value Eth::eth_getTransactionByBlockNumberAndIndex(eth_getTransactionByBlockNumberAndIndex452,11332
Json::Value Eth::eth_getTransactionReceipt(eth_getTransactionReceipt470,11841
Json::Value Eth::eth_getUncleByBlockHashAndIndex(eth_getUncleByBlockHashAndIndex486,12212
Json::Value Eth::eth_getUncleByBlockNumberAndIndex(eth_getUncleByBlockNumberAndIndex498,12533
string Eth::eth_newFilter(eth_newFilter510,12862
string Eth::eth_newFilterEx(eth_newFilterEx522,13096
string Eth::eth_newBlockFilter(eth_newBlockFilter534,13321
string Eth::eth_newPendingTransactionFilter(eth_newPendingTransactionFilter540,13450
bool Eth::eth_uninstallFilter(eth_uninstallFilter546,13594
Json::Value Eth::eth_getFilterChanges(eth_getFilterChanges558,13816
Json::Value Eth::eth_getFilterChangesEx(eth_getFilterChangesEx574,14169
Json::Value Eth::eth_getFilterLogs(eth_getFilterLogs590,14531
Json::Value Eth::eth_getFilterLogsEx(eth_getFilterLogsEx602,14756
Json::Value Eth::eth_getLogs(eth_getLogs614,14990
Json::Value Eth::eth_getLogsEx(eth_getLogsEx626,15221
Json::Value Eth::eth_getWork(eth_getWork638,15450
Json::Value Eth::eth_syncing(eth_syncing655,15791
bool Eth::eth_submitWork(eth_submitWork668,16166
bool Eth::eth_submitHashrate(eth_submitHashrate680,16474
string Eth::eth_register(eth_register693,16766
bool Eth::eth_unregister(eth_unregister705,16996
Json::Value Eth::eth_fetchQueuedTransactions(eth_fetchQueuedTransactions717,17223

src/cpp-ethereum/libweb3jsonrpc/AdminUtilsFace.h,317
#define JSONRPC_CPP_STUB_DEV_RPC_ADMINUTILSFACE_H_6,129
        class AdminUtilsFace 12,245
                AdminUtilsFace(15,345
                inline virtual void admin_setVerbosityI(22,1094
                inline virtual void admin_verbosityI(26,1339
                inline virtual void admin_exitI(30,1554

src/cpp-ethereum/eth/AccountManager.cpp,341
void AccountManager::streamAccountHelp(streamAccountHelp31,972
void AccountManager::streamWalletHelp(streamWalletHelp40,1390
bool AccountManager::execute(execute46,1520
string AccountManager::createPassword(createPassword202,5641
KeyPair AccountManager::makeKey(makeKey216,5967
bool AccountManager::openWallet(openWallet225,6151

src/cpp-ethereum/eth/Farm.h,155
#define JSONRPC_CPP_STUB_FARM_H_6,111
class Farm 10,177
        Farm(13,227
        Json::Value eth_getWork(15,367
        bool eth_submitWork(25,787

src/cpp-ethereum/eth/main.cpp,768
static std::atomic<bool> g_silence 73,2314
void help(75,2361
string ethCredits(179,8955
void version(188,9134
void setDefaultOrCLocale(210,10191
void importPresale(220,10311
Address c_config 226,10551
string pretty(227,10623
inline bool isPrime(243,10959
enum class NodeMode253,11271
	PeerServer,255,11293
	Full256,11306
enum class OperationMode259,11316
	Node,261,11343
	Import,262,11350
	Export263,11359
enum class Format266,11371
	Binary,268,11391
	Hex,269,11400
	Human270,11406
void stopSealingAfterXBlocks(273,11417
class ExitHandler:ExitHandler290,11802
	void exit(293,11857
	static void exitHandler(294,11890
	bool shouldExit(295,11945
	static bool s_shouldExit;298,12005
bool ExitHandler::s_shouldExit 301,12036
int main(303,12077

src/cpp-ethereum/eth/AccountManager.h,89
class AccountManager32,960
	std::unique_ptr<dev::eth::KeyManager> m_keyManager;50,1549

src/cpp-ethereum/libwebthree/WebThree.cpp,799
WebThreeDirect::WebThreeDirect(39,1233
WebThreeDirect::~WebThreeDirect(~WebThreeDirect77,2760
std::string WebThreeDirect::composeClientVersion(composeClientVersion93,3649
p2p::NetworkPreferences const& WebThreeDirect::networkPreferences(networkPreferences105,4042
void WebThreeDirect::setNetworkPreferences(setNetworkPreferences110,4157
std::vector<PeerSessionInfo> WebThreeDirect::peers(peers120,4390
size_t WebThreeDirect::peerCount(peerCount125,4481
void WebThreeDirect::setIdealPeerCount(setIdealPeerCount130,4554
void WebThreeDirect::setPeerStretch(setPeerStretch135,4646
bytes WebThreeDirect::saveNetwork(saveNetwork140,4732
void WebThreeDirect::addNode(addNode145,4802
void WebThreeDirect::requirePeer(requirePeer150,4973
void WebThreeDirect::addPeer(addPeer155,5152

src/cpp-ethereum/libwebthree/WebThree.h,1336
enum WorkState42,1215
	Active 44,1232
	Deleting,45,1245
	Deleted46,1256
class NetworkFace55,1405
class WebThreeDirect:WebThreeDirect119,3344
	eth::Client* ethereum(140,4038
	std::shared_ptr<shh::WhisperHost> whisper(141,4168
	std::string const& clientVersion(146,4409
	void addNode(163,4955
	void addNode(166,5118
	void addNode(169,5237
	void requirePeer(175,5483
	bool haveNetwork(186,5885
	p2p::NodeInfo nodeInfo(192,6122
	p2p::NodeID id(194,6193
	u256 networkId(196,6250
	std::string enode(198,6326
	p2p::Peers nodes(201,6410
	void startNetwork(204,6509
	void stopNetwork(207,6592
	bool isNetworkStarted(210,6697
	std::string m_clientVersion;213,6777
	p2p::Host m_net;215,6860
	std::unique_ptr<eth::Client> m_ethereum;217,6994
	std::weak_ptr<shh::WhisperHost> m_whisper;218,7080
class RPCSlave 223,7211
class RPCMaster 224,7230
class EthereumSlave:EthereumSlave228,7285
	EthereumSlave(231,7338
class EthereumMaster236,7437
	EthereumMaster(239,7468
class WhisperSlave:WhisperSlave246,7620
	WhisperSlave(249,7672
class WhisperMaster254,7770
	WhisperMaster(257,7800
class WebThree268,8125
	eth::Interface* ethereum(279,8310
	shh::Interface* whisper(280,8437
	bzz::Interface* swarm(281,8561
	EthereumSlave* m_ethereum 304,9220
	WhisperSlave* m_whisper 305,9258
	RPCSlave m_rpcSlave;308,9305

src/cpp-ethereum/libwhisper/Interface.h,902
struct InstalledFilter43,1020
	InstalledFilter(45,1045
	Topics full;47,1106
	TopicFilter filter;48,1120
struct ClientWatch52,1169
	ClientWatch(54,1190
	explicit ClientWatch(55,1208
	h256 id;57,1253
	h256s changes;58,1263
class Interface61,1283
	void post(77,1788
	void post(78,1951
	void post(79,2133
	void post(80,2324
struct WatshhChannel:WatshhChannel83,2538
struct WatshhChannel: public dev::LogChannel { static const char* name(83,2538
struct WatshhChannel: public dev::LogChannel { static const char* name() { return "shh"; } static const int verbosity 83,2538
#define cwatshh 84,2664
namespace std 89,2735
namespace dev91,2807
namespace shh93,2823
class Watch:Watch96,2840
	Watch(101,2936
	Watch(102,2948
	~Watch(103,3028
	h256s check(105,3079
	h256s peek(106,3144
	Interface* m_c;109,3217
	unsigned m_id;110,3234
namespace std116,3259
inline void swap(119,3276

src/cpp-ethereum/libwhisper/Common.h,1412
enum WhisperPacket53,1300
	StatusPacket 55,1321
	MessagesPacket,56,1340
	TopicFilterPacket,57,1357
	PacketCount58,1377
static const unsigned TopicBloomFilterSize 61,1394
static const unsigned BitsPerBloom 62,1443
static const unsigned WhisperProtocolVersion 63,1483
using AbridgedTopic 65,1534
using Topic 66,1570
using AbridgedTopics 68,1591
using Topics 69,1642
using TopicBloomFilterHash 71,1665
class BuildTopic76,1820
	BuildTopic(79,1847
	template <class T> BuildTopic(80,1864
	template <class T> BuildTopic& shift(82,1924
	template <class T> BuildTopic& operator()(operator()83,2028
	BuildTopic& shiftRaw(85,2107
	operator AbridgedTopics(operator AbridgedTopics87,2193
	operator Topics(operator Topics88,2257
	Topics toTopics(90,2347
	h256s m_parts;95,2447
using TopicMask 98,2467
using TopicMasks 99,2643
class TopicFilter101,2687
	TopicFilter(104,2715
	TopicFilter(105,2733
	TopicFilter(106,2928
	TopicFilter(107,2986
	void streamRLP(110,3072
	TopicMasks m_topicMasks;116,3247
class BuildTopicMask:BuildTopicMask119,3277
	BuildTopicMask(122,3320
	template <class T> BuildTopicMask(123,3341
	template <class T> BuildTopicMask& shift(125,3405
	BuildTopicMask& shiftRaw(126,3501
	template <class T> BuildTopicMask& operator()(operator()128,3588
	operator TopicMask(operator TopicMask130,3678
	operator Topics(operator Topics131,3732
	Topics toTopics(133,3812

src/cpp-ethereum/libwhisper/WhisperHost.h,919
class WhisperHost:WhisperHost46,1125
	WhisperHost(51,1250
	virtual ~WhisperHost(52,1297
	unsigned protocolVersion(53,1322
	void cleanup(54,1391
	std::map<std::map55,1433
	std::map<h256, Envelope> all(55,1433
	TopicBloomFilterHash bloom(56,1524
	virtual Topics const& fullTopics(59,1690
	virtual h256s peekWatch(62,1971
	virtual Envelope envelope(65,2320
	virtual void onStarting(73,2611
	virtual void onStopping(74,2667
	mutable dev::SharedMutex x_messages;79,2828
	std::map<std::map80,2866
	std::map<h256, Envelope> m_messages;80,2866
	std::multimap<std::multimap81,2904
	std::multimap<unsigned, h256> m_expiryQueue;81,2904
	mutable dev::Mutex m_filterLock;83,2951
	std::map<std::map84,2985
	std::map<h256, InstalledFilter> m_filters;84,2985
	std::map<std::map85,3029
	std::map<unsigned, ClientWatch> m_watches;85,3029
	TopicBloomFilter m_bloom;86,3073
	bool m_storeMessagesInDB;88,3101

src/cpp-ethereum/libwhisper/WhisperPeer.cpp,414
WhisperPeer::WhisperPeer(31,919
WhisperPeer::~WhisperPeer(~WhisperPeer39,1187
WhisperHost* WhisperPeer::host(host43,1220
bool WhisperPeer::interpret(interpret48,1329
void WhisperPeer::sendMessages(sendMessages90,2063
void WhisperPeer::noteNewMessage(noteNewMessage114,2597
unsigned WhisperPeer::ratingForPeer(ratingForPeer121,2759
void WhisperPeer::sendTopicsOfInterest(sendTopicsOfInterest143,3236

src/cpp-ethereum/libwhisper/Message.cpp,414
Message::Message(Message30,884
bool Message::openBroadcastEnvelope(openBroadcastEnvelope51,1247
bool Message::populate(populate79,2382
Envelope Message::seal(seal100,2962
Envelope::Envelope(Envelope141,4288
Message Envelope::open(open150,4500
unsigned Envelope::workProved(workProved155,4602
void Envelope::proveWork(proveWork163,4767
bool Envelope::matchesBloomFilter(matchesBloomFilter184,5317

src/cpp-ethereum/libwhisper/BloomFilter.h,863
class TopicBloomFilterBase:TopicBloomFilterBase32,838
	TopicBloomFilterBase(35,896
	TopicBloomFilterBase(36,932
	void addBloom(38,1009
	void removeBloom(39,1072
	bool containsBloom(40,1141
	void addRaw(42,1231
	void removeRaw(43,1269
	bool containsRaw(44,1310
	static FixedHash<N> bloom(46,1390
	static void setBit(47,1443
	static bool isBitSet(48,1498
	void init(51,1573
	std::array<std::array54,1699
	std::array<uint16_t, CounterSize> m_refCounter;54,1699
static unsigned const c_powerOfTwoBitMmask[c_powerOfTwoBitMmask57,1752
void TopicBloomFilterBase<N>::addRaw(addRaw60,1856
void TopicBloomFilterBase<N>::removeRaw(removeRaw74,2167
bool TopicBloomFilterBase<N>::isBitSet(isBitSet88,2458
void TopicBloomFilterBase<N>::setBit(setBit96,2679
FixedHash<N> TopicBloomFilterBase<N>::bloom(bloom104,2879
using TopicBloomFilter 134,3712

src/cpp-ethereum/libwhisper/Message.h,1085
struct FilterKey45,1081
	FilterKey(47,1100
	FilterKey(48,1116
	Secret key;50,1222
enum IncludeNonce53,1239
	WithoutNonce 55,1259
	WithNonce 56,1278
class Envelope59,1297
	Envelope(64,1346
	void streamRLP(67,1388
	h256 sha3(68,1574
	unsigned sent(73,1828
	unsigned expiry(74,1880
	unsigned ttl(75,1926
	AbridgedTopics const& topic(76,1966
	bytes const& data(77,2023
	bool isExpired(80,2133
	Envelope(83,2201
	unsigned m_expiry 85,2321
	unsigned m_ttl 86,2345
	u256 m_nonce;87,2366
	AbridgedTopics m_topic;89,2382
	bytes m_data;90,2407
	ContainsSignature 95,2451
class Message100,2616
	Message(103,2640
	Message(105,2731
	Message(106,2787
	Message(107,2854
	Public from(109,2918
	Public to(110,2958
	bytes const& payload(111,2994
	void setFrom(113,3047
	void setTo(114,3095
	void setPayload(115,3135
	void setPayload(116,3201
	operator bool(operator bool118,3268
	Envelope seal(123,3560
	Envelope sealTo(124,3708
	Envelope sealTo(125,3876
	Secret generateGamma(130,4187
	Public m_from;132,4286
	Public m_to;133,4302
	bytes m_payload;134,4316

src/cpp-ethereum/libwhisper/WhisperHost.cpp,751
WhisperHost::WhisperHost(33,975
WhisperHost::~WhisperHost(~WhisperHost38,1109
void WhisperHost::streamMessage(streamMessage43,1163
void WhisperHost::inject(inject55,1458
unsigned WhisperHost::installWatch(installWatch114,2931
void WhisperHost::uninstallWatch(uninstallWatch138,3449
h256s WhisperHost::watchMessages(watchMessages163,3903
h256s WhisperHost::checkWatch(checkWatch184,4342
void WhisperHost::doWork(doWork202,4576
void WhisperHost::cleanup(cleanup209,4714
void WhisperHost::noteAdvertiseTopicsOfInterest(noteAdvertiseTopicsOfInterest219,5016
bool WhisperHost::isWatched(isWatched225,5182
void WhisperHost::saveMessagesToBD(saveMessagesToBD237,5482
void WhisperHost::loadMessagesFromBD(loadMessagesFromBD266,6122

src/cpp-ethereum/libwhisper/WhisperPeer.h,549
class WhisperPeer:WhisperPeer47,1134
	static std::string name(55,1384
	static u256 version(56,1429
	static unsigned messageCount(57,1487
	TopicBloomFilterHash bloom(58,1543
	void noteAdvertiseTopicsOfInterest(60,1729
	void setBloom(67,2043
	mutable dev::Mutex x_unseen;69,2132
	std::multimap<std::multimap70,2162
	std::multimap<unsigned, h256> m_unseen;70,2162
	mutable dev::Mutex x_bloom;73,2327
	TopicBloomFilterHash m_bloom;74,2356
	mutable dev::Mutex x_advertiseTopicsOfInterest;76,2419
	bool m_advertiseTopicsOfInterest;77,2468

src/cpp-ethereum/libwhisper/WhisperDB.h,1040
struct WrongTypeLevelDB:WrongTypeLevelDB34,908
struct FailedToOpenLevelDB:FailedToOpenLevelDB35,955
struct FailedToOpenLevelDB: virtual Exception { FailedToOpenLevelDB(35,955
struct FailedInsertInLevelDB:FailedInsertInLevelDB36,1079
struct FailedInsertInLevelDB: virtual Exception { FailedInsertInLevelDB(36,1079
struct FailedLookupInLevelDB:FailedLookupInLevelDB37,1207
struct FailedLookupInLevelDB: virtual Exception { FailedLookupInLevelDB(37,1207
struct FailedDeleteInLevelDB:FailedDeleteInLevelDB38,1335
struct FailedDeleteInLevelDB: virtual Exception { FailedDeleteInLevelDB(38,1335
class WhisperDB42,1484
	WhisperDB(45,1510
	virtual ~WhisperDB(46,1548
	leveldb::ReadOptions m_readOptions;53,1792
	leveldb::WriteOptions m_writeOptions;54,1829
	std::unique_ptr<leveldb::DB> m_db;55,1868
class WhisperMessagesDB:WhisperMessagesDB58,1908
	WhisperMessagesDB(61,1960
	virtual ~WhisperMessagesDB(62,2007
class WhisperFiltersDB:WhisperFiltersDB67,2168
	WhisperFiltersDB(70,2219
	virtual ~WhisperFiltersDB(71,2264

src/cpp-ethereum/libwhisper/Common.cpp,476
AbridgedTopic dev::shh::abridge(abridge32,932
AbridgedTopics dev::shh::abridge(abridge37,1019
AbridgedTopics BuildTopic::toAbridgedTopics(toAbridgedTopics46,1203
BuildTopic& BuildTopic::shiftBytes(shiftBytes55,1383
h256 TopicFilter::sha3(sha361,1490
bool TopicFilter::matches(matches68,1583
TopicFilter::TopicFilter(TopicFilter88,2048
TopicBloomFilterHash TopicFilter::exportBloom(exportBloom98,2260
TopicMask BuildTopicMask::toTopicMask(toTopicMask108,2471

src/cpp-ethereum/libwhisper/Interface.cpp,41
Interface::~Interface(~Interface32,940

src/cpp-ethereum/libwhisper/WhisperDB.cpp,328
WhisperDB::WhisperDB(WhisperDB32,979
string WhisperDB::lookup(lookup49,1484
void WhisperDB::insert(insert60,1805
void WhisperDB::insert(insert68,2093
void WhisperDB::kill(kill77,2428
void WhisperMessagesDB::loadAllMessages(loadAllMessages85,2686
void WhisperMessagesDB::saveSingleMessage(saveSingleMessage141,4049

src/cpp-ethereum/libevm/JitVM.h,56
class JitVM:JitVM11,95
	owning_bytes_ref exec(14,132

src/cpp-ethereum/libevm/VM.h,1372
namespace dev32,962
inline u256 fromAddress(44,1218
struct InstructionMetric50,1278
	Tier gasPriceTier;52,1305
	int args;53,1325
	int ret;54,1336
class VM:VM60,1359
	bytes const& memory(71,1665
	u256s stack(72,1712
	u256* io_gas 76,1811
	uint64_t m_io_gas 77,1830
	ExtVMFace* m_ext 78,1854
	OnOpFunc m_onOp;79,1877
	static std::array<std::array81,1896
	static std::array<InstructionMetric, 256> c_metrics;81,1896
	const void* const* c_jumpTable 85,2048
	bool m_caseInit 86,2085
	typedef void (VM::*MemFnPtr)MemFnPtr88,2113
	MemFnPtr m_bounce 89,2146
	MemFnPtr m_onFail 90,2170
	uint64_t m_nSteps 91,2194
	EVMSchedule const* m_schedule 92,2218
	owning_bytes_ref m_output;95,2278
	bytes m_mem;98,2328
	bytes m_codeSpace;101,2382
	byte* m_code 102,2402
	u256 m_stackSpace[m_stackSpace105,2468
	u256* m_stack 106,2494
	ptrdiff_t stackSize(107,2529
	uint64_t m_returnSpace[m_returnSpace111,2651
	uint64_t* m_return 112,2682
	std::vector<size_t> m_frameSize;115,2790
	u256 m_pool[m_pool119,2850
	Instruction m_OP;122,2892
	uint64_t    m_PC 123,2949
	u256*       m_SP 124,3005
	uint64_t*   m_RP 126,3082
	uint64_t m_runGas 130,3175
	uint64_t m_newMemSize 131,3199
	uint64_t m_copyMemSize 132,3227
	std::vector<uint64_t> m_beginSubs;156,3788
	std::vector<uint64_t> m_jumpDests;157,3824
	template<class T> uint64_t toInt63(174,4308

src/cpp-ethereum/libevm/VMOpt.cpp,835
void VM::reportStackUse(reportStackUse26,805
std::array<InstructionMetric, 256> VM::c_metrics;35,972
void VM::initMetrics(initMetrics36,1022
void VM::copyCode(copyCode52,1319
void VM::optimize(optimize64,1717
		struct hash256130,3104
			u256 (&table)table137,3295
			bool empty[empty138,3318
			hash256(140,3342
			void hashInit(149,3489
			void hashByte(152,3563
			byte getHash(155,3656
			bool insertVal(158,3779
		#define CONST_POOL_HASH_INIT(169,3987
		#define CONST_POOL_HASH_BYTE(170,4044
		#define CONST_POOL_GET_HASH(171,4103
		#define CONST_POOL_INSERT_VAL(172,4158
		#define CONST_POOL_HASH_INIT(174,4246
		#define CONST_POOL_HASH_BYTE(175,4279
		#define CONST_POOL_GET_HASH(176,4313
		#define CONST_POOL_INSERT_VAL(177,4347
void VM::initEntry(initEntry258,6349
u256 VM::exp256(exp256273,6696

src/cpp-ethereum/libevm/VM.cpp,749
uint64_t VM::memNeed(memNeed30,876
template <class S> S divWorkaround(35,986
template <class S> S modWorkaround(40,1086
uint64_t VM::decodeJumpDest(decodeJumpDest50,1262
uint64_t VM::decodeJumpvDest(decodeJumpvDest60,1560
void VM::onOperation(onOperation83,2271
void VM::checkStack(checkStack91,2467
uint64_t VM::gasForMem(gasForMem99,2693
void VM::updateIOGas(updateIOGas105,2840
void VM::updateGas(updateGas112,2936
void VM::updateMem(updateMem121,3181
void VM::logGasMem(logGasMem129,3332
void VM::fetchInstruction(fetchInstruction137,3593
	#define onOperation(150,3951
	#define updateIOGas(153,4008
	#define checkStack(156,4057
owning_bytes_ref VM::exec(exec163,4201
void VM::interpretCases(interpretCases194,4740

src/cpp-ethereum/libevm/ExtVMFace.cpp,29
ExtVMFace::ExtVMFace(27,850

src/cpp-ethereum/libevm/VMValidate.cpp,91
void VM::validate(validate34,969
void VM::validateSubroutine(validateSubroutine63,1910

src/cpp-ethereum/libevm/SmartVM.cpp,568
namespace dev27,873
namespace eth29,889
	struct JitInfo:JitInfo33,917
	struct JitInfo: LogChannel { static const char* name(33,917
	HitMap& getHitMap(37,1082
	struct JitTask43,1155
		bytes code;45,1174
		h256 codeHash;46,1188
		evm_mode mode;47,1205
		static JitTask createStopSentinel(49,1223
		bool isStopSentinel(51,1284
	class JitWorker58,1435
		concurrent_queue<JitTask> m_queue;60,1455
		std::thread m_worker;61,1492
		void work(63,1554
		JitWorker(77,1950
		~JitWorker(80,2008
		void push(86,2092
owning_bytes_ref SmartVM::exec(exec90,2164

src/cpp-ethereum/libevm/ExtVMFace.h,2834
class owning_bytes_ref:owning_bytes_ref56,1986
	owning_bytes_ref(64,2226
	bytes m_bytes;78,2687
enum class BlockPolarity81,2707
	Unknown,83,2734
	Dead,84,2744
	Live85,2751
struct LogEntry88,2761
	LogEntry(90,2779
	LogEntry(91,2794
	LogEntry(92,2906
	void streamRLP(94,3028
	LogBloom bloom(96,3117
	Address address;105,3280
	h256s topics;106,3298
	bytes data;107,3313
using LogEntries 110,3330
struct LocalisedLogEntry:LocalisedLogEntry112,3373
	LocalisedLogEntry(114,3417
	explicit LocalisedLogEntry(115,3441
	explicit LocalisedLogEntry(117,3509
	explicit LocalisedLogEntry(126,3642
	h256 blockHash;145,4099
	BlockNumber blockNumber 146,4116
	h256 transactionHash;147,4146
	unsigned transactionIndex 148,4169
	unsigned logIndex 149,4201
	BlockPolarity polarity 150,4225
	bool mined 151,4275
	bool isSpecial 152,4296
	h256 special;153,4321
using LocalisedLogEntries 156,4340
inline LogBloom bloom(158,4401
struct SubState166,4529
	std::set<Address> suicides;168,4547
	LogEntries logs;169,4614
	u256 refunds;170,4649
	SubState& operator+=(operator+=172,4713
	void clear(180,4849
using LastHashes 191,4952
using OnOpFunc 193,4991
struct CallParameters195,5174
	Address senderAddress;197,5198
	Address codeAddress;198,5222
	Address receiveAddress;199,5244
	u256 valueTransfer;200,5269
	u256 apparentValue;201,5290
	u256 gas;202,5311
	bytesConstRef data;203,5322
	OnOpFunc onOp;204,5343
class EnvInfo207,5363
	EnvInfo(210,5387
	EnvInfo(211,5401
	EnvInfo(224,5915
	u256 const& number(237,6409
	Address const& author(238,6458
	u256 const& timestamp(239,6510
	u256 const& difficulty(240,6565
	int64_t gasLimit(241,6622
	LastHashes const& lastHashes(242,6671
	u256 const& gasUsed(243,6734
	void setNumber(245,6786
	void setAuthor(246,6837
	void setTimestamp(247,6891
	void setDifficulty(248,6948
	void setGasLimit(249,7007
	void setLastHashes(250,7058
	u256 m_number;253,7130
	Address m_author;254,7146
	u256 m_timestamp;255,7165
	u256 m_difficulty;256,7184
	int64_t m_gasLimit;257,7204
	LastHashes m_lastHashes;258,7225
	u256 m_gasUsed;259,7251
class ExtVMFace265,7370
	virtual u256 store(280,7814
	virtual void setStore(283,7886
	virtual u256 balance(286,7954
	virtual bytes const& codeAt(289,8026
	virtual size_t codeSizeAt(292,8153
	virtual bool exists(295,8233
	virtual void suicide(298,8359
	virtual h160 create(301,8465
	virtual void log(307,8710
	h256 blockHash(310,8922
	EnvInfo const& envInfo(313,9184
	virtual EVMSchedule const& evmSchedule(316,9306
	EnvInfo const& m_envInfo;319,9392
	Address myAddress;323,9451
	Address caller;324,9550
	Address origin;325,9646
	u256 value;326,9692
	u256 gasPrice;327,9762
	bytesConstRef data;328,9823
	bytes code;329,9871
	h256 codeHash;330,9925
	SubState sub;331,9981
	unsigned depth 332,10056

src/cpp-ethereum/libevm/VMFactory.cpp,197
namespace dev27,804
namespace eth29,820
void VMFactory::setKind(setKind36,887
std::unique_ptr<VMFace> VMFactory::create(create41,947
std::unique_ptr<VMFace> VMFactory::create(create46,1020

src/cpp-ethereum/libevm/VMFace.h,100
struct VMException:VMException28,789
#define ETH_SIMPLE_EXCEPTION_VM(29,831
class VMFace39,1235

src/cpp-ethereum/libevm/SmartVM.h,63
class SmartVM:SmartVM31,1009
	owning_bytes_ref exec(34,1048

src/cpp-ethereum/libevm/VMCalls.cpp,442
void VM::copyDataToMemory(copyDataToMemory28,807
void VM::throwOutOfGas(throwOutOfGas46,1440
void VM::throwBadInstruction(throwBadInstruction51,1506
void VM::throwBadJumpDestination(throwBadJumpDestination56,1584
void VM::throwBadStack(throwBadStack61,1670
int64_t VM::verifyJumpDest(verifyJumpDest77,2103
void VM::caseCreate(caseCreate99,2578
void VM::caseCall(caseCall130,3377
bool VM::caseCallSetup(caseCallSetup151,3776

src/cpp-ethereum/libevm/VMConfig.h,1274
		#define EVM_JUMP_DISPATCH 38,1257
		#define EVM_JUMP_DISPATCH 40,1298
	#define EVM_SWITCH_DISPATCH48,1460
	#define EVM_OPTIMIZE 52,1518
	#define EVM_REPLACE_CONST_JUMP 55,1569
	#define EVM_USE_CONSTANT_POOL 56,1606
	#define EVM_DO_FIRST_PASS_OPTIMIZATION 57,1643
#define EVM_JUMPS_AND_SUBS 63,1760
	#define EVM_TRACE 71,1963
	#undef ON_OP75,2010
		#define ON_OP(77,2043
		#define ON_OP(81,2178
	#define TRACE_STR(84,2220
	#define TRACE_VAL(88,2320
	#define TRACE_OP(91,2442
	#define TRACE_PRE_OPT(95,2576
	#define TRACE_POST_OPT(99,2715
	#define TRACE_STR(103,2857
	#define TRACE_VAL(104,2888
	#define TRACE_OP(105,2925
	#define TRACE_PRE_OPT(106,2958
	#define TRACE_POST_OPT(107,2996
	#define ON_OP(108,3035
	#define THROW_EXCEPTION(113,3135
		#define THROW_EXCEPTION(117,3256
		#define THROW_EXCEPTION(120,3378
	#define INIT_CASES 131,3615
	#define DO_CASES 132,3683
	#define CASE(133,3746
	#define NEXT 134,3790
	#define CONTINUE 135,3819
	#define BREAK 136,3847
	#define DEFAULT 137,3870
	#define WHILE_CASES 138,3896
	#define INIT_CASES 148,4144
	#define DO_CASES 415,8770
	#define CASE(416,8836
	#define NEXT 417,8862
	#define CONTINUE 418,8935
	#define BREAK 419,9004
	#define DEFAULT 420,9027
	#define WHILE_CASES421,9053

src/cpp-ethereum/libevm/VMFactory.h,96
enum class VMKind26,733
	Interpreter,28,753
	JIT,29,767
	Smart30,773
class VMFactory33,784

src/cpp-ethereum/libevm/JitVM.cpp,860
namespace dev7,102
namespace eth9,118
inline evm_uint160be toEvmC(19,359
inline Address fromEvmC(24,458
inline evm_uint256be toEvmC(32,725
inline u256 asUint(37,815
inline h256 asHash(42,896
void evm_query(47,994
void evm_update(127,2814
int64_t evm_call(161,3710
class EVM215,5133
	EVM(218,5153
	~EVM(224,5334
	class Result232,5443
		explicit Result(235,5469
		~Result(239,5542
		Result(245,5621
		evm_result_code code(255,5849
		int64_t gasLeft(260,5914
		bytesConstRef output(265,5978
		evm_result m_result;271,6084
	Result execute(275,6150
	bool isCodeReady(286,6502
	void compile(291,6648
	evm_instance* m_instance 300,6888
EVM& getJit(303,6929
owning_bytes_ref JitVM::exec(exec312,7068
evm_mode JitVM::scheduleToMode(scheduleToMode339,8207
bool JitVM::isCodeReady(isCodeReady348,8440
void JitVM::compile(compile353,8549

src/cpp-ethereum/libethashseal/GenesisInfo.h,304
enum class Network34,972
	MainNetwork 37,1038
	Ropsten 39,1167
	MainNetworkTest 40,1213
	TransitionnetTest 41,1313
	FrontierTest 42,1418
	HomesteadTest 43,1521
	EIP150Test 44,1625
	EIP158Test 45,1714
	MetropolisTest 46,1792
	Special 47,1870
	ecocMainNetwork 48,1910
	ecocTestNetwork 49,2016

src/cpp-ethereum/libethashseal/EthashClient.h,336
class EthashClient:EthashClient36,899
	EthashClient(40,980
	Ethash* ethash(50,1286
	std::tuple<std::tuple70,1995
	mutable std::unordered_map<std::unordered_map84,2395
	mutable std::unordered_map<h256, std::pair<u256, std::chrono::steady_clock::time_point>> m_externalRates;84,2395
	mutable SharedMutex x_externalRates;85,2502

src/cpp-ethereum/libethashseal/EthashAux.h,1248
struct DAGChannel:DAGChannel36,962
struct DAGChannel: public LogChannel { static const char* name(36,962
class EthashAux40,1084
	~EthashAux(43,1110
	static EthashAux* get(45,1126
	struct LightAllocation47,1153
		LightAllocation(49,1180
		~LightAllocation(50,1222
		bytesConstRef data(51,1244
		ethash_light_t light;53,1363
		uint64_t size;54,1387
	struct FullAllocation57,1409
		uint64_t size(63,1639
		ethash_full_t full;64,1702
	static std::pair<std::pair81,2356
	static std::pair<uint64_t, unsigned> fullGeneratingProgress(81,2356
	EthashAux(88,2927
	static EthashAux* s_this;94,3073
	SharedMutex x_lights;96,3101
	std::unordered_map<std::unordered_map97,3124
	std::unordered_map<h256, std::shared_ptr<LightAllocation>> m_lights;97,3124
	Mutex x_fulls;99,3195
	std::condition_variable m_fullsChanged;100,3211
	std::unordered_map<std::unordered_map101,3252
	std::unordered_map<h256, std::weak_ptr<FullAllocation>> m_fulls;101,3252
	FullType m_lastUsedFull;102,3318
	std::unique_ptr<std::thread> m_fullGenerator;103,3344
	unsigned m_fullProgress;105,3441
	Mutex x_epochs;107,3468
	std::unordered_map<std::unordered_map108,3485
	std::unordered_map<h256, unsigned> m_epochs;108,3485
	h256s m_seedHashes;109,3531

src/cpp-ethereum/libethashseal/EthashProofOfWork.h,562
struct EthashProofOfWork34,911
	struct Solution36,938
		Nonce nonce;38,958
		h256 mixHash;39,973
	struct Result42,994
		h256 value;44,1012
		h256 mixHash;45,1026
	struct WorkPackage48,1047
		WorkPackage(51,1097
		void reset(52,1136
		operator bool(53,1176
		h256 boundary;55,1234
		h256 headerHash;56,1251
		h256 seedHash;57,1349
	static const WorkPackage NullWorkPackage;60,1371
	static const unsigned defaultLocalWorkSize;63,1488
	static const unsigned defaultGlobalWorkSizeMultiplier;65,1615
	static const unsigned defaultMSPerBatch;67,1743

src/cpp-ethereum/libethashseal/GenesisInfo.cpp,127
std::string const& dev::eth::genesisInfo(genesisInfo37,1176
h256 const& dev::eth::genesisStateRoot(genesisStateRoot57,2013

src/cpp-ethereum/libethashseal/EthashCPUMiner.cpp,409
#define HAVE_STDINT_H30,919
unsigned EthashCPUMiner::s_numInstances 37,1056
static string jsonEncode(40,1116
EthashCPUMiner::EthashCPUMiner(57,1543
EthashCPUMiner::~EthashCPUMiner(~EthashCPUMiner62,1717
void EthashCPUMiner::kickOff(kickOff66,1756
void EthashCPUMiner::pause(pause72,1825
void EthashCPUMiner::workLoop(workLoop77,1875
std::string EthashCPUMiner::platformInfo(platformInfo108,2865

src/cpp-ethereum/libethashseal/EthashAux.cpp,1213
const char* DAGChannel::name(name43,1287
EthashAux* dev::eth::EthashAux::s_this 45,1346
EthashAux::~EthashAux(~EthashAux47,1397
EthashAux* EthashAux::get(get51,1426
uint64_t EthashAux::cacheSize(cacheSize58,1558
uint64_t EthashAux::dataSize(dataSize63,1679
h256 EthashAux::seedHash(seedHash68,1779
uint64_t EthashAux::number(number92,2365
void EthashAux::killCache(killCache113,3011
EthashAux::LightType EthashAux::light(light119,3104
EthashAux::LightAllocation::LightAllocation(LightAllocation128,3387
EthashAux::LightAllocation::~LightAllocation(~LightAllocation137,3681
bytesConstRef EthashAux::LightAllocation::data(data142,3762
EthashAux::FullAllocation::FullAllocation(FullAllocation147,3878
EthashAux::FullAllocation::~FullAllocation(~FullAllocation159,4250
bytesConstRef EthashAux::FullAllocation::data(data164,4327
static int dagCallbackShim(170,4504
EthashAux::FullType EthashAux::full(full176,4675
unsigned EthashAux::computeFull(computeFull202,5306
EthashProofOfWork::Result EthashAux::FullAllocation::compute(compute234,6255
EthashProofOfWork::Result EthashAux::LightAllocation::compute(compute242,6698
EthashProofOfWork::Result EthashAux::eval(eval250,7142

src/cpp-ethereum/libethashseal/EthashClient.cpp,723
EthashClient& dev::eth::asEthashClient(asEthashClient29,883
EthashClient* dev::eth::asEthashClient(asEthashClient36,1057
EthashClient::EthashClient(45,1279
Ethash* EthashClient::ethash(ethash60,1681
bool EthashClient::isMining(isMining65,1776
WorkingProgress EthashClient::miningProgress(miningProgress70,1854
u256 EthashClient::hashrate(hashrate77,2000
std::tuple<h256, h256, h256> EthashClient::getEthashWork(getEthashWork85,2131
bool EthashClient::submitEthashWork(submitEthashWork105,2964
void EthashClient::setShouldPrecomputeDAG(setShouldPrecomputeDAG111,3109
void EthashClient::submitExternalHashrate(submitExternalHashrate118,3299
u256 EthashClient::externalHashrate(externalHashrate124,3483

src/cpp-ethereum/libethashseal/EthashCPUMiner.h,279
class EthashCPUMiner:EthashCPUMiner35,923
	EthashCPUMiner(38,1002
	~EthashCPUMiner(39,1081
	static unsigned instances(41,1102
	static void listDevices(43,1253
	static bool configureGPU(44,1283
	static void setNumInstances(45,1403
	static unsigned s_numInstances;53,1642

src/cpp-ethereum/libethashseal/EthashProofOfWork.cpp,332
const unsigned EthashProofOfWork::defaultLocalWorkSize 31,927
const unsigned EthashProofOfWork::defaultGlobalWorkSizeMultiplier 32,988
const unsigned EthashProofOfWork::defaultMSPerBatch 33,1094
const EthashProofOfWork::WorkPackage EthashProofOfWork::NullWorkPackage 34,1151
EthashProofOfWork::WorkPackage::WorkPackage(36,1260

src/cpp-ethereum/libethashseal/genesis/ecocTestNetwork.cpp,62
static std::string const c_genesisInfoEcocTestNetwork 20,831

src/cpp-ethereum/libethashseal/genesis/homesteadTest.cpp,123
static dev::h256 const c_genesisStateRootHomesteadTest;20,706
static std::string const c_genesisInfoHomesteadTest 21,762

src/cpp-ethereum/libethashseal/genesis/metropolisTest.cpp,125
static dev::h256 const c_genesisStateRootMetropolisTest;19,705
static std::string const c_genesisInfoMetropolisTest 20,762

src/cpp-ethereum/libethashseal/genesis/ropsten.cpp,111
static dev::h256 const c_genesisStateRootRopsten;19,705
static std::string const c_genesisInfoRopsten 20,755

src/cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp,105
static dev::h256 const c_genesisStateRootTest;19,705
static std::string const c_genesisInfoTest 20,752

src/cpp-ethereum/libethashseal/genesis/frontierTest.cpp,121
static dev::h256 const c_genesisStateRootFrontierTest;20,706
static std::string const c_genesisInfoFrontierTest 21,761

src/cpp-ethereum/libethashseal/genesis/mainNetwork.cpp,58
static std::string const c_genesisInfoMainNetwork 20,827

src/cpp-ethereum/libethashseal/genesis/ecocMainNetwork.cpp,62
static std::string const c_genesisInfoEcocMainNetwork 20,831

src/cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp,127
static dev::h256 const c_genesisStateRootMainNetworkTest;19,705
static std::string const c_genesisInfoMainNetworkTest 20,763

src/cpp-ethereum/libethashseal/genesis/eip150Test.cpp,117
static dev::h256 const c_genesisStateRootEIP150Test;19,705
static std::string const c_genesisInfoEIP150Test 20,758

src/cpp-ethereum/libethashseal/genesis/eip158Test.cpp,117
static dev::h256 const c_genesisStateRootEIP158Test;19,705
static std::string const c_genesisInfoEIP158Test 20,758

src/cpp-ethereum/libethashseal/Ethash.h,652
class Ethash:Ethash36,924
	Ethash(39,970
	std::string name(41,982
	unsigned revision(42,1038
	unsigned sealFields(43,1088
	bytes sealRLP(44,1140
	std::string sealer(52,1637
	void setSealer(53,1695
	void cancelGeneration(54,1772
	eth::GenericFarm<EthashProofOfWork>& farm(58,1921
	enum { MixHashField 60,1986
	enum { MixHashField = 0, NonceField 60,1986
	static Nonce nonce(62,2077
	static h256 mixHash(63,2161
	static h256 boundary(64,2247
	static BlockHeader& setNonce(65,2380
	static BlockHeader& setMixHash(66,2483
	void manuallySetWork(71,2776
	eth::GenericFarm<EthashProofOfWork> m_farm;81,3093
	BlockHeader m_sealing;83,3169

src/cpp-ethereum/libethashseal/Ethash.cpp,775
void Ethash::init(init33,1028
Ethash::Ethash(Ethash38,1088
strings Ethash::sealers(sealers61,1893
h256 Ethash::seedHash(seedHash66,1947
StringHashMap Ethash::jsInfo(jsInfo71,2051
void Ethash::verify(verify76,2309
void Ethash::verifyTransaction(verifyTransaction147,5709
u256 Ethash::childGasLimit(childGasLimit166,6416
void Ethash::manuallySubmitWork(manuallySubmitWork177,6923
u256 Ethash::calculateDifficulty(calculateDifficulty182,7073
void Ethash::populateFromParent(populateFromParent209,8416
bool Ethash::quickVerifySeal(quickVerifySeal216,8653
bool Ethash::verifySeal(verifySeal233,9068
void Ethash::generateSeal(generateSeal264,9890
bool Ethash::shouldSeal(shouldSeal275,10246
void Ethash::ensurePrecomputed(ensurePrecomputed280,10301

src/cpp-ethereum/ethvm/main.cpp,242
static const int64_t MaxBlockGasLimit 41,1273
void help(43,1409
void version(74,2882
void setDefaultOrCLocale(95,3821
enum class Mode105,3941
	Trace,107,3959
	Statistics,108,3967
	OutputOnly,109,3980
	Test114,4150
int main(117,4160

src/cpp-ethereum/rlp/main.cpp,568
void help(37,1151
void version(70,3071
void setDefaultOrCLocale(89,3870
enum class Mode 99,3990
	AssembleArchive,100,4008
	ListArchive,101,4026
	ExtractArchive,102,4040
	Render,103,4057
	Create104,4066
enum class Encoding 107,4078
	Auto,108,4100
	Hex,109,4107
	Base64,110,4113
	Binary,111,4122
	Keccak,112,4131
bool isAscii(115,4144
class RLPStreamer127,4377
	struct Prefs130,4405
		string indent;132,4422
	RLPStreamer(141,4597
	void output(143,4665
	std::ostream& m_out;177,5807
	Prefs m_prefs;178,5829
void putOut(181,5849
int main(206,6433

src/cpp-ethereum/test/libweb3jsonrpc/jsonrpc.cpp,636
WebThreeDirect* web3;48,1644
unique_ptr<WebThreeStubServer> jsonrpcServer;49,1666
unique_ptr<WebThreeStubClient> jsonrpcClient;50,1712
struct Setup52,1759
	Setup(54,1774
string fromAscii(75,2443
BOOST_FIXTURE_TEST_SUITE(81,2537
BOOST_AUTO_TEST_CASE(90,2797
BOOST_AUTO_TEST_CASE(97,2990
BOOST_AUTO_TEST_CASE(110,3353
BOOST_AUTO_TEST_CASE(123,3723
BOOST_AUTO_TEST_CASE(142,4302
BOOST_AUTO_TEST_CASE(153,4686
BOOST_AUTO_TEST_CASE(160,4872
BOOST_AUTO_TEST_CASE(171,5154
BOOST_AUTO_TEST_CASE(182,5431
BOOST_AUTO_TEST_CASE(191,5739
BOOST_AUTO_TEST_CASE(251,7892
BOOST_AUTO_TEST_CASE(278,8746
BOOST_AUTO_TEST_CASE(319,9922

src/cpp-ethereum/test/libweb3jsonrpc/AccountHolder.cpp,76
namespace dev30,910
namespace test32,926
BOOST_FIXTURE_TEST_SUITE(35,944

src/cpp-ethereum/test/libweb3jsonrpc/WebThreeStubClient.h,4333
#define JSONRPC_CPP_STUB_WEBTHREESTUBCLIENT_H_6,125
class WebThreeStubClient 10,205
        WebThreeStubClient(13,269
        std::string web3_sha3(15,423
        std::string web3_clientVersion(25,873
        std::string net_version(35,1319
        std::string net_peerCount(45,1751
        bool net_listening(55,2187
        std::string eth_protocolVersion(65,2612
        std::string eth_hashrate(75,3060
        std::string eth_coinbase(85,3494
        bool eth_mining(95,3928
        std::string eth_gasPrice(105,4347
        Json::Value eth_accounts(115,4781
        std::string eth_blockNumber(125,5203
        std::string eth_getBalance(135,5643
        std::string eth_getStorageAt(146,6160
        std::string eth_getTransactionCount(158,6738
        Json::Value eth_getBlockTransactionCountByHash(169,7273
        Json::Value eth_getBlockTransactionCountByNumber(179,7762
        Json::Value eth_getUncleCountByBlockHash(189,8255
        Json::Value eth_getUncleCountByBlockNumber(199,8732
        std::string eth_getCode(209,9213
        std::string eth_sendTransaction(220,9724
        std::string eth_call(230,10194
        bool eth_flush(241,10699
        Json::Value eth_getBlockByHash(251,11116
        Json::Value eth_getBlockByNumber(262,11616
        Json::Value eth_getTransactionByHash(273,12120
        Json::Value eth_getTransactionByBlockHashAndIndex(283,12589
        Json::Value eth_getTransactionByBlockNumberAndIndex(294,13141
        Json::Value eth_getTransactionReceipt(305,13697
        Json::Value eth_getUncleByBlockHashAndIndex(315,14168
        Json::Value eth_getUncleByBlockNumberAndIndex(326,14708
        std::string eth_newFilter(337,15252
        std::string eth_newFilterEx(347,15710
        std::string eth_newBlockFilter(357,16172
        std::string eth_newPendingTransactionFilter(367,16618
        bool eth_uninstallFilter(377,17090
        Json::Value eth_getFilterChanges(387,17549
        Json::Value eth_getFilterChangesEx(397,18009
        Json::Value eth_getFilterLogs(407,18473
        Json::Value eth_getFilterLogsEx(417,18927
        Json::Value eth_getLogs(427,19385
        Json::Value eth_getLogsEx(437,19827
        Json::Value eth_getWork(447,20273
        bool eth_submitWork(457,20693
        bool eth_submitHashrate(469,21256
        std::string eth_register(480,21770
        bool eth_unregister(490,22226
        Json::Value eth_fetchQueuedTransactions(500,22675
        std::string eth_signTransaction(510,23149
        Json::Value eth_inspectTransaction(520,23619
		std::string eth_sendRawTransaction(530,24084
        bool eth_notePassword(540,24479
        bool db_put(550,24875
        std::string db_get(562,25422
        bool shh_post(573,25923
        std::string shh_newIdentity(583,26360
        bool shh_hasIdentity(593,26800
        std::string shh_newGroup(603,27251
        std::string shh_addToGroup(614,27764
        std::string shh_newFilter(625,28281
        bool shh_uninstallFilter(635,28739
        Json::Value shh_getFilterChanges(645,29198
        Json::Value shh_getMessages(655,29658
        bool admin_web3_setVerbosity(665,30108
        bool admin_net_start(676,30617
        bool admin_net_stop(686,31068
        bool admin_net_connect(696,31517
        Json::Value admin_net_peers(707,32029
        Json::Value admin_eth_blockQueueStatus(717,32479
        Json::Value admin_net_nodeInfo(727,32952
        bool admin_eth_exit(737,33409
        bool admin_eth_setAskPrice(747,33858
        bool admin_eth_setBidPrice(758,34378
        bool admin_eth_setReferencePrice(769,34898
        bool admin_eth_setPriority(780,35430
        bool admin_eth_setMining(791,35935
        Json::Value admin_eth_findBlock(802,36437
        std::string admin_eth_blockQueueFirstUnknown(813,36953
        bool admin_eth_blockQueueRetryUnknown(823,37449
        Json::Value admin_eth_allAccounts(833,37934
        Json::Value admin_eth_newAccount(843,38396
        bool admin_eth_setSigningKey(854,38914
        bool admin_eth_setMiningBenefactor(865,39438
        Json::Value admin_eth_inspect(876,39974
        Json::Value admin_eth_reprocess(887,40486
        Json::Value admin_eth_vmTrace(898,41002
        Json::Value admin_eth_getReceiptByHashAndIndex(910,41556

src/cpp-ethereum/test/libweb3jsonrpc/Client.cpp,105
#undef GetMessage38,1256
namespace dev45,1370
namespace test47,1386
BOOST_FIXTURE_TEST_SUITE(50,1404

src/cpp-ethereum/test/libweb3core/memorydb.cpp,424
namespace dev 32,978
namespace dev {  namespace test 32,978
BOOST_FIXTURE_TEST_SUITE(37,1037
BOOST_AUTO_TEST_CASE(51,1382
BOOST_AUTO_TEST_CASE(78,2114
BOOST_AUTO_TEST_CASE(134,3666
	class AuxMemDB 136,3702
		std::unordered_map<std::unordered_map139,3748
		std::unordered_map<h256, std::pair<bytes, bool>> getAux(139,3748
BOOST_AUTO_TEST_CASE(161,4412
BOOST_AUTO_TEST_CASE(180,4929
BOOST_AUTO_TEST_CASE(202,5614

src/cpp-ethereum/test/libweb3core/overlaydb.cpp,94
BOOST_FIXTURE_TEST_SUITE(32,993
BOOST_AUTO_TEST_CASE(73,2068
BOOST_AUTO_TEST_CASE(114,3239

src/cpp-ethereum/test/libwhisper/whisperDB.cpp,119
struct P2PFixture:P2PFixture44,1242
	P2PFixture(46,1287
	~P2PFixture(47,1355
	TestOutputHelper testHelper;48,1425

src/cpp-ethereum/test/libwhisper/whisperMessage.cpp,138
Topics createRandomTopics(31,957
bytes createRandomPayload(45,1114
void comparePayloads(56,1290
void sealAndOpenSingleMessage(66,1542

src/cpp-ethereum/test/libwhisper/shhrpc.cpp,706
WebThreeDirect* web3;54,1806
unique_ptr<ModularServer<rpc::EthFace, rpc::WhisperFace, rpc::NetFace, rpc::Web3Face, rpc::AdminNetFace, rpc::AdminUtilsFace>> modularServer;56,1829
rpc::WhisperFace* whisperFace;57,1971
rpc::NetFace* netFace;58,2002
rpc::Web3Face* w3Face;59,2025
rpc::SessionManager sm;60,2048
rpc::EthFace* ethFace;61,2072
rpc::AdminNetFace* adminNetFace;62,2095
rpc::AdminUtilsFace* adminUtilsFace;63,2128
unique_ptr<AccountHolder> accountHolder;64,2165
unique_ptr<WebThreeStubClient> jsonrpcClient;65,2206
static unsigned const c_ttl 67,2298
struct Setup:Setup69,2337
	Setup(71,2377
	~Setup(99,3615
	TestOutputHelper testHelper;104,3685
Json::Value createMessage(107,3719

src/cpp-ethereum/test/libwhisper/whisperTopic.cpp,119
struct P2PFixture:P2PFixture37,1094
	P2PFixture(39,1139
	~P2PFixture(40,1207
	TestOutputHelper testHelper;41,1277

src/cpp-ethereum/test/libwhisper/bloomFilter.cpp,321
using TopicBloomFilterShort 32,991
using TopicBloomFilterTest 33,1046
void testAddNonExisting(35,1120
void testRemoveExisting(42,1290
void testAddNonExistingBloom(49,1463
void testRemoveExistingBloom(56,1644
double calculateExpected(63,1828
double testFalsePositiveRate(84,2649
BOOST_FIXTURE_TEST_SUITE(107,3258

src/cpp-ethereum/test/libtesteth/Options.h,825
enum class Verbosity30,858
	Full,32,881
	NiceReport,33,888
	None34,901
class Options37,911
	bool vmtrace 40,935
	bool filltests 41,991
	bool fillchain 42,1067
	bool stats 43,1142
	std::string statsOutFile;44,1210
	bool exectimelog 45,1287
	std::string rCheckTest;46,1360
	std::string rCurrentTestSuite;47,1422
	bool checkstate 48,1521
	bool fulloutput 49,1589
	bool createRandomTest 50,1660
	Verbosity logVerbosity 51,1718
	bool singleTest 55,1796
	std::string singleTestFile;56,1822
	std::string singleTestName;57,1851
	std::string singleTestNet;58,1880
	int trDataIndex;59,1908
	int trGasIndex;60,1949
	int trValueIndex;61,1988
	bool performance 62,2031
	bool nonetwork 63,2058
	bool quadratic 64,2098
	bool memory 65,2148
	bool inputLimits 66,2170
	bool bigData 67,2197
	bool wallet 68,2220

src/cpp-ethereum/test/libtesteth/TestOutputHelper.h,717
class TestOutputHelper30,868
	TestOutputHelper(33,901
	static void setMaxTests(37,1118
	static void setCurrentTestFileName(38,1180
	static std::string const& testName(39,1270
	static std::string const& caseName(40,1338
	static std::string const& testFileName(41,1410
	~TestOutputHelper(44,1548
	static Timer m_timer;46,1614
	static size_t m_currTest;47,1637
	static size_t m_maxTests;48,1664
	static std::string m_currentTestName;49,1691
	static std::string m_currentTestCaseName;50,1730
	static std::string m_currentTestFileName;51,1773
	typedef std::pair<double,double52,1816
	typedef std::pair<double, std::string> execTimeName;52,1816
	static std::vector<execTimeName> m_execTimeResults;53,1870

src/cpp-ethereum/test/libtesteth/Stats.cpp,274
namespace dev24,797
namespace test26,813
Stats& Stats::get(get29,831
void Stats::suiteStarted(suiteStarted35,898
void Stats::testStarted(testStarted40,979
void Stats::testFinished(testFinished46,1080
std::ostream& operator<<(51,1219
Stats::~Stats(~Stats56,1422

src/cpp-ethereum/test/libtesteth/ImportTest.cpp,951
ImportTest::ImportTest(31,1056
bytes ImportTest::executeTest(executeTest53,1784
std::pair<eth::State, ImportTest::execOutput> ImportTest::executeTransaction(executeTransaction178,6824
json_spirit::mObject& ImportTest::makeAllFieldsHex(makeAllFieldsHex205,8049
void ImportTest::importEnv(importEnv231,8828
void ImportTest::importState(importState249,9714
void ImportTest::importState(importState258,10084
void ImportTest::importTransaction importTransaction268,10433
void ImportTest::importTransaction(importTransaction324,12988
int ImportTest::compareStates(compareStates356,14152
	#define CHECK(359,14322
void parseJsonStrValueIntoVector(434,17415
void parseJsonIntValueIntoVector(445,17679
bool inArray(457,17958
void ImportTest::checkGeneralTestSection(checkGeneralTestSection465,18116
void ImportTest::checkGeneralTestSectionSearch(checkGeneralTestSectionSearch470,18344
int ImportTest::exportTest(exportTest554,22100

src/cpp-ethereum/test/libtesteth/Options.cpp,99
void printHelp(28,868
Options::Options(Options69,3998
Options const& Options::get(get203,7478

src/cpp-ethereum/test/libtesteth/boostTest.cpp,426
#define BOOST_TEST_MODULE 22,770
#define BOOST_TEST_NO_MAIN26,943
std::vector<char*> parameters;46,1364
static std::ostringstream strCout;47,1395
std::streambuf* oldCoutStreamBuf;48,1430
std::streambuf* oldCerrStreamBuf;49,1464
test_suite* fake_init_func(52,1529
void createRandomTest(60,1658
static std::atomic_bool stopTravisOut;80,2264
void travisOut(81,2303
void setDefaultOrCLocale(106,3259
int main(117,3409

src/cpp-ethereum/test/libtesteth/TestHelper.cpp,1289
namespace dev34,1070
namespace eth36,1086
void mine(39,1103
void connectClients(49,1362
void mine(63,1648
void mine(74,1999
namespace test89,2549
string netIdToString(93,2568
eth::Network stringToNetId(107,2951
json_spirit::mObject fillJsonWithTransaction(124,3607
json_spirit::mObject fillJsonWithState(139,4361
json_spirit::mObject fillJsonWithState(145,4497
json_spirit::mArray exportLog(176,5497
u256 toInt(195,5956
byte toByte(208,6348
bytes importByteArray(221,6727
bytes importData(226,6865
void replaceLLLinState(237,7134
string compileLLL(251,7531
bytes importCode(281,8315
LogEntries importLog(298,8748
void checkOutput(318,9285
void checkStorage(337,9903
void checkLog(361,10913
void checkCallCreates(373,11303
void userDefinedTest(386,11885
void executeTests(434,13227
void copyFile(492,15323
RLPStream createRLPStreamFromTransactionFields(499,15523
LastHashes lastHashes(544,16589
dev::eth::BlockHeader constructHeader(552,16791
void updateEthashSeal(576,17502
	Listener* g_listener;584,17690
void Listener::registerListener(registerListener587,17716
void Listener::notifySuiteStarted(notifySuiteStarted592,17800
void Listener::notifyTestStarted(notifyTestStarted598,17917
void Listener::notifyTestFinished(notifyTestFinished604,18032

src/cpp-ethereum/test/libtesteth/BlockChainHelper.h,1984
using namespace std;28,919
using namespace json_spirit;29,940
using namespace dev;30,969
using namespace dev::eth;31,990
namespace dev 34,1018
namespace dev {  namespace test 34,1018
struct BlockStateUndefined 36,1053
class TestTransaction41,1167
	TestTransaction(45,1249
	Transaction const& transaction(46,1314
	json_spirit::mObject& jsonObject(47,1380
	json_spirit::mObject m_jsonTransaction;51,1612
	Transaction m_transaction;52,1653
class TestBlock55,1685
	void setPremine(67,2065
	void noteDirty(68,2153
	BlockHeader const& premineHeader(77,2432
	dev::bytes const& bytes(78,2622
	bytesConstRef receipts(79,2675
	AccountMap const& accountMap(80,2780
	State const& state(81,2843
	BlockHeader const& blockHeader(82,3012
	TransactionQueue const& transactionQueue(83,3077
	TransactionQueue & transactionQueue(84,3158
	vector<TestTransaction> const& testTransactions(85,3228
	vector<TestBlock> const& uncles(86,3316
	Address const& beneficiary(87,3378
	bool m_dirty;97,3787
	BlockHeader m_blockHeader;98,3802
	vector<TestBlock> m_uncles;99,3830
	std::unique_ptr<State> m_state;100,3859
	TransactionQueue m_transactionQueue;101,3892
	BlockQueue m_uncleQueue;102,3930
	dev::bytes m_bytes;103,3956
	std::unique_ptr<TransientDirectory> m_tempDirState;104,3977
	vector<TestTransaction> m_testTransactions;105,4030
	std::map<std::map106,4075
	std::map<std::string, bool> m_premineUpdate;106,4075
	BlockHeader m_premineHeader;107,4185
	AccountMap m_accountMap;108,4215
	RLPStream m_receipts;109,4275
class TestBlockChain112,4302
	TestBlockChain(115,4333
	TestBlock const& topBlock(121,4594
	BlockChain const& interface(122,4647
	BlockChain& interfaceUnsafe(123,4709
	TestBlock const& testGenesis(124,4771
	static eth::Network s_sealEngineNetwork;129,5018
	std::unique_ptr<BlockChain> m_blockChain;132,5070
	TestBlock m_genesisBlock;133,5113
	TestBlock m_lastBlock;134,5140
	std::unique_ptr<TransientDirectory> m_tempDirBlockchain;135,5164

src/cpp-ethereum/test/libtesteth/BlockChainHelper.cpp,1629
namespace dev35,1215
namespace test37,1231
TestTransaction::TestTransaction(40,1249
TestBlock::TestBlock(TestBlock46,1418
TestBlock::TestBlock(51,1464
TestBlock::TestBlock(68,2212
TestBlock::TestBlock(TestBlock95,2806
TestBlock& TestBlock::operator=(operator=100,2886
void TestBlock::setState(setState106,2992
void TestBlock::addTransaction(addTransaction111,3067
void TestBlock::addUncle(addUncle131,3597
void TestBlock::setUncles(setUncles137,3708
void TestBlock::premineUpdate(premineUpdate144,3840
void TestBlock::mine(mine178,5567
void TestBlock::setBlockHeader(setBlockHeader249,7931
BlockHeader TestBlock::constructBlock(constructBlock256,8070
dev::bytes TestBlock::createBlockRLPFromFields(createBlockRLPFromFields280,8833
void TestBlock::updateNonce(updateNonce335,10502
void TestBlock::verify(verify348,10872
void TestBlock::recalcBlockHeaderBytes(recalcBlockHeaderBytes376,12019
void TestBlock::copyStateFrom(copyStateFrom409,12905
void TestBlock::clearState(clearState418,13358
void TestBlock::populateFrom(populateFrom426,13514
TestBlockChain::TestBlockChain(TestBlockChain450,14232
void TestBlockChain::reset(reset455,14323
bool TestBlockChain::addBlock(addBlock471,15028
vector<TestBlock> TestBlockChain::syncUncles(syncUncles506,15898
TestTransaction TestTransaction::defaultTransaction(defaultTransaction534,16643
AccountMap TestBlockChain::defaultAccountMap(defaultAccountMap548,17173
json_spirit::mObject TestBlockChain::defaultGenesisBlockJson(defaultGenesisBlockJson555,17340
TestBlock TestBlockChain::defaultGenesisBlock(defaultGenesisBlock576,18884

src/cpp-ethereum/test/libtesteth/ImportTest.h,969
enum class testType32,942
	StateTests,34,964
	BlockChainTests,35,977
	GeneralStateTest,36,995
	Other37,1014
class ImportTest40,1025
	eth::State m_statePre;58,2023
	eth::State m_statePost;59,2047
	eth::LogEntries m_logs;60,2072
	eth::LogEntries m_logsExpected;61,2097
	typedef std::pair<eth::ExecutionResult,eth::ExecutionResult64,2140
	typedef std::pair<eth::ExecutionResult, eth::TransactionReceipt> execOutput;64,2140
	std::pair<std::pair65,2218
	eth::EnvInfo m_envInfo;67,2397
	eth::Transaction m_transaction;68,2422
	struct transactionToExecute71,2479
		transactionToExecute(73,2511
		int dataInd;75,2686
		int gasInd;76,2701
		int valInd;77,2715
		eth::Transaction transaction;78,2729
		eth::State postState;79,2761
		eth::Network netId;80,2785
	std::vector<transactionToExecute> m_transactions;82,2811
	using StateAndMap 83,2862
	using TrExpectSection 84,2927
	json_spirit::mObject& m_testObject;87,3188
	testType m_testType;88,3225

src/cpp-ethereum/test/libtesteth/TestOutputHelper.cpp,659
Timer TestOutputHelper::m_timer;33,1047
size_t TestOutputHelper::m_currTest 34,1080
size_t TestOutputHelper::m_maxTests 35,1121
string TestOutputHelper::m_currentTestName 36,1162
string TestOutputHelper::m_currentTestCaseName 37,1214
string TestOutputHelper::m_currentTestFileName 38,1270
std::vector<TestOutputHelper::execTimeName> TestOutputHelper::m_execTimeResults;39,1326
void TestOutputHelper::initTest(initTest40,1407
void TestOutputHelper::initTest(initTest52,1739
bool TestOutputHelper::passTest(passTest64,2091
void TestOutputHelper::finishTest(finishTest90,2835
void TestOutputHelper::printTestExecStats(printTestExecStats102,3105

src/cpp-ethereum/test/libtesteth/TestUtils.cpp,543
namespace dev34,1065
namespace test36,1081
bool dev::test::getCommandLineOption(getCommandLineOption45,1243
std::string dev::test::getCommandLineArgument(getCommandLineArgument55,1553
LoadTestFileFixture::LoadTestFileFixture(LoadTestFileFixture70,2038
void ParallelFixture::enumerateThreads(enumerateThreads75,2172
void BlockChainFixture::enumerateBlockchains(enumerateBlockchains89,2525
void ClientBaseFixture::enumerateClients(enumerateClients98,2817
void ParallelClientBaseFixture::enumerateClients(enumerateClients111,3360

src/cpp-ethereum/test/libtesteth/Stats.h,276
class Stats:Stats30,776
	struct Item35,867
		clock::duration duration;37,883
		int64_t gasUsed;38,911
		std::string name;39,930
	clock::time_point m_tp;51,1156
	std::string m_currentSuite;52,1181
	std::string m_currentTest;53,1210
	std::vector<Item> m_stats;54,1238

src/cpp-ethereum/test/libtesteth/TestUtils.h,449
#define ETH_CHECK_EQUAL(36,980
#define ETH_CHECK_EQUAL_COLLECTIONS(37,1069
#define ETH_REQUIRE(38,1202
struct LoadTestFileFixture40,1278
	LoadTestFileFixture(42,1307
	Json::Value m_json;45,1343
struct ParallelFixture48,1368
struct BlockChainFixture:BlockChainFixture53,1459
struct ClientBaseFixture:ClientBaseFixture58,1654
struct ParallelClientBaseFixture:ParallelClientBaseFixture70,2185
struct JsonRpcFixture:JsonRpcFixture75,2377

src/cpp-ethereum/test/libtesteth/TestHelper.h,414
struct ValueTooLarge:ValueTooLarge59,1566
struct MissingFields 60,1610
#define ETH_TEST_REQUIRE_NO_THROW(67,2035
#define ETH_TEST_CHECK_NO_THROW(93,3111
class ZeroGasPricer:ZeroGasPricer116,3858
	u256 ask(119,3914
	u256 bid(120,3972
class Listener174,6735
	virtual void suiteStarted(179,6793
	class ExecTimeGuard189,7224
		ExecTimeGuard(193,7283
		~ExecTimeGuard(194,7363
		void setGasUsed(197,7517

src/cpp-ethereum/test/libevm/vm.cpp,1262
FakeExtVM::FakeExtVM(36,1029
h160 FakeExtVM::create(create40,1254
boost::optional<eth::owning_bytes_ref> FakeExtVM::call(call49,1534
void FakeExtVM::set(set56,1790
void FakeExtVM::reset(reset64,2051
mObject FakeExtVM::exportEnv(exportEnv71,2264
EnvInfo FakeExtVM::importEnv(importEnv82,2710
mObject FakeExtVM::exportState(exportState103,3510
void FakeExtVM::importState(importState123,4037
mObject FakeExtVM::exportExec(exportExec144,4620
void FakeExtVM::importExec(importExec158,5061
mArray FakeExtVM::exportCallCreates(exportCallCreates190,5902
void FakeExtVM::importCallCreates(importCallCreates205,6299
eth::OnOpFunc FakeExtVM::simpleTrace(simpleTrace221,6871
namespace dev 284,9128
namespace dev { namespace test 284,9128
void doVMTests(286,9162
BOOST_AUTO_TEST_SUITE(447,13914
BOOST_AUTO_TEST_CASE(454,14070
BOOST_AUTO_TEST_CASE(459,14212
BOOST_AUTO_TEST_CASE(464,14376
BOOST_AUTO_TEST_CASE(469,14506
BOOST_AUTO_TEST_CASE(474,14662
BOOST_AUTO_TEST_CASE(479,14802
BOOST_AUTO_TEST_CASE(484,14962
BOOST_AUTO_TEST_CASE(489,15106
BOOST_AUTO_TEST_CASE(494,15234
BOOST_AUTO_TEST_CASE(499,15388
BOOST_AUTO_TEST_CASE(505,15572
BOOST_AUTO_TEST_CASE(511,15752
BOOST_AUTO_TEST_CASE(517,15942
BOOST_AUTO_TEST_CASE(556,17228

src/cpp-ethereum/test/libevm/vm.h,537
class FakeExtVM:FakeExtVM44,1267
	FakeExtVM(48,1339
	virtual u256 store(50,1403
	virtual void setStore(51,1491
	virtual bool exists(52,1589
	virtual u256 balance(53,1665
	virtual void suicide(54,1747
	virtual bytes const& codeAt(55,1887
	virtual size_t codeSizeAt(56,1976
	std::map<std::map75,3095
	std::map<Address, std::tuple<u256, u256, std::map<u256, u256>, bytes>> addresses;75,3095
	eth::Transactions callcreates;76,3178
	bytes thisTxData;77,3210
	bytes thisTxCode;78,3229
	u256 gas;79,3248
	u256 execGas;80,3259

src/cpp-ethereum/test/fuzzTesting/fuzzHelper.cpp,1001
namespace dev29,963
namespace test31,979
boost::random::mt19937 RandomCode::gen;34,997
int RandomCode::recursiveRLP(recursiveRLP45,1686
std::string RandomCode::rndRLPSequence(rndRLPSequence182,5687
std::string RandomCode::rndByteSequence(rndByteSequence191,5926
std::string RandomCode::generate(generate205,6327
std::string RandomCode::randomUniIntHex(randomUniIntHex248,7475
u256 RandomCode::randomUniInt(randomUniInt259,7795
void RandomCode::refreshSeed(refreshSeed267,7970
std::string RandomCode::getPushCode(getPushCode274,8215
std::string RandomCode::getPushCode(getPushCode281,8386
std::string RandomCode::fillArguments(fillArguments287,8518
RandomCodeOptions::RandomCodeOptions(370,11132
void RandomCodeOptions::setWeight(setWeight378,11372
void RandomCodeOptions::addAddress(addAddress384,11510
dev::Address RandomCodeOptions::getRandomAddress(getRandomAddress389,11614
void RandomCodeOptions::setWeights(setWeights399,11858
BOOST_FIXTURE_TEST_SUITE(407,12055

src/cpp-ethereum/test/fuzzTesting/createRandomTest.cpp,569
namespace dev 42,1534
namespace dev { namespace test 42,1534
int createRandomTest(43,1567
int checkRandomTest(138,4000
void fillRandomTest(174,4801
void dev::test::RandomCode::parseTestWithTypes(parseTestWithTypes209,5681
std::vector<std::string> dev::test::RandomCode::getTypes(getTypes286,8784
std::string const c_testExampleTransactionTest 291,8956
std::string const c_testExampleStateTest 310,9275
std::string const c_testExampleVMTest 357,10272
std::string const c_testExampleRLPTest 389,10962
std::string const c_testExampleBlockchainTest 397,11060

src/cpp-ethereum/test/fuzzTesting/fuzzHelper.h,1406
typedef boost::random::uniform_int_distribution<> boostIntDistrib;38,1031
typedef boost::random::discrete_distribution<> boostDescreteDistrib;39,1098
typedef boost::uniform_int<uint64_t> boostUint64Distrib;40,1167
typedef boost::random::variate_generator<boost::mt19937&, boostIntDistrib > boostIntGenerator;42,1225
typedef boost::random::variate_generator<boost::mt19937&, boostDescreteDistrib > boostWeightGenerator;43,1320
typedef boost::random::variate_generator<boost::mt19937&, boostUint64Distrib > boostUInt64Generator;44,1423
struct RandomCodeOptions46,1525
	bool useUndefinedOpCodes;54,1732
	int smartCodeProbability;55,1759
	boostDescreteDistrib opCodeProbability;56,1786
	std::map<std::map59,1856
	std::map<int, int> mapWeights;59,1856
	std::vector<dev::Address> addressList;60,1888
enum class SizeStrictness63,1932
	Strict,65,1960
	Random66,1969
struct RlpDebug69,1981
	std::string rlp;71,1999
	int insertions;72,2017
class RandomCode75,2038
	static boost::random::mt19937 gen;109,3434
	static boostIntDistrib opCodeDist;110,3494
	static boostIntDistrib opLengDist;111,3552
	static boostIntDistrib uniIntDist;112,3614
	static boostUint64Distrib uInt64Dist;113,3678
	static boostIntGenerator randUniIntGen;115,3733
	static boostIntGenerator randOpCodeGen;116,3823
	static boostIntGenerator randOpLengGen;117,3908
	static boostUInt64Generator randUInt64Gen;118,3994

src/cpp-ethereum/test/libp2p/capability.cpp,749
struct P2PFixture:P2PFixture37,1103
	P2PFixture(39,1148
	~P2PFixture(40,1216
class TestCapability:TestCapability43,1290
	TestCapability(46,1340
	virtual ~TestCapability(47,1548
	int countReceivedMessages(48,1578
	int testSum(49,1641
	static std::string name(50,1678
	static u256 version(51,1724
	static unsigned messageCount(52,1761
	void sendTestMessage(53,1820
	int m_cntReceivedMessages;58,1986
	int m_testSum;59,2014
bool TestCapability::interpret(interpret62,2034
class TestHostCapability:TestHostCapability71,2282
	TestHostCapability(74,2371
	virtual ~TestHostCapability(75,2412
	void sendTestMessage(77,2447
	std::pair<std::pair84,2636
	std::pair<int, int> retrieveTestData(84,2636
BOOST_FIXTURE_TEST_SUITE(99,3015

src/cpp-ethereum/test/libp2p/rlpx.cpp,501
struct RLPXTestFixture:RLPXTestFixture49,1488
	RLPXTestFixture(50,1538
	~RLPXTestFixture(51,1594
	Secp256k1PP* s_secp256k1;53,1618
BOOST_FIXTURE_TEST_SUITE(55,1648
BOOST_AUTO_TEST_CASE(192,7023
BOOST_AUTO_TEST_CASE(382,16631
BOOST_AUTO_TEST_CASE(467,21529
BOOST_AUTO_TEST_CASE(541,24478
BOOST_AUTO_TEST_CASE(599,26808
BOOST_AUTO_TEST_CASE(645,28680
BOOST_AUTO_TEST_CASE(741,32000
bytes generatePseudorandomPacket(801,34071
BOOST_AUTO_TEST_CASE(817,34448
BOOST_AUTO_TEST_CASE(882,36488

src/cpp-ethereum/test/libp2p/net.cpp,1504
struct NetFixture:NetFixture38,1129
	NetFixture(40,1174
	~NetFixture(41,1242
class TestHost:TestHost49,1418
	TestHost(52,1458
	virtual ~TestHost(53,1500
	void start(54,1553
	void doWork(55,1587
	void doneWorking(56,1618
	ba::io_service m_io;59,1695
struct TestNodeTable:TestNodeTable62,1721
	TestNodeTable(65,1779
	static std::vector<std::vector67,1946
	static std::vector<std::pair<KeyPair,unsigned>> createTestNodes(67,1946
	void pingTestNodes(83,2305
	void populateTestNodes(93,2593
	void reset(115,3202
struct TestNodeTableHost:TestNodeTableHost125,3347
	TestNodeTableHost(127,3391
	~TestNodeTableHost(128,3598
	void setup(130,3653
	void pingAll(132,3808
	void populateAll(134,3884
	void populate(136,3993
	KeyPair m_alias;138,4081
	shared_ptr<TestNodeTable> nodeTable;139,4099
	std::vector<std::vector140,4137
	std::vector<std::pair<KeyPair,unsigned>> testNodes;140,4137
	std::vector<shared_ptr<TestNodeTable>> nodeTables;141,4210
class TestUDPSocket:TestUDPSocket144,4266
	TestUDPSocket(147,4330
	void onDisconnected(149,4417
	void onReceived(150,4458
	shared_ptr<shared_ptr152,4595
	shared_ptr<UDPSocket<TestUDPSocket, 1024>> m_socket;152,4595
	bool success 154,4650
BOOST_AUTO_TEST_CASE(157,4677
BOOST_AUTO_TEST_CASE(193,5760
BOOST_AUTO_TEST_CASE(227,7029
BOOST_AUTO_TEST_CASE(255,8051
BOOST_AUTO_TEST_CASE(285,9030
BOOST_AUTO_TEST_CASE(292,9264
BOOST_AUTO_TEST_CASE(310,9647
BOOST_AUTO_TEST_SUITE_END(322,10004
BOOST_AUTO_TEST_CASE(381,11566

src/cpp-ethereum/test/libp2p/eip-8.cpp,666
BOOST_FIXTURE_TEST_SUITE(35,1099
class TestHandshake:TestHandshake122,7208
	TestHandshake(125,7260
	TestHandshake(127,7369
	bool completedKeyEstablishment(141,8053
BOOST_AUTO_TEST_CASE(160,8864
BOOST_AUTO_TEST_CASE(187,10228
BOOST_AUTO_TEST_CASE(217,11867
BOOST_AUTO_TEST_CASE(248,13522
BOOST_AUTO_TEST_CASE(274,14853
BOOST_AUTO_TEST_CASE(307,16778
void TestHandshake::checkAuthValuesEIP8(checkAuthValuesEIP8332,18342
void TestHandshake::checkAckValuesEIP8(checkAckValuesEIP8340,18939
#define throwErrorCode(347,19365
shared_ptr<TestHandshake> TestHandshake::runWithInput(runWithInput350,19476
void TestHandshake::transition(transition389,20833

src/cpp-ethereum/test/libp2p/peer.cpp,589
struct P2PFixture:P2PFixture36,1071
	P2PFixture(38,1116
	~P2PFixture(39,1184
class TestCap:TestCap42,1258
	TestCap(45,1301
	virtual ~TestCap(46,1462
	static std::string name(47,1485
	static u256 version(48,1544
	static unsigned messageCount(49,1581
	virtual bool interpret(52,1652
class TestHostCap:TestHostCap55,1755
	TestHostCap(58,1830
	virtual ~TestHostCap(59,1864
BOOST_FIXTURE_TEST_SUITE(63,1896
BOOST_AUTO_TEST_CASE(126,3596
BOOST_AUTO_TEST_CASE(138,3884
BOOST_AUTO_TEST_SUITE_END(203,5979
BOOST_AUTO_TEST_SUITE_END(280,8185
BOOST_AUTO_TEST_SUITE_END(306,8693

src/cpp-ethereum/test/libtestutils/Common.h,134
struct TestChannel:TestChannel33,867
struct TestChannel: public LogChannel  { static const char* name(33,867
#define ctest 34,938

src/cpp-ethereum/test/libtestutils/BlockChainLoader.h,274
class BlockChainLoader39,1178
	BlockChainLoader(42,1211
	eth::BlockChain const& bc(43,1323
	eth::State const& state(44,1376
	eth::Block const& block(45,1453
	TransientDirectory m_dir;48,1516
	std::unique_ptr<eth::BlockChain> m_bc;49,1543
	eth::Block m_block;50,1583

src/cpp-ethereum/test/libtestutils/BlockChainLoader.cpp,44
BlockChainLoader::BlockChainLoader(32,1002

src/cpp-ethereum/test/libtestutils/FixedClient.cpp,39
Block FixedClient::block(block28,857

src/cpp-ethereum/test/libtestutils/FixedClient.h,508
class FixedClient:FixedClient37,996
	FixedClient(40,1053
	virtual ~FixedClient(41,1153
	virtual void flushTransactions(44,1191
	virtual eth::BlockChain& bc(45,1237
	virtual eth::BlockChain const& bc(46,1348
	using ClientBase::block;47,1417
	virtual eth::Block preSeal(49,1501
	virtual eth::Block postSeal(50,1590
	virtual void setAuthor(51,1680
	virtual void prepareForTransaction(52,1786
	eth::BlockChain const& m_bc;55,1846
	eth::Block m_block;56,1876
	mutable SharedMutex x_stateDB;57,1897

src/cpp-ethereum/test/libtestutils/Common.cpp,389
const char* TestChannel::name(name33,998
std::string dev::test::getTestPath(getTestPath35,1049
int dev::test::randomNumber(randomNumber51,1348
Json::Value dev::test::loadJsonFromFile(loadJsonFromFile58,1543
std::string dev::test::toTestFilePath(toTestFilePath72,1959
std::string dev::test::getFolder(getFolder77,2083
std::string dev::test::getRandomPath(getRandomPath82,2210

src/cpp-ethereum/test/libethereum/BlockChainTestsBoost.cpp,1842
class frontierFixture 29,1034
class frontierFixture { public:	frontierFixture(29,1034
class homesteadFixture 30,1168
class homesteadFixture { public:	homesteadFixture(30,1168
class transitionFixture 31,1305
class transitionFixture { public: 	transitionFixture(31,1305
class eip150Fixture 32,1449
class eip150Fixture { public:	eip150Fixture(32,1449
BOOST_FIXTURE_TEST_SUITE(36,1607
BOOST_AUTO_TEST_CASE(38,1874
BOOST_AUTO_TEST_CASE(39,2054
BOOST_AUTO_TEST_SUITE_END(40,2234
BOOST_AUTO_TEST_CASE(46,2535
BOOST_AUTO_TEST_CASE(51,2758
BOOST_AUTO_TEST_CASE(52,2952
BOOST_AUTO_TEST_CASE(53,3136
BOOST_AUTO_TEST_CASE(54,3316
BOOST_AUTO_TEST_CASE(55,3500
BOOST_AUTO_TEST_CASE(56,3690
BOOST_AUTO_TEST_CASE(57,3886
BOOST_AUTO_TEST_CASE(58,4068
BOOST_AUTO_TEST_CASE(59,4242
BOOST_AUTO_TEST_CASE(60,4432
BOOST_AUTO_TEST_CASE(61,4606
BOOST_AUTO_TEST_SUITE_END(66,4818
BOOST_AUTO_TEST_CASE(72,5131
BOOST_AUTO_TEST_CASE(77,5361
BOOST_AUTO_TEST_CASE(78,5550
BOOST_AUTO_TEST_CASE(79,5743
BOOST_AUTO_TEST_CASE(80,5946
BOOST_AUTO_TEST_CASE(81,6139
BOOST_AUTO_TEST_CASE(92,6670
BOOST_AUTO_TEST_CASE(93,6858
BOOST_AUTO_TEST_CASE(94,7051
BOOST_AUTO_TEST_CASE(95,7250
BOOST_AUTO_TEST_CASE(96,7454
BOOST_AUTO_TEST_CASE(97,7645
BOOST_AUTO_TEST_CASE(98,7828
BOOST_AUTO_TEST_CASE(99,8027
BOOST_AUTO_TEST_CASE(100,8210
BOOST_AUTO_TEST_SUITE_END(105,8431
BOOST_AUTO_TEST_CASE(121,9015
BOOST_AUTO_TEST_CASE(132,9480
BOOST_AUTO_TEST_CASE(133,9644
BOOST_AUTO_TEST_CASE(134,9808
BOOST_AUTO_TEST_CASE(135,9982
BOOST_AUTO_TEST_CASE(146,10463
BOOST_AUTO_TEST_CASE(147,10623
BOOST_AUTO_TEST_CASE(148,10787
BOOST_AUTO_TEST_CASE(149,10957
BOOST_AUTO_TEST_CASE(150,11111
BOOST_AUTO_TEST_CASE(151,11287
BOOST_AUTO_TEST_CASE(152,11449
BOOST_AUTO_TEST_CASE(153,11619
BOOST_AUTO_TEST_CASE(158,11811
BOOST_AUTO_TEST_CASE(159,11965

src/cpp-ethereum/test/libethereum/StateUnitTests.cpp,106
namespace dev30,948
namespace test32,964
BOOST_FIXTURE_TEST_SUITE(35,982
BOOST_AUTO_TEST_CASE(42,1098

src/cpp-ethereum/test/libethereum/EthereumPeerTest.cpp,1796
class MockHostCapability:MockHostCapability28,892
	string name(31,962
	u256 version(32,1027
	unsigned messageCount(33,1072
	shared_ptr<Capability> newPeerCapability(34,1127
class MockSession:MockSession37,1287
	void start(40,1335
	void disconnect(41,1362
	void ping(43,1423
	bool isConnected(45,1450
	NodeID id(47,1503
	void sealAndSend(49,1547
	int rating(54,1649
	void addRating(55,1692
	void addNote(57,1734
	PeerSessionInfo info(62,1820
	chrono::steady_clock::time_point connectionTime(63,1958
	void registerCapability(65,2066
	void registerFraming(66,2161
	map<map68,2215
	map<CapDesc, shared_ptr<Capability>> const&  capabilities(68,2215
	shared_ptr<Peer> peer(70,2319
	chrono::steady_clock::time_point lastReceived(72,2392
	ReputationManager& repMan(74,2504
	ReputationManager m_repMan;76,2564
	map<map77,2593
	map<CapDesc, std::shared_ptr<Capability>> m_capabilities;77,2593
	bytes m_bytesSent;78,2652
	map<map79,2672
	map<string, string> m_notes;79,2672
class MockEthereumPeerObserver:MockEthereumPeerObserver83,2707
	void onPeerStatus(86,2781
	void onPeerTransactions(88,2844
	void onPeerBlockHeaders(90,2925
	void onPeerBlockBodies(92,3006
	void onPeerNewHashes(94,3086
	void onPeerNewBlock(96,3195
	void onPeerNodeData(98,3272
	void onPeerReceipts(100,3349
	void onPeerAborting(102,3426
class EthereumPeerTestFixture:EthereumPeerTestFixture105,3465
	EthereumPeerTestFixture(108,3530
	MockHostCapability hostCap;117,3817
	shared_ptr<MockSession> session;118,3846
	shared_ptr<MockEthereumPeerObserver> observer;119,3880
	uint8_t offset;120,3928
	EthereumPeer peer;121,3945
BOOST_FIXTURE_TEST_SUITE(124,3969
BOOST_AUTO_TEST_CASE(141,4567
BOOST_AUTO_TEST_CASE(156,5290
BOOST_AUTO_TEST_CASE(165,5682
BOOST_AUTO_TEST_CASE(173,5929

src/cpp-ethereum/test/libethereum/BlockChainTests.cpp,817
namespace dev 38,1277
namespace test 40,1294
struct ChainBranch44,1392
	ChainBranch(46,1413
	void reset(47,1515
	void restoreFromHistory(48,1573
	TestBlockChain blockchain;62,2084
	vector<TestBlock> importedBlocks;63,2112
	static void forceBlockchain(65,2149
	static void resetBlockchain(80,2869
	static eth::Network s_tempBlockchainNetwork;86,2992
eth::Network ChainBranch::s_tempBlockchainNetwork 89,3042
void doBlockchainTests(102,3890
void overwriteBlockHeaderForTest(413,14949
void overwriteUncleHeaderForTest(504,18956
void compareBlocks(630,24368
mArray writeTransactionsToJson(645,24919
mObject writeBlockHeaderToJson(657,25232
void checkExpectedException(679,26161
void checkJsonSectionForInvalidBlock(692,26722
void eraseJsonSectionForInvalidBlock(699,26927
void checkBlocks(708,27292

src/cpp-ethereum/test/libethereum/Block.cpp,126
BOOST_FIXTURE_TEST_SUITE(34,1075
BOOST_AUTO_TEST_CASE(51,1558
BOOST_AUTO_TEST_CASE(119,4177
BOOST_AUTO_TEST_CASE(204,7256

src/cpp-ethereum/test/libethereum/BlockChain.cpp,370
BOOST_FIXTURE_TEST_SUITE(36,1119
BOOST_AUTO_TEST_CASE(73,2173
BOOST_AUTO_TEST_CASE(116,3782
BOOST_AUTO_TEST_CASE(143,4518
BOOST_AUTO_TEST_CASE(297,9031
bool onBadwasCalled 342,10579
void onBad(343,10608
BOOST_AUTO_TEST_CASE(349,10685
BOOST_AUTO_TEST_CASE(397,11990
BOOST_AUTO_TEST_CASE(449,13509
BOOST_AUTO_TEST_CASE(479,14314
BOOST_AUTO_TEST_CASE(540,15872

src/cpp-ethereum/test/libethereum/Genesis.cpp,64
BOOST_FIXTURE_TEST_SUITE(40,1157
BOOST_AUTO_TEST_CASE(51,1544

src/cpp-ethereum/test/libethereum/StateTests.cpp,1342
namespace dev 40,1235
namespace dev {  namespace test 40,1235
void doStateTests(42,1270
class generaltestfixture98,2869
	generaltestfixture(101,2904
	void fillAllFilesInFolder(113,3297
BOOST_FIXTURE_TEST_SUITE(137,4410
BOOST_AUTO_TEST_CASE(141,4532
BOOST_AUTO_TEST_CASE(142,4569
BOOST_AUTO_TEST_CASE(143,4605
BOOST_AUTO_TEST_CASE(144,4654
BOOST_AUTO_TEST_CASE(145,4688
BOOST_AUTO_TEST_CASE(146,4727
BOOST_AUTO_TEST_CASE(147,4762
BOOST_AUTO_TEST_CASE(148,4799
BOOST_AUTO_TEST_CASE(149,4846
BOOST_AUTO_TEST_CASE(150,4879
BOOST_AUTO_TEST_CASE(151,4921
BOOST_AUTO_TEST_CASE(152,4958
BOOST_AUTO_TEST_CASE(153,4997
BOOST_AUTO_TEST_CASE(154,5035
BOOST_AUTO_TEST_CASE(155,5082
BOOST_AUTO_TEST_CASE(156,5124
BOOST_AUTO_TEST_CASE(157,5165
BOOST_AUTO_TEST_CASE(160,5221
BOOST_AUTO_TEST_CASE(161,5282
BOOST_AUTO_TEST_CASE(162,5335
BOOST_AUTO_TEST_CASE(163,5379
BOOST_AUTO_TEST_CASE(166,5447
BOOST_AUTO_TEST_CASE(167,5487
BOOST_AUTO_TEST_CASE(168,5539
BOOST_AUTO_TEST_CASE(169,5589
BOOST_AUTO_TEST_CASE(172,5646
BOOST_AUTO_TEST_CASE(173,5687
BOOST_AUTO_TEST_CASE(174,5730
BOOST_AUTO_TEST_CASE(175,5770
BOOST_AUTO_TEST_CASE(176,5812
BOOST_AUTO_TEST_CASE(177,5852
BOOST_AUTO_TEST_CASE(178,5889
BOOST_AUTO_TEST_CASE(181,5946
BOOST_AUTO_TEST_CASE(184,5999
BOOST_AUTO_TEST_CASE(185,6036
BOOST_AUTO_TEST_CASE(186,6079

src/cpp-ethereum/test/libethereum/TransactionQueue.cpp,281
BOOST_FIXTURE_TEST_SUITE(32,1022
BOOST_AUTO_TEST_CASE(65,2136
BOOST_AUTO_TEST_CASE(119,4556
BOOST_AUTO_TEST_CASE(150,5684
BOOST_AUTO_TEST_CASE(174,6664
BOOST_AUTO_TEST_CASE(180,6790
BOOST_AUTO_TEST_CASE(223,8336
BOOST_AUTO_TEST_CASE(234,8707
BOOST_AUTO_TEST_CASE(272,9842

src/cpp-ethereum/test/libethereum/GasPricer.cpp,595
namespace dev 36,1141
namespace dev {  namespace test 36,1141
void executeGasPricerTest(38,1176
BOOST_FIXTURE_TEST_SUITE(52,1857
BOOST_AUTO_TEST_CASE(65,2343
BOOST_AUTO_TEST_CASE(92,3409
BOOST_AUTO_TEST_CASE(99,3732
BOOST_AUTO_TEST_CASE(106,4067
BOOST_AUTO_TEST_CASE(111,4275
BOOST_AUTO_TEST_CASE(118,4579
BOOST_AUTO_TEST_CASE(125,4895
BOOST_AUTO_TEST_CASE(132,5220
BOOST_AUTO_TEST_CASE(139,5557
BOOST_AUTO_TEST_CASE(146,5867
BOOST_AUTO_TEST_CASE(153,6189
BOOST_AUTO_TEST_CASE(160,6516
BOOST_AUTO_TEST_CASE(167,6837
BOOST_AUTO_TEST_CASE(174,7164
BOOST_AUTO_TEST_CASE(181,7487

src/cpp-ethereum/test/libethereum/BlockChainInsert.cpp,466
namespace dev 38,1303
namespace test 40,1320
class TestClient44,1405
	TestClient(47,1432
	void seal(59,1989
	BlockChain& bc(73,2307
	OverlayDB& db(74,2342
	void sealAndImport(76,2382
	void import(85,2613
	void insert(90,2700
	SealEngineFace* sealer(99,2962
	string m_path;101,3025
	OverlayDB m_stateDB;102,3041
	BlockChain m_bc;103,3063
	Notified<bytes> sealed;104,3081
h256s subs(107,3110
void syncStateTrie(126,3562
BOOST_AUTO_TEST_CASE(152,4129

src/cpp-ethereum/test/libethereum/Transaction.cpp,124
BOOST_FIXTURE_TEST_SUITE(31,992
BOOST_AUTO_TEST_CASE(39,1442
BOOST_AUTO_TEST_CASE(52,1844
BOOST_AUTO_TEST_CASE(120,4840

src/cpp-ethereum/test/libethereum/ClientBase.cpp,34
BOOST_FIXTURE_TEST_SUITE(34,1077

src/cpp-ethereum/test/libethereum/TransactionTests.cpp,471
namespace dev 35,1122
namespace dev {  namespace test 35,1122
void doTransactionTests(37,1157
BOOST_AUTO_TEST_SUITE(163,6989
BOOST_AUTO_TEST_CASE(170,7222
BOOST_AUTO_TEST_CASE(175,7445
BOOST_AUTO_TEST_CASE(180,7647
BOOST_AUTO_TEST_CASE(185,7838
BOOST_AUTO_TEST_CASE(190,8076
BOOST_AUTO_TEST_CASE(195,8276
BOOST_AUTO_TEST_CASE(200,8447
BOOST_AUTO_TEST_CASE(212,8993
BOOST_AUTO_TEST_CASE(224,9499
BOOST_AUTO_TEST_CASE(238,9972
BOOST_AUTO_TEST_CASE(252,10416

src/cpp-ethereum/test/libdevcrypto/trie.cpp,410
static unsigned fac(33,1022
using dev::operator <<;operator <<;38,1100
BOOST_AUTO_TEST_CASE(64,1623
BOOST_AUTO_TEST_CASE(131,3784
BOOST_AUTO_TEST_CASE(198,5858
h256 stringMapHash256(284,8434
bytes stringMapRlp256(292,8674
BOOST_AUTO_TEST_CASE(300,8913
BOOST_AUTO_TEST_CASE(447,12249
BOOST_AUTO_TEST_CASE(493,13151
template<typename Trie> void perfTestTrie(568,15074
BOOST_AUTO_TEST_CASE(605,15910

src/cpp-ethereum/test/libdevcrypto/MemTrie.h,109
class MemTrie35,934
	MemTrie(38,958
	~MemTrie(39,989
	h256 hash256(41,1003
	MemTrieNode* m_root;51,1238

src/cpp-ethereum/test/libdevcrypto/crypto.cpp,1066
struct DevcryptoTestFixture:DevcryptoTestFixture51,1512
	DevcryptoTestFixture(52,1567
	Secp256k1PP* s_secp256k1;54,1629
static CryptoPP::AutoSeededRandomPool& rng(58,1718
static CryptoPP::OID& curveOID(64,1829
static CryptoPP::DL_GroupParameters_EC<CryptoPP::ECP>& params(70,1950
BOOST_AUTO_TEST_CASE(76,2114
BOOST_AUTO_TEST_CASE(82,2370
BOOST_AUTO_TEST_CASE(91,2701
BOOST_AUTO_TEST_CASE(97,2804
BOOST_AUTO_TEST_CASE(106,3003
BOOST_AUTO_TEST_CASE(121,4029
BOOST_AUTO_TEST_CASE(129,4279
BOOST_AUTO_TEST_CASE(144,4956
BOOST_AUTO_TEST_CASE(159,5265
BOOST_AUTO_TEST_CASE(167,5440
BOOST_AUTO_TEST_CASE(176,5605
BOOST_AUTO_TEST_CASE(194,6100
BOOST_AUTO_TEST_CASE(225,7027
BOOST_AUTO_TEST_CASE(254,7886
BOOST_AUTO_TEST_CASE(270,8375
BOOST_AUTO_TEST_CASE(296,9329
BOOST_AUTO_TEST_CASE(311,9707
BOOST_AUTO_TEST_CASE(359,11155
BOOST_AUTO_TEST_CASE(378,11529
BOOST_AUTO_TEST_CASE(389,11876
BOOST_AUTO_TEST_CASE(582,18475
BOOST_AUTO_TEST_CASE(604,19338
BOOST_AUTO_TEST_CASE(618,19717
BOOST_AUTO_TEST_CASE(693,21454
BOOST_AUTO_TEST_CASE(733,22864

src/cpp-ethereum/test/libdevcrypto/MemTrie.cpp,2154
namespace dev29,871
#define ENABLE_DEBUG_PRINT 32,888
#define APPEND_CHILD 37,958
class MemTrieNode40,995
	MemTrieNode(43,1023
	virtual ~MemTrieNode(44,1041
	void debugPrint(52,1336
	h256 hash256(56,1578
	bytes rlp(57,1656
	void mark(58,1720
	mutable h256 m_hash256;70,2059
static const std::string c_nullString;73,2088
class TrieExtNode:TrieExtNode75,2128
	TrieExtNode(78,2176
	bytes m_ext;80,2252
class TrieBranchNode:TrieBranchNode83,2270
	TrieBranchNode(86,2321
	TrieBranchNode(91,2444
	TrieBranchNode(97,2633
	virtual ~TrieBranchNode(104,2812
	virtual void debugPrintBody(111,2906
	std::array<std::array136,3689
	std::array<MemTrieNode*, 16> m_nodes;136,3689
	std::string m_value;137,3728
class TrieLeafNode:TrieLeafNode140,3754
	TrieLeafNode(143,3803
	virtual void debugPrintBody(146,3927
	virtual std::string const& at(158,4182
	bool contains(164,4519
	std::string m_value;166,4652
class TrieInfixNode:TrieInfixNode169,4678
	TrieInfixNode(172,4728
	virtual ~TrieInfixNode(173,4820
	virtual void debugPrintBody(176,4889
	virtual std::string const& at(183,5055
	bool contains(189,5439
	MemTrieNode* m_next;191,5573
void MemTrieNode::putRLP(putRLP194,5599
void TrieBranchNode::makeRLP(makeRLP204,5798
void TrieLeafNode::makeRLP(makeRLP215,6004
void TrieInfixNode::makeRLP(makeRLP220,6137
MemTrieNode* MemTrieNode::newBranch(newBranch228,6322
std::string const& TrieBranchNode::at(at247,7061
MemTrieNode* TrieBranchNode::insert(insert256,7276
MemTrieNode* TrieBranchNode::remove(remove270,7626
MemTrieNode* TrieBranchNode::rejig(rejig287,7926
byte TrieBranchNode::activeBranch(activeBranch324,8604
MemTrieNode* TrieInfixNode::insert(insert338,8811
MemTrieNode* TrieInfixNode::remove(remove376,9629
MemTrieNode* TrieLeafNode::insert(insert403,10123
MemTrieNode* TrieLeafNode::remove(remove421,10446
MemTrie::~MemTrie(~MemTrie431,10579
h256 MemTrie::hash256(hash256436,10620
bytes MemTrie::rlp(rlp441,10725
void MemTrie::debugPrint(debugPrint446,10817
std::string const& MemTrie::at(at454,10916
void MemTrie::insert(insert462,11086
void MemTrie::remove(remove470,11321

src/cpp-ethereum/test/libdevcrypto/SecretStore.cpp,185
BOOST_AUTO_TEST_SUITE(36,1168
BOOST_AUTO_TEST_CASE(65,2098
BOOST_AUTO_TEST_CASE(108,3692
BOOST_AUTO_TEST_CASE(132,4429
BOOST_AUTO_TEST_CASE(157,5209
BOOST_AUTO_TEST_CASE(182,6051

src/cpp-ethereum/test/libdevcrypto/AES.cpp,180
BOOST_AUTO_TEST_SUITE(30,964
BOOST_AUTO_TEST_CASE(42,1460
BOOST_AUTO_TEST_CASE(50,1894
BOOST_AUTO_TEST_CASE(58,2339
BOOST_AUTO_TEST_CASE(65,2702
BOOST_AUTO_TEST_CASE(72,2913

src/cpp-ethereum/test/libdevcrypto/hexPrefix.cpp,61
BOOST_AUTO_TEST_SUITE(32,1030
BOOST_AUTO_TEST_CASE(60,1823

src/cpp-ethereum/test/libdevcore/rlp.cpp,373
namespace dev39,1128
	namespace test41,1144
		enum class RlpType45,1265
			Valid,47,1290
			Invalid,48,1300
			Test49,1312
		void doRlpTests(52,1326
		void buildRLP(161,4439
		void checkRLPAgainstJson(182,4896
void runRlpTest(237,6289
BOOST_FIXTURE_TEST_SUITE(264,7088
BOOST_AUTO_TEST_CASE(288,7623
BOOST_AUTO_TEST_CASE(293,7709
BOOST_AUTO_TEST_CASE(298,7781

src/cpp-ethereum/test/libdevcore/Base36.cpp,93
BOOST_FIXTURE_TEST_SUITE(30,923
BOOST_AUTO_TEST_CASE(39,1125
BOOST_AUTO_TEST_CASE(46,1271

src/cpp-ethereum/test/libdevcore/FixedHash.cpp,297
namespace dev29,897
namespace test31,913
BOOST_FIXTURE_TEST_SUITE(34,931
BOOST_AUTO_TEST_CASE(54,1369
BOOST_AUTO_TEST_CASE(64,1572
BOOST_AUTO_TEST_CASE(75,1777
BOOST_AUTO_TEST_CASE(86,1979
BOOST_AUTO_TEST_CASE(94,2113
void incrementSingleIteration(104,2318
BOOST_AUTO_TEST_CASE(129,2876

src/cpp-ethereum/test/libdevcore/CommonJS.cpp,306
BOOST_FIXTURE_TEST_SUITE(31,969
BOOST_AUTO_TEST_CASE(46,1360
BOOST_AUTO_TEST_CASE(56,1674
BOOST_AUTO_TEST_CASE(66,1959
BOOST_AUTO_TEST_CASE(76,2264
BOOST_AUTO_TEST_CASE(86,2514
BOOST_AUTO_TEST_CASE(96,2771
BOOST_AUTO_TEST_CASE(107,3136
BOOST_AUTO_TEST_CASE(116,3557
BOOST_AUTO_TEST_CASE(130,4214

src/cpp-ethereum/test/libdevcore/core.cpp,63
BOOST_FIXTURE_TEST_SUITE(30,940
BOOST_AUTO_TEST_CASE(44,1575

src/cpp-ethereum/test/libdevcore/RangeMask.cpp,228
namespace dev29,896
namespace test31,912
BOOST_FIXTURE_TEST_SUITE(34,930
BOOST_AUTO_TEST_CASE(52,1379
BOOST_AUTO_TEST_CASE(73,1949
BOOST_AUTO_TEST_CASE(92,2447
BOOST_AUTO_TEST_CASE(115,3119
BOOST_AUTO_TEST_CASE(132,3457

src/cpp-ethereum/test/libethcore/commonjs.cpp,93
BOOST_FIXTURE_TEST_SUITE(32,986
BOOST_AUTO_TEST_CASE(42,1208
BOOST_AUTO_TEST_CASE(50,1395

src/cpp-ethereum/test/libethcore/keymanager.cpp,216
BOOST_FIXTURE_TEST_SUITE(33,1036
BOOST_AUTO_TEST_CASE(42,1261
BOOST_AUTO_TEST_CASE(51,1494
BOOST_AUTO_TEST_CASE(61,1815
BOOST_AUTO_TEST_CASE(84,2463
BOOST_AUTO_TEST_CASE(103,2854
BOOST_AUTO_TEST_CASE(118,3186

src/cpp-ethereum/test/libethcore/difficulty.cpp,332
std::string const c_testDifficulty 34,1112
void checkCalculatedDifficulty(44,1360
void fillDifficulty(104,3337
void testDifficulty(155,4998
BOOST_AUTO_TEST_SUITE(190,6240
BOOST_AUTO_TEST_CASE(206,6699
BOOST_AUTO_TEST_CASE(220,7106
BOOST_AUTO_TEST_CASE(234,7529
BOOST_AUTO_TEST_CASE(248,7952
BOOST_AUTO_TEST_CASE(311,10250

src/cpp-ethereum/test/libethcore/icap.cpp,213
BOOST_FIXTURE_TEST_SUITE(31,950
BOOST_AUTO_TEST_CASE(40,1208
BOOST_AUTO_TEST_CASE(47,1423
BOOST_AUTO_TEST_CASE(54,1639
BOOST_AUTO_TEST_CASE(61,1857
BOOST_AUTO_TEST_CASE(68,2087
BOOST_AUTO_TEST_CASE(75,2318

src/cpp-ethereum/test/libethcore/dagger.cpp,45
using dev::operator <<;operator <<;38,1138

src/cpp-ethereum/test/external-dependencies/boost.cpp,33
BOOST_FIXTURE_TEST_SUITE(29,935

src/cpp-ethereum/utils/json_spirit/json_spirit_reader_template.h,3939
#define JSON_SPIRIT_READER_TEMPLATE2,37
    #define spirit_namespace 24,835
    #define spirit_namespace 31,1147
namespace json_spirit34,1201
        typedef typename String_type::value_type 89,3123
        typedef typename String_type::const_iterator 126,4336
        typedef typename String_type::const_iterator 164,5312
    class Semantic_actions 196,6518
        typedef typename Value_type::Config_type Config_type;200,6569
        typedef typename Config_type::String_type String_type;201,6632
        typedef typename Config_type::Object_type Object_type;202,6696
        typedef typename Config_type::Array_type Array_type;203,6760
        typedef typename String_type::value_type Char_type;204,6822
        Semantic_actions(206,6885
        void begin_obj(212,7014
        void end_obj(219,7158
        void begin_array(226,7283
        void end_array(233,7433
        void new_name(240,7560
        void new_str(247,7757
        void new_true(252,7906
        void new_false(259,8078
        void new_null(266,8253
        void new_int(273,8433
        void new_uint64(278,8533
        void new_real(283,8639
        Value_type* add_first(293,8920
        void begin_compound(303,9180
        void end_compound(319,9618
        Value_type* add_to_current(329,9845
        Value_type& value_;347,10398
        Value_type* current_p_;348,10492
        std::vector< Value_type* > stack_;350,10600
        String_type name_;352,10685
    class Json_grammer 370,11235
        typedef Semantic_actions< Value_type,374,11357
        typedef Semantic_actions< Value_type, Iter_type > Semantic_actions_t;374,11357
        Json_grammer(376,11438
        static void throw_not_value(381,11566
        static void throw_not_array(386,11708
        static void throw_not_object(391,11851
        static void throw_not_pair(396,11996
        static void throw_not_colon(401,12136
        static void throw_not_string(406,12283
        class definition412,12466
            definition(416,12522
                typedef typename Value_type::String_type::value_type 420,12642
                typedef boost::function< void(425,12879
                typedef boost::function< void(426,12965
                typedef boost::function< void(427,13050
                typedef boost::function< void(428,13136
                typedef boost::function< void(429,13221
            spirit_namespace::rule< ScannerT > json_,505,16670
            spirit_namespace::rule< ScannerT > json_, object_,505,16670
            spirit_namespace::rule< ScannerT > json_, object_, members_,505,16670
            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_,505,16670
            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_, array_,505,16670
            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_, array_, elements_,505,16670
            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_, array_, elements_, value_,505,16670
            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_, array_, elements_, value_, string_,505,16670
            spirit_namespace::rule< ScannerT > json_, object_, members_, pair_, array_, elements_, value_, string_, number_;505,16670
            const spirit_namespace::rule< ScannerT >& start(507,16798
        Semantic_actions_t& actions_;514,17041
        typedef spirit_namespace::position_iterator< Iter_type > Posn_iter_t;539,18027
    struct Multi_pass_iters577,19136
        typedef typename Istream_type::char_type Char_type;579,19172
        typedef std::istream_iterator< Char_type,580,19233
        typedef std::istream_iterator< Char_type, Char_type > istream_iter;580,19233
        typedef spirit_namespace::multi_pass< istream_iter > Mp_iter;581,19310
        Multi_pass_iters(583,19383
        Mp_iter begin_;591,19653
        Mp_iter end_;592,19678

src/cpp-ethereum/utils/json_spirit/json_spirit_reader.h,32
#define JSON_SPIRIT_READER2,28

src/cpp-ethereum/utils/json_spirit/json_spirit_error_position.h,306
#define JSON_SPIRIT_ERROR_POSITION2,36
    struct Error_position21,608
        Error_position(23,642
        Error_position(24,669
        unsigned int line_;26,824
        unsigned int column_;27,853
        std::string reason_;28,884
    inline bool Error_position::operator==(operator==44,1232

src/cpp-ethereum/utils/json_spirit/json_spirit_writer.h,32
#define JSON_SPIRIT_WRITER2,28

src/cpp-ethereum/utils/json_spirit/json_spirit_stream_reader.h,635
#define JSON_SPIRIT_READ_STREAM2,33
    class Stream_reader22,669
        Stream_reader(26,716
        bool read_next(31,809
        typedef Multi_pass_iters< Istream_type > Mp_iters;38,963
        Mp_iters iters_;40,1025
    class Stream_reader_thrower44,1115
        Stream_reader_thrower(48,1170
        void read_next(55,1379
        typedef Multi_pass_iters< Istream_type > Mp_iters;62,1545
        typedef spirit_namespace::position_iterator< typename Mp_iters::Mp_iter > Posn_iter_t;63,1605
        Mp_iters iters_;65,1703
        Posn_iter_t posn_begin_,66,1729
        Posn_iter_t posn_begin_, posn_end_;66,1729

src/cpp-ethereum/utils/json_spirit/json_spirit_utils.h,159
#define JSON_SPIRIT_UTILS2,27
    typedef std::map< std::string, Value > Mapped_obj;40,986
    typedef std::map< std::wstring, wValue > wMapped_obj;43,1074

src/cpp-ethereum/utils/json_spirit/json_spirit_value.h,4278
#define JSON_SPIRIT_VALUE2,27
    enum Value_type{Value_type26,556
    enum Value_type{ obj_type,26,556
    enum Value_type{ obj_type, array_type,26,556
    enum Value_type{ obj_type, array_type, str_type,26,556
    enum Value_type{ obj_type, array_type, str_type, bool_type,26,556
    enum Value_type{ obj_type, array_type, str_type, bool_type, int_type,26,556
    enum Value_type{ obj_type, array_type, str_type, bool_type, int_type, real_type,26,556
    enum Value_type{ obj_type, array_type, str_type, bool_type, int_type, real_type, null_type 26,556
    class Value_impl30,858
        typedef Config Config_type;34,902
        typedef typename Config::String_type String_type;35,939
        typedef typename Config::Object_type Object;36,998
        typedef typename Config::Array_type Array;37,1052
        typedef typename String_type::const_pointer Const_str_ptr;38,1104
        static const Value_impl null;77,2622
        typedef boost::variant< String_type,83,2739
                                boost::recursive_wrapper<boost::recursive_wrapper84,2786
                                boost::recursive_wrapper< Object >, boost::recursive_wrapper<boost::recursive_wrapper84,2786
                                bool,85,2891
                                bool, boost::int64_t,85,2891
                                bool, boost::int64_t, double > Variant;85,2891
        Value_type type_;87,2966
        Variant v_;88,2993
        bool is_uint64_;89,3014
    struct Pair_impl95,3105
        typedef typename Config::String_type String_type;97,3134
        typedef typename Config::Value_type Value_type;98,3193
        String_type name_;104,3384
        Value_type value_;105,3412
    struct Config_vector109,3480
        typedef String String_type;111,3513
        typedef Value_impl< Config_vector > Value_type;112,3550
        typedef Pair_impl < Config_vector > Pair_type;113,3607
        typedef std::vector< Value_type > Array_type;114,3663
        typedef std::vector< Pair_type > Object_type;115,3718
        static Value_type& add(117,3775
        static String_type get_name(124,4015
        static Value_type get_value(129,4149
    typedef Config_vector< std::string > Config;137,4305
    typedef Config::Value_type  Value;139,4357
    typedef Config::Pair_type   Pair;140,4397
    typedef Config::Object_type Object;141,4436
    typedef Config::Array_type  Array;142,4477
    typedef Config_vector< std::wstring > wConfig;148,4582
    typedef wConfig::Value_type  wValue;150,4636
    typedef wConfig::Pair_type   wPair;151,4678
    typedef wConfig::Object_type wObject;152,4719
    typedef wConfig::Array_type  wArray;153,4762
    struct Config_map159,4866
        typedef String String_type;161,4896
        typedef Value_impl< Config_map > Value_type;162,4933
        typedef std::vector< Value_type > Array_type;163,4987
        typedef std::map< String_type,164,5042
        typedef std::map< String_type, Value_type > Object_type;164,5042
        typedef typename Object_type::value_type Pair_type;165,5108
        static Value_type& add(167,5171
        static String_type get_name(172,5354
        static Value_type get_value(177,5488
    typedef Config_map< std::string > mConfig;185,5644
    typedef mConfig::Value_type  mValue;187,5694
    typedef mConfig::Object_type mObject;188,5736
    typedef mConfig::Array_type  mArray;189,5779
    typedef Config_map< std::wstring > wmConfig;195,5886
    typedef wmConfig::Value_type  wmValue;197,5938
    typedef wmConfig::Object_type wmObject;198,5982
    typedef wmConfig::Array_type  wmArray;199,6027
    Value_impl< Config >& Value_impl< Config >::operator=(operator=298,8425
    bool Value_impl< Config >::operator==(operator==310,8738
    bool Pair_impl< Config >::operator==(operator==444,12087
    namespace internal_468,12639
        struct Type_to_type471,12703
        int get_value(476,12791
        boost::int64_t get_value(482,12959
        boost::uint64_t get_value(488,13151
        double get_value(494,13346
        typename Value::String_type get_value(500,13521
        typename Value::Array get_value(506,13737
        typename Value::Object get_value(512,13943
        bool get_value(518,14149

src/cpp-ethereum/utils/json_spirit/json_spirit_writer_template.h,1199
#define JSON_SPIRIT_WRITER_TEMPLATE2,37
namespace json_spirit15,332
        typedef typename String_type::const_iterator 63,1823
        typedef typename String_type::value_type 64,1888
    class Generator95,2696
        typedef typename Value_type::Config_type Config_type;97,2724
        typedef typename Config_type::String_type String_type;98,2787
        typedef typename Config_type::Object_type Object_type;99,2851
        typedef typename Config_type::Array_type Array_type;100,2915
        typedef typename String_type::value_type Char_type;101,2977
        typedef typename Object_type::value_type Obj_member_type;102,3038
        Generator(106,3122
        void output(116,3360
        void output(132,4115
        void output(137,4237
        void output(142,4358
        void output_int(149,4594
        void output(161,4871
        void output(166,4994
        void output_array_or_obj(172,5145
        void indent(197,5792
        void space(207,5999
        void new_line(212,6084
        Ostream_type& os_;219,6293
        int indentation_level_;220,6321
        bool pretty_;221,6354
        typedef typename Value_type::String_type::value_type 233,6739

src/cpp-ethereum/utils/json_spirit/json_spirit_reader.cpp,1105
bool json_spirit::read(read11,269
void json_spirit::read_or_throw(read_or_throw16,376
bool json_spirit::read(read21,494
void json_spirit::read_or_throw(read_or_throw26,598
bool json_spirit::read(read31,713
void json_spirit::read_or_throw(read_or_throw36,875
bool json_spirit::read(read43,1088
void json_spirit::read_or_throw(read_or_throw48,1197
bool json_spirit::read(read53,1317
void json_spirit::read_or_throw(read_or_throw58,1423
bool json_spirit::read(read63,1540
void json_spirit::read_or_throw(read_or_throw68,1705
bool json_spirit::read(read75,1899
void json_spirit::read_or_throw(read_or_throw80,2007
bool json_spirit::read(read85,2126
void json_spirit::read_or_throw(read_or_throw90,2231
bool json_spirit::read(read95,2347
void json_spirit::read_or_throw(read_or_throw100,2510
bool json_spirit::read(read107,2724
void json_spirit::read_or_throw(read_or_throw112,2834
bool json_spirit::read(read117,2955
void json_spirit::read_or_throw(read_or_throw122,3062
bool json_spirit::read(read127,3180
void json_spirit::read_or_throw(read_or_throw132,3346

src/cpp-ethereum/utils/json_spirit/json_spirit_writer.cpp,836
void json_spirit::write(write9,237
void json_spirit::write_formatted(write_formatted14,349
std::string json_spirit::write(write19,470
std::string json_spirit::write_formatted(write_formatted24,574
void json_spirit::write(write31,719
void json_spirit::write_formatted(write_formatted36,833
std::wstring json_spirit::write(write41,956
std::wstring json_spirit::write_formatted(write_formatted46,1063
void json_spirit::write(write53,1189
void json_spirit::write_formatted(write_formatted58,1302
std::string json_spirit::write(write63,1424
std::string json_spirit::write_formatted(write_formatted68,1529
void json_spirit::write(write75,1675
void json_spirit::write_formatted(write_formatted80,1790
std::wstring json_spirit::write(write85,1914
std::wstring json_spirit::write_formatted(write_formatted90,2022

src/cpp-ethereum/utils/json_spirit/json_spirit.h,25
#define JSON_SPIRIT2,21

src/cpp-ethereum/utils/libscrypt/sysendian.h,254
#define _SYSENDIAN_H_30,1484
#undef HAVE_SYS_ENDIAN_H35,1604
  #define INLINE 46,1731
  #define INLINE 48,1763
be32dec(52,1818
be32enc(61,2021
be64dec(72,2205
be64enc(83,2526
le32dec(98,2814
le32enc(107,3017
le64dec(118,3201
le64enc(129,3522

src/cpp-ethereum/utils/libscrypt/libscrypt.h,269
#define _CRYPTO_SCRYPT_H_4,34
#define SCRYPT_HASH_LEN 44,1298
#define SCRYPT_SAFE_N 47,1391
#define SCRYPT_SALT_LEN 50,1508
#define SCRYPT_MCF_LEN 51,1573
#define SCRYPT_MCF_ID 52,1628
#define SCRYPT_N 53,1656
#define SCRYPT_r 54,1679
#define SCRYPT_p 55,1698

src/cpp-ethereum/utils/libscrypt/sha256.h,323
#define _SHA256_H_30,1457
typedef struct libscrypt_SHA256Context 36,1522
	uint32_t state[state37,1563
	uint32_t count[count38,1583
	unsigned char buf[buf39,1603
} SHA256_CTX;40,1627
typedef struct libscrypt_HMAC_SHA256Context 42,1642
	SHA256_CTX ictx;43,1688
	SHA256_CTX octx;44,1706
} HMAC_SHA256_CTX;45,1724

src/cpp-ethereum/utils/libscrypt/b64.h,59
#define b64_encode_len(4,74
#define b64_decode_len(5,118

src/cpp-ethereum/libp2p/RLPXPacket.h,362
struct RLPXInvalidPacket:RLPXInvalidPacket32,849
class RLPXPacket39,1122
	RLPXPacket(43,1203
	RLPXPacket(46,1405
	RLPXPacket(49,1672
	bytes const& type(51,1760
	bytes const& data(53,1807
	uint8_t cap(55,1854
	size_t size(57,1895
	bool append(60,2088
	virtual bool isValid(62,2256
	uint8_t m_cap;65,2483
	bytes m_type;66,2499
	bytes m_data;67,2514

src/cpp-ethereum/libp2p/Common.h,3886
namespace ba 41,1212
namespace dev44,1273
namespace p2p50,1319
extern const unsigned c_protocolVersion;54,1371
extern const unsigned c_defaultIPPort;55,1412
extern const NodeIPEndpoint UnspecifiedNodeIPEndpoint;59,1486
extern const Node UnspecifiedNode;60,1541
struct NetworkStartRequired:NetworkStartRequired76,2014
struct InvalidPublicIPAddress:InvalidPublicIPAddress77,2070
struct InvalidHostIPAddress:InvalidHostIPAddress78,2128
struct NetWarn:NetWarn80,2185
struct NetNote:NetNote81,2283
struct NetImpolite:NetImpolite82,2381
struct NetMessageSummary:NetMessageSummary83,2483
struct NetConnect:NetConnect84,2591
struct NetMessageDetail:NetMessageDetail85,2693
struct NetTriviaSummary:NetTriviaSummary86,2800
struct NetTriviaDetail:NetTriviaDetail87,2908
struct NetAllDetail:NetAllDetail88,3015
struct NetRight:NetRight89,3119
struct NetLeft:NetLeft90,3219
struct NetP2PWarn:NetP2PWarn91,3318
struct NetP2PNote:NetP2PNote92,3419
struct NetP2PConnect:NetP2PConnect93,3520
enum PacketType95,3626
	HelloPacket 97,3644
	DisconnectPacket,98,3662
	PingPacket,99,3681
	PongPacket,100,3694
	GetPeersPacket,101,3707
	PeersPacket,102,3724
	UserPacket 103,3738
enum DisconnectReason106,3761
	DisconnectRequested 108,3785
	TCPError,109,3811
	BadProtocol,110,3822
	UselessPeer,111,3836
	TooManyPeers,112,3850
	DuplicatePeer,113,3865
	IncompatibleProtocol,114,3881
	NullIdentity,115,3904
	ClientQuit,116,3919
	UnexpectedIdentity,117,3932
	LocalIdentity,118,3953
	PingTimeout,119,3969
	UserReason 120,3983
	NoDisconnect 121,4003
inline bool isPermanentProblem(124,4030
using CapDesc 142,4371
using CapDescSet 143,4417
using CapDescs 144,4455
struct PeerSessionInfo151,4709
	NodeID const id;153,4734
	std::string const clientVersion;154,4752
	std::string const host;155,4786
	unsigned short const port;156,4811
	std::chrono::steady_clock::duration lastPing;157,4839
	std::set<CapDesc> const caps;158,4886
	unsigned socketId;159,4917
	std::map<std::map160,4937
	std::map<std::string, std::string> notes;160,4937
	unsigned const protocolVersion;161,4980
using PeerSessionInfos 164,5017
enum class PeerType166,5073
	Optional,168,5095
	Required169,5106
class NodeIPEndpoint175,5162
	enum RLPAppend178,5193
		StreamList,180,5212
		StreamInline181,5226
	static bool test_allowLocal;185,5340
	NodeIPEndpoint(188,5400
	NodeIPEndpoint(189,5514
	operator bi::udp::endpoint(endpoint191,5568
	operator bi::tcp::endpoint(endpoint192,5652
	operator bool(operator bool194,5738
	bool isAllowed(196,5831
	bool operator==(operator==198,5955
	bool operator!=(operator!=201,6100
	bi::address address;209,6349
	uint16_t udpPort 210,6371
	uint16_t tcpPort 211,6394
struct NodeSpec214,6421
	NodeSpec(216,6439
	NodeSpec(221,6588
	NodeID id(227,6762
	std::string m_address;234,6878
	uint16_t m_tcpPort 235,6902
	uint16_t m_udpPort 236,6927
	NodeID m_id;237,6952
class Node240,6970
	Node(245,7040
	virtual NodeID const& address(248,7257
	virtual Public const& publicKey(249,7311
	virtual operator bool(operator bool251,7369
	NodeID id;254,7478
	NodeIPEndpoint endpoint;258,7596
	PeerType peerType 261,7647
class DeadlineOps264,7692
	class DeadlineOp266,7712
		DeadlineOp(269,7742
		~DeadlineOp(270,8003
		DeadlineOp(272,8058
		DeadlineOp& operator=(operator=273,8122
		bool expired(281,8256
		void wait(282,8356
		std::unique_ptr<ba::deadline_timer> m_timer;285,8422
		Mutex x_timer;286,8469
	DeadlineOps(290,8500
	~DeadlineOps(291,8642
	void schedule(293,8671
	void stop(295,8870
	bool isStopped(297,8946
	ba::io_service& m_io;303,9030
	unsigned m_reapIntervalMs;304,9053
	std::vector<DeadlineOp> m_timers;306,9083
	Mutex x_timers;307,9118
	std::atomic<bool> m_stopped;309,9137
namespace std319,9339
template <> struct hash<hash322,9356
	size_t operator()(operator()324,9395

src/cpp-ethereum/libp2p/RLPXSocket.h,237
class RLPXSocket:RLPXSocket39,1020
	RLPXSocket(42,1096
	~RLPXSocket(43,1161
	bool isConnected(45,1191
	void close(46,1248
	bi::tcp::endpoint remoteEndpoint(47,1415
	bi::tcp::socket& ref(48,1522
	bi::tcp::socket m_socket;51,1580

src/cpp-ethereum/libp2p/RLPXFrameWriter.h,643
namespace ba 29,879
namespace dev32,940
namespace p2p34,956
class RLPXFrameWriter42,1111
	struct WriterState50,1295
		std::deque<RLPXPacket> q;52,1318
		mutable Mutex x;53,1346
	enum PacketPriority 62,1492
	enum PacketPriority { PriorityLow 62,1492
	enum PacketPriority { PriorityLow = 0, PriorityHigh 62,1492
	static const uint16_t EmptyFrameLength;63,1548
	static const uint16_t MinFrameDequeLength;64,1589
	RLPXFrameWriter(66,1634
	RLPXFrameWriter(67,1707
	size_t size(70,1845
	uint16_t protocolId(81,2591
	uint16_t const m_protocolId;84,2656
	std::pair<std::pair85,2686
	std::pair<WriterState, WriterState> m_q;85,2686

src/cpp-ethereum/libp2p/RLPxHandshake.h,899
namespace ba 31,933
namespace dev34,994
namespace p2p36,1010
class RLPXHandshake:RLPXHandshake51,1415
	RLPXHandshake(57,1560
	RLPXHandshake(60,1822
	~RLPXHandshake(62,2085
	void start(65,2129
	enum State72,2253
		Error 74,2268
		New,75,2282
		AckAuth,76,2289
		AckAuthEIP8,77,2300
		WriteHello,78,2315
		ReadHello,79,2329
		StartSession80,2342
	Host* m_host;119,3775
	NodeID m_remote;122,3936
	bytes m_auth;126,4116
	bytes m_authCipher;127,4185
	bytes m_ack;128,4260
	bytes m_ackCipher;129,4328
	bytes m_handshakeOutBuffer;130,4401
	bytes m_handshakeInBuffer;131,4474
	crypto::ECDHE m_ecdhe;133,4549
	h256 m_nonce;134,4617
	Public m_remoteEphemeral;136,4687
	h256 m_remoteNonce;137,4750
	uint64_t m_remoteVersion;138,4825
	std::unique_ptr<RLPXFrameCoder> m_io;142,4996
	std::shared_ptr<RLPXSocket> m_socket;144,5037
	boost::asio::deadline_timer m_idleTimer;145,5090

src/cpp-ethereum/libp2p/RLPXSocketIO.h,559
namespace ba 25,805
namespace dev28,866
namespace p2p30,882
class RLPXSocketIO:RLPXSocketIO33,899
	static uint32_t const MinFrameSize;36,979
	static uint32_t const MaxPacketSize;37,1016
	static uint16_t const DefaultInitialCapacity;38,1054
	bool const m_flowControl;53,1490
	RLPXFrameCoder& m_coder;55,1558
	bi::tcp::socket& m_socket;56,1625
	std::deque<bytes> m_toSend;58,1654
	std::vector<RLPXFrameWriter> m_writers;60,1738
	std::unique_ptr<ba::deadline_timer> m_congestion;61,1853
	Mutex x_queued;63,1964
	uint32_t m_egressCapacity;65,2065

src/cpp-ethereum/libp2p/RLPXFrameReader.h,256
namespace ba 28,863
namespace dev31,924
namespace p2p33,940
class RLPXFrameReader41,1146
	RLPXFrameReader(44,1178
	uint16_t m_protocolType;50,1427
	std::map<std::map51,1453
	std::map<uint16_t, std::pair<RLPXPacket, uint32_t>> m_incomplete;51,1453

src/cpp-ethereum/libp2p/Session.cpp,1153
Session::Session(35,1041
Session::~Session(~Session50,1525
ReputationManager& Session::repMan(repMan74,2090
NodeID Session::id(id79,2160
void Session::addRating(addRating84,2232
int Session::rating(rating95,2384
template <class T> vector<T> randomSelection(100,2443
bool Session::readPacket(readPacket114,2702
bool Session::interpret(interpret149,3884
void Session::ping(ping190,4738
RLPStream& Session::prep(prep197,4860
void Session::sealAndSend(sealAndSend202,4989
bool Session::checkPacket(checkPacket209,5112
void Session::send(send218,5308
void Session::write(write258,5996
void Session::writeFrames(writeFrames289,6708
void Session::drop(drop327,7460
void Session::disconnect(disconnect351,7996
void Session::start(start364,8270
void Session::doRead(doRead374,8368
bool Session::checkRead(checkRead452,10589
void Session::doReadFrames(doReadFrames479,11424
std::shared_ptr<Session::Framing> Session::getFraming(getFraming557,13537
void Session::registerCapability(registerCapability565,13728
void Session::registerFraming(registerFraming573,13880
void Session::multiplexAll(multiplexAll585,14103

src/cpp-ethereum/libp2p/HostCapability.cpp,261
std::vector<std::pair<std::shared_ptr<SessionFace>, std::shared_ptr<Peer>>> HostCapabilityFace::peerSessions(peerSessions30,886
std::vector<std::pair<std::shared_ptr<SessionFace>, std::shared_ptr<Peer>>> HostCapabilityFace::peerSessions(peerSessions35,1041

src/cpp-ethereum/libp2p/Host.h,3565
namespace ba 45,1228
namespace std48,1280
template<> struct hash<hash50,1296
	size_t operator()(operator()52,1353
namespace dev60,1578
namespace p2p63,1595
class HostNodeTableHandler:HostNodeTableHandler68,1625
	Host const& host(73,1729
	Host& m_host;78,1861
struct SubReputation81,1880
	bool isRude 83,1903
	int utility 84,1925
	bytes data;85,1943
struct Reputation88,1960
	std::unordered_map<std::unordered_map90,1980
	std::unordered_map<std::string, SubReputation> subs;90,1980
class ReputationManager93,2038
	std::unordered_map<std::unordered_map104,2420
	std::unordered_map<std::pair<p2p::NodeID, std::string>, Reputation> m_nodes;104,2420
	SharedMutex mutable x_nodes;105,2584
struct NodeInfo108,2618
	NodeInfo(111,2659
	std::string enode(114,2828
	NodeID id;116,2929
	std::string address;117,2941
	unsigned port;118,2963
	std::string version;119,2979
class Host:Host129,3272
	static std::unordered_map<std::unordered_map157,4000
	template <class T> std::shared_ptr<T> registerCapability(160,4146
	template <class T> void addCapability(161,4342
	bool haveCapability(163,4519
	CapDescs caps(164,4613
	template <class T> std::shared_ptr<T> cap(165,4726
	void requirePeer(177,5362
	void setIdealPeerCount(183,5666
	void setPeerStretch(186,5780
	std::string listenAddress(195,6027
	unsigned short listenPort(198,6210
	Peers getPeers(204,6495
	NetworkPreferences const& networkPreferences(206,6632
	void setNetworkPreferences(208,6710
	bool isStarted(218,7106
	ReputationManager& repMan(221,7193
	bool haveNetwork(224,7297
	std::shared_ptr<SessionFace> peerSession(230,7652
	NodeID id(233,7866
	bi::tcp::endpoint const& tcpPublic(236,7946
	std::string enode(239,8057
	p2p::NodeInfo nodeInfo(242,8319
	enum PeerSlotType 251,8736
	enum PeerSlotType { Egress,251,8736
	enum PeerSlotType { Egress, Ingress 251,8736
	unsigned peerSlots(253,8778
	bool havePeerSession(255,8903
	bool peerSlotsAvailable(263,9195
	bytes m_restoreNetwork;288,10273
	bool m_run 290,10392
	mutable std::mutex x_runTimer;291,10458
	std::string m_clientVersion;293,10514
	NetworkPreferences m_netPrefs;295,10580
	std::set<bi::address> m_ifAddresses;298,10688
	int m_listenPort 300,10760
	ba::io_service m_ioService;302,10893
	bi::tcp::acceptor m_tcp4Acceptor;303,10966
	std::unique_ptr<boost::asio::deadline_timer> m_timer;305,11036
	static const unsigned c_timerInterval 306,11182
	std::set<Peer*> m_pendingPeerConns;308,11297
	Mutex x_pendingNodeConns;309,11458
	bi::tcp::endpoint m_tcpPublic;311,11486
	KeyPair m_alias;312,11564
	std::shared_ptr<NodeTable> m_nodeTable;313,11700
	std::unordered_map<std::unordered_map316,11938
	std::unordered_map<NodeID, std::shared_ptr<Peer>> m_peers;316,11938
	std::set<NodeID> m_requiredPeers;319,12056
	Mutex x_requiredPeers;320,12091
	mutable std::unordered_map<std::unordered_map324,12360
	mutable std::unordered_map<NodeID, std::weak_ptr<SessionFace>> m_sessions;324,12360
	mutable RecursiveMutex x_sessions;325,12436
	std::list<std::weak_ptr<RLPXHandshake>> m_connecting;327,12474
	Mutex x_connecting;328,12559
	unsigned m_idealPeerCount 330,12622
	unsigned m_stretchPeers 331,12711
	std::map<std::map333,12816
	std::map<CapDesc, std::shared_ptr<HostCapabilityFace>> m_capabilities;333,12816
	std::list<std::shared_ptr<boost::asio::deadline_timer>> m_timers;336,13000
	Mutex x_timers;337,13067
	std::chrono::steady_clock::time_point m_lastPing;339,13085
	bool m_accepting 340,13187
	bool m_dropPeers 341,13214
	ReputationManager m_repMan;343,13242

src/cpp-ethereum/libp2p/Host.cpp,1653
std::chrono::seconds const c_keepAliveInterval 45,1350
std::chrono::milliseconds const c_keepAliveTimeOut 48,1498
HostNodeTableHandler::HostNodeTableHandler(50,1585
void HostNodeTableHandler::processEvent(processEvent52,1660
ReputationManager::ReputationManager(ReputationManager57,1787
void ReputationManager::noteRude(noteRude61,1831
bool ReputationManager::isRude(isRude67,2026
void ReputationManager::setData(setData81,2447
bytes ReputationManager::data(data87,2660
Host::Host(100,3029
Host::Host(113,3400
Host::~Host(~Host119,3612
void Host::start(start124,3640
void Host::stop(stop139,3920
void Host::doneWorking(doneWorking165,4641
void Host::startPeerSession(startPeerSession233,6281
void Host::onNodeTableEvent(onNodeTableEvent346,9761
void Host::determinePublic(determinePublic382,10644
void Host::runAcceptor(runAcceptor428,12430
std::unordered_map<Public, std::string> Host::pocHosts(pocHosts480,13658
void Host::addPeer(addPeer493,14605
void Host::addNode(addNode501,14785
void Host::requirePeer(requirePeer517,15271
void Host::relinquishPeer(relinquishPeer562,16294
void Host::connect(connect569,16440
PeerSessionInfos Host::peerSessionInfo(peerSessionInfo625,17866
size_t Host::peerCount(peerCount639,18154
void Host::run(run650,18387
void Host::startedWorking(startedWorking722,20504
void Host::doWork(doWork766,21735
void Host::keepAlivePeers(keepAlivePeers780,21970
void Host::disconnectLatePeers(disconnectLatePeers798,22321
bytes Host::saveNetwork(saveNetwork811,22659
void Host::restoreNetwork(restoreNetwork865,24213
KeyPair Host::networkAlias(networkAlias944,26989

src/cpp-ethereum/libp2p/Peer.cpp,189
namespace dev28,875
namespace p2p31,892
bool Peer::shouldReconnect(shouldReconnect34,909
unsigned Peer::fallbackSeconds(fallbackSeconds39,1060
bool Peer::operator<(operator<63,1626

src/cpp-ethereum/libp2p/RLPxHandshake.cpp,550
void RLPXHandshake::writeAuth(writeAuth31,947
void RLPXHandshake::writeAck(writeAck57,2064
void RLPXHandshake::writeAckEIP8(writeAckEIP875,2653
void RLPXHandshake::setAuthValues(setAuthValues100,3381
void RLPXHandshake::readAuth(readAuth110,3825
void RLPXHandshake::readAuthEIP8(readAuthEIP8133,4598
void RLPXHandshake::readAck(readAck167,5656
void RLPXHandshake::readAckEIP8(readAckEIP8188,6333
void RLPXHandshake::cancel(cancel218,7345
void RLPXHandshake::error(error226,7455
void RLPXHandshake::transition(transition237,7793

src/cpp-ethereum/libp2p/NodeTable.cpp,1729
const char* NodeTableWarn::name(name27,853
const char* NodeTableNote::name(name28,905
const char* NodeTableMessageSummary::name(name29,957
const char* NodeTableMessageDetail::name(name30,1019
const char* NodeTableConnect::name(name31,1080
const char* NodeTableEvent::name(name32,1135
const char* NodeTableTimer::name(name33,1188
const char* NodeTableUpdate::name(name34,1241
const char* NodeTableTriviaSummary::name(name35,1295
const char* NodeTableTriviaDetail::name(name36,1356
const char* NodeTableAllDetail::name(name37,1416
const char* NodeTableEgress::name(name38,1473
const char* NodeTableIngress::name(name39,1527
NodeEntry::NodeEntry(41,1583
NodeTable::NodeTable(43,1738
NodeTable::~NodeTable(~NodeTable68,2406
void NodeTable::processEvents(processEvents74,2485
shared_ptr<NodeEntry> NodeTable::addNode(addNode80,2586
list<NodeID> NodeTable::nodes(nodes118,3730
list<NodeEntry> NodeTable::snapshot(snapshot127,3890
Node NodeTable::node(node138,4112
shared_ptr<NodeEntry> NodeTable::nodeEntry(nodeEntry149,4315
void NodeTable::doDiscover(doDiscover155,4463
vector<shared_ptr<NodeEntry>> NodeTable::nearestNodeEntries(nearestNodeEntries217,6352
void NodeTable::ping(ping292,8187
void NodeTable::ping(ping302,8376
void NodeTable::evict(evict308,8454
void NodeTable::noteActiveNode(noteActiveNode325,8846
void NodeTable::dropNode(dropNode377,10295
NodeTable::NodeBucket& NodeTable::bucket_UNSAFE(bucket_UNSAFE392,10683
void NodeTable::onReceived(onReceived397,10792
void NodeTable::doCheckEvictions(doCheckEvictions531,14777
void NodeTable::doDiscovery(doDiscovery562,15614
unique_ptr<DiscoveryDatagram> DiscoveryDatagram::interpretUDP(interpretUDP580,16236

src/cpp-ethereum/libp2p/Capability.cpp,211
Capability::Capability(31,906
void Capability::disable(disable37,1252
RLPStream& Capability::prep(prep43,1442
void Capability::sealAndSend(sealAndSend48,1588
void Capability::addRating(addRating55,1746

src/cpp-ethereum/libp2p/HostCapability.h,677
class HostCapabilityFace37,930
	HostCapabilityFace(45,1084
	virtual ~HostCapabilityFace(46,1109
	Host* host(48,1144
	std::vector<std::vector50,1184
	std::vector<std::vector51,1283
	CapDesc capDesc(56,1488
	virtual void onStarting(60,1762
	virtual void onStopping(61,1792
class HostCapability:HostCapability68,1885
	HostCapability(71,1943
	virtual ~HostCapability(72,1964
	static std::string staticName(74,1995
	static u256 staticVersion(75,2056
	static unsigned staticMessageCount(76,2116
	virtual std::string name(79,2202
	virtual u256 version(80,2264
	virtual unsigned messageCount(81,2325
	virtual std::shared_ptr<Capability> newPeerCapability(83,2401

src/cpp-ethereum/libp2p/UPnP.h,206
class UPnP38,896
	UPnP(41,917
	~UPnP(42,926
	bool isValid(48,1043
	std::set<int> m_reg;51,1092
	bool m_ok;52,1114
	std::shared_ptr<UPNPUrls> m_urls;53,1126
	std::shared_ptr<IGDdatas> m_data;54,1161

src/cpp-ethereum/libp2p/RLPXFrameWriter.cpp,244
const uint16_t RLPXFrameWriter::EmptyFrameLength 28,866
const uint16_t RLPXFrameWriter::MinFrameDequeLength 29,966
void RLPXFrameWriter::enque(enque31,1085
void RLPXFrameWriter::enque(enque40,1293
size_t RLPXFrameWriter::mux(mux45,1479

src/cpp-ethereum/libp2p/Session.h,1606
class SessionFace50,1200
	virtual ~SessionFace(53,1228
	virtual bool isConnected(60,1367
	virtual std::map<std::map77,1909
class Session:Session90,2231
	static bool isFramingAllowedForVersion(93,2325
	bool isConnected(103,2693
	void addNote(112,2928
	PeerSessionInfo info(114,3042
	std::chrono::steady_clock::time_point connectionTime(115,3117
	std::map<std::map120,3341
	std::map<CapDesc, std::shared_ptr<Capability>> const& capabilities(120,3341
	std::shared_ptr<Peer> peer(122,3454
	std::chrono::steady_clock::time_point lastReceived(124,3519
	Host* m_server;156,4612
	std::unique_ptr<RLPXFrameCoder> m_io;158,4676
	std::shared_ptr<RLPXSocket> m_socket;159,4759
	Mutex x_framing;160,4833
	std::deque<bytes> m_writeQueue;161,4888
	std::vector<byte> m_data;162,4945
	bytes m_incoming;163,5015
	std::shared_ptr<Peer> m_peer;165,5076
	bool m_dropped 166,5131
	mutable Mutex x_info;168,5332
	PeerSessionInfo m_info;169,5355
	std::chrono::steady_clock::time_point m_connect;171,5428
	std::chrono::steady_clock::time_point m_ping;172,5510
	std::chrono::steady_clock::time_point m_lastReceived;173,5589
	std::map<std::map175,5678
	std::map<CapDesc, std::shared_ptr<Capability>> m_capabilities;175,5678
	struct Framing178,5835
		Framing(181,5876
		RLPXFrameWriter writer;182,5953
		RLPXFrameReader reader;183,5979
	std::map<std::map186,6010
	std::map<uint16_t, std::shared_ptr<Framing> > m_framing;186,6010
	std::deque<bytes> m_encFrames;187,6068
	bool isFramingEnabled(189,6101
	unsigned maxFrameSize(190,6195
std::shared_ptr<PeerCap> capabilityFromSession(196,6354

src/cpp-ethereum/libp2p/Network.h,284
namespace ba 32,952
namespace dev35,1004
namespace p2p37,1020
struct NetworkPreferences42,1095
	NetworkPreferences(45,1155
	NetworkPreferences(48,1284
	NetworkPreferences(51,1505
	std::string publicIPAddress;55,1865
	std::string listenIPAddress;56,1895
class Network71,2234

src/cpp-ethereum/libp2p/Network.cpp,251
std::set<bi::address> Network::getInterfaceAddresses(getInterfaceAddresses46,1368
int Network::tcp4Listen(tcp4Listen119,3310
bi::tcp::endpoint Network::traverseNAT(traverseNAT176,5227
bi::tcp::endpoint Network::resolveHost(resolveHost216,6367

src/cpp-ethereum/libp2p/Common.cpp,2272
const unsigned dev::p2p::c_protocolVersion 28,851
const unsigned dev::p2p::c_defaultIPPort 29,899
const dev::p2p::NodeIPEndpoint dev::p2p::UnspecifiedNodeIPEndpoint 32,1081
const dev::p2p::Node dev::p2p::UnspecifiedNode 33,1187
bool dev::p2p::NodeIPEndpoint::test_allowLocal 35,1290
const char* NetWarn::name(name40,1551
const char* NetImpolite::name(name41,1617
const char* NetNote::name(name42,1687
const char* NetConnect::name(name43,1754
const char* NetMessageSummary::name(name44,1826
const char* NetMessageDetail::name(name45,1904
const char* NetTriviaSummary::name(name46,1980
const char* NetTriviaDetail::name(name47,2056
const char* NetAllDetail::name(name48,2131
const char* NetRight::name(name49,2203
const char* NetLeft::name(name50,2272
const char* NetP2PWarn::name(name51,2339
const char* NetP2PNote::name(name52,2408
const char* NetP2PConnect::name(name53,2478
const char* NetWarn::name(name55,2559
const char* NetImpolite::name(name56,2629
const char* NetNote::name(name57,2701
const char* NetConnect::name(name58,2772
const char* NetMessageSummary::name(name59,2848
const char* NetMessageDetail::name(name60,2930
const char* NetTriviaSummary::name(name61,3010
const char* NetTriviaDetail::name(name62,3090
const char* NetAllDetail::name(name63,3169
const char* NetRight::name(name64,3245
const char* NetLeft::name(name65,3320
const char* NetP2PWarn::name(name66,3393
const char* NetP2PNote::name(name67,3466
const char* NetP2PConnect::name(name68,3540
bool p2p::isPublicAddress(isPublicAddress71,3627
bool p2p::isPublicAddress(isPublicAddress76,3796
bool p2p::isPrivateAddress(isPrivateAddress84,4110
bool p2p::isPrivateAddress(isPrivateAddress110,5204
bool p2p::isLocalHostAddress(isLocalHostAddress116,5434
bool p2p::isLocalHostAddress(isLocalHostAddress129,5902
std::string p2p::reasonOf(reasonOf134,6077
void NodeIPEndpoint::streamRLP(streamRLP155,6937
void NodeIPEndpoint::interpretRLP(interpretRLP168,7277
void DeadlineOps::reap(reap180,7654
Node::Node(203,8036
NodeSpec::NodeSpec(NodeSpec209,8145
NodeIPEndpoint NodeSpec::nodeIPEndpoint(nodeIPEndpoint233,8748
std::string NodeSpec::enode(enode238,8895
namespace dev255,9258
std::ostream& operator<<(258,9276

src/cpp-ethereum/libp2p/RLPXFrameCoder.cpp,1667
RLPXFrameInfo::RLPXFrameInfo(38,1155
namespace dev49,1617
namespace p2p51,1633
class RLPXFrameCoderImpl53,1649
	CryptoPP::SecByteBlock frameEncKey;59,1783
	CryptoPP::CTR_Mode<CryptoPP::AES>::Encryption frameEnc;60,1849
	CryptoPP::SecByteBlock frameDecKey;62,1942
	CryptoPP::CTR_Mode<CryptoPP::AES>::Encryption frameDec;63,2008
	CryptoPP::SecByteBlock macEncKey;65,2101
	CryptoPP::ECB_Mode<CryptoPP::AES>::Encryption macEnc;66,2162
	CryptoPP::Keccak_256 egressMac;68,2290
	CryptoPP::Keccak_256 ingressMac;69,2365
	Mutex x_macEnc;72,2451
RLPXFrameCoder::~RLPXFrameCoder(~RLPXFrameCoder77,2489
RLPXFrameCoder::RLPXFrameCoder(80,2527
RLPXFrameCoder::RLPXFrameCoder(86,2769
void RLPXFrameCoder::setup(setup92,3108
void RLPXFrameCoder::writeFrame(writeFrame149,6101
void RLPXFrameCoder::writeFrame(writeFrame158,6441
void RLPXFrameCoder::writeFrame(writeFrame167,6808
void RLPXFrameCoder::writeFrame(writeFrame176,7210
void RLPXFrameCoder::writeSingleFramePacket(writeSingleFramePacket199,8409
bool RLPXFrameCoder::authAndDecryptHeader(authAndDecryptHeader208,8738
bool RLPXFrameCoder::authAndDecryptFrame(authAndDecryptFrame220,9095
h128 RLPXFrameCoder::egressDigest(egressDigest231,9484
h128 RLPXFrameCoder::ingressDigest(ingressDigest239,9635
void RLPXFrameCoder::updateEgressMACWithHeader(updateEgressMACWithHeader247,9788
void RLPXFrameCoder::updateEgressMACWithFrame(updateEgressMACWithFrame252,9938
void RLPXFrameCoder::updateIngressMACWithHeader(updateIngressMACWithHeader258,10110
void RLPXFrameCoder::updateIngressMACWithFrame(updateIngressMACWithFrame263,10262
void RLPXFrameCoderImpl::updateMAC(updateMAC269,10437

src/cpp-ethereum/libp2p/RLPXFrameReader.cpp,61
std::vector<RLPXPacket> RLPXFrameReader::demux(demux28,866

src/cpp-ethereum/libp2p/RLPXSocketIO.cpp,433
uint32_t const RLPXSocketIO::MinFrameSize 29,878
uint32_t const RLPXSocketIO::MaxPacketSize 30,962
uint16_t const RLPXSocketIO::DefaultInitialCapacity 31,1016
RLPXSocketIO::RLPXSocketIO(33,1079
vector<RLPXFrameWriter> RLPXSocketIO::writers(writers41,1414
void RLPXSocketIO::send(send49,1607
void RLPXSocketIO::doWrite(doWrite61,1913
void RLPXSocketIO::deferWrite(deferWrite85,2381
void RLPXSocketIO::write(write93,2709

src/cpp-ethereum/libp2p/RLPXFrameCoder.h,462
struct RLPXFrameDecryptFailed:RLPXFrameDecryptFailed36,949
struct RLPXFrameInfo42,1104
	RLPXFrameInfo(46,1237
	uint32_t const length;48,1282
	uint8_t const padding;49,1358
	bytes const data;51,1432
	RLP const header;52,1476
	uint16_t const protocolId;54,1517
	bool const multiFrame;55,1591
	uint16_t const sequenceId;56,1658
	uint32_t const totalLength;57,1713
class RLPXFrameCoder73,2196
	std::unique_ptr<class RLPXFrameCoderImpl> m_impl;129,4487

src/cpp-ethereum/libp2p/UPnP.cpp,193
UPnP::UPnP(UPnP41,1176
UPnP::~UPnP(~UPnP103,2808
string UPnP::externalIP(externalIP110,2882
int UPnP::addRedirect(addRedirect121,3081
void UPnP::removeRedirect(removeRedirect179,4931

src/cpp-ethereum/libp2p/Peer.h,408
class Peer:Peer52,1873
	Peer(61,2107
	bool isOffline(63,2150
	virtual bool operator<(Peer const& _p) const;65,2205
	int rating(68,2293
	bool shouldReconnect(71,2415
	DisconnectReason lastDisconnect(77,2612
	void noteSessionGood(80,2722
	unsigned fallbackSeconds(84,2892
	std::chrono::system_clock::time_point m_lastAttempted;92,3108
	std::weak_ptr<Session> m_session;97,3369
using Peers 99,3407

src/cpp-ethereum/libp2p/UDP.cpp,181
const char* RLPXWarn::name(name27,841
const char* RLPXNote::name(name28,888
h256 RLPXDatagramFace::sign(sign30,936
Public RLPXDatagramFace::authenticate(authenticate58,1818

src/cpp-ethereum/libp2p/NodeTable.h,6057
struct NodeEntry:NodeEntry41,980
	NodeEntry(43,1012
	unsigned const distance;44,1092
enum NodeTableEventType48,1241
	NodeEntryAdded,50,1267
	NodeEntryDropped51,1284
class NodeTableEventHandler55,1323
	void processEvents(63,1591
	virtual void appendEvent(81,2044
	Mutex x_events;83,2181
	std::list<NodeID> m_nodeEventHandler;84,2198
	std::unordered_map<std::unordered_map85,2237
	std::unordered_map<NodeID, NodeTableEventType> m_events;85,2237
class NodeTable:NodeTable121,3706
	using NodeSocket 124,3872
	using TimePoint 125,3920
	using NodeIdTimePoint 126,4002
	using EvictionTimeout 127,4057
	enum NodeRelation 130,4212
	enum NodeRelation { Unknown 130,4212
	enum NodeRelation { Unknown = 0, Known 130,4212
	enum DiscoverType 131,4255
	enum DiscoverType { Random 131,4255
	static unsigned distance(138,4600
	void setEventHandler(141,4828
	unsigned count(153,5446
	bool haveNode(159,5618
	static unsigned const s_addressByteSize 172,6029
	static unsigned const s_bits 173,6124
	static unsigned const s_bins 174,6216
	static unsigned const s_maxSteps 175,6318
	static unsigned const s_bucketSize 179,6458
	static unsigned const s_alpha 180,6574
	std::chrono::milliseconds const c_evictionCheckInterval 185,6784
	std::chrono::milliseconds const c_reqTimeout 186,6928
	std::chrono::milliseconds const c_bucketRefresh 187,7074
	struct NodeBucket189,7235
		unsigned distance;191,7257
		std::list<std::weak_ptr<NodeEntry>> nodes;192,7278
	NodeEntry center(202,7668
	void onDisconnected(234,9434
	std::unique_ptr<NodeTableEventHandler> m_nodeEventHandler;244,9717
	Node m_node;246,9815
	Secret m_secret;247,9932
	mutable Mutex x_nodes;249,9990
	std::unordered_map<std::unordered_map250,10123
	std::unordered_map<NodeID, std::shared_ptr<NodeEntry>> m_nodes;250,10123
	mutable Mutex x_state;252,10215
	std::array<std::array253,10321
	std::array<NodeBucket, s_bins> m_state;253,10321
	Mutex x_evictions;255,10401
	std::deque<EvictionTimeout> m_evictions;256,10512
	Mutex x_pubkDiscoverPings;258,10585
	std::unordered_map<std::unordered_map259,10706
	std::unordered_map<bi::address, TimePoint> m_pubkDiscoverPings;259,10706
	Mutex x_findNodeTimeout;261,10851
	std::list<NodeIdTimePoint> m_findNodeTimeout;262,10877
	std::shared_ptr<NodeSocket> m_socket;264,10983
	NodeSocket* m_socketPointer;265,11093
	DeadlineOps m_timers;267,11261
inline std::ostream& operator<<(270,11353
struct DiscoveryDatagram:DiscoveryDatagram279,11777
	DiscoveryDatagram(282,11864
	DiscoveryDatagram(285,12038
	NodeID sourceid;288,12240
	h256 echo;289,12296
	uint32_t ts 293,12491
	bool isExpired(294,12509
struct PingNode:PingNode309,13069
	using DiscoveryDatagram::DiscoveryDatagram;311,13106
	PingNode(312,13151
	PingNode(313,13281
	static const uint8_t type 315,13411
	uint8_t packetType(316,13443
	unsigned version 318,13489
	NodeIPEndpoint source;319,13512
	NodeIPEndpoint destination;320,13536
	void streamRLP(322,13566
	void interpretRLP(330,13731
struct Pong:Pong343,14015
	Pong(345,14048
	Pong(346,14151
	static const uint8_t type 348,14277
	uint8_t packetType(349,14309
	NodeIPEndpoint destination;351,14355
	void streamRLP(353,14385
	void interpretRLP(360,14503
struct FindNode:FindNode381,15096
	FindNode(383,15133
	FindNode(384,15224
	static const uint8_t type 386,15354
	uint8_t packetType(387,15386
	h512 target;389,15432
	void streamRLP(391,15447
	void interpretRLP(395,15530
struct Neighbours:Neighbours406,15781
	Neighbours(408,15820
	Neighbours(414,16173
	Neighbours(415,16242
	struct Neighbour417,16374
		Neighbour(419,16395
		Neighbour(420,16471
		NodeIPEndpoint endpoint;421,16546
		NodeID node;422,16573
		void streamRLP(423,16588
	static const uint8_t type 426,16719
	uint8_t packetType(427,16751
	std::vector<Neighbour> neighbours;429,16797
	void streamRLP(431,16834
	void interpretRLP(439,16999
struct NodeTableWarn:NodeTableWarn448,17194
struct NodeTableWarn: public LogChannel { static const char* name(); static const int verbosity 448,17194
struct NodeTableNote:NodeTableNote449,17298
struct NodeTableNote: public LogChannel { static const char* name(); static const int verbosity 449,17298
struct NodeTableMessageSummary:NodeTableMessageSummary450,17402
struct NodeTableMessageSummary: public LogChannel { static const char* name(); static const int verbosity 450,17402
struct NodeTableMessageDetail:NodeTableMessageDetail451,17516
struct NodeTableMessageDetail: public LogChannel { static const char* name(); static const int verbosity 451,17516
struct NodeTableConnect:NodeTableConnect452,17629
struct NodeTableConnect: public LogChannel { static const char* name(); static const int verbosity 452,17629
struct NodeTableEvent:NodeTableEvent453,17737
struct NodeTableEvent: public LogChannel { static const char* name(); static const int verbosity 453,17737
struct NodeTableTimer:NodeTableTimer454,17843
struct NodeTableTimer: public LogChannel { static const char* name(); static const int verbosity 454,17843
struct NodeTableUpdate:NodeTableUpdate455,17949
struct NodeTableUpdate: public LogChannel { static const char* name(); static const int verbosity 455,17949
struct NodeTableTriviaSummary:NodeTableTriviaSummary456,18056
struct NodeTableTriviaSummary: public LogChannel { static const char* name(); static const int verbosity 456,18056
struct NodeTableTriviaDetail:NodeTableTriviaDetail457,18170
struct NodeTableTriviaDetail: public LogChannel { static const char* name(); static const int verbosity 457,18170
struct NodeTableAllDetail:NodeTableAllDetail458,18283
struct NodeTableAllDetail: public LogChannel { static const char* name(); static const int verbosity 458,18283
struct NodeTableEgress:NodeTableEgress459,18393
struct NodeTableEgress: public LogChannel { static const char* name(); static const int verbosity 459,18393
struct NodeTableIngress:NodeTableIngress460,18500
struct NodeTableIngress: public LogChannel { static const char* name(); static const int verbosity 460,18500

src/cpp-ethereum/libp2p/Capability.h,333
class Capability:Capability34,865
	Capability(39,965
	virtual ~Capability(40,1077
	std::shared_ptr<SessionFace> session(48,1287
	HostCapabilityFace* hostCapability(49,1362
	uint16_t const c_protocolID;59,1657
	std::weak_ptr<SessionFace> m_session;62,1697
	HostCapabilityFace* m_hostCap;63,1736
	unsigned m_idOffset;65,1792

src/cpp-ethereum/libp2p/UDP.h,1805
namespace ba 36,1022
namespace dev39,1074
namespace p2p41,1090
struct RLPXWarn:RLPXWarn44,1107
struct RLPXNote:RLPXNote45,1206
class UDPDatagram51,1370
	UDPDatagram(54,1398
	UDPDatagram(55,1456
	bi::udp::endpoint const& endpoint(56,1540
	bytes data;58,1602
	bi::udp::endpoint locus;60,1626
struct RLPXDatagramFace:RLPXDatagramFace66,1709
	static uint32_t futureFromEpoch(68,1755
	static uint32_t secondsSinceEpoch(69,1969
	RLPXDatagramFace(72,2223
struct UDPSocketFace84,2541
struct UDPSocketEvents93,2719
	virtual void onDisconnected(95,2744
template <typename Handler,106,3120
class UDPSocket:UDPSocket107,3174
	enum { maxDatagramSize 110,3289
	UDPSocket(114,3480
	UDPSocket(117,3717
	virtual ~UDPSocket(118,3904
	bool isOpen(127,4118
	void disconnect(130,4180
	std::atomic<bool> m_started;139,4368
	std::atomic<bool> m_closed;140,4541
	UDPSocketEvents& m_host;142,4605
	bi::udp::endpoint m_endpoint;143,4675
	Mutex x_sendQ;145,4745
	std::deque<UDPDatagram> m_sendQ;146,4761
	std::array<std::array147,4826
	std::array<byte, maxDatagramSize> m_recvData;147,4826
	bi::udp::endpoint m_recvEndpoint;148,4903
	bi::udp::socket m_socket;149,4979
	Mutex x_socketError;151,5040
	boost::system::error_code m_socketError;152,5130
template <typename Handler,155,5215
void UDPSocket<Handler, MaxDatagramSize>::connect(connect156,5269
template <typename Handler,180,5706
bool UDPSocket<Handler, MaxDatagramSize>::send(send181,5760
template <typename Handler,194,5978
void UDPSocket<Handler, MaxDatagramSize>::doRead(doRead195,6032
template <typename Handler,215,6626
void UDPSocket<Handler, MaxDatagramSize>::doWrite(doWrite216,6680
template <typename Handler,240,7355
void UDPSocket<Handler, MaxDatagramSize>::disconnectWithError(disconnectWithError241,7409

src/cpp-ethereum/libethereum/GenericMiner.h,804
struct MineInfo:MineInfo35,909
inline std::ostream& operator<<(37,954
template <class PoW> class GenericFarmFace50,1351
	using WorkPackage 53,1404
	using Solution 54,1452
	using Miner 55,1494
	virtual ~GenericFarmFace(57,1529
template <class PoW> class GenericMiner73,2113
	using WorkPackage 76,2163
	using Solution 77,2211
	using FarmFace 78,2253
	using ConstructionInfo 79,2293
	GenericMiner(81,2352
	virtual ~GenericMiner(85,2443
	void setWork(89,2510
	uint64_t hashCount(108,2819
	void resetHashCount(110,2872
	unsigned index(112,2917
	bool submitProof(136,3512
	WorkPackage const& work(149,3704
	void accumulateHashes(151,3774
	FarmFace* m_farm 154,3843
	unsigned m_index;155,3872
	uint64_t m_hashCount 157,3892
	WorkPackage m_work;159,3920
	mutable Mutex x_work;160,3941

src/cpp-ethereum/libethereum/Interface.h,2018
enum class Reaping44,1131
	Automatic,46,1152
	Manual47,1164
enum class FudgeFactor50,1176
	Strict,52,1201
	Lenient53,1210
struct GasEstimationProgress56,1223
	u256 lowerBound;58,1254
	u256 upperBound;59,1272
using GasEstimationCallback 62,1294
class Interface67,1438
	Interface(71,1482
	virtual ~Interface(74,1516
	virtual std::pair<std::pair80,1635
	ExecutionResult call(94,2704
	ExecutionResult call(95,2979
	ExecutionResult call(96,3259
	ExecutionResult create(101,3836
	ExecutionResult create(102,4093
	ExecutionResult create(103,4355
	virtual std::pair<std::pair114,5153
	int getDefault(118,5431
	void setDefault(119,5477
	u256 balanceAt(121,5539
	u256 countAt(122,5610
	u256 stateAt(123,5677
	bytes codeAt(124,5757
	h256 codeHashAt(125,5823
	std::map<std::map126,5896
	std::map<h256, std::pair<u256, u256>> storageAt(126,5896
	virtual std::map<std::map134,6409
	LocalisedLogEntries peekWatchSafe(145,6939
	LocalisedLogEntries checkWatchSafe(146,7085
	virtual std::pair<std::pair158,7892
	virtual BlockHeader pendingInfo(176,8953
	virtual BlockDetails pendingDetails(177,9020
	virtual EVMSchedule evmSchedule(179,9159
	Transaction transaction(183,9331
	unsigned transactionCount(184,9476
	Transactions transactions(185,9651
	TransactionHashes transactionHashes(186,9799
	BlockHeader uncle(187,9968
	UncleHashes uncleHashes(188,10072
	unsigned uncleCount(189,10171
	virtual Addresses addresses(203,10698
	virtual bool isSyncing(231,11601
	virtual bool isMajorSyncing(233,11682
	virtual u256 networkId(236,11764
	virtual void setNetworkId(238,11836
	virtual SealEngineFace* sealEngine(241,11906
	int m_default 244,11982
namespace std 252,12036
namespace dev254,12108
namespace eth256,12124
class Watch:Watch259,12141
	Watch(264,12237
	Watch(265,12249
	Watch(266,12320
	~Watch(267,12405
	LocalisedLogEntries check(269,12456
	LocalisedLogEntries peek(270,12549
	LocalisedLogEntries logs(271,12640
namespace std281,12768
inline void swap(284,12785

src/cpp-ethereum/libethereum/EthereumPeer.h,1254
class EthereumPeerObserverFace40,1009
	virtual ~EthereumPeerObserverFace(43,1050
class EthereumHostDataFace64,1864
	virtual ~EthereumHostDataFace(67,1901
	virtual std::pair<std::pair69,1938
	virtual std::pair<std::pair71,2069
	virtual std::pair<std::pair75,2216
class EthereumPeer:EthereumPeer83,2412
	static std::string name(96,2800
	static u256 version(99,2872
	static unsigned messageCount(102,2966
	p2p::NodeID id(106,3266
	using p2p::Capability::sealAndSend;134,4062
	void clearKnownTransactions(146,4484
	bool needsSyncing(155,4872
	unsigned m_hostProtocolVersion 166,5217
	unsigned m_protocolVersion;169,5285
	u256 m_networkId;172,5339
	Asking m_asking 175,5417
	std::atomic<time_t> m_lastAsk;177,5499
	h256 m_latestHash;180,5608
	u256 m_totalDifficulty;181,5726
	h256 m_genesisHash;182,5800
	u256 const m_peerCapabilityVersion;184,5852
	bool m_requireTransactions 186,6032
	Mutex x_knownBlocks;188,6070
	h256Hash m_knownBlocks;189,6092
	Mutex x_knownTransactions;190,6205
	h256Hash m_knownTransactions;191,6233
	unsigned m_unknownNewBlocks 192,6316
	unsigned m_lastAskedHeaders 193,6408
	std::shared_ptr<EthereumPeerObserverFace> m_observer;195,6472
	std::shared_ptr<EthereumHostDataFace> m_hostData;196,6527

src/cpp-ethereum/libethereum/TransactionReceipt.cpp,223
TransactionReceipt::TransactionReceipt(TransactionReceipt28,855
TransactionReceipt::TransactionReceipt(38,1064
void TransactionReceipt::streamRLP(streamRLP45,1243
std::ostream& dev::eth::operator<<(operator<<53,1443

src/cpp-ethereum/libethereum/ExtVM.h,470
class ExtVM:ExtVM42,1081
	ExtVM(46,1144
	virtual u256 store(56,1804
	virtual void setStore(59,1919
	virtual size_t codeSizeAt(65,2152
	virtual h160 create(u256 _endowment, u256& io_gas, bytesConstRef _code, OnOpFunc const& _onOp = {}) override final;68,2236
	virtual u256 balance(74,2583
	virtual bool exists(77,2690
	virtual EVMSchedule const& evmSchedule(89,3054
	State const& state(91,3166
	State& m_s;94,3220
	SealEngineFace const& m_sealEngine;95,3270

src/cpp-ethereum/libethereum/Account.cpp,137
void Account::setNewCode(setNewCode31,957
uint64_t toUnsigned(40,1119
AccountMap dev::eth::jsonToAccountMap(jsonToAccountMap50,1331

src/cpp-ethereum/libethereum/CommonNet.cpp,31
namespace { char dummy;28,887

src/cpp-ethereum/libethereum/Block.cpp,1354
#define ETH_TIMED_ENACTMENTS 46,1343
static const unsigned c_maxSyncTransactions 48,1375
const char* BlockSafeExceptions::name(name50,1428
const char* BlockDetail::name(name51,1511
const char* BlockTrace::name(name52,1587
const char* BlockChat::name(name53,1661
Block::Block(55,1736
Block::Block(66,2042
Block::Block(78,2396
Block& Block::operator=(operator=93,2777
void Block::resetCurrent(resetCurrent113,3227
SealEngineFace* Block::sealEngine(sealEngine133,3750
void Block::noteChain(noteChain140,3903
PopulationStatistics Block::populateFromChain(populateFromChain150,4158
bool Block::sync(sync193,5334
bool Block::sync(sync198,5417
pair<TransactionReceipts, bool> Block::sync(sync301,8208
u256 Block::enactOn(enactOn401,11226
u256 Block::enact(enact450,12342
ExecutionResult Block::execute(execute649,18290
void Block::applyRewards(applyRewards671,19024
void Block::performIrregularModifications(performIrregularModifications682,19370
void Block::commitToSeal(commitToSeal695,19826
void Block::uncommitToSeal(uncommitToSeal795,23104
bool Block::sealBlock(sealBlock804,23222
State Block::fromPending(fromPending832,23961
LogBloom Block::logBloom(logBloom843,24200
void Block::cleanup(cleanup851,24333
string Block::vmTrace(vmTrace886,25381
std::ostream& dev::eth::operator<<(operator<<913,26091

src/cpp-ethereum/libethereum/VerifiedBlock.h,373
struct VerifiedBlockRef36,963
	bytesConstRef block;38,989
	BlockHeader info;39,1043
	std::vector<Transaction> transactions;40,1097
struct VerifiedBlock44,1265
	VerifiedBlock(46,1288
	VerifiedBlock(48,1309
	VerifiedBlock(53,1384
	VerifiedBlock& operator=(operator=59,1512
	VerifiedBlockRef verified;68,1701
	bytes blockData;69,1763
using VerifiedBlocks 76,1920

src/cpp-ethereum/libethereum/BlockChain.cpp,3126
#define ETH_CATCH 48,1386
#define ETH_TIMED_IMPORTS 49,1406
const char* BlockChainDebug::name(name52,1455
const char* BlockChainWarn::name(name53,1530
const char* BlockChainNote::name(name54,1616
const char* BlockChainChat::name(name55,1688
const char* BlockChainDebug::name(name57,1767
const char* BlockChainWarn::name(name58,1845
const char* BlockChainNote::name(name59,1935
const char* BlockChainChat::name(name60,2011
std::ostream& dev::eth::operator<<(operator<<63,2096
ldb::Slice dev::eth::toSlice(toSlice82,2761
ldb::Slice dev::eth::toSlice(toSlice98,3201
namespace dev116,3675
class WriteBatchNoter:WriteBatchNoter118,3691
	virtual void Put(120,3748
	virtual void Delete(121,3906
static const chrono::system_clock::duration c_collectionDuration 126,4027
static const unsigned c_collectionQueueSize 127,4115
static const unsigned c_maxCacheSize 128,4164
static const unsigned c_minCacheSize 129,4220
static const chrono::system_clock::duration c_collectionDuration 133,4299
static const unsigned c_collectionQueueSize 136,4479
static const unsigned c_maxCacheSize 139,4590
static const unsigned c_minCacheSize 142,4703
BlockChain::BlockChain(146,4769
BlockChain::~BlockChain(~BlockChain153,4952
BlockHeader const& BlockChain::genesis(genesis158,4993
void BlockChain::init(init172,5319
unsigned BlockChain::open(open185,5659
void BlockChain::open(open264,8571
void BlockChain::reopen(reopen270,8774
void BlockChain::close(close277,8921
void BlockChain::rebuild(rebuild297,9340
string BlockChain::dumpDatabase(dumpDatabase384,11771
LastHashes BlockChain::lastHashes(lastHashes395,12083
tuple<ImportRoute, bool, unsigned> BlockChain::sync(sync408,12480
pair<ImportResult, ImportRoute> BlockChain::attemptImport(attemptImport472,14755
ImportRoute BlockChain::import(import498,15448
void BlockChain::insert(insert522,16001
void BlockChain::insert(insert546,16549
ImportRoute BlockChain::import(import650,20762
void BlockChain::clearBlockBlooms(clearBlockBlooms980,32047
void BlockChain::rescue(rescue1022,33838
void BlockChain::rewind(rewind1072,34706
tuple<h256s, h256, unsigned> BlockChain::treeRoute(treeRoute1093,35404
void BlockChain::noteUsed(noteUsed1144,36694
template <class K, class T> static unsigned getHashSize(1155,36938
void BlockChain::updateStats(updateStats1163,37120
void BlockChain::garbageCollect(garbageCollect1182,37826
void BlockChain::checkConsistency(checkConsistency1231,38991
void BlockChain::clearCachesDuringChainReversion(clearCachesDuringChainReversion1254,39800
static inline unsigned upow(1268,40333
static inline unsigned ceilDiv(1269,40441
vector<unsigned> BlockChain::withBlockBloom(withBlockBloom1284,40885
vector<unsigned> BlockChain::withBlockBloom(withBlockBloom1298,41345
h256Hash BlockChain::allKinFrom(allKinFrom1338,42350
bool BlockChain::isKnown(isKnown1354,42904
bytes BlockChain::block(block1379,43495
bytes BlockChain::headerData(headerData1409,44047
Block BlockChain::genesisBlock(genesisBlock1439,44693
VerifiedBlockRef BlockChain::verifyBlock(verifyBlock1461,45558

src/cpp-ethereum/libethereum/State.cpp,1960
const char* StateSafeExceptions::name(name49,1371
const char* StateDetail::name(name50,1454
const char* StateTrace::name(name51,1530
const char* StateChat::name(name52,1604
State::State(54,1679
State::State(64,1996
OverlayDB State::openDB(openDB74,2310
void State::populateFrom(populateFrom115,3560
u256 const& State::requireAccountStartNonce(requireAccountStartNonce121,3695
void State::noteAccountStartNonce(noteAccountStartNonce128,3881
void State::removeEmptyAccounts(removeEmptyAccounts136,4118
State& State::operator=(operator=143,4249
Account const* State::account(account158,4636
Account* State::account(account163,4743
void State::clearCacheIfTooLarge(clearCacheIfTooLarge192,5448
void State::commit(commit210,6069
unordered_map<Address, u256> State::addresses(addresses220,6339
void State::setRoot(setRoot236,6756
bool State::addressInUse(addressInUse245,6930
bool State::accountNonemptyAndExisting(accountNonemptyAndExisting250,7010
bool State::addressHasCode(addressHasCode258,7174
u256 State::balance(balance266,7319
void State::incNonce(incNonce274,7439
void State::addBalance(addBalance286,7724
void State::subBalance(subBalance311,8667
void State::createContract(createContract325,8976
void State::createAccount(createAccount330,9092
void State::kill(kill338,9376
u256 State::getNonce(getNonce345,9510
u256 State::storage(storage353,9651
void State::setStorage(setStorage372,10211
map<h256, pair<u256, u256>> State::storage(storage378,10419
h256 State::storageRoot(storageRoot412,11286
bytes const& State::code(code423,11452
void State::setNewCode(setNewCode440,11870
h256 State::codeHash(codeHash446,12041
size_t State::codeSize(codeSize454,12179
size_t State::savepoint(savepoint475,12612
void State::rollback(rollback480,12677
std::pair<ExecutionResult, TransactionReceipt> State::execute(execute515,13469
std::ostream& dev::eth::operator<<(operator<<547,14556

src/cpp-ethereum/libethereum/Executive.h,1415
struct VMTraceChannel:VMTraceChannel51,1155
struct VMTraceChannel: public LogChannel { static const char* name(51,1155
struct ExecutiveWarnChannel:ExecutiveWarnChannel52,1261
struct ExecutiveWarnChannel: public LogChannel { static const char* name(52,1261
class StandardTrace54,1373
	struct DebugOptions57,1403
	StandardTrace(65,1550
	void operator(66,1568
	void setShowMnemonics(68,1721
	void setOptions(69,1774
	OnOpFunc onOp(73,1889
	std::vector<Instruction> m_lastInst;77,2172
	bytes m_lastCallData;78,2210
	Json::Value m_trace;80,2252
	DebugOptions m_options;82,2281
class Executive106,2991
	Executive(110,3114
	void initialize(135,4439
	Transaction const& t(145,5032
	LogEntries const& logs(148,5178
	owning_bytes_ref takeOutput(153,5355
	u256 gas(176,6730
	Address newAddress(179,6847
	bool excepted(181,6964
	void setResultRecipient(184,7104
	State& m_s;190,7259
	EnvInfo m_envInfo;192,7433
	std::shared_ptr<ExtVM> m_ext;193,7502
	owning_bytes_ref m_output;194,7714
	ExecutionResult* m_res 195,7767
	unsigned m_depth 197,7848
	TransactionException m_excepted 198,7905
	int64_t m_baseGasRequired;199,8029
	u256 m_gas 200,8128
	u256 m_refunded 201,8260
	Transaction m_t;203,8319
	LogEntries m_logs;204,8388
	u256 m_gasCost;206,8482
	SealEngineFace const& m_sealEngine;207,8499
	bool m_isCreation 209,8537
	Address m_newAddress;210,8565
	size_t m_savepoint 211,8588

src/cpp-ethereum/libethereum/CommonNet.h,939
enum SubprotocolPacketType:SubprotocolPacketType60,2314
	StatusPacket 62,2349
	NewBlockHashesPacket 63,2371
	TransactionsPacket 64,2401
	GetBlockHeadersPacket 65,2429
	BlockHeadersPacket 66,2460
	GetBlockBodiesPacket 67,2488
	BlockBodiesPacket 68,2518
	NewBlockPacket 69,2545
	GetNodeDataPacket 71,2570
	NodeDataPacket 72,2597
	GetReceiptsPacket 73,2621
	ReceiptsPacket 74,2648
	PacketCount76,2673
enum class Asking79,2690
	State,81,2710
	BlockHeaders,82,2718
	BlockBodies,83,2733
	NodeData,84,2747
	Receipts,85,2758
	Nothing86,2769
enum class SyncState89,2782
	NotSynced,91,2805
	Idle,92,2863
	Waiting,93,2931
	Blocks,94,3031
	State,95,3067
	NewBlocks,96,3101
	Size	98,3170
struct SyncStatus101,3203
	SyncState state 103,3223
	unsigned protocolVersion 104,3259
	unsigned startBlockNumber;105,3290
	unsigned currentBlockNumber;106,3318
	unsigned highestBlockNumber;107,3348
	bool majorSyncing 108,3378

src/cpp-ethereum/libethereum/BlockDetails.h,1721
struct BlockDetails41,1132
	BlockDetails(43,1154
	BlockDetails(44,1225
	BlockDetails(45,1344
	bytes rlp(46,1374
	explicit operator bool(49,1452
	h256 parent;53,1577
	h256s children;54,1591
	mutable unsigned size;56,1609
struct BlockLogBlooms59,1637
	BlockLogBlooms(61,1661
	BlockLogBlooms(62,1682
	bytes rlp(63,1776
	LogBlooms blooms;65,1855
	mutable unsigned size;66,1874
struct BlocksBlooms69,1902
	BlocksBlooms(71,1924
	BlocksBlooms(72,1943
	bytes rlp(73,2052
	std::array<std::array75,2131
	std::array<LogBloom, c_bloomIndexSize> blooms;75,2131
	mutable unsigned size;76,2179
struct BlockReceipts79,2207
	BlockReceipts(81,2230
	BlockReceipts(82,2250
	bytes rlp(83,2366
	TransactionReceipts receipts;85,2519
	mutable unsigned size 86,2550
struct BlockHash89,2582
	BlockHash(91,2601
	BlockHash(92,2617
	BlockHash(93,2658
	bytes rlp(94,2715
	h256 value;96,2763
	static const unsigned size 97,2776
struct TransactionAddress100,2814
	TransactionAddress(102,2842
	TransactionAddress(103,2867
	bytes rlp(104,2979
	explicit operator bool(operator bool106,3060
	h256 blockHash;108,3117
	unsigned index 109,3134
	static const unsigned size 111,3156
using BlockDetailsHash 114,3194
using BlockLogBloomsHash 115,3259
using BlockReceiptsHash 116,3328
using TransactionAddressHash 117,3395
using BlockHashHash 118,3472
using BlocksBloomsHash 119,3535
static const BlockDetails NullBlockDetails;121,3601
static const BlockLogBlooms NullBlockLogBlooms;122,3645
static const BlockReceipts NullBlockReceipts;123,3693
static const TransactionAddress NullTransactionAddress;124,3739
static const BlockHash NullBlockHash;125,3795
static const BlocksBlooms NullBlocksBlooms;126,3833

src/cpp-ethereum/libethereum/GenesisInfo.cpp,170
std::string const dev::eth::c_genesisInfoTestBasicAuthority 29,902
static std::string const c_childDaos 66,2558
dev::Addresses dev::eth::childDaos(childDaos304,10397

src/cpp-ethereum/libethereum/BlockQueue.h,3084
struct BlockQueueChannel:BlockQueueChannel44,1119
struct BlockQueueChannel: public LogChannel { static const char* name(44,1119
struct BlockQueueTraceChannel:BlockQueueTraceChannel45,1227
struct BlockQueueTraceChannel: public LogChannel { static const char* name(45,1227
#define cblockq 46,1340
struct BlockQueueStatus48,1415
	size_t importing;50,1441
	size_t verified;51,1460
	size_t verifying;52,1478
	size_t unverified;53,1497
	size_t future;54,1517
	size_t unknown;55,1533
	size_t bad;56,1550
enum class QueueStatus59,1567
	Ready,61,1592
	Importing,62,1600
	UnknownParent,63,1612
	Bad,64,1628
	Unknown65,1634
class SizedBlockQueue71,1735
	std::size_t count(74,1767
	std::size_t size(76,1822
	bool isEmpty(78,1869
	h256 nextHash(80,1920
	T const& next(82,1999
	void clear(84,2051
	void enqueue(90,2105
	T dequeue(96,2218
	std::vector<T> dequeueMultiple(106,2346
	bool remove(111,2462
	std::vector<T> removeIf(118,2612
	bool replace(125,2791
	static std::function<bool(T const&)> sha3UnclesEquals(140,3089
	std::vector<T> removeRange(145,3253
	std::deque<T> m_queue;156,3589
	std::atomic<size_t> m_size 157,3613
class SizedBlockMap161,3708
	std::size_t count(164,3738
	std::size_t size(166,3791
	bool isEmpty(168,3837
	KeyType firstKey(170,3886
	void clear(172,3946
	void insert(178,3998
	std::vector<std::vector186,4285
	std::vector<std::pair<h256, bytes>> removeByKeyEqual(186,4285
	std::vector<std::vector192,4477
	std::vector<std::pair<h256, bytes>> removeByKeyNotGreater(192,4477
	using BlockMultimap 198,4635
	using BlockMultimap = std::multimap<KeyType, std::pair<std::pair198,4635
	std::vector<std::vector200,4707
	std::vector<std::pair<h256, bytes>> removeRange(200,4707
	BlockMultimap m_map;216,5141
	std::atomic<size_t> m_size 217,5163
class BlockQueue:BlockQueue225,5423
	void setChain(231,5497
	void noteReady(248,6404
	std::pair<std::pair254,6615
	std::pair<unsigned, unsigned> items(254,6615
	h256 firstUnknown(263,6926
	template <class T> Handler<> onReady(271,7241
	template <class T> Handler<> onRoomAvailable(272,7322
	template <class T> void setOnBad(274,7420
	struct UnverifiedBlock282,7636
		h256 hash;284,7663
		h256 parentHash;285,7676
		bytes blockData;286,7695
	BlockChain const* m_bc;303,8100
	mutable boost::shared_mutex m_lock;305,8184
	h256Hash m_drainingSet;306,8285
	h256Hash m_readySet;307,8353
	h256Hash m_unknownSet;308,8426
	SizedBlockMap<h256> m_unknown;309,8522
	h256Hash m_knownBad;310,8688
	SizedBlockMap<time_t> m_future;311,8774
	Signal<> m_onReady;312,8880
	Signal<> m_onRoomAvailable;313,9023
	mutable Mutex m_verification;315,9156
	std::condition_variable m_moreToVerify;316,9272
	SizedBlockQueue<VerifiedBlock> m_verified;317,9369
	SizedBlockQueue<VerifiedBlock> m_verifying;318,9496
	SizedBlockQueue<UnverifiedBlock> m_unverified;319,9652
	std::vector<std::thread> m_verifiers;321,9800
	std::atomic<bool> m_deleting 322,9876
	std::function<void(Exception&)> m_onBad;324,9960
	u256 m_difficulty;325,10060
	u256 m_drainingDifficulty;326,10137

src/cpp-ethereum/libethereum/CodeSizeCache.h,270
class CodeSizeCache36,983
	void store(39,1013
	bool contains(46,1175
	size_t get(51,1278
	static CodeSizeCache& instance(57,1376
	void removeRandomElement(61,1512
	mutable Mutex x_cache;73,1745
	std::map<std::map74,1769
	std::map<h256, size_t> m_cache;74,1769

src/cpp-ethereum/libethereum/BasicGasPricer.h,302
class BasicGasPricer:BasicGasPricer32,835
	explicit BasicGasPricer(35,884
	void setRefPrice(37,1006
	void setRefBlockFees(38,1286
	u256 ask(40,1580
	u256 bid(41,1676
	u256 m_weiPerRef;46,1917
	u256 m_refsPerBlock;47,1936
	std::array<std::array49,2002
	std::array<u256, 9> m_octiles;49,2002

src/cpp-ethereum/libethereum/Defaults.cpp,71
Defaults* Defaults::s_this 29,870
Defaults::Defaults(Defaults31,909

src/cpp-ethereum/libethereum/BlockQueue.cpp,1778
const char* BlockQueueChannel::name(name36,1064
const char* BlockQueueChannel::name(name38,1136
const char* BlockQueueTraceChannel::name(name40,1215
size_t const c_maxKnownCount 42,1291
size_t const c_maxKnownSize 43,1330
size_t const c_maxUnknownCount 44,1379
size_t const c_maxUnknownSize 45,1420
BlockQueue::BlockQueue(BlockQueue47,1499
BlockQueue::~BlockQueue(~BlockQueue58,1804
void BlockQueue::stop(stop63,1844
void BlockQueue::clear(clear74,2016
void BlockQueue::verifierBody(verifierBody91,2337
void BlockQueue::drainVerified_WITH_BOTH_LOCKS(drainVerified_WITH_BOTH_LOCKS160,3994
ImportResult BlockQueue::import(import175,4382
void BlockQueue::updateBad_WITH_LOCK(updateBad_WITH_LOCK267,7522
void BlockQueue::collectUnknownBad_WITH_BOTH_LOCKS(collectUnknownBad_WITH_BOTH_LOCKS317,9017
bool BlockQueue::doneDrain(doneDrain333,9417
void BlockQueue::tick(tick350,9768
BlockQueueStatus BlockQueue::status(status378,10275
QueueStatus BlockQueue::blockStatus(blockStatus386,10548
bool BlockQueue::knownFull(knownFull401,10877
std::size_t BlockQueue::knownSize(knownSize407,11015
std::size_t BlockQueue::knownCount(knownCount412,11132
bool BlockQueue::unknownFull(unknownFull417,11253
std::size_t BlockQueue::unknownSize(unknownSize423,11397
std::size_t BlockQueue::unknownCount(unknownCount428,11490
void BlockQueue::drain(drain433,11586
bool BlockQueue::invariants(invariants460,12263
void BlockQueue::noteReady_WITH_LOCK(noteReady_WITH_LOCK472,12685
void BlockQueue::retryAllUnknown(retryAllUnknown496,13346
std::ostream& dev::eth::operator<<(operator<<516,13881
u256 BlockQueue::difficulty(difficulty529,14314
bool BlockQueue::isActive(isActive535,14405
std::ostream& dev::eth::operator<< operator<<545,14664

src/cpp-ethereum/libethereum/GasPricer.h,429
enum class TransactionPriority34,853
	Lowest 36,886
	Low 37,899
	Medium 38,909
	High 39,922
	Highest 40,933
static const u256 DefaultGasPrice 43,950
class GasPricer45,1001
	virtual void update(54,1212
class TrivialGasPricer:TrivialGasPricer57,1259
	TrivialGasPricer(61,1341
	void setAsk(63,1425
	void setBid(64,1474
	u256 ask(66,1524
	u256 ask(67,1560
	u256 bid(68,1617
	u256 m_ask 71,1721
	u256 m_bid 72,1752

src/cpp-ethereum/libethereum/TransactionQueue.cpp,1413
const char* TransactionQueueChannel::name(name31,939
const char* TransactionQueueTraceChannel::name(name32,1015
const size_t c_maxVerificationQueueSize 34,1095
TransactionQueue::TransactionQueue(36,1144
	m_futureLimit(39,1277
TransactionQueue::~TransactionQueue(~TransactionQueue49,1546
ImportResult TransactionQueue::import(import58,1700
ImportResult TransactionQueue::check_WITH_LOCK(check_WITH_LOCK90,2569
ImportResult TransactionQueue::import(import101,2839
Transactions TransactionQueue::topTransactions(topTransactions122,3336
h256Hash TransactionQueue::knownTransactions(knownTransactions132,3651
ImportResult TransactionQueue::manageImport_WITH_LOCK(manageImport_WITH_LOCK138,3748
u256 TransactionQueue::maxNonce(maxNonce204,5617
u256 TransactionQueue::maxNonce_WITH_LOCK(maxNonce_WITH_LOCK210,5733
void TransactionQueue::insertCurrent_WITH_LOCK(insertCurrent_WITH_LOCK222,6124
bool TransactionQueue::remove_WITH_LOCK(remove_WITH_LOCK242,6773
unsigned TransactionQueue::waiting(waiting260,7292
void TransactionQueue::setFuture(setFuture273,7616
void TransactionQueue::makeCurrent_WITH_LOCK(makeCurrent_WITH_LOCK299,8463
void TransactionQueue::drop(drop342,9786
void TransactionQueue::dropGood(dropGood354,9987
void TransactionQueue::clear(clear363,10170
void TransactionQueue::enqueue(enqueue374,10368
void TransactionQueue::verifierBody(verifierBody395,10926

src/cpp-ethereum/libethereum/LogFilter.h,317
class LogFilter50,1214
	LogFilter(53,1240
	h256 earliest(59,1478
	h256 latest(62,1576
	LogFilter address(76,2098
	LogFilter topic(77,2171
	LogFilter withEarliest(78,2284
	LogFilter withLatest(79,2352
	AddressHash m_addresses;84,2522
	std::array<std::array85,2548
	std::array<h256Hash, 4> m_topics;85,2548

src/cpp-ethereum/libethereum/LogFilter.cpp,392
std::ostream& dev::eth::operator<<(operator<<30,885
void LogFilter::streamRLP(streamRLP37,1099
h256 LogFilter::sha3(sha342,1223
bool LogFilter::isRangeFilter(isRangeFilter49,1314
bool LogFilter::matches(matches61,1478
bool LogFilter::matches(matches83,1861
vector<LogBloom> LogFilter::bloomPossibilities(bloomPossibilities88,1970
LogEntries LogFilter::matches(matches147,3244

src/cpp-ethereum/libethereum/ClientBase.h,2454
struct InstalledFilter38,974
	InstalledFilter(40,999
	LogFilter filter;42,1053
	LocalisedLogEntries changes;44,1096
static const h256 PendingChangedFilter 47,1130
static const h256 ChainChangedFilter 48,1180
static const LogEntry SpecialLogEntry 50,1229
struct ClientWatch53,1372
	ClientWatch(55,1393
	explicit ClientWatch(56,1455
	h256 id;58,1630
	LocalisedLogEntries changes 60,1669
	LocalisedLogEntries changes;62,1744
	mutable std::chrono::system_clock::time_point lastPoll 64,1781
struct WatchChannel:WatchChannel67,1877
struct WatchChannel: public LogChannel { static const char* name(); static const int verbosity 67,1877
#define cwatch 68,1980
struct WorkInChannel:WorkInChannel69,2033
struct WorkInChannel: public LogChannel { static const char* name(); static const int verbosity 69,2033
struct WorkOutChannel:WorkOutChannel70,2138
struct WorkOutChannel: public LogChannel { static const char* name(); static const int verbosity 70,2138
struct WorkChannel:WorkChannel71,2244
struct WorkChannel: public LogChannel { static const char* name(); static const int verbosity 71,2244
#define cwork 72,2347
#define cworkin 73,2398
#define cworkout 74,2453
class ClientBase:ClientBase76,2511
	ClientBase(79,2556
	virtual ~ClientBase(80,2656
	virtual std::pair<std::pair84,2761
	using Interface::submitTransaction;85,2877
	using Interface::call;89,3182
	virtual std::pair<std::pair97,3698
	using Interface::create;99,3932
	using Interface::balanceAt;101,3959
	using Interface::countAt;102,3988
	using Interface::stateAt;103,4015
	using Interface::codeAt;104,4042
	using Interface::codeHashAt;105,4068
	using Interface::storageAt;106,4098
	virtual std::map<std::map114,4566
	virtual std::pair<std::pair138,6281
	virtual EVMSchedule evmSchedule(151,7042
	virtual ImportResult injectTransaction(153,7155
	using Interface::addresses;156,7384
	virtual u256 gasBidPrice(159,7528
	virtual void startSealing(169,7950
	virtual void stopSealing(170,8066
	virtual bool wouldSeal(171,8180
	virtual SyncStatus syncStatus(173,8297
	TransactionQueue m_tq;188,8795
	mutable Mutex x_filtersWatches;191,8923
	std::unordered_map<std::unordered_map192,8977
	std::unordered_map<h256, InstalledFilter> m_filters;192,8977
	std::unordered_map<std::unordered_map193,9079
	std::unordered_map<h256, h256s> m_specialFilters 193,9079
	std::map<std::map195,9310
	std::map<unsigned, ClientWatch> m_watches;195,9310

src/cpp-ethereum/libethereum/Client.h,3582
enum ClientWorkState52,1278
	Active 54,1301
	Deleting,55,1314
	Deleted56,1325
struct ClientNote:ClientNote59,1338
struct ClientNote: public LogChannel { static const char* name(59,1338
struct ClientNote: public LogChannel { static const char* name(); static const int verbosity 59,1338
struct ClientChat:ClientChat60,1439
struct ClientChat: public LogChannel { static const char* name(60,1439
struct ClientChat: public LogChannel { static const char* name(); static const int verbosity 60,1439
struct ClientTrace:ClientTrace61,1540
struct ClientTrace: public LogChannel { static const char* name(61,1540
struct ClientTrace: public LogChannel { static const char* name(); static const int verbosity 61,1540
struct ClientDetail:ClientDetail62,1642
struct ClientDetail: public LogChannel { static const char* name(62,1642
struct ClientDetail: public LogChannel { static const char* name(); static const int verbosity 62,1642
struct ActivityReport64,1747
	unsigned ticks 66,1771
	std::chrono::system_clock::time_point since 67,1792
class Client:Client75,2012
	ChainParams const& chainParams(91,2445
	void setGasPricer(94,2566
	std::shared_ptr<GasPricer> gasPricer(95,2633
	using Interface::call;103,2908
	virtual u256 gasLimitRemaining(108,3336
	virtual u256 gasBidPrice(110,3455
	dev::eth::Block postState(123,4126
	BlockChain const& blockChain(125,4276
	BlockQueueStatus blockQueueStatus(127,4377
	BlockQueue const& blockQueue(131,4561
	OverlayDB const& stateDB(133,4642
	TransactionQueue::Status transactionQueueStatus(135,4750
	TransactionQueue::Limits transactionQueueLimits(136,4833
	std::tuple<std::tuple139,4977
	virtual Address author(144,5135
	virtual void setAuthor(145,5231
	strings sealers(148,5393
	std::string sealer(150,5482
	void setSealer(152,5565
	bytes sealOption(154,5707
	bool setSealOption(156,5829
	void stopSealing(161,6067
	bool wouldSeal(163,6146
	SealEngineFace* sealEngine(176,6534
	void killChain(184,6792
	void retryUnknown(189,7061
	ActivityReport activityReport(191,7141
	void setExtraData(193,7290
	void rescue(197,7443
	using ClientBase::block;203,7702
	BlockChain& bc(211,7980
	BlockChain const& bc(212,8024
	virtual Block preSeal(216,8225
	virtual Block postSeal(217,8311
	void doWork(241,9351
	void onTransactionQueueReady(272,10360
	void onBlockQueueReady(275,10526
	BlockChain m_bc;294,11141
	BlockQueue m_bq;295,11220
	std::shared_ptr<GasPricer> m_gp;296,11328
	OverlayDB m_stateDB;298,11385
	mutable SharedMutex x_preSeal;299,11499
	Block m_preSeal;300,11557
	mutable SharedMutex x_postSeal;301,11618
	Block m_postSeal;302,11678
	mutable SharedMutex x_working;303,11792
	Block m_working;304,11850
	BlockHeader m_sealingInfo;305,11999
	bool m_remoteWorking 307,12181
	std::atomic<bool> m_needStateReset 308,12262
	std::chrono::system_clock::time_point m_lastGetWork;309,12366
	std::weak_ptr<EthereumHost> m_host;311,12470
	Handler<> m_tqReady;313,12569
	Handler<h256 const&> m_tqReplaced;314,12591
	Handler<> m_bqReady;315,12627
	bool m_wouldSeal 317,12650
	bool m_wouldButShouldnot 318,12717
	mutable std::chrono::system_clock::time_point m_lastGarbageCollection;320,12862
	mutable std::chrono::system_clock::time_point m_lastTick 322,12997
	unsigned m_syncAmount 325,13133
	ActivityReport m_report;327,13208
	SharedMutex x_functionQueue;329,13235
	std::condition_variable m_signalled;332,13376
	Mutex x_signalled;333,13414
	std::atomic<bool> m_syncTransactionQueue 334,13434
	std::atomic<bool> m_syncBlockQueue 335,13487
	bytes m_extraData;337,13535

src/cpp-ethereum/libethereum/ClientTest.h,294
class ClientTest:ClientTest35,941
	ClientTest(39,1020
	void setChainParams(49,1324
	void mineBlocks(50,1375
	void modifyTimestamp(51,1410
	void rewindToBlock(52,1457
	bool addBlock(53,1496
	bool completeSync(54,1537
	unsigned m_blocksToMine;57,1571
	virtual void onNewBlocks(58,1597

src/cpp-ethereum/libethereum/GenericFarm.h,858
class GenericFarm:GenericFarm45,1134
	struct SealerDescriptor52,1316
	~GenericFarm(58,1457
	void setWork(67,1598
	void setSealers(78,1813
	bool start(83,1961
	void stop(107,2553
	bool isMining(115,2662
	WorkingProgress const& miningProgress(124,2840
	void resetMiningProgress(141,3260
	void onSolutionFound(156,3698
	WorkPackage work(158,3786
	bool submitProof(166,4099
	void resetTimer(182,4439
	mutable SharedMutex x_minerWork;187,4515
	std::vector<std::shared_ptr<Miner>> m_miners;188,4549
	WorkPackage m_work;189,4596
	mutable SharedMutex x_progress;193,4660
	mutable WorkingProgress m_progress;194,4693
	std::chrono::steady_clock::time_point m_lastStart;195,4730
	SolutionFound m_onSolutionFound;197,4783
	std::map<std::map199,4818
	std::map<std::string, SealerDescriptor> m_sealers;199,4818
	std::string m_lastSealer;200,4870

src/cpp-ethereum/libethereum/BlockChainSync.h,1592
class BlockChainSync:BlockChainSync49,1266
	BlockChainSync(52,1319
	~BlockChainSync(53,1357
	void abortSync(54,1377
	bool isSyncing(57,1468
	static char const* stateName(89,2489
	EthereumHost& host(98,2701
	EthereumHost const& host(99,2742
	struct Header109,3061
		bytes data;111,3079
		h256 hash;112,3111
		h256 parent;113,3141
	struct HeaderId117,3241
		h256 transactionsRoot;119,3261
		h256 uncles;120,3286
		bool operator==(operator==122,3302
	struct HeaderIdHash128,3445
		std::size_t operator()(operator()130,3469
	EthereumHost& m_host;140,3699
	Handler<> m_bqRoomAvailable;141,3722
	mutable RecursiveMutex x_sync;142,3813
	h256Hash m_knownNewHashes;144,3908
	std::unordered_set<unsigned> m_downloadingHeaders;147,4153
	std::unordered_set<unsigned> m_downloadingBodies;148,4254
	std::map<std::map149,4356
	std::map<unsigned, std::vector<Header>> m_headers;149,4356
	std::map<std::map150,4436
	std::map<unsigned, std::vector<bytes>> m_bodies;150,4436
	std::map<std::map151,4519
	std::map<std::weak_ptr<EthereumPeer>, std::vector<unsigned>, std::owner_less<std::weak_ptr<EthereumPeer>>> m_headerSyncPeers;151,4519
	std::map<std::map152,4693
	std::map<std::weak_ptr<EthereumPeer>, std::vector<unsigned>, std::owner_less<std::weak_ptr<EthereumPeer>>> m_bodySyncPeers;152,4693
	std::unordered_map<std::unordered_map153,4865
	std::unordered_map<HeaderId, unsigned, HeaderIdHash> m_headerIdToNumber;153,4865
	h256 m_lastImportedBlockHash;156,5111
	u256 m_syncingTotalDifficulty;157,5175
	static char const* const s_stateNames[s_stateNames160,5249

src/cpp-ethereum/libethereum/Transaction.h,1316
enum class TransactionException35,961
	None 37,995
	Unknown,38,1006
	BadRLP,39,1016
	InvalidFormat,40,1025
	OutOfGasIntrinsic,41,1041
	InvalidSignature,42,1120
	InvalidNonce,43,1139
	NotEnoughCash,44,1154
	OutOfGasBase,45,1170
	BlockGasLimitReached,46,1245
	BadInstruction,47,1268
	BadJumpDestination,48,1285
	OutOfGas,49,1306
	OutOfStack,50,1375
	StackUnderflow,51,1448
	CreateWithValue,52,1465
	NoInformation53,1483
enum class CodeDeposit56,1502
	None 58,1527
	Failed,59,1538
	Success60,1547
struct ExecutionResult69,1785
	u256 gasUsed 71,1810
	TransactionException excepted 72,1829
	Address newAddress;73,1893
	bytes output;74,1914
	CodeDeposit codeDeposit 75,1929
	u256 gasRefunded 76,2042
	unsigned depositSize 77,2065
	u256 gasForDeposit;78,2159
class Transaction:Transaction84,2408
	Transaction(88,2496
	Transaction(91,2578
	Transaction(94,2733
	Transaction(99,3028
	Transaction(104,3292
	Transaction(109,3571
	explicit Transaction(117,3934
using Transactions 121,4082
class LocalisedTransaction:LocalisedTransaction123,4130
	LocalisedTransaction(126,4187
	h256 const& blockHash(138,4448
	unsigned transactionIndex(139,4503
	BlockNumber blockNumber(140,4569
	h256 m_blockHash;143,4638
	unsigned m_transactionIndex;144,4657
	BlockNumber m_blockNumber;145,4687

src/cpp-ethereum/libethereum/Executive.cpp,908
const char* VMTraceChannel::name(name38,1133
const char* ExecutiveWarnChannel::name(name39,1186
StandardTrace::StandardTrace(StandardTrace42,1278
StandardTrace::StandardTrace(45,1318
bool changesMemory(50,1395
bool changesStorage(66,1835
void StandardTrace::operator()(operator()71,1917
string StandardTrace::json(json150,4023
Executive::Executive(159,4212
Executive::Executive(167,4429
Executive::Executive(175,4610
u256 Executive::gasUsed(gasUsed183,4946
void Executive::accrueSubState(accrueSubState188,5010
void Executive::initialize(initialize194,5116
bool Executive::execute(execute247,7370
bool Executive::call(call261,7955
bool Executive::call(call267,8247
bool Executive::create(create333,10547
OnOpFunc Executive::simpleTrace(simpleTrace366,11815
bool Executive::go(go386,12842
void Executive::finalize(finalize466,15229
void Executive::revert(revert503,16124

src/cpp-ethereum/libethereum/Transaction.cpp,266
#define ETH_ADDRESS_DEBUG 34,1054
std::ostream& dev::eth::operator<<(operator<<36,1083
TransactionException dev::eth::toTransactionException(toTransactionException42,1276
std::ostream& dev::eth::operator<<(operator<<76,2721
Transaction::Transaction(101,4095

src/cpp-ethereum/libethereum/EthereumPeer.cpp,1199
static const unsigned c_maxIncomingNewHashes 36,1028
static const unsigned c_maxHeadersToSend 37,1081
static string toString(39,1131
EthereumPeer::EthereumPeer(53,1466
EthereumPeer::~EthereumPeer(~EthereumPeer60,1738
void EthereumPeer::init(init70,1928
bool EthereumPeer::isRude(isRude78,2367
unsigned EthereumPeer::askOverride(askOverride86,2491
void EthereumPeer::setRude(setRude98,2853
void EthereumPeer::abortSync(abortSync110,3171
void EthereumPeer::setIdle(setIdle121,3314
void EthereumPeer::requestStatus(requestStatus126,3377
void EthereumPeer::requestBlockHeaders(requestBlockHeaders142,3914
void EthereumPeer::requestBlockHeaders(requestBlockHeaders156,4474
void EthereumPeer::requestBlockBodies(requestBlockBodies171,5032
void EthereumPeer::requestNodeData(requestNodeData176,5167
void EthereumPeer::requestReceipts(requestReceipts181,5293
void EthereumPeer::requestByHashes(requestByHashes186,5419
void EthereumPeer::setAsking(setAsking205,5854
void EthereumPeer::tick(tick218,6181
bool EthereumPeer::isConversing(isConversing227,6423
bool EthereumPeer::isCriticalSyncing(isCriticalSyncing232,6505
bool EthereumPeer::interpret(interpret237,6690

src/cpp-ethereum/libethereum/BlockDetails.cpp,85
BlockDetails::BlockDetails(BlockDetails29,874
bytes BlockDetails::rlp(rlp38,1083

src/cpp-ethereum/libethereum/TransactionReceipt.h,920
class TransactionReceipt35,906
	TransactionReceipt(38,941
	TransactionReceipt(39,982
	h256 const& stateRoot(41,1055
	u256 const& gasUsed(42,1110
	LogBloom const& bloom(43,1161
	LogEntries const& log(44,1212
	void streamRLP(46,1262
	h256 m_stateRoot;51,1377
	u256 m_gasUsed;52,1396
	LogBloom m_bloom;53,1413
	LogEntries m_log;54,1432
using TransactionReceipts 57,1455
class LocalisedTransactionReceipt:LocalisedTransactionReceipt61,1599
	LocalisedTransactionReceipt(64,1670
	h256 const& hash(91,2301
	h256 const& blockHash(92,2346
	BlockNumber blockNumber(93,2401
	unsigned transactionIndex(94,2460
	Address const& contractAddress(95,2526
	LocalisedLogEntries const& localisedLogs(96,2596
	h256 m_hash;99,2685
	h256 m_blockHash;100,2699
	BlockNumber m_blockNumber;101,2718
	unsigned m_transactionIndex 102,2746
	Address m_contractAddress;103,2780
	LocalisedLogEntries m_localisedLogs;104,2808

src/cpp-ethereum/libethereum/ClientBase.cpp,3293
const char* WatchChannel::name(name33,972
const char* WorkInChannel::name(name34,1045
const char* WorkOutChannel::name(name35,1125
const char* WorkChannel::name(name36,1205
static const int64_t c_maxGasEstimate 38,1280
pair<h256, Address> ClientBase::submitTransaction(submitTransaction40,1331
ExecutionResult ClientBase::call(call60,1972
ExecutionResult ClientBase::create(create82,2783
std::pair<u256, ExecutionResult> ClientBase::estimateGas(estimateGas103,3576
ImportResult ClientBase::injectBlock(injectBlock158,5565
u256 ClientBase::balanceAt(balanceAt163,5686
u256 ClientBase::countAt(countAt168,5791
u256 ClientBase::stateAt(stateAt173,5903
h256 ClientBase::stateRootAt(stateRootAt178,6019
bytes ClientBase::codeAt(codeAt183,6130
h256 ClientBase::codeHashAt(codeHashAt188,6230
map<h256, pair<u256, u256>> ClientBase::storageAt(storageAt193,6337
LocalisedLogEntries ClientBase::logs(logs199,6509
LocalisedLogEntries ClientBase::logs(logs214,6752
void ClientBase::prependLogsFromBlock(prependLogsFromBlock277,8827
unsigned ClientBase::installWatch(installWatch290,9387
unsigned ClientBase::installWatch(installWatch304,9649
bool ClientBase::uninstallWatch(uninstallWatch325,10083
LocalisedLogEntries ClientBase::peekWatch(peekWatch347,10516
LocalisedLogEntries ClientBase::checkWatch(checkWatch359,10949
BlockHeader ClientBase::blockInfo(blockInfo374,11427
BlockDetails ClientBase::blockDetails(blockDetails381,11583
Transaction ClientBase::transaction(transaction386,11673
LocalisedTransaction ClientBase::localisedTransaction(localisedTransaction391,11825
Transaction ClientBase::transaction(transaction397,12047
LocalisedTransaction ClientBase::localisedTransaction(localisedTransaction407,12293
TransactionReceipt ClientBase::transactionReceipt(transactionReceipt413,12561
LocalisedTransactionReceipt ClientBase::localisedTransactionReceipt(localisedTransactionReceipt418,12703
pair<h256, unsigned> ClientBase::transactionLocation(transactionLocation432,13196
Transactions ClientBase::transactions(transactions437,13342
TransactionHashes ClientBase::transactionHashes(transactionHashes447,13597
BlockHeader ClientBase::uncle(uncle452,13717
UncleHashes ClientBase::uncleHashes(uncleHashes462,13944
unsigned ClientBase::transactionCount(transactionCount467,14046
unsigned ClientBase::uncleCount(uncleCount474,14185
unsigned ClientBase::number(number481,14318
Transactions ClientBase::pending(pending486,14382
h256s ClientBase::pendingHashes(pendingHashes491,14458
BlockHeader ClientBase::pendingInfo(pendingInfo496,14549
BlockDetails ClientBase::pendingDetails(pendingDetails501,14625
Addresses ClientBase::addresses(addresses508,14866
u256 ClientBase::gasLimitRemaining(gasLimitRemaining516,15032
Address ClientBase::author(author521,15120
h256 ClientBase::hashFromNumber(hashFromNumber526,15188
BlockNumber ClientBase::numberFromHash(numberFromHash535,15391
int ClientBase::compareBlockHashes(compareBlockHashes546,15676
bool ClientBase::isKnown(isKnown558,15891
bool ClientBase::isKnown(isKnown566,16068
bool ClientBase::isKnownTransaction(isKnownTransaction573,16222
bool ClientBase::isKnownTransaction(isKnownTransaction578,16350
Block ClientBase::block(block583,16506

src/cpp-ethereum/libethereum/ClientTest.cpp,456
ClientTest& dev::eth::asClientTest(asClientTest30,923
ClientTest* dev::eth::asClientTest(asClientTest35,1017
ClientTest::ClientTest(40,1113
void ClientTest::setChainParams(setChainParams52,1435
bool ClientTest::addBlock(addBlock70,1977
void ClientTest::modifyTimestamp(modifyTimestamp80,2227
void ClientTest::mineBlocks(mineBlocks106,2803
void ClientTest::onNewBlocks(onNewBlocks112,2896
bool ClientTest::completeSync(completeSync120,3062

src/cpp-ethereum/libethereum/Block.h,2135
struct BlockChat:BlockChat54,1379
struct BlockChat: public LogChannel { static const char* name(54,1379
struct BlockTrace:BlockTrace55,1479
struct BlockTrace: public LogChannel { static const char* name(55,1479
struct BlockDetail:BlockDetail56,1580
struct BlockDetail: public LogChannel { static const char* name(56,1580
struct BlockSafeExceptions:BlockSafeExceptions57,1683
struct BlockSafeExceptions: public LogChannel { static const char* name(57,1683
struct PopulationStatistics59,1795
	double verify;61,1825
	double enact;62,1841
class Block73,2220
	Block(85,2540
	enum NullType 101,3519
	enum NullType { Null 101,3519
	Block(102,3544
	explicit Block(105,3715
	Address author(114,3974
	void setAuthor(118,4147
	u256 balance(128,4523
	u256 transactionsFrom(132,4759
	bool addressInUse(135,4890
	bool addressHasCode(138,5036
	h256 storageRoot(141,5182
	u256 storage(145,5386
	std::map<std::map150,5704
	std::map<h256, std::pair<u256, u256>> storage(150,5704
	bytes const& code(154,5916
	h256 codeHash(158,6155
	State const& state(163,6314
	OverlayDB const& db(166,6467
	h256 rootHash(169,6567
	std::unordered_map<std::unordered_map173,6765
	std::unordered_map<Address, u256> addresses(173,6765
	State& mutableState(180,7114
	u256 gasLimitRemaining(185,7255
	Transactions const& pending(188,7381
	h256Hash const& pendingHashes(191,7499
	TransactionReceipt const& receipt(194,7641
	LogEntries const& log(197,7766
	LogBloom const& logBloom(203,8019
	std::pair<std::pair221,9154
	bool sealBlock(268,11294
	bool isSealed(272,11488
	bytes const& blockData(276,11649
	BlockHeader const& info(279,11763
	u256 gasUsed(304,12881
	State m_state;312,13261
	Transactions m_transactions;313,13325
	TransactionReceipts m_receipts;314,13430
	h256Hash m_transactionSet;315,13519
	State m_precommit;316,13620
	BlockHeader m_previousBlock;318,13701
	BlockHeader m_currentBlock;319,13773
	bytes m_currentBytes;320,13844
	bool m_committedToSeal 321,13904
	bytes m_currentTxs;323,14003
	bytes m_currentUncles;324,14074
	Address m_author;326,14142
	SealEngineFace* m_sealEngine 328,14222

src/cpp-ethereum/libethereum/TransactionQueue.h,2674
struct TransactionQueueChannel:TransactionQueueChannel39,1030
struct TransactionQueueChannel: public LogChannel { static const char* name(39,1030
struct TransactionQueueTraceChannel:TransactionQueueTraceChannel40,1144
struct TransactionQueueTraceChannel: public LogChannel { static const char* name(40,1144
#define ctxq 41,1263
class TransactionQueue48,1493
	struct Limits 51,1526
	struct Limits { size_t current;51,1526
	struct Limits { size_t current; size_t future;51,1526
	TransactionQueue(56,1749
	TransactionQueue(57,1822
	~TransactionQueue(58,1902
	void enqueue(62,2117
	ImportResult import(68,2402
	ImportResult import(74,2725
	void drop(78,2883
	unsigned waiting(82,3011
	struct Status106,4122
		size_t current;108,4140
		size_t future;109,4158
		size_t unverified;110,4175
		size_t dropped;111,4196
	Status status(114,4269
	Limits limits(117,4562
	void clear(120,4650
	template <class T> Handler<> onReady(123,4751
	template <class T> Handler<ImportResult,ImportResult126,4953
	template <class T> Handler<ImportResult, h256 const&, h512 const&> onImport(126,4953
	template <class T> Handler<h256 const&> onReplaced(129,5195
	struct VerifiedTransaction134,5343
		VerifiedTransaction(136,5374
		VerifiedTransaction(137,5439
		Transaction transaction;142,5663
	struct UnverifiedTransaction146,5755
		UnverifiedTransaction(148,5788
		UnverifiedTransaction(149,5817
		UnverifiedTransaction(150,5934
		UnverifiedTransaction& operator=(operator=151,6059
		bytes transaction;163,6407
		h512 nodeId;164,6462
	struct PriorityCompare167,6534
		TransactionQueue& queue;169,6561
		bool operator()(operator()171,6645
	mutable SharedMutex m_lock;192,7840
	h256Hash m_known;193,7900
	std::unordered_map<std::unordered_map195,7977
	h256Hash m_dropped;196,8069
	PriorityQueue m_current;198,8157
	std::unordered_map<std::unordered_map199,8183
	std::unordered_map<h256, PriorityQueue::iterator> m_currentByHash;199,8183
	std::unordered_map<std::unordered_map200,8286
	std::unordered_map<Address, std::map<u256, PriorityQueue::iterator>> m_currentByAddressAndNonce;200,8286
	std::unordered_map<std::unordered_map201,8431
	std::unordered_map<Address, std::map<u256, VerifiedTransaction>> m_future;201,8431
	Signal<> m_onReady;203,8532
	Signal<Signal204,8683
	Signal<ImportResult, h256 const&, h512 const&> m_onImport;204,8683
	Signal<h256 const&> m_onReplaced;205,8856
	unsigned m_limit;206,9004
	unsigned m_futureLimit;207,9077
	std::condition_variable m_queueReady;210,9238
	std::vector<std::thread> m_verifiers;211,9335
	std::deque<UnverifiedTransaction> m_unverified;212,9374
	mutable Mutex x_queue;213,9462

src/cpp-ethereum/libethereum/Account.h,1426
class Account67,3120
	enum Changedness71,3183
		Changed,74,3256
		Unchanged76,3323
	Account(80,3371
	Account(85,3578
	Account(88,3813
	void kill(92,4172
	bool isAlive(97,4546
	bool isDirty(100,4653
	void untouch(102,4703
	bool isEmpty(106,4866
	u256 const& balance(109,5002
	void addBalance(112,5119
	u256 nonce(115,5226
	void incNonce(118,5315
	void setNonce(122,5452
	h256 baseRoot(127,5720
	std::unordered_map<std::unordered_map130,5849
	std::unordered_map<u256, u256> const& storageOverlay(130,5849
	void setStorage(134,6069
	void setStorageCache(138,6259
	h256 codeHash(141,6424
	bool hasNewCode(143,6471
	void resetCode(149,6670
	void noteCode(153,6937
	bytes const& code(156,7078
	void changed(160,7181
	u256 m_nonce;172,7556
	std::unordered_map<std::unordered_map190,8309
	std::unordered_map<u256, u256> m_storageOverlay;190,8309
	bytes m_codeCache;194,8510
	static const h256 c_contractConceptionCodeHash;197,8606
class AccountMask200,8659
	AccountMask(203,8687
	AccountMask(210,8807
	bool allSet(224,9078
	bool hasBalance(225,9167
	bool hasNonce(226,9217
	bool hasCode(227,9263
	bool hasStorage(228,9307
	bool shouldExist(229,9357
	bool m_hasBalance;232,9423
	bool m_hasNonce;233,9443
	bool m_hasCode;234,9461
	bool m_hasStorage;235,9478
	bool m_shouldNotExist 236,9498
using AccountMap 239,9534
using AccountMaskMap 240,9591
using PrecompiledContractMap 243,9684

src/cpp-ethereum/libethereum/BasicGasPricer.cpp,44
void BasicGasPricer::update(update34,1067

src/cpp-ethereum/libethereum/EthereumHost.h,1466
struct EthereumHostTrace:EthereumHostTrace54,1297
struct EthereumHostTrace: public LogChannel { static const char* name(54,1297
class EthereumHost:EthereumHost61,1575
	EthereumHost(65,1691
	virtual ~EthereumHost(68,1852
	unsigned protocolVersion(70,1879
	u256 networkId(71,1943
	void setNetworkId(72,1991
	void reset(74,2042
	void completeSync(76,2106
	bool isSyncing(78,2129
	void noteNewTransactions(81,2234
	void noteNewBlocks(82,2292
	void onBlockImported(83,2338
	BlockChain const& chain(85,2423
	OverlayDB const& db(86,2476
	BlockQueue& bq(87,2522
	BlockQueue const& bq(88,2557
	h256 latestBlockSent(90,2632
	static char const* stateName(91,2686
	static unsigned const c_oldProtocolVersion;93,2778
	static char const* const s_stateNames[s_stateNames100,3102
	std::tuple<std::tuple102,3178
	bool isInitialised(112,3851
	virtual void onStarting(117,4067
	virtual void onStopping(118,4123
	BlockChain const& m_chain;120,4179
	OverlayDB const& m_db;121,4207
	TransactionQueue& m_tq;122,4310
	BlockQueue& m_bq;123,4424
	u256 m_networkId;125,4534
	h256 m_latestBlockSent;127,4554
	h256Hash m_transactionsSent;128,4579
	std::unordered_set<p2p::NodeID> m_banned;130,4610
	mutable RecursiveMutex x_sync;135,4715
	mutable Mutex x_transactions;136,4747
	std::unique_ptr<BlockChainSync> m_sync;137,4778
	std::shared_ptr<EthereumHostDataFace> m_hostData;140,4861
	std::shared_ptr<EthereumPeerObserverFace> m_peerObserver;141,4912

src/cpp-ethereum/libethereum/State.h,1788
struct StateChat:StateChat71,2527
struct StateTrace:StateTrace72,2627
struct StateDetail:StateDetail73,2728
struct StateSafeExceptions:StateSafeExceptions74,2831
enum class BaseState76,2943
	PreExisting,78,2966
	Empty79,2980
enum class Permanence82,2991
	Reverted,84,3015
	Committed85,3026
template <class KeyType, class DB> using SecureTrieDB 89,3055
template <class KeyType, class DB> using SecureTrieDB 91,3164
namespace detail100,3415
struct Change104,3472
	enum Kind:Kind106,3488
		Balance,110,3608
		Storage,114,3733
		Nonce,117,3785
		Create,120,3851
		NewCode,123,3934
		Touch126,3992
	Kind kind;129,4005
	Address address;130,4053
	u256 value;131,4102
	u256 key;132,4163
	Change(135,4302
	Change(140,4479
class State161,5182
	enum class CommitBehaviour169,5327
		KeepEmptyAccounts,171,5358
		RemoveEmptyAccounts172,5379
	explicit State(176,5499
	enum NullType 184,6016
	enum NullType { Null 184,6016
	State(185,6041
	OverlayDB const& db(195,6445
	OverlayDB& db(196,6491
	std::unordered_map<std::unordered_map204,6913
	std::pair<std::pair208,7047
	virtual void transferBalance(240,8615
	std::map<std::map264,9758
	h256 rootHash(288,10750
	u256 const& accountStartNonce(298,11134
	virtual ~State(309,11565
	OverlayDB m_db;329,12354
	SecureTrieDB<SecureTrieDB330,12415
	SecureTrieDB<Address, OverlayDB> m_state;330,12415
	mutable std::unordered_map<std::unordered_map331,12499
	mutable std::unordered_map<Address, Account> m_cache;331,12499
	mutable std::vector<Address> m_unchangedCacheEntries;332,12665
	mutable std::set<Address> m_nonExistingAccountsCache;333,12805
	AddressHash m_touched;334,12911
	u256 m_accountStartNonce;336,12983
	std::vector<detail::Change> m_changeLog;339,13082
AddressHash commit(345,13212

src/cpp-ethereum/libethereum/ChainParams.h,321
struct ChainParams:ChainParams37,979
	ChainParams(39,1029
	ChainParams(41,1098
	ChainParams(42,1168
	ChainParams(43,1279
	SealEngineFace* createSealEngine(45,1437
	bytes extraData;54,1640
	mutable h256 stateRoot;55,1658
	AccountMap genesisState;56,1795
	bytes sealRLP;59,1848
	h256 calculateStateRoot(61,1865

src/cpp-ethereum/libethereum/ExtVM.cpp,508
static unsigned const c_depthLimit 32,883
static size_t const c_singleExecutionStackSize 35,1018
static size_t const c_defaultStackSize 38,1111
static size_t const c_entryOverhead 48,1321
static unsigned const c_offloadPoint 51,1457
void goOnOffloadedStack(53,1566
void go(76,2277
boost::optional<owning_bytes_ref> ExtVM::call(call95,2835
size_t ExtVM::codeSizeAt(codeSizeAt111,3130
void ExtVM::setStore(setStore116,3203
h160 ExtVM::create(create121,3283
void ExtVM::suicide(suicide133,3606

src/cpp-ethereum/libethereum/ChainParams.cpp,536
ChainParams::ChainParams(ChainParams38,1136
ChainParams::ChainParams(ChainParams49,1790
ChainParams ChainParams::loadConfig(loadConfig54,1905
ChainParams ChainParams::loadGenesisState(loadGenesisState80,3106
ChainParams ChainParams::loadGenesis(loadGenesis88,3403
SealEngineFace* ChainParams::createSealEngine(createSealEngine116,4651
void ChainParams::populateFromGenesis(populateFromGenesis131,4974
h256 ChainParams::calculateStateRoot(calculateStateRoot161,5851
bytes ChainParams::genesisBlock(genesisBlock176,6171

src/cpp-ethereum/libethereum/Defaults.h,210
struct Defaults31,820
	Defaults(37,894
	static Defaults* get(39,908
	static void setDBPath(40,987
	static std::string const& dbPath(41,1069
	std::string m_dbPath;44,1143
	static Defaults* s_this;46,1167

src/cpp-ethereum/libethereum/Client.cpp,2775
std::ostream& dev::eth::operator<<(operator<<41,1182
const char* ClientNote::name(name49,1495
const char* ClientChat::name(name50,1563
const char* ClientTrace::name(name51,1632
const char* ClientDetail::name(name52,1701
const char* ClientNote::name(name54,1777
const char* ClientChat::name(name55,1849
const char* ClientTrace::name(name56,1922
const char* ClientDetail::name(name57,1995
Client::Client(60,2077
	m_working(75,2648
Client::~Client(~Client80,2746
void Client::init(init85,2785
ImportResult Client::queueBlock(queueBlock127,4586
tuple<ImportRoute, bool, unsigned> Client::syncQueue(syncQueue134,4845
void Client::onBadBlock(onBadBlock140,4976
void Client::callQueuedFunctions(callQueuedFunctions154,5311
u256 Client::networkId(networkId172,5567
void Client::setNetworkId(setNetworkId179,5668
bool Client::isSyncing(isSyncing185,5767
bool Client::isMajorSyncing(isMajorSyncing192,5872
void Client::startedWorking(startedWorking202,6102
void Client::doneWorking(doneWorking219,6533
void Client::reopenChain(reopenChain234,6918
void Client::reopenChain(reopenChain239,7005
void Client::executeInMainThread(executeInMainThread281,7955
void Client::clearPending(clearPending288,8127
static S& filtersStreamOut(305,8407
void Client::appendFromNewPending(appendFromNewPending323,8752
void Client::appendFromBlock(appendFromBlock342,9288
ExecutionResult Client::call(call369,10187
unsigned static const c_syncMin 392,10923
unsigned static const c_syncMax 393,10960
double static const c_targetDuration 394,11000
void Client::syncBlockQueue(syncBlockQueue396,11043
void Client::syncTransactionQueue(syncTransactionQueue420,11760
void Client::onDeadBlocks(onDeadBlocks466,13031
void Client::onNewBlocks(onNewBlocks484,13634
void Client::resyncStateFromChain(resyncStateFromChain497,14011
void Client::resetState(resetState541,15355
void Client::onChainChanged(onChainChanged556,15687
bool Client::remoteActive(remoteActive571,16062
void Client::onPostStateChanged(onPostStateChanged576,16176
void Client::startSealing(startSealing583,16313
void Client::rejigSealing(rejigSealing597,16585
void Client::noteChanged(noteChanged639,17595
void Client::doWork(doWork667,18541
void Client::tick(tick703,19429
void Client::checkWatchGarbage(checkWatchGarbage716,19700
void Client::prepareForTransaction(prepareForTransaction739,20485
Block Client::block(block744,20544
Block Client::block(block760,20801
State Client::state(state778,21163
eth::State Client::state(state792,21433
void Client::flushTransactions(flushTransactions800,21617
SyncStatus Client::syncStatus(syncStatus805,21666
bool Client::submitSealed(submitSealed815,21857
void Client::rewind(rewind834,22326

src/cpp-ethereum/libethereum/Interface.cpp,235
void Interface::submitTransaction(submitTransaction27,831
Address Interface::submitTransaction(submitTransaction40,1212
BlockHeader Interface::blockInfo(blockInfo52,1579
BlockDetails Interface::blockDetails(blockDetails59,1739

src/cpp-ethereum/libethereum/EthereumHost.cpp,2056
unsigned const EthereumHost::c_oldProtocolVersion 41,1152
static unsigned const c_maxSendTransactions 42,1248
char const* const EthereumHost::s_stateNames[EthereumHost::s_stateNames44,1300
const char* EthereumHostTrace::name(name47,1470
const char* EthereumHostTrace::name(name49,1553
class EthereumPeerObserver:EthereumPeerObserver54,1651
	EthereumPeerObserver(57,1721
	void onPeerStatus(59,1872
	void onPeerTransactions(74,2230
	void onPeerAborting(81,2476
	void onPeerBlockHeaders(94,2719
	void onPeerBlockBodies(109,3120
	void onPeerNewHashes(124,3507
	void onPeerNewBlock(139,3931
	void onPeerNodeData(154,4312
	void onPeerReceipts(160,4524
	BlockChainSync& m_sync;167,4744
	RecursiveMutex& m_syncMutex;168,4769
	TransactionQueue& m_tq;169,4799
class EthereumHostData:EthereumHostData172,4828
	EthereumHostData(175,4890
	pair<pair177,4988
	pair<bytes, unsigned> blockHeaders(177,4988
	pair<pair294,8455
	pair<bytes, unsigned> blockBodies(294,8455
	strings nodeData(325,9520
	pair<pair347,10213
	pair<bytes, unsigned> receipts(347,10213
	BlockChain const& m_chain;371,11012
	OverlayDB const& m_db;372,11040
EthereumHost::EthereumHost(377,11071
EthereumHost::~EthereumHost(~EthereumHost395,11835
bool EthereumHost::ensureInitialised(ensureInitialised399,11870
void EthereumHost::reset(reset414,12207
void EthereumHost::completeSync(completeSync424,12374
void EthereumHost::doWork(doWork430,12465
void EthereumHost::maintainTransactions(maintainTransactions461,13266
void EthereumHost::foreachPeer(foreachPeer504,14485
tuple<vector<shared_ptr<EthereumPeer>>, vector<shared_ptr<EthereumPeer>>, vector<shared_ptr<SessionFace>>> EthereumHost::randomSelection(randomSelection523,15439
void EthereumHost::maintainBlocks(maintainBlocks552,16322
bool EthereumHost::isSyncing(isSyncing601,17832
SyncStatus EthereumHost::status(status606,17903
void EthereumHost::onTransactionImported(onTransactionImported612,18001
shared_ptr<Capability> EthereumHost::newPeerCapability(newPeerCapability644,18808

src/cpp-ethereum/libethereum/BlockChain.h,4294
	size_t operator()(operator()48,1332
namespace dev52,1470
namespace eth57,1505
static const h256s NullH256s;60,1522
struct BlockChainChat:BlockChainChat69,1693
struct BlockChainNote:BlockChainNote70,1798
struct BlockChainWarn:BlockChainWarn71,1903
struct BlockChainDebug:BlockChainDebug72,2008
std::unordered_map<std::unordered_map75,2172
	ExtraDetails 85,2461
	ExtraBlockHash,86,2480
	ExtraTransactionAddress,87,2497
	ExtraLogBlooms,88,2523
	ExtraReceipts,89,2540
	ExtraBlocksBlooms90,2556
using ProgressCallback 93,2579
class VersionChecker95,2646
class BlockChain105,2857
	void reopen(114,3205
	std::tuple<std::tuple123,3813
	std::pair<std::pair127,4115
	BlockHeader info(144,5205
	BlockHeader info(145,5303
	bytes block(149,5505
	bytes headerData(153,5708
	BlockDetails details(156,5877
	BlockDetails details(157,6023
	BlockLogBlooms logBlooms(160,6193
	BlockLogBlooms logBlooms(161,6353
	BlockReceipts receipts(165,6611
	BlockReceipts receipts(166,6764
	TransactionReceipt transactionReceipt(169,6883
	TransactionReceipt transactionReceipt(172,7079
	TransactionHashes transactionHashes(175,7485
	TransactionHashes transactionHashes(176,7661
	UncleHashes uncleHashes(179,7816
	UncleHashes uncleHashes(180,7980
	h256 numberHash(183,8100
	LastHashes lastHashes(186,8372
	BlocksBlooms blocksBlooms(203,8942
	BlocksBlooms blocksBlooms(204,9059
	LogBloom blockBloom(205,9231
	bool isKnownTransaction(210,9675
	bytes transaction(213,9977
	std::pair<std::pair214,10277
	std::pair<h256, unsigned> transactionLocation(214,10277
	bytes transaction(217,10770
	bytes transaction(218,10904
	std::vector<bytes> transactions(221,11026
	std::vector<bytes> transactions(222,11224
	unsigned number(225,11398
	unsigned number(226,11474
	h256 currentHash(229,11580
	h256 genesisHash(232,11718
	std::tuple<std::tuple273,14067
	struct Statistics275,14214
		unsigned memBlocks;277,14236
		unsigned memDetails;278,14258
		unsigned memLogBlooms;279,14281
		unsigned memReceipts;280,14306
		unsigned memTransactionAddresses;281,14330
		unsigned memBlockHashes;282,14366
		unsigned memTotal(283,14393
	Statistics usage(287,14578
	void setOnBad(293,14810
	void setOnBlockImport(296,14949
	ChainParams const& chainParams(307,15466
	SealEngineFace* sealEngine(309,15528
	static h256 chunkId(314,15643
	template<class T, class K, unsigned N> T queryExtras(325,16122
	template<class T, unsigned N> T queryExtras(346,16653
	mutable SharedMutex x_blocks;359,17249
	mutable BlocksHash m_blocks;360,17280
	mutable SharedMutex x_details;361,17310
	mutable BlockDetailsHash m_details;362,17342
	mutable SharedMutex x_logBlooms;363,17379
	mutable BlockLogBloomsHash m_logBlooms;364,17413
	mutable SharedMutex x_receipts;365,17454
	mutable BlockReceiptsHash m_receipts;366,17487
	mutable SharedMutex x_transactionAddresses;367,17526
	mutable TransactionAddressHash m_transactionAddresses;368,17571
	mutable SharedMutex x_blockHashes;369,17627
	mutable BlockHashHash m_blockHashes;370,17663
	mutable SharedMutex x_blocksBlooms;371,17701
	mutable BlocksBloomsHash m_blocksBlooms;372,17738
	using CacheID 374,17781
	mutable Mutex x_cacheUsage;375,17825
	mutable std::deque<std::unordered_set<CacheID>> m_cacheUsage;376,17854
	mutable std::unordered_set<CacheID> m_inUse;377,17917
	void noteUsed(379,18033
	std::chrono::system_clock::time_point m_lastCollection;380,18163
	void noteCanonChanged(382,18221
	mutable Mutex x_lastLastHashes;383,18309
	mutable LastHashes m_lastLastHashes;384,18342
	mutable Statistics m_lastStats;387,18408
	ldb::DB* m_blocksDB;390,18496
	ldb::DB* m_extrasDB;391,18518
	mutable boost::shared_mutex x_lastBlockHash;394,18599
	h256 m_lastBlockHash;395,18645
	unsigned m_lastBlockNumber 396,18668
	ldb::ReadOptions m_readOptions;398,18702
	ldb::WriteOptions m_writeOptions;399,18735
	ChainParams m_params;401,18771
	std::shared_ptr<SealEngineFace> m_sealEngine;402,18794
	mutable SharedMutex x_genesis;403,18865
	mutable BlockHeader m_genesis;404,18897
	mutable bytes m_genesisHeaderBytes;405,18975
	mutable h256 m_genesisHash;406,19058
	std::function<void(Exception&)> m_onBad;408,19135
	std::function<void(BlockHeader const&)> m_onBlockImport;409,19237
	std::string m_dbPath;411,19361

src/cpp-ethereum/libethereum/BlockChainSync.cpp,1822
unsigned const c_maxPeerUknownNewBlocks 40,1139
unsigned const c_maxRequestHeaders 41,1241
unsigned const c_maxRequestBodies 42,1284
std::ostream& dev::eth::operator<<(operator<<45,1328
template<typename T> bool haveItem(57,1734
template<typename T> T const* findItem(70,2134
template<typename T> void removeItem(85,2642
template<typename T> void removeAllStartingWith(102,3164
template<typename T> void mergeInto(123,3788
BlockChainSync::BlockChainSync(160,4899
BlockChainSync::~BlockChainSync(~BlockChainSync174,5251
void BlockChainSync::onBlockImported(onBlockImported180,5331
void BlockChainSync::abortSync(abortSync193,5777
void BlockChainSync::onPeerStatus(onPeerStatus203,5929
void BlockChainSync::syncPeer(syncPeer226,6931
void BlockChainSync::continueSync(continueSync261,7806
void BlockChainSync::requestBlocks(requestBlocks270,7954
void BlockChainSync::clearPeerDownload(clearPeerDownload367,10669
void BlockChainSync::clearPeerDownload(clearPeerDownload385,11164
void BlockChainSync::logNewBlock(logNewBlock411,11675
void BlockChainSync::onPeerBlockHeaders(onPeerBlockHeaders418,11835
void BlockChainSync::onPeerBlockBodies(onPeerBlockBodies521,15199
void BlockChainSync::collectBlocks(collectBlocks569,16762
void BlockChainSync::onPeerNewBlock(onPeerNewBlock658,19160
SyncStatus BlockChainSync::status(status740,21278
void BlockChainSync::resetSync(resetSync752,21565
void BlockChainSync::restartSync(restartSync765,21850
void BlockChainSync::completeSync(completeSync777,22144
void BlockChainSync::pauseSync(pauseSync783,22227
bool BlockChainSync::isSyncing(isSyncing788,22296
void BlockChainSync::onPeerNewHashes(onPeerNewHashes793,22376
void BlockChainSync::onPeerAborting(onPeerAborting840,23661
bool BlockChainSync::invariants(invariants849,23912

src/cpp-ethereum/libdevcrypto/Common.h,755
namespace dev32,974
struct SignatureStruct45,1296
	SignatureStruct(48,1351
	SignatureStruct(49,1412
	operator Signature(50,1494
	bool isValid(53,1616
inline bytes encryptSymNoAuth(125,4164
inline bytes encryptSymNoAuth(126,4316
inline bytesSec decryptSymNoAuth(129,4530
inline bytesSec decryptSymNoAuth(130,4687
class KeyPair150,5657
	Secret const& secret(167,6129
	Public const& pub(170,6211
	Address const& address(173,6316
	bool operator==(operator==175,6371
	bool operator!=(operator!=176,6449
	Secret m_secret;179,6537
	Public m_public;180,6555
	Address m_address;181,6573
namespace crypto184,6597
class Nonce201,7163
	static Secret get(205,7242
	std::mutex x_value;213,7378
	Secret m_value;214,7399
namespace ecdh217,7420

src/cpp-ethereum/libdevcrypto/CryptoPP.h,243
class Secp256k1PP39,1072
	static Secp256k1PP* get(42,1101
	void encrypt(45,1185
	void decrypt(48,1293
	void encryptECIES(51,1408
	void encryptECIES(54,1530
	bool decryptECIES(57,1682
	bool decryptECIES(60,1802
	bytes eciesKDF(63,1956

src/cpp-ethereum/libdevcrypto/SecretStore.h,755
enum class KDF 33,905
	PBKDF2_SHA256,34,922
	Scrypt,35,938
class SecretStore46,1426
	struct EncryptedKey49,1454
		std::string encryptedKey;51,1478
		std::string filename;52,1506
		Address address;53,1530
	h128 importKey(77,2707
	h128 importKeyContent(80,2938
	std::vector<h128> keys(93,3866
	bool contains(96,3979
	void save(115,5013
	Address address(119,5318
	static std::string defaultPath(122,5456
	void load(127,5627
	std::pair<std::pair133,6045
	std::pair<std::pair134,6125
	mutable std::unordered_map<std::unordered_map136,6229
	mutable std::unordered_map<h128, bytesSec> m_cached;136,6229
	std::unordered_map<std::unordered_map138,6364
	std::unordered_map<h128, EncryptedKey> m_keys;138,6364
	std::string m_path;140,6413

src/cpp-ethereum/libdevcrypto/ECDHE.cpp,32
void ECDHE::agree(agree27,828

src/cpp-ethereum/libdevcrypto/ECDHE.h,157
class ECDHE37,1027
	ECDHE(41,1106
	Public pubkey(44,1184
	Secret seckey(46,1233
	KeyPair m_ephemeral;52,1445
	mutable Public m_remoteEphemeral;53,1506

src/cpp-ethereum/libdevcrypto/SecretStore.cpp,1095
static const int c_keyFileVersion 38,1184
static js::mValue upgraded(41,1276
SecretStore::SecretStore(94,2674
void SecretStore::setPath(setPath99,2749
bytesSec SecretStore::secret(secret105,2827
bytesSec SecretStore::secret(secret121,3229
bytesSec SecretStore::secret(secret129,3444
h128 SecretStore::importSecret(importSecret144,3738
h128 SecretStore::importSecret(importSecret154,3991
void SecretStore::kill(kill164,4246
void SecretStore::clearCache(clearCache174,4410
void SecretStore::save(save179,4471
bool SecretStore::noteAddress(noteAddress202,5151
void SecretStore::load(load212,5383
h128 SecretStore::readKey(readKey224,5642
h128 SecretStore::readKeyContent(readKeyContent230,5836
bool SecretStore::recode(recode257,6538
pair<h128 const, SecretStore::EncryptedKey> const* SecretStore::key(key274,6888
pair<h128 const, SecretStore::EncryptedKey>* SecretStore::key(key282,7088
bool SecretStore::recode(recode290,7270
static bytesSec deriveNewKey(301,7571
string SecretStore::encrypt(encrypt337,8402
bytesSec SecretStore::decrypt(decrypt367,9290

src/cpp-ethereum/libdevcrypto/AES.cpp,42
bytes dev::aesDecrypt(aesDecrypt34,1012

src/cpp-ethereum/libdevcrypto/Common.cpp,1242
secp256k1_context const* getCtx(46,1342
bool dev::SignatureStruct::isValid(isValid57,1605
Address dev::ZeroAddress 65,1858
Public dev::toPublic(toPublic67,1897
Address dev::toAddress(toAddress87,2639
Address dev::toAddress(toAddress92,2729
Address dev::toAddress(toAddress97,2818
void dev::encrypt(encrypt102,2936
bool dev::decrypt(decrypt109,3111
void dev::encryptECIES(encryptECIES119,3341
void dev::encryptECIES(encryptECIES124,3480
bool dev::decryptECIES(decryptECIES131,3711
bool dev::decryptECIES(decryptECIES136,3866
void dev::encryptSym(encryptSym145,4140
bool dev::decryptSym(decryptSym151,4312
std::pair<bytes, h128> dev::encryptSymNoAuth(encryptSymNoAuth157,4476
bytes dev::encryptAES128CTR(encryptAES128CTR163,4675
bytesSec dev::decryptAES128CTR(decryptAES128CTR183,5160
Public dev::recover(recover203,5672
Signature dev::sign(sign233,6700
bool dev::verify(verify255,7312
bytesSec dev::pbkdf2(pbkdf2263,7495
bytesSec dev::scrypt(scrypt280,7938
KeyPair::KeyPair(298,8373
KeyPair KeyPair::create(create307,8561
KeyPair KeyPair::fromEncryptedSeed(fromEncryptedSeed317,8693
h256 crypto::kdf(kdf322,8845
Secret Nonce::next(next335,9110
void dev::crypto::ecdh::agree(agree348,9326

src/cpp-ethereum/libdevcrypto/CryptoPP.cpp,831
class Secp256k1PPCtx44,1422
	OID m_oid;47,1453
	std::mutex x_rng;49,1466
	AutoSeededRandomPool m_rng;50,1485
	std::mutex x_params;52,1515
	DL_GroupParameters_EC<ECP> m_params;53,1537
	DL_GroupParameters_EC<ECP>::EllipticCurve m_curve;55,1576
	Integer m_q;57,1629
	Integer m_qs;58,1643
	static Secp256k1PPCtx& get(60,1659
	Secp256k1PPCtx(67,1748
inline ECP::Point publicToPoint(73,1917
inline Integer secretToExponent(75,2053
Secp256k1PP* Secp256k1PP::get(get79,2152
bytes Secp256k1PP::eciesKDF(eciesKDF85,2234
void Secp256k1PP::encryptECIES(encryptECIES115,3056
void Secp256k1PP::encryptECIES(encryptECIES120,3175
bool Secp256k1PP::decryptECIES(decryptECIES157,4617
bool Secp256k1PP::decryptECIES(decryptECIES162,4739
void Secp256k1PP::encrypt(encrypt211,6399
void Secp256k1PP::decrypt(decrypt233,6902

src/cpp-ethereum/libethash/mmap.h,281
#define PROT_READ 25,821
#define PROT_WRITE 26,847
#define PROT_EXEC 29,941
#define PROT_EXEC 31,973
#define FILE_MAP_EXECUTE 32,1002
#define MAP_SHARED 35,1037
#define MAP_PRIVATE 36,1064
#define MAP_ANONYMOUS 37,1091
#define MAP_ANON 38,1118
#define MAP_FAILED 39,1154

src/cpp-ethereum/libethash/ethash.h,1019
#define ETHASH_REVISION 29,806
#define ETHASH_DATASET_BYTES_INIT 30,833
#define ETHASH_DATASET_BYTES_GROWTH 31,888
#define ETHASH_CACHE_BYTES_INIT 32,943
#define ETHASH_CACHE_BYTES_GROWTH 33,996
#define ETHASH_EPOCH_LENGTH 34,1048
#define ETHASH_MIX_BYTES 35,1083
#define ETHASH_HASH_BYTES 36,1112
#define ETHASH_DATASET_PARENTS 37,1141
#define ETHASH_CACHE_ROUNDS 38,1176
#define ETHASH_ACCESSES 39,1206
#define ETHASH_DAG_MAGIC_NUM_SIZE 40,1233
#define ETHASH_DAG_MAGIC_NUM 41,1269
typedef struct ethash_h256 48,1398
typedef struct ethash_h256 { uint8_t b[b48,1398
typedef struct ethash_h256 { uint8_t b[32]; } ethash_h256_t;48,1398
#define ethash_h256_static_init(55,1708
typedef struct ethash_light* ethash_light_t;59,1790
typedef struct ethash_full* ethash_full_t;61,1855
typedef int(*ethash_callback_t)ethash_callback_t62,1898
typedef struct ethash_return_value 64,1942
	ethash_h256_t result;65,1979
	ethash_h256_t mix_hash;66,2002
	bool success;67,2027
} ethash_return_value_t;68,2042

src/cpp-ethereum/libethash/fnv.h,66
#define FNV_PRIME 30,860
static inline uint32_t fnv_hash(32,890

src/cpp-ethereum/libethash/internal.h,607
#define ENABLE_SSE 7,95
#define NODE_WORDS 20,293
#define MIX_WORDS 21,319
#define MIX_NODES 22,358
typedef union node 25,422
	uint8_t bytes[bytes26,443
	uint32_t words[words27,475
} node;36,667
static inline uint8_t ethash_h256_get(38,676
static inline void ethash_h256_set(43,782
static inline void ethash_h256_reset(48,887
static inline bool ethash_check_difficulty(54,1044
struct ethash_light 85,1902
	void* cache;86,1924
	uint64_t cache_size;87,1938
	uint64_t block_number;88,1960
struct ethash_full 118,3001
	FILE* file;119,3022
	uint64_t file_size;120,3035
	node* data;121,3056

src/cpp-ethereum/libethash/sha3.h,76
#define decsha3(13,138
decsha3(16,223
static inline void SHA3_512(24,396

src/cpp-ethereum/libethash/data_sizes.h,101
static const uint64_t dag_sizes[dag_sizes51,1381
const uint64_t cache_sizes[cache_sizes480,29934

src/cpp-ethereum/libethash/endian.h,841
  # define LITTLE_ENDIAN 7,101
  # define BYTE_ORDER 8,131
  # define LITTLE_ENDIAN 18,529
  # define BYTE_ORDER 19,559
  # define BIG_ENDIAN 21,654
  # define BYTE_ORDER 22,681
#define ethash_swap_u32(29,792
#define ethash_swap_u64(30,848
#define ethash_swap_u32(33,963
#define ethash_swap_u64(34,1015
#define ethash_swap_u32(36,1143
#define ethash_swap_u64(37,1191
#define ethash_swap_u32(40,1276
#define ethash_swap_u64(41,1327
#define fix_endian32(47,1420
#define fix_endian32_same(48,1465
#define fix_endian64(49,1497
#define fix_endian64_same(50,1542
#define fix_endian_arr32(51,1574
#define fix_endian_arr64(52,1612
#define fix_endian32(56,1683
#define fix_endian32_same(57,1745
#define fix_endian64(58,1806
#define fix_endian64_same(59,1867
#define fix_endian_arr32(60,1928
#define fix_endian_arr64(66,2102

src/cpp-ethereum/libethash/io.h,380
#define __STDC_FORMAT_MACROS 27,850
#define DAG_MUTABLE_NAME_MAX_SIZE 42,1357
enum ethash_io_rc 44,1466
	ETHASH_IO_FAIL 45,1486
	ETHASH_IO_MEMO_SIZE_MISMATCH,46,1551
	ETHASH_IO_MEMO_MISMATCH,47,1642
	ETHASH_IO_MEMO_MATCH,48,1741
#define snprintf(54,2032
#define ETHASH_CRITICAL(63,2290
#define ETHASH_CRITICAL(71,2485
static inline bool ethash_io_mutable_name(187,7110

src/cpp-ethereum/libethash/compiler.h,73
#define inline 24,838
#define restrict 29,934
#define restrict 31,968

src/cpp-ethereum/libethash/util.h,103
#define debugf 32,884
static inline uint32_t min_u32(35,914
static inline uint32_t clamp_u32(40,997

src/cpp-ethereum/evmjit/tests/test-evm.cpp,41
int64_t test_call_failure_constant(3,18

src/cpp-ethereum/evmjit/libevmjit/Cache.cpp,562
namespace dev18,426
namespace evmjit20,442
	std::mutex x_cacheMutex;31,740
	CacheMode g_mode;32,766
	std::unique_ptr<llvm::MemoryBuffer> g_lastObject;33,785
	JITListener* g_listener;34,836
	std::string getVersionedCacheDir(36,863
ObjectCache* Cache::init(init46,1108
void Cache::clear(clear69,1509
void Cache::preload(preload79,1768
std::unique_ptr<llvm::Module> Cache::getObject(getObject106,2530
void ObjectCache::notifyObjectCompiled(notifyObjectCompiled144,3928
std::unique_ptr<llvm::MemoryBuffer> ObjectCache::getObject(getObject172,4787

src/cpp-ethereum/evmjit/libevmjit/Type.cpp,827
namespace dev7,80
namespace eth9,96
namespace jit11,112
llvm::IntegerType* Type::Word;14,129
llvm::PointerType* Type::WordPtr;15,160
llvm::IntegerType* Type::Bool;16,194
llvm::IntegerType* Type::Size;17,225
llvm::IntegerType* Type::Gas;18,256
llvm::PointerType* Type::GasPtr;19,286
llvm::IntegerType* Type::Byte;20,319
llvm::PointerType* Type::BytePtr;21,350
llvm::Type* Type::Void;22,384
llvm::IntegerType* Type::MainReturn;23,408
llvm::PointerType* Type::EnvPtr;24,445
llvm::PointerType* Type::RuntimeDataPtr;25,478
llvm::PointerType* Type::RuntimePtr;26,519
llvm::ConstantInt* Constant::gasMax;27,556
llvm::MDNode* Type::expectTrue;28,593
void Type::init(init30,626
llvm::ConstantInt* Constant::get(get55,1472
llvm::ConstantInt* Constant::get(get60,1576
llvm::ConstantInt* Constant::get(get65,1699

src/cpp-ethereum/evmjit/libevmjit/RuntimeManager.cpp,1235
namespace dev11,222
namespace eth13,238
namespace jit15,254
llvm::StructType* RuntimeManager::getRuntimeDataType(getRuntimeDataType18,271
llvm::StructType* RuntimeManager::getRuntimeType(getRuntimeType38,695
llvm::Twine getName(56,1014
RuntimeManager::RuntimeManager(72,1477
llvm::Value* RuntimeManager::getRuntimePtr(getRuntimePtr118,3770
llvm::Value* RuntimeManager::getDataPtr(getDataPtr127,4051
llvm::Value* RuntimeManager::getEnvPtr(getEnvPtr138,4361
llvm::Value* RuntimeManager::getPtr(getPtr144,4488
llvm::Value* RuntimeManager::getValue(getValue151,4741
void RuntimeManager::set(set156,4838
void RuntimeManager::registerReturnData(registerReturnData163,5043
void RuntimeManager::exit(exit174,5467
void RuntimeManager::abort(abort181,5693
llvm::Value* RuntimeManager::getCallData(getCallData187,5886
llvm::Value* RuntimeManager::getCode(getCode192,5977
llvm::Value* RuntimeManager::getCodeSize(getCodeSize201,6267
llvm::Value* RuntimeManager::getCallDataSize(getCallDataSize206,6363
llvm::Value* RuntimeManager::getGas(getGas213,6558
llvm::Value* RuntimeManager::getGasPtr(getGasPtr218,6651
llvm::Value* RuntimeManager::getMem(getMem224,6743
void RuntimeManager::setGas(setGas230,6832

src/cpp-ethereum/evmjit/libevmjit/Common.h,25
#define UNTESTED 13,128

src/cpp-ethereum/evmjit/libevmjit/Utils.h,122
#define CHECK(12,237
#define DLOG(18,361
struct Voider22,440
    void operator=(operator=24,456
#define DLOG(27,503

src/cpp-ethereum/evmjit/libevmjit/Compiler.h,151
class Compiler13,105
	struct Options17,131
	Compiler(26,321
	Options const& m_options;39,837
	evm_mode m_mode;42,894
	IRBuilder m_builder;45,949

src/cpp-ethereum/evmjit/libevmjit/Arith256.cpp,885
namespace dev15,279
namespace eth17,295
namespace jit19,311
Arith256::Arith256(22,328
void Arith256::debug(debug26,400
llvm::Function* createUDivRemFunc(38,874
llvm::Function* Arith256::getUDivRem256Func(getUDivRem256Func120,4195
llvm::Function* Arith256::getUDivRem512Func(getUDivRem512Func129,4439
llvm::Function* Arith256::getUDiv256Func(getUDiv256Func138,4722
llvm::Function* createURemFunc(167,5578
llvm::Function* Arith256::getURem256Func(getURem256Func191,6396
llvm::Function* Arith256::getURem512Func(getURem512Func199,6630
llvm::Function* Arith256::getSDivRem256Func(getSDivRem256Func207,6903
llvm::Function* Arith256::getSDiv256Func(getSDiv256Func255,8643
llvm::Function* Arith256::getSRem256Func(getSRem256Func282,9481
llvm::Function* Arith256::getExpFunc(getExpFunc309,10319
llvm::Value* Arith256::exp(exp379,12758
	EXPORT void debug(415,13332

src/cpp-ethereum/evmjit/libevmjit/Cache.h,159
enum class CacheMode22,327
	off,24,350
	on,25,356
	read,26,361
	write,27,368
	clear,28,376
	preload29,384
class ObjectCache 32,397
class Cache46,1014

src/cpp-ethereum/evmjit/libevmjit/ExecStats.cpp,254
namespace dev9,103
namespace evmjit11,119
void ExecStats::stateChanged(stateChanged14,139
struct StatsAgg31,454
	void update(39,700
	void output(47,826
char const* getExecStateName(60,1332
StatsCollector::~StatsCollector(~StatsCollector78,1850

src/cpp-ethereum/evmjit/libevmjit/Ext.h,670
struct MemoryRef16,142
	llvm::Value* ptr;18,161
	llvm::Value* size;19,180
struct sizeOf23,230
	static const size_t value 25,246
enum class EnvFunc28,315
	sload,30,336
	sstore,31,344
	sha3,32,353
	balance,33,360
	create,34,370
	call,35,379
	log,36,386
	blockhash,37,392
	extcode,38,404
	_size40,415
class Ext 43,426
	std::tuple<std::tuple55,809
	Memory& m_memoryMan;75,1622
	llvm::Value* m_size;77,1645
	std::array<std::array79,1668
	std::array<llvm::Function*, sizeOf<EnvFunc>::value> m_funcs;79,1668
	std::array<std::array80,1730
	std::array<llvm::Value*, 8> m_argAllocas;80,1730
	size_t m_argCounter 81,1773
	llvm::Value* m_topics 85,1892

src/cpp-ethereum/evmjit/libevmjit/Memory.cpp,789
namespace dev12,240
namespace eth14,256
namespace jit16,272
Memory::Memory(19,289
	m_gasMeter(22,475
llvm::Function* Memory::getRequireFunc(getRequireFunc25,502
llvm::Function* Memory::createFunc(createFunc96,3825
llvm::Function* Memory::getLoadWordFunc(getLoadWordFunc137,5364
llvm::Function* Memory::getStoreWordFunc(getStoreWordFunc145,5503
llvm::Function* Memory::getStoreByteFunc(getStoreByteFunc153,5643
llvm::Value* Memory::loadWord(loadWord162,5784
void Memory::storeWord(storeWord168,6001
void Memory::storeByte(storeByte174,6232
llvm::Value* Memory::getData(getData181,6525
llvm::Value* Memory::getSize(getSize189,6770
llvm::Value* Memory::getBytePtr(getBytePtr194,6874
void Memory::require(require199,6987
void Memory::copyBytes(copyBytes209,7319

src/cpp-ethereum/evmjit/libevmjit/Compiler.cpp,346
namespace dev24,472
namespace eth26,488
namespace jit28,504
Compiler::Compiler(33,568
std::vector<BasicBlock> Compiler::createBasicBlocks(createBasicBlocks41,767
void Compiler::resolveJumps(resolveJumps104,2254
std::unique_ptr<llvm::Module> Compiler::compile(compile149,4016
void Compiler::compileBasicBlock(compileBasicBlock213,6881

src/cpp-ethereum/evmjit/libevmjit/JIT.cpp,1585
namespace dev37,1326
namespace evmjit39,1342
char modeToChar(47,1452
std::string makeCodeId(60,1744
void printVersion(74,2073
void parseOptions(101,3111
class JITImpl:JITImpl108,3305
	std::unique_ptr<llvm::ExecutionEngine> m_engine;110,3342
	mutable std::mutex x_codeMap;111,3392
	std::unordered_map<std::unordered_map112,3423
	std::unordered_map<std::string, ExecFunc> m_codeMap;112,3423
	static llvm::LLVMContext& getLLVMContext(114,3478
	static JITImpl& instance(123,3710
	llvm::ExecutionEngine& engine(133,3889
	evm_query_fn queryFn 140,4197
	evm_update_fn updateFn 141,4230
	evm_call_fn callFn 142,4265
class SymbolResolver 146,4301
	llvm::RuntimeDyld::SymbolInfo findSymbol(148,4360
	void reportMemorySize(167,5153
	uint8_t* allocateCodeSection(182,5496
	uint8_t* allocateDataSection(189,5747
	size_t m_totalMemorySize 196,6013
	size_t m_printMemoryLimit 197,6044
ExecFunc JITImpl::getExecFunc(getExecFunc203,6093
void JITImpl::mapExecFunc(mapExecFunc212,6326
ExecFunc JITImpl::compile(compile218,6507
ExecutionContext::~ExecutionContext(~ExecutionContext249,7364
bytes_ref ExecutionContext::getReturnData(getReturnData255,7497
static evm_instance* create(274,7878
static void destroy(286,8222
static void release_result(292,8354
static evm_result execute(298,8480
static int set_option(361,10089
static evm_code_status get_code_status(368,10231
static void prepare_code(379,10572
EXPORT evm_factory evmjit_get_factory(389,10972
JITImpl::JITImpl(396,11070
	bool preloadCache 405,11292
	auto module 412,11468
	auto triple 415,11576

src/cpp-ethereum/evmjit/libevmjit/Optimizer.cpp,625
namespace dev16,405
namespace eth18,421
namespace jit20,437
class LongJmpEliminationPass:LongJmpEliminationPass26,467
	static char ID;28,525
	LongJmpEliminationPass(31,551
char LongJmpEliminationPass::ID 38,673
bool LongJmpEliminationPass::runOnFunction(runOnFunction40,711
bool optimize(74,1613
class LowerEVMPass:LowerEVMPass89,2050
	static char ID;91,2100
	LowerEVMPass(94,2126
	using llvm::BasicBlockPass::doFinalization;100,2239
char LowerEVMPass::ID 104,2350
bool LowerEVMPass::runOnBasicBlock(runOnBasicBlock106,2378
bool LowerEVMPass::doFinalization(doFinalization156,3509
bool prepare(163,3581

src/cpp-ethereum/evmjit/libevmjit/CompilerHelper.h,365
class CompilerHelper19,310
	IRBuilder& m_builder;34,687
class RuntimeHelper 40,793
	RuntimeManager& getRuntimeManager(45,900
	RuntimeManager& m_runtimeManager;48,976
struct InsertPointGuard51,1015
	explicit InsertPointGuard(53,1041
	~InsertPointGuard(54,1157
	llvm::IRBuilderBase& m_builder;57,1228
	llvm::IRBuilderBase::InsertPoint m_insertPoint;58,1261

src/cpp-ethereum/evmjit/libevmjit/CompilerHelper.cpp,268
namespace dev9,177
namespace eth11,193
namespace jit13,209
CompilerHelper::CompilerHelper(16,226
llvm::Module* CompilerHelper::getModule(getModule20,305
llvm::Function* CompilerHelper::getMainFunction(getMainFunction27,529
RuntimeHelper::RuntimeHelper(39,915

src/cpp-ethereum/evmjit/libevmjit/RuntimeManager.h,323
class RuntimeManager:RuntimeManager17,177
	RuntimeManager(20,231
	llvm::Value* getJmpBuf(33,600
	llvm::Value* getStackBase(44,872
	llvm::Value* getStackSize(45,931
	void setJmpBuf(47,991
	void setExitBB(48,1053
	std::array<std::array66,1566
	std::array<llvm::Value*, RuntimeData::numElements> m_dataElts;66,1566

src/cpp-ethereum/evmjit/libevmjit/Array.cpp,777
namespace dev11,217
namespace eth13,233
namespace jit15,249
llvm::Value* LazyFunction::call(call20,304
llvm::Function* Array::createArrayPushFunc(createArrayPushFunc28,552
llvm::Function* Array::createArraySetFunc(createArraySetFunc79,2885
llvm::Function* Array::createArrayGetFunc(createArrayGetFunc104,3839
llvm::Function* Array::createGetPtrFunc(createGetPtrFunc127,4735
llvm::Function* Array::createFreeFunc(createFreeFunc150,5671
llvm::Function* Array::getReallocFunc(getReallocFunc173,6632
llvm::Function* Array::createExtendFunc(createExtendFunc186,7098
llvm::Type* Array::getType(getType217,8564
Array::Array(224,8754
Array::Array(231,8980
void Array::pop(pop239,9165
llvm::Value* Array::size(size247,9443
void Array::extend(extend253,9642

src/cpp-ethereum/evmjit/libevmjit/Memory.h,90
class Memory 13,99
	Memory(16,145
	Array m_memory;31,787
	GasMeter& m_gasMeter;33,805

src/cpp-ethereum/evmjit/libevmjit/Utils.cpp,564
namespace dev9,101
namespace evmjit11,117
std::ostream& getLogStream(16,168
static const uint8_t rho[rho43,711
static const uint8_t pi[pi48,848
static const uint64_t RC[RC53,984
#define rol(62,1519
#define REPEAT6(63,1570
#define REPEAT24(64,1601
#define REPEAT5(65,1638
#define FOR5(66,1667
static inline void keccakf(71,1777
#define _(109,2506
#define FOR(110,2538
#define mkapply_ds(112,2612
#define mkapply_sd(118,2932
#define P 128,3347
#define Plen 129,3365
#define foldP(132,3429
mkapply_ds(foldP125,3253
#define defkeccak(165,4214

src/cpp-ethereum/evmjit/libevmjit/Instruction.cpp,102
namespace dev7,145
namespace evmjit9,161
llvm::APInt readPushData(12,181
void skipPushData(29,696

src/cpp-ethereum/evmjit/libevmjit/ExecStats.h,644
enum class ExecState13,123
	Started,15,146
	CacheLoad,16,156
	CacheWrite,17,168
	Compilation,18,181
	Optimization,19,195
	CodeGen,20,210
	Execution,21,220
	Return,22,232
	Finished23,241
class JITListener26,255
	virtual ~JITListener(32,399
	virtual void executionStarted(34,427
	virtual void executionEnded(35,463
	virtual void stateChanged(37,498
class ExecStats 40,543
	using clock 43,590
	using duration 44,641
	using time_point 45,676
	std::string id;47,716
	duration time[time48,733
	ExecState m_state 53,838
	time_point m_tp 54,863
class StatsCollector59,892
	std::vector<std::unique_ptr<ExecStats>> stats;62,923

src/cpp-ethereum/evmjit/libevmjit/JIT.h,4359
struct i25619,298
	uint64_t words[words21,312
struct RuntimeData27,393
	enum Index29,414
		Gas,31,429
		GasPrice,32,436
		CallData,33,448
		CallDataSize,34,460
		ApparentCallValue,35,476
		Code,36,552
		CodeSize,37,560
		ReturnData 39,573
		ReturnDataSize 40,658
	static size_t const numElements 43,751
	int64_t 	gas 45,801
	int64_t 	gasPrice 46,820
	byte const* callData 47,844
	uint64_t 	callDataSize 48,877
	i256 		apparentValue;49,906
	byte const* code 50,929
	uint64_t 	codeSize 51,958
struct JITSchedule54,987
	typedef std::integral_constant<uint64_t,uint64_t57,1078
	typedef std::integral_constant<uint64_t, 1024> stackLimit;57,1078
	typedef std::integral_constant<uint64_t,uint64_t58,1138
	typedef std::integral_constant<uint64_t, 0> stepGas0;58,1138
	typedef std::integral_constant<uint64_t,uint64_t59,1193
	typedef std::integral_constant<uint64_t, 2> stepGas1;59,1193
	typedef std::integral_constant<uint64_t,uint64_t60,1248
	typedef std::integral_constant<uint64_t, 3> stepGas2;60,1248
	typedef std::integral_constant<uint64_t,uint64_t61,1303
	typedef std::integral_constant<uint64_t, 5> stepGas3;61,1303
	typedef std::integral_constant<uint64_t,uint64_t62,1358
	typedef std::integral_constant<uint64_t, 8> stepGas4;62,1358
	typedef std::integral_constant<uint64_t,uint64_t63,1413
	typedef std::integral_constant<uint64_t, 10> stepGas5;63,1413
	typedef std::integral_constant<uint64_t,uint64_t64,1469
	typedef std::integral_constant<uint64_t, 20> stepGas6;64,1469
	typedef std::integral_constant<uint64_t,uint64_t65,1525
	typedef std::integral_constant<uint64_t, 0> stepGas7;65,1525
	typedef std::integral_constant<uint64_t,uint64_t66,1580
	typedef std::integral_constant<uint64_t, 10> expByteGas;66,1580
	typedef std::integral_constant<uint64_t,uint64_t67,1638
	typedef std::integral_constant<uint64_t, 30> sha3Gas;67,1638
	typedef std::integral_constant<uint64_t,uint64_t68,1693
	typedef std::integral_constant<uint64_t, 6> sha3WordGas;68,1693
	typedef std::integral_constant<uint64_t,uint64_t69,1751
	typedef std::integral_constant<uint64_t, 50> sloadGas;69,1751
	typedef std::integral_constant<uint64_t,uint64_t70,1807
	typedef std::integral_constant<uint64_t, 20000> sstoreSetGas;70,1807
	typedef std::integral_constant<uint64_t,uint64_t71,1870
	typedef std::integral_constant<uint64_t, 5000> sstoreResetGas;71,1870
	typedef std::integral_constant<uint64_t,uint64_t72,1934
	typedef std::integral_constant<uint64_t, 5000> sstoreClearGas;72,1934
	typedef std::integral_constant<uint64_t,uint64_t73,1998
	typedef std::integral_constant<uint64_t, 1> jumpdestGas;73,1998
	typedef std::integral_constant<uint64_t,uint64_t74,2056
	typedef std::integral_constant<uint64_t, 375> logGas;74,2056
	typedef std::integral_constant<uint64_t,uint64_t75,2111
	typedef std::integral_constant<uint64_t, 8> logDataGas;75,2111
	typedef std::integral_constant<uint64_t,uint64_t76,2168
	typedef std::integral_constant<uint64_t, 375> logTopicGas;76,2168
	typedef std::integral_constant<uint64_t,uint64_t77,2228
	typedef std::integral_constant<uint64_t, 32000> createGas;77,2228
	typedef std::integral_constant<uint64_t,uint64_t78,2288
	typedef std::integral_constant<uint64_t, 40> callGas;78,2288
	typedef std::integral_constant<uint64_t,uint64_t79,2343
	typedef std::integral_constant<uint64_t, 3> memoryGas;79,2343
	typedef std::integral_constant<uint64_t,uint64_t80,2399
	typedef std::integral_constant<uint64_t, 3> copyGas;80,2399
	typedef std::integral_constant<uint64_t,uint64_t81,2453
	typedef std::integral_constant<uint64_t, 9000> valueTransferGas;81,2453
	typedef std::integral_constant<uint64_t,uint64_t82,2519
	typedef std::integral_constant<uint64_t, 2300> callStipend;82,2519
	typedef std::integral_constant<uint64_t,uint64_t83,2580
	typedef std::integral_constant<uint64_t, 25000> callNewAccount;83,2580
enum class ReturnCode86,2649
	Stop 89,2691
	Return 90,2705
	OutOfGas 93,2745
	LLVMError 96,2797
	UnexpectedException 98,2826
class ExecutionContext101,2859
	ExecutionContext(105,2923
	void init(110,3148
	byte const* code(112,3230
	uint64_t codeSize(113,3281
	RuntimeData* m_data 118,3381
	evm_env* m_env 119,3466
	byte* m_memData 120,3560
	uint64_t m_memSize 121,3588
	uint64_t m_memCap 122,3613
	bytes_ref returnData;126,3699

src/cpp-ethereum/evmjit/libevmjit/Arith256.h,40
class Arith256 12,92
	Arith256(15,141

src/cpp-ethereum/evmjit/libevmjit/GasMeter.h,391
class GasMeter 16,180
	GasMeter(19,256
	void count(22,373
	void count(25,433
	void countSStore(28,586
	void countExp(31,731
	void countLogData(34,804
	void countSha3Data(37,884
	void commitCostBlock(40,1011
	void giveBack(43,1088
	void countMemory(46,1201
	void countCopy(49,1349
	int64_t getStepCost(52,1401
	RuntimeManager& m_runtimeManager;61,1638
	evm_mode m_mode;64,1703

src/cpp-ethereum/evmjit/libevmjit/Endianness.h,96
struct Endianness12,92
	static llvm::Value* toBE(14,112
	static llvm::Value* toNative(15,218

src/cpp-ethereum/evmjit/libevmjit/Type.h,669
struct Type19,283
	static llvm::IntegerType* Word;21,297
	static llvm::PointerType* WordPtr;22,330
	static llvm::IntegerType* Bool;24,367
	static llvm::IntegerType* Size;25,400
	static llvm::IntegerType* Gas;26,433
	static llvm::PointerType* GasPtr;27,465
	static llvm::IntegerType* Byte;29,501
	static llvm::PointerType* BytePtr;30,534
	static llvm::Type* Void;32,571
	static llvm::IntegerType* MainReturn;35,629
	static llvm::PointerType* EnvPtr;37,669
	static llvm::PointerType* RuntimeDataPtr;38,704
	static llvm::PointerType* RuntimePtr;39,747
	static llvm::MDNode* expectTrue;42,826
struct Constant47,913
	static llvm::ConstantInt* gasMax;49,931

src/cpp-ethereum/evmjit/libevmjit/Array.h,517
class LazyFunction14,115
	LazyFunction(19,196
	Creator m_creator;27,424
class Array 30,448
	void push(36,593
	void set(37,676
	llvm::Value* get(38,786
	void free(41,965
	llvm::Value* getPtr(44,1080
	llvm::Value* getPointerTo(46,1209
	llvm::Value* m_array 51,1306
	LazyFunction m_pushFunc 61,1603
	LazyFunction m_setFunc 62,1675
	LazyFunction m_getPtrFunc 63,1745
	LazyFunction m_getFunc 64,1816
	LazyFunction m_freeFunc 65,1886
	LazyFunction m_extendFunc 66,1953
	LazyFunction m_reallocFunc 67,2024

src/cpp-ethereum/evmjit/libevmjit/BasicBlock.cpp,523
namespace dev19,427
namespace eth21,443
namespace jit23,459
BasicBlock::BasicBlock(26,476
	m_begin(28,629
	m_end(29,647
	m_llvmBB(30,661
LocalStack::LocalStack(33,776
void LocalStack::push(push43,1233
llvm::Value* LocalStack::pop(pop50,1393
void LocalStack::dup(dup65,1709
void LocalStack::swap(swap72,1860
llvm::Value* LocalStack::get(get81,2028
void LocalStack::set(set103,2673
void LocalStack::finalize(finalize117,2928
llvm::Function* LocalStack::getStackPrepareFunc(getStackPrepareFunc146,3841

src/cpp-ethereum/evmjit/libevmjit/GasMeter.cpp,602
namespace dev11,212
namespace eth13,228
namespace jit15,244
GasMeter::GasMeter(18,261
void GasMeter::count(count56,1888
void GasMeter::count(count67,2229
void GasMeter::countExp(countExp81,2831
void GasMeter::countSStore(countSStore97,3640
void GasMeter::countLogData(countLogData108,4330
void GasMeter::countSha3Data(countSha3Data116,4684
void GasMeter::giveBack(giveBack129,5291
void GasMeter::commitCostBlock(commitCostBlock135,5458
void GasMeter::countMemory(countMemory154,5894
void GasMeter::countCopy(countCopy160,6157
int64_t GasMeter::getStepCost(getStepCost166,6397

src/cpp-ethereum/evmjit/libevmjit/Instruction.h,2305
enum class Instruction:Instruction16,147
	STOP 18,181
	ADD,19,217
	MUL,20,250
	SUB,21,289
	DIV,22,325
	SDIV,23,366
	MOD,24,415
	SMOD,25,456
	ADDMOD,26,505
	MULMOD,27,548
	EXP,28,597
	SIGNEXTEND,29,633
	LT 31,686
	GT,32,727
	SLT,33,766
	SGT,34,809
	EQ,35,855
	ISZERO,36,890
	AND,37,927
	OR,38,963
	XOR,39,998
	NOT,40,1034
	BYTE,41,1071
	SHA3 43,1118
	ADDRESS 45,1161
	BALANCE,46,1227
	ORIGIN,47,1277
	CALLER,48,1328
	CALLVALUE,49,1364
	CALLDATALOAD,50,1465
	CALLDATASIZE,51,1524
	CALLDATACOPY,52,1591
	CODESIZE,53,1661
	CODECOPY,54,1727
	GASPRICE,55,1796
	EXTCODESIZE,56,1854
	EXTCODECOPY,57,1921
	BLOCKHASH 59,1985
	COINBASE,60,2048
	TIMESTAMP,61,2099
	NUMBER,62,2144
	DIFFICULTY,63,2184
	GASLIMIT,64,2231
	POP 66,2276
	MLOAD,67,2319
	MSTORE,68,2357
	MSTORE8,69,2394
	SLOAD,70,2431
	SSTORE,71,2470
	JUMP,72,2508
	JUMPI,73,2549
	PC,74,2605
	MSIZE,75,2643
	GAS,76,2689
	JUMPDEST,77,2735
	PUSH1 79,2787
	PUSH2,80,2835
	PUSH3,81,2878
	PUSH4,82,2921
	PUSH5,83,2964
	PUSH6,84,3007
	PUSH7,85,3050
	PUSH8,86,3093
	PUSH9,87,3136
	PUSH10,88,3179
	PUSH11,89,3224
	PUSH12,90,3269
	PUSH13,91,3314
	PUSH14,92,3359
	PUSH15,93,3404
	PUSH16,94,3449
	PUSH17,95,3494
	PUSH18,96,3539
	PUSH19,97,3584
	PUSH20,98,3629
	PUSH21,99,3674
	PUSH22,100,3719
	PUSH23,101,3764
	PUSH24,102,3809
	PUSH25,103,3854
	PUSH26,104,3899
	PUSH27,105,3944
	PUSH28,106,3989
	PUSH29,107,4034
	PUSH30,108,4079
	PUSH31,109,4124
	PUSH32,110,4169
	DUP1 112,4215
	DUP2,113,4296
	DUP3,114,4379
	DUP4,115,4461
	DUP5,116,4541
	DUP6,117,4621
	DUP7,118,4701
	DUP8,119,4781
	DUP9,120,4861
	DUP10,121,4941
	DUP11,122,5023
	DUP12,123,5105
	DUP13,124,5187
	DUP14,125,5269
	DUP15,126,5351
	DUP16,127,5433
	SWAP1 129,5516
	SWAP2,130,5593
	SWAP3,131,5664
	SWAP4,132,5733
	SWAP5,133,5802
	SWAP6,134,5871
	SWAP7,135,5940
	SWAP8,136,6009
	SWAP9,137,6078
	SWAP10,138,6148
	SWAP11,139,6219
	SWAP12,140,6290
	SWAP13,141,6361
	SWAP14,142,6432
	SWAP15,143,6503
	SWAP16,144,6574
	LOG0 146,6646
	LOG1,147,6696
	LOG2,148,6739
	LOG3,149,6783
	LOG4,150,6827
	CREATE 152,6872
	CALL,153,6936
	CALLCODE,154,6980
	RETURN,155,7044
	DELEGATECALL,156,7098
	SUICIDE 157,7194
#define ANY_PUSH	169,7718
#define ANY_DUP	202,8644
#define ANY_SWAP	219,9090

src/cpp-ethereum/evmjit/libevmjit/Endianness.cpp,116
namespace dev10,201
namespace eth12,217
namespace jit14,233
llvm::Value* Endianness::bswapIfLE(bswapIfLE17,250

src/cpp-ethereum/evmjit/libevmjit/BasicBlock.h,553
class LocalStack:LocalStack19,206
	explicit LocalStack(22,256
	void push(25,360
	ssize_t size(37,668
	ssize_t minSize(38,754
	ssize_t maxSize(39,801
	std::vector<llvm::Value*> m_input;55,1333
	std::vector<llvm::Value*> m_local;58,1474
class BasicBlock67,1903
	llvm::BasicBlock* llvm(72,2048
	instr_idx firstInstrIdx(74,2096
	code_iterator begin(75,2157
	code_iterator end(76,2206
	instr_idx const m_firstInstrIdx 79,2261
	code_iterator const m_begin 80,2350
	code_iterator const m_end 81,2437
	llvm::BasicBlock* const m_llvmBB;83,2518

src/cpp-ethereum/evmjit/libevmjit/Ext.cpp,1245
namespace dev13,263
namespace eth15,279
namespace jit17,295
Ext::Ext(20,312
using FuncDesc 32,593
llvm::FunctionType* getFunctionType(34,657
std::array<FuncDesc, sizeOf<EnvFunc>::value> const& getEnvFuncDescs(39,898
llvm::Function* createFunc(56,2200
llvm::Function* getQueryFunc(62,2440
llvm::Function* getUpdateFunc(81,3208
llvm::StructType* getMemRefTy(100,3964
llvm::Function* getCallFunc(109,4193
llvm::Value* Ext::getArgAlloca(getArgAlloca208,8336
llvm::Value* Ext::byPtr(byPtr224,8776
llvm::CallInst* Ext::createCall(createCall231,8898
llvm::Value* Ext::createCABICall(createCABICall241,9197
llvm::Value* Ext::sload(sload265,9882
void Ext::sstore(sstore274,10229
void Ext::selfdestruct(selfdestruct282,10540
llvm::Value* Ext::calldataload(calldataload290,10847
llvm::Value* Ext::query(query313,11997
llvm::Value* Ext::balance(balance355,13049
llvm::Value* Ext::exists(exists364,13411
llvm::Value* Ext::blockHash(blockHash373,13792
llvm::Value* Ext::sha3(sha3383,14240
MemoryRef Ext::extcode(extcode393,14593
llvm::Value* Ext::extcodesize(extcodesize409,15336
void Ext::log(log422,15910
llvm::Value* Ext::call(call461,17504
std::tuple<llvm::Value*, llvm::Value*> Ext::create(create487,18430

src/cpp-ethereum/ethminer/main.cpp,144
	#define _WINSOCKAPI_30,960
#undef RETURN43,1177
void help(45,1192
void version(60,1583
void setDefaultOrCLocale(80,2486
int main(90,2606

src/cpp-ethereum/ethminer/FarmClient.h,295
#define JSONRPC_CPP_STUB_FARMCLIENT_H_6,117
class FarmClient 10,189
        FarmClient(13,245
        Json::Value eth_getWork(15,391
        bool eth_submitWork(25,811
        bool eth_submitHashrate(37,1374
        Json::Value eth_awaitNewWork(48,1888
        bool eth_progress(58,2318

src/cpp-ethereum/ethminer/MinerAux.h,1213
using namespace std;56,2753
using namespace dev;57,2774
using namespace dev::eth;58,2795
bool isTrue(60,2822
bool isFalse(65,2926
inline std::string credits(70,3032
class BadArgument:BadArgument80,3285
struct MiningChannel:MiningChannel81,3325
	static const char* name(83,3367
	static const int verbosity 84,3423
	static const bool debug 85,3456
#define minelog 87,3493
class MinerCLI89,3530
	enum class OperationMode92,3555
		None,94,3584
		DAGInit,95,3592
		Benchmark,96,3603
		Farm97,3616
	MinerCLI(101,3629
	bool interpretOption(107,3764
	void execute(230,7312
	static void streamHelp(242,7705
	std::string minerType(266,9356
	bool shouldPrecompute(267,9411
	void doInitDAG(270,9477
	void doBenchmark(278,9758
	struct NoWork 333,11553
	void doFarm(334,11572
	OperationMode mode;443,15316
	std::string m_minerType 446,15358
	unsigned m_miningThreads 447,15392
	uint64_t m_currentBlock 448,15430
	unsigned m_initDAG 451,15492
	unsigned m_benchmarkWarmup 454,15543
	unsigned m_benchmarkTrial 455,15576
	unsigned m_benchmarkTrials 456,15608
	string m_farmURL 459,15659
	unsigned m_farmRecheckPeriod 460,15704
	bool m_precompute 461,15741
	bool m_submitHashrate 462,15768

src/cpp-ethereum/bench/main.cpp,571
void help(39,1215
void version(53,1526
void setDefaultOrCLocale(72,2345
enum class Mode 82,2465
	Trie,83,2483
	SHA384,2490
enum class Alphabet87,2500
	Low,89,2522
	Low, Mid,89,2522
	Low, Mid, All89,2522
class StandardMap92,2541
	StandardMap(96,2595
	vector<vector98,2766
	vector<pair<bytes, bytes>> make(98,2766
	Alphabet m_alphabet;115,3270
	unsigned m_count;116,3292
	unsigned m_minKey;117,3311
	unsigned m_diffKey;118,3331
	static bytes randomWord(120,3353
	static bytes randomBytes(131,3681
	static bytes randomValue(139,3909
int main(149,4075

src/cpp-ethereum/libevmcore/Instruction.cpp,399
const std::map<std::string,  Instruction> dev::eth::c_instructions 32,955
static const std::map<Instruction,  InstructionInfo> c_instructionInfo 180,6109
void dev::eth::eachInstruction(eachInstruction328,20291
string dev::eth::disassemble(disassemble350,20774
InstructionInfo dev::eth::instructionInfo(instructionInfo367,21176
bool dev::eth::isValidInstruction(isValidInstruction375,21403

src/cpp-ethereum/libevmcore/Instruction.h,3190
#undef MSIZE30,884
enum class Instruction:Instruction39,980
	STOP 41,1014
	ADD,42,1056
	MUL,43,1101
	SUB,44,1152
	DIV,45,1200
	SDIV,46,1253
	MOD,47,1313
	SMOD,48,1366
	ADDMOD,49,1426
	MULMOD,50,1478
	EXP,51,1536
	SIGNEXTEND,52,1584
	LT 54,1643
	GT,55,1691
	SLT,56,1742
	SGT,57,1797
	EQ,58,1855
	ISZERO,59,1902
	AND,60,1948
	OR,61,1996
	XOR,62,2043
	NOT,63,2091
	BYTE,64,2140
	SHA3 66,2198
	ADDRESS 68,2247
	BALANCE,69,2316
	ORIGIN,70,2375
	CALLER,71,2435
	CALLVALUE,72,2480
	CALLDATALOAD,73,2588
	CALLDATASIZE,74,2652
	CALLDATACOPY,75,2724
	CODESIZE,76,2799
	CODECOPY,77,2873
	GASPRICE,78,2950
	EXTCODESIZE,79,3016
	EXTCODECOPY,80,3089
	BLOCKHASH 82,3159
	COINBASE,83,3224
	TIMESTAMP,84,3283
	NUMBER,85,3335
	DIFFICULTY,86,3384
	GASLIMIT,87,3437
	JUMPTO 89,3491
	JUMPIF,90,3557
	JUMPV,91,3623
	JUMPSUB,92,3689
	JUMPSUBV,93,3755
	RETURNSUB,94,3821
	POP 96,3881
	MLOAD,97,3930
	MSTORE,98,3978
	MSTORE8,99,4024
	SLOAD,100,4070
	SSTORE,101,4119
	JUMP,102,4166
	JUMPI,103,4232
	PC,104,4298
	MSIZE,105,4348
	GAS,106,4404
	JUMPDEST,107,4462
	BEGINSUB,108,4521
	BEGINDATA,109,4583
	PUSH1 111,4635
	PUSH2,112,4688
	PUSH3,113,4741
	PUSH4,114,4794
	PUSH5,115,4847
	PUSH6,116,4900
	PUSH7,117,4953
	PUSH8,118,5006
	PUSH9,119,5059
	PUSH10,120,5112
	PUSH11,121,5166
	PUSH12,122,5220
	PUSH13,123,5274
	PUSH14,124,5328
	PUSH15,125,5382
	PUSH16,126,5436
	PUSH17,127,5490
	PUSH18,128,5544
	PUSH19,129,5598
	PUSH20,130,5652
	PUSH21,131,5706
	PUSH22,132,5760
	PUSH23,133,5814
	PUSH24,134,5868
	PUSH25,135,5922
	PUSH26,136,5976
	PUSH27,137,6030
	PUSH28,138,6084
	PUSH29,139,6138
	PUSH30,140,6192
	PUSH31,141,6246
	PUSH32,142,6300
	DUP1 144,6356
	DUP2,145,6443
	DUP3,146,6537
	DUP4,147,6630
	DUP5,148,6721
	DUP6,149,6812
	DUP7,150,6903
	DUP8,151,6994
	DUP9,152,7085
	DUP10,153,7176
	DUP11,154,7268
	DUP12,155,7360
	DUP13,156,7452
	DUP14,157,7544
	DUP15,158,7636
	DUP16,159,7728
	SWAP1 161,7821
	SWAP2,162,7903
	SWAP3,163,7984
	SWAP4,164,8063
	SWAP5,165,8142
	SWAP6,166,8221
	SWAP7,167,8300
	SWAP8,168,8379
	SWAP9,169,8458
	SWAP10,170,8538
	SWAP11,171,8618
	SWAP12,172,8698
	SWAP13,173,8778
	SWAP14,174,8858
	SWAP15,175,8938
	SWAP16,176,9018
	LOG0 178,9099
	LOG1,179,9155
	LOG2,180,9209
	LOG3,181,9264
	LOG4,182,9319
	PUSHC 185,9450
	JUMPC,186,9506
	JUMPCI,187,9573
	BAD,188,9654
	CREATE 190,9727
	CALL,191,9795
	CALLCODE,192,9850
	RETURN,193,9922
	DELEGATECALL,194,9985
	SUICIDE 195,10061
inline unsigned getPushNumber(199,10196
inline unsigned getDupNumber(205,10355
inline unsigned getSwapNumber(211,10513
inline Instruction pushInstruction(217,10666
inline Instruction dupInstruction(224,10930
inline Instruction swapInstruction(231,11192
inline Instruction logInstruction(238,11456
enum class Tier 244,11654
	Zero 246,11683
	Base,247,11707
	VeryLow,248,11732
	Low,249,11759
	Mid,250,11783
	High,251,11806
	Ext,252,11831
	Special,253,11855
	Invalid 254,11903
struct InstructionInfo258,11988
	std::string name;260,12013
	int additional;261,12068
	int args;262,12169
	int ret;263,12319
	bool sideEffects;264,12443
	Tier gasPriceTier;265,12592

src/cpp-ethereum/libevmcore/EVMSchedule.h,836
struct EVMSchedule33,890
	EVMSchedule(35,911
	EVMSchedule(36,995
	EVMSchedule(bool _efcd, bool _hdc, unsigned const& _txCreateGas): exceptionalFailedCodeDeposit(_efcd), haveDelegateCall(_hdc), tierStepGas(std::array<unsigned, 8>{{0, 2, 3, 5, 8, 10, 20, 0}}), txCreateGas(36,995
	std::array<std::array41,1344
	std::array<unsigned, 8> tierStepGas;41,1344
	bool staticCallDepthLimit(75,2291
	bool suicideChargesNewAccountGas(76,2350
	bool emptinessIsNonexistence(77,2415
	bool zeroValueTransferChargesNewAccountGas(78,2476
static const EVMSchedule DefaultSchedule 81,2556
static const EVMSchedule FrontierSchedule 82,2614
static const EVMSchedule HomesteadSchedule 83,2692
static const EVMSchedule EIP150Schedule 85,2770
static const EVMSchedule EIP158Schedule 99,3156
static const EVMSchedule MetropolisSchedule 107,3323

src/cpp-ethereum/libdevcore/FileSystem.cpp,307
static string s_ethereumDatadir;43,1278
static string s_ethereumIpcPath;44,1311
void dev::setDataDir(setDataDir46,1345
void dev::setIpcPath(setIpcPath51,1426
string dev::getIpcPath(getIpcPath56,1505
string dev::getDataDir(getDataDir69,1779
string dev::getDefaultDataDir(getDefaultDataDir78,1991

src/cpp-ethereum/libdevcore/SHA3.cpp,549
namespace dev32,914
h256 EmptySHA3 35,931
h256 EmptyListSHA3 36,971
namespace keccak38,1010
#define decshake(50,1229
#define decsha3(53,1316
#define rol(85,2362
#define REPEAT6(86,2413
#define REPEAT24(87,2444
#define REPEAT5(88,2481
#define FOR5(89,2510
static inline void keccakf(94,2604
#define _(132,3302
#define FOR(133,3334
#define mkapply_ds(135,3408
#define mkapply_sd(141,3728
#define P 151,4143
#define Plen 152,4161
#define foldP(155,4225
mkapply_ds(foldP148,4049
#define defshake(188,5026
#define defsha3(193,5287

src/cpp-ethereum/libdevcore/Common.h,3106
#define _ALLOW_KEYWORD_MACROS32,979
#define noexcept 33,1009
using byte 57,1573
#define DEV_QUOTED_HELPER(60,1652
#define DEV_QUOTED(61,1684
#define DEV_IGNORE_EXCEPTIONS(63,1728
#define DEV_IF_THROWS(65,1788
class secure_vector80,2073
	secure_vector(83,2103
	explicit secure_vector(85,2237
	explicit secure_vector(86,2293
	explicit secure_vector(87,2365
	explicit secure_vector(88,2430
	explicit secure_vector(89,2517
	~secure_vector(90,2610
	secure_vector<T>& operator=(operator=92,2650
	std::vector<T>& writable(101,2807
	std::vector<T> const& makeInsecure(102,2863
	void clear(104,2927
	vector_ref<T> ref(106,2963
	vector_ref<T const> ref(107,3019
	size_t size(109,3094
	bool empty(110,3141
	void swap(112,3189
	std::vector<T> m_data;115,3272
using bytesSec 118,3300
using bigint 121,3357
using u64 122,3445
using u128 123,3620
using u256 124,3798
using s256 125,3976
using u160 126,4152
using s160 127,4330
using u512 128,4506
using s512 129,4684
using u256s 130,4860
using u160s 131,4893
using u256Set 132,4926
using u160Set 133,4958
using StringMap 136,5005
using BytesMap 137,5059
using u256Map 138,5100
using HexMap 139,5138
using StringHashMap 142,5193
using u256HashMap 143,5261
using strings 146,5331
using string32 149,5404
static const string32 ZeroString32 150,5443
static const bytes NullBytes;153,5623
static const std::map<u256, u256> EmptyMapU256U256;154,5653
inline s256 u2s(158,5825
inline u256 s2u(168,6085
inline unsigned int toLog2(181,6450
template <size_t n> inline u256 exp10(188,6554
template <> inline u256 exp10<exp10193,6634
inline N diff(200,6764
class ScopeGuard206,6918
	ScopeGuard(209,6945
	~ScopeGuard(210,6999
class HasInvariants217,7121
class InvariantChecker225,7280
	InvariantChecker(228,7313
	~InvariantChecker(229,7516
	HasInvariants const* m_this;234,7771
	char const* m_function;235,7801
	char const* m_file;236,7826
	int m_line;237,7847
#define DEV_INVARIANT_CHECK 242,7953
#define DEV_INVARIANT_CHECK_HERE 243,8076
#define DEV_INVARIANT_CHECK 245,8212
#define DEV_INVARIANT_CHECK_HERE 246,8249
class TimerHelper250,8336
	TimerHelper(253,8364
	std::chrono::high_resolution_clock::time_point m_t;257,8553
	std::string m_id;258,8606
	unsigned m_ms;259,8625
class Timer262,8645
	Timer(265,8667
	std::chrono::high_resolution_clock::duration duration(267,8692
	double elapsed(268,8815
	void restart(269,8937
	std::chrono::high_resolution_clock::time_point m_t;272,9016
#define DEV_TIMED(275,9073
#define DEV_TIMED_SCOPE(276,9195
#define DEV_TIMED_FUNCTION 278,9274
#define DEV_TIMED_FUNCTION 280,9336
#define DEV_TIMED_ABOVE(283,9408
#define DEV_TIMED_SCOPE_ABOVE(284,9564
#define DEV_TIMED_FUNCTION_ABOVE(286,9657
#define DEV_TIMED_FUNCTION_ABOVE(288,9739
#define DEV_UNUSED293,9856
#define DEV_UNUSED 295,9881
enum class WithExisting:WithExisting298,9932
	Trust 300,9963
	Verify,301,9975
	Rescue,302,9984
	Kill303,9993
namespace std311,10086
inline dev::WithExisting max(314,10103
template <> struct hash<hash319,10270
	size_t operator()(operator()321,10307

src/cpp-ethereum/libdevcore/MemoryDB.h,819
struct DBChannel:DBChannel35,913
struct DBChannel: public LogChannel  { static const char* name(35,913
struct DBWarn:DBWarn36,1015
struct DBWarn: public LogChannel  { static const char* name(36,1015
#define dbdebug 38,1114
#define dbwarn 39,1146
class MemoryDB41,1175
	MemoryDB(46,1228
	MemoryDB(47,1243
	void clear(51,1336
	std::unordered_map<std::unordered_map52,1439
	mutable SharedMutex x_this;68,1843
	std::unordered_map<std::unordered_map70,1879
	std::unordered_map<h256, std::pair<std::string, unsigned>> m_main;70,1879
	std::unordered_map<std::unordered_map71,1947
	std::unordered_map<h256, std::pair<bytes, bool>> m_aux;71,1947
class EnforceRefs76,2046
	EnforceRefs(79,2074
	~EnforceRefs(80,2175
	MemoryDB const& m_o;83,2230
	bool m_r;84,2252
inline std::ostream& operator<<(87,2267

src/cpp-ethereum/libdevcore/TransientDirectory.cpp,164
TransientDirectory::TransientDirectory(32,985
TransientDirectory::TransientDirectory(36,1157
TransientDirectory::~TransientDirectory(~TransientDirectory48,1570

src/cpp-ethereum/libdevcore/CommonIO.h,1288
template <class S, class T> struct StreamOut 77,3191
template <class S, class T> struct StreamOut { static S& bypass(77,3191
inline std::ostream& operator<<(80,3442
inline S& streamout(119,5900
template <class T> inline std::ostream& operator<<(132,6166
inline S& streamout(135,6345
template <class T, std::size_t Z> inline std::ostream& operator<<(148,6617
inline S& streamout(151,6798
template <class T> inline std::ostream& operator<<(163,7015
inline S& streamout(166,7186
template <class T, class U> inline std::ostream& operator<<(171,7313
inline S& streamout(174,7508
template <class T1, class T2, class T3> inline std::ostream& operator<<(179,7681
S& streamout(182,7883
template <class T, class U> inline std::ostream& operator<<(191,8094
S& streamout(194,8276
template <class T, class U> inline std::ostream& operator<<(203,8497
S& streamout(206,8680
template <class T> inline std::ostream& operator<<(215,8860
S& streamout(218,9021
template <class T> inline std::ostream& operator<<(227,9211
S& streamout(230,9382
template <class T> inline std::ostream& operator<<(239,9567
S& streamout(242,9742
template <class T, class U> inline std::ostream& operator<<(257,10084
template <class _S, class _T> _S& operator<<(259,10234
std::string toString(265,10531

src/cpp-ethereum/libdevcore/RLP.h,7022
template <class _T> struct intTraits 42,1027
template <> struct intTraits<intTraits43,1113
template <> struct intTraits<intTraits44,1189
template <> struct intTraits<intTraits45,1265
template <class T> struct Converter 56,1846
template <class T> struct Converter { static T convert(56,1846
class RLP64,2112
		AllowNonCanon 70,2163
		ThrowOnFail 71,2184
		FailIfTooBig 72,2203
		FailIfTooSmall 73,2223
		Strict 74,2246
		VeryStrict 75,2285
		LaissezFaire 76,2345
	RLP(82,2435
	explicit RLP(88,2610
	RLP(91,2746
	explicit RLP(94,2900
	bytesConstRef data(97,3061
	explicit operator bool(operator bool100,3152
	bool isNull(103,3222
	bool isEmpty(106,3331
	bool isData(109,3465
	bool isList(112,3556
	size_t itemCount(118,3778
	size_t itemCountStrict(119,3839
	size_t size(122,4014
	size_t sizeStrict(123,4071
	bool operator==(operator==126,4247
	bool operator!=(operator!=127,4327
	bool operator==(operator==128,4407
	bool operator!=(operator!=129,4494
	template <unsigned _N> bool operator==(operator==130,4581
	template <unsigned _N> bool operator!=(operator!=131,4695
	bool operator==(operator==132,4809
	bool operator!=(operator!=133,4899
	bool operator==(operator==134,4989
	bool operator!=(operator!=135,5071
	bool operator==(operator==136,5153
	bool operator!=(operator!=137,5239
	class iterator147,5647
		iterator operator++(156,5777
		RLP operator*(157,5852
		bool operator==(operator==158,5907
		bool operator!=(operator!=159,6001
		iterator(162,6088
		bytesConstRef m_currentItem;166,6176
	iterator begin(170,6296
	iterator end(173,6433
	explicit operator std::string(string178,6587
	explicit operator bytes(operator bytes179,6649
	explicit operator RLPs(operator RLPs180,6704
	explicit operator uint8_t(operator uint8_t181,6757
	explicit operator uint16_t(operator uint16_t182,6821
	explicit operator uint32_t(operator uint32_t183,6887
	explicit operator uint64_t(operator uint64_t184,6953
	explicit operator u160(operator u160185,7019
	explicit operator u256(operator u256186,7077
	explicit operator bigint(operator bigint187,7135
	template <unsigned N> explicit operator FixedHash<N>(operator FixedHash<N>188,7197
	template <class T, class U> explicit operator std::pair<T, pair<T,189,7294
	template <class T> explicit operator std::vector<T>(vector<T>190,7392
	template <class T> explicit operator std::set<T>(set<T>191,7479
	template <class T, size_t N> explicit operator std::array<T, array<T,192,7560
	bytes toBytes(195,7737
	bytesConstRef toBytesConstRef(197,8025
	std::string toString(199,8308
	std::string toStringStrict(201,8581
	std::vector<T> toVector(204,8667
	std::set<T> toSet(219,8984
	std::unordered_set<T> toUnorderedSet(231,9250
	std::pair<std::pair243,9554
	std::pair<T, U> toPair(243,9554
	std::array<std::array259,9899
	std::array<T, N> toArray(259,9899
	template <class _N> _N toHash(298,10827
	bytesConstRef payload(321,11499
	explicit RLP(329,11913
	bool isSingleByte(335,12106
	unsigned lengthSize(338,12286
	size_t payloadOffset(344,12713
	static size_t sizeAsEncoded(350,12950
	bytesConstRef m_data;353,13087
	mutable bytesConstRef m_lastItem;358,13214
template <> struct Converter<Converter361,13253
template <> struct Converter<std::string> { static std::string convert(361,13253
template <> struct Converter<Converter362,13386
template <> struct Converter<bytes> { static bytes convert(362,13386
template <> struct Converter<Converter363,13506
template <> struct Converter<RLPs> { static RLPs convert(363,13506
template <> struct Converter<Converter364,13623
template <> struct Converter<uint8_t> { static uint8_t convert(364,13623
template <> struct Converter<Converter365,13754
template <> struct Converter<uint16_t> { static uint16_t convert(365,13754
template <> struct Converter<Converter366,13888
template <> struct Converter<uint32_t> { static uint32_t convert(366,13888
template <> struct Converter<Converter367,14022
template <> struct Converter<uint64_t> { static uint64_t convert(367,14022
template <> struct Converter<Converter368,14156
template <> struct Converter<u160> { static u160 convert(368,14156
template <> struct Converter<Converter369,14278
template <> struct Converter<u256> { static u256 convert(369,14278
template <> struct Converter<Converter370,14400
template <> struct Converter<bigint> { static bigint convert(370,14400
template <unsigned N> struct Converter<Converter371,14528
template <unsigned N> struct Converter<FixedHash<N>> { static FixedHash<N> convert(371,14528
template <class T, class U> struct Converter<Converter372,14685
template <class T, class U> struct Converter<std::pair<T, U>> { static std::pair<std::pair372,14685
template <class T, class U> struct Converter<std::pair<T, U>> { static std::pair<T, U> convert(372,14685
template <class T> struct Converter<Converter373,14846
template <class T> struct Converter<std::vector<T>> { static std::vector<T> convert(373,14846
template <class T> struct Converter<Converter374,14995
template <class T> struct Converter<std::set<T>> { static std::set<T> convert(374,14995
template <class T> struct Converter<Converter375,15135
template <class T> struct Converter<std::unordered_set<T>> { static std::unordered_set<T> convert(375,15135
template <class T, size_t N> struct Converter<Converter376,15304
template <class T, size_t N> struct Converter<std::array<T, N>> { static std::array<std::array376,15304
template <class T, size_t N> struct Converter<std::array<T, N>> { static std::array<T, N> convert(376,15304
template <class T> inline T RLP::convert(convert378,15470
class RLPStream383,15637
	RLPStream(387,15697
	explicit RLPStream(390,15779
	~RLPStream(392,15847
	RLPStream& append(395,15909
	RLPStream& append(396,15972
	RLPStream& append(397,16031
	RLPStream& append(400,16182
	RLPStream& append(401,16257
	RLPStream& append(402,16337
	template <unsigned N> RLPStream& append(403,16408
	RLPStream& append(406,16707
	template <class _T> RLPStream& append(409,16871
	template <class _T> RLPStream& appendVector(410,16966
	template <class _T, size_t S> RLPStream& append(411,17114
	template <class _T> RLPStream& append(412,17268
	template <class _T> RLPStream& append(413,17407
	template <class T, class U> RLPStream& append(414,17556
	RLPStream& appendList(419,17805
	RLPStream& appendList(420,17877
	RLPStream& appendRaw(424,18084
	template <class T> RLPStream& operator<<(427,18237
	void clear(430,18352
	bytes const& out(433,18434
	bytes&& invalidate(436,18649
	void swapOut(439,18885
	template <class _T> void pushInt(449,19379
	bytes m_out;458,19576
	std::vector<std::vector460,19591
	std::vector<std::pair<size_t, size_t>> m_listStack;460,19591
template <class _T> void rlpListAux(463,19648
template <class _T, class ... _Ts> void rlpListAux(464,19724
template <class _T> bytes rlp(467,19913
inline bytes rlpList(470,20055
template <class ... _Ts> bytes rlpList(471,20109

src/cpp-ethereum/libdevcore/CommonIO.cpp,300
string dev::memDump(memDump37,1016
inline _T contentsGeneric(69,1925
bytes dev::contents(contents89,2463
bytesSec dev::contentsSec(contentsSec94,2548
string dev::contentsString(contentsString102,2698
void dev::writeFile(writeFile107,2791
std::string dev::getPassword(getPassword135,3663

src/cpp-ethereum/libdevcore/OverlayDB.h,252
class OverlayDB:OverlayDB33,911
	OverlayDB(36,954
	~OverlayDB(37,1003
	ldb::DB* db(39,1019
	using MemoryDB::clear;52,1289
	std::shared_ptr<ldb::DB> m_db;54,1314
	ldb::ReadOptions m_readOptions;56,1347
	ldb::WriteOptions m_writeOptions;57,1380

src/cpp-ethereum/libdevcore/TransientDirectory.h,184
class TransientDirectory34,1018
	TransientDirectory(37,1053
	TransientDirectory(38,1076
	~TransientDirectory(39,1123
	std::string const& path(41,1148
	std::string m_path;44,1210

src/cpp-ethereum/libdevcore/Guards.h,1296
namespace dev34,997
struct GenericGuardBool:GenericGuardBool50,1585
	GenericGuardBool(52,1622
struct GenericUnguardBool56,1719
	GenericUnguardBool(58,1747
	~GenericUnguardBool(59,1805
	bool b 60,1842
	MutexType& m;61,1858
struct GenericUnguardSharedBool64,1903
	GenericUnguardSharedBool(66,1937
	~GenericUnguardSharedBool(67,2008
	bool b 68,2058
	MutexType& m;69,2074
class SpinLock73,2172
	SpinLock(76,2197
	void lock(77,2229
	std::atomic_flag m_lock;80,2373
using SpinGuard 82,2402
class Notified85,2467
	Notified(88,2492
	Notified(89,2507
	Notified& operator=(operator=91,2583
	operator N(operator N93,2693
	void wait(95,2758
	void wait(96,2845
	void waitNot(97,2947
	template <class F> void wait(98,3052
	template <class R, class P> void wait(100,3148
	template <class R, class P> void wait(101,3297
	template <class R, class P> void waitNot(102,3467
	template <class R, class P, class F> void wait(103,3640
	mutable Mutex m_mutex;106,3803
	mutable std::condition_variable m_cv;107,3827
	N m_value;108,3866
#define DEV_GUARDED(144,4567
#define DEV_READ_GUARDED(146,4679
#define DEV_WRITE_GUARDED(148,4806
#define DEV_RECURSIVE_GUARDED(150,4935
#define DEV_UNGUARDED(152,5075
#define DEV_READ_UNGUARDED(154,5184
#define DEV_WRITE_UNGUARDED(156,5310

src/cpp-ethereum/libdevcore/Log.h,3201
class NullOutputStream41,1133
class LogOverrideAux56,1625
	std::type_info const* m_ch;63,1746
	static const int c_null 64,1775
	int m_old;65,1806
class LogOverride:LogOverride69,1847
	LogOverride(72,1891
template <class Channel> bool isChannelVisible(76,2031
struct VerbosityHolder80,2319
	VerbosityHolder(82,2344
	~VerbosityHolder(83,2509
	int oldLogVerbosity;84,2567
#define ETH_THREAD_CONTEXT(87,2593
class ThreadContext89,2730
	ThreadContext(92,2760
	~ThreadContext(93,2818
struct LogChannel 130,4529
struct LogChannel { static const char* name(); static const int verbosity 130,4529
struct LogChannel { static const char* name(); static const int verbosity = 1; static const bool debug 130,4529
struct LeftChannel:LeftChannel131,4643
struct RightChannel:RightChannel132,4713
struct WarnChannel:WarnChannel133,4784
struct WarnChannel: public LogChannel { static const char* name(); static const int verbosity 133,4784
struct WarnChannel: public LogChannel { static const char* name(); static const int verbosity = 0; static const bool debug 133,4784
struct NoteChannel:NoteChannel134,4919
struct NoteChannel: public LogChannel { static const char* name(); static const bool debug 134,4919
struct DebugChannel:DebugChannel135,5022
struct DebugChannel: public LogChannel { static const char* name(); static const int verbosity 135,5022
struct TraceChannel:TraceChannel136,5125
struct TraceChannel: public LogChannel { static const char* name(); static const int verbosity 136,5125
struct TraceChannel: public LogChannel { static const char* name(); static const int verbosity = 4; static const bool debug 136,5125
enum class LogTag138,5261
	None,140,5281
	Url,141,5288
	Error,142,5294
	Special143,5302
class LogOutputStreamBase146,5315
	void comment(151,5452
	void append(164,5748
	void append(165,5820
	void append(166,5883
	void append(167,5954
	void append(168,6016
	void append(169,6088
	void append(170,6158
	void append(171,6228
	template <unsigned N> void append(172,6293
	void append(173,6408
	void append(174,6492
	void append(175,6577
	void append(176,6663
	void append(177,6749
	void append(178,6833
	template <class T> void append(179,6918
	template <class T> void append(190,7163
	template <class T, class U> void append(201,7408
	template <class T> void append(214,7735
	template <class T, class U> void append(225,7990
	template <class T, class U> void append(238,8327
	template <class T> void append(246,8551
	bool m_autospacing 252,8640
	unsigned m_verbosity 253,8669
	std::stringstream m_sstr;254,8696
	LogTag m_logTag 255,8751
template <class Id, bool _AutoSpacing 259,8846
	LogOutputStream& operator<<(270,9363
	LogOutputStream& operator<<(272,9574
	template <class T> LogOutputStream& operator<<(275,9734
#define DEV_STATEMENT_IF(281,10169
#define DEV_STATEMENT_SKIP(285,10462
#define clog(288,10587
#define cslog(289,10611
#define clog(292,10654
#define cslog(293,10732
#define clog(295,10818
#define cslog(296,10866
#define cdebug 302,11058
#define cnote 303,11097
#define cwarn 304,11134
#define ctrace 305,11171
#define ndebug 308,11240
#define nlog(309,11300
#define nslog(310,11361

src/cpp-ethereum/libdevcore/RLP.cpp,835
bytes dev::RLPNull 26,798
bytes dev::RLPEmptyList 27,828
RLP::RLP(29,866
RLP::iterator& RLP::iterator::operator++(operator++48,1231
RLP::iterator::iterator(iterator61,1594
RLPs RLP::toList(toList93,2369
size_t RLP::actualSize(actualSize108,2590
void RLP::requireGood(requireGood119,2761
bool RLP::isInt(isInt132,3046
size_t RLP::length(length159,3589
size_t RLP::items(items217,5431
RLPStream& RLPStream::appendRaw(appendRaw230,5613
void RLPStream::noteAppended(noteAppended237,5779
RLPStream& RLPStream::appendList(appendList276,7216
RLPStream& RLPStream::appendList(appendList286,7434
RLPStream& RLPStream::append(append296,7679
RLPStream& RLPStream::append(append317,8151
void RLPStream::pushCount(pushCount342,8758
static void streamOut(351,9042
std::ostream& dev::operator<<(operator<<374,9577

src/cpp-ethereum/libdevcore/CommonData.cpp,268
int fromHexChar(40,1157
bool dev::isHex(isHex52,1364
std::string dev::escaped(escaped60,1559
std::string dev::randomWord(randomWord88,2232
bytes dev::fromHex(fromHex99,2590
bytes dev::asNibbles(asNibbles129,3300
std::string dev::toString(toString141,3494

src/cpp-ethereum/libdevcore/Guards.cpp,21
namespace dev26,804

src/cpp-ethereum/libdevcore/OverlayDB.cpp,491
namespace dev30,915
h256 const EmptyTrie 33,932
OverlayDB::~OverlayDB(~OverlayDB35,971
class WriteBatchNoter:WriteBatchNoter41,1074
	virtual void Put(43,1131
	virtual void Delete(44,1289
void OverlayDB::commit(commit47,1391
bytes OverlayDB::lookupAux(lookupAux98,2577
void OverlayDB::rollback(rollback112,2904
std::string OverlayDB::lookup(lookup120,3002
bool OverlayDB::exists(exists128,3213
void OverlayDB::kill(kill138,3430
bool OverlayDB::deepkill(deepkill158,3988

src/cpp-ethereum/libdevcore/TrieCommon.h,621
namespace dev27,795
inline unsigned sharedNibbles(37,1127
struct NibbleSlice52,1550
	bytesConstRef data;54,1571
	unsigned offset;55,1592
	NibbleSlice(57,1611
	byte operator[operator58,1718
	unsigned size(59,1800
	bool empty(60,1860
	NibbleSlice mid(61,1900
	void clear(62,1987
	bool contains(65,2079
	unsigned shared(67,2228
	bool isEarlierThan(73,2547
	bool operator=85,3041
inline std::ostream& operator<<(89,3210
inline bool isLeaf(96,3392
inline NibbleSlice keyOf(103,3557
inline NibbleSlice keyOf(113,3746
inline std::string hexPrefixEncode(123,4211
inline std::string hexPrefixEncode(128,4376

src/cpp-ethereum/libdevcore/db.h,69
namespace ldb 29,880
namespace ldb 33,968
#define DEV_LDB 36,1021

src/cpp-ethereum/libdevcore/FixedHash.cpp,128
boost::random_device dev::s_fixedHashEngine;29,866
h128 dev::fromUUID(fromUUID31,912
std::string dev::toUUID(toUUID43,1065

src/cpp-ethereum/libdevcore/TrieCommon.cpp,159
namespace dev24,770
std::string hexPrefixEncode(43,1306
std::string hexPrefixEncode(60,1751
std::string hexPrefixEncode(81,2414
byte uniqueInUse(113,3287

src/cpp-ethereum/libdevcore/CommonJS.cpp,167
namespace dev28,834
bytes jsToBytes(31,851
bytes padded(47,1188
bytes paddedRight(54,1344
bytes unpadded(60,1418
bytes unpadLeft(67,1555
string fromRaw(81,1758

src/cpp-ethereum/libdevcore/Terminal.h,3266
#define EthReset 10,68
#define EthReset 12,109
#define EthBlack	15,169
#define EthCoal	16,201
#define EthGray	17,233
#define EthWhite	18,265
#define EthMaroon	19,297
#define EthRed	20,328
#define EthGreen	21,357
#define EthLime	22,389
#define EthOrange	23,421
#define EthYellow	24,455
#define EthNavy	25,489
#define EthBlue	26,520
#define EthViolet	27,551
#define EthPurple	28,585
#define EthTeal	29,619
#define EthCyan	30,650
#define EthBlackBold	32,682
#define EthCoalBold	33,720
#define EthGrayBold	34,758
#define EthWhiteBold	35,796
#define EthMaroonBold	36,834
#define EthRedBold	37,871
#define EthGreenBold	38,906
#define EthLimeBold	39,944
#define EthOrangeBold	40,982
#define EthYellowBold	41,1022
#define EthNavyBold	42,1062
#define EthBlueBold	43,1099
#define EthVioletBold	44,1136
#define EthPurpleBold	45,1176
#define EthTealBold	46,1216
#define EthCyanBold	47,1253
#define EthOnBlack	50,1306
#define EthOnCoal	51,1344
#define EthOnGray	52,1377
#define EthOnWhite	53,1414
#define EthOnMaroon	54,1448
#define EthOnRed	55,1485
#define EthOnGreen	56,1519
#define EthOnLime	57,1557
#define EthOnOrange	58,1590
#define EthOnYellow	59,1630
#define EthOnNavy	60,1666
#define EthOnBlue	61,1702
#define EthOnViolet	62,1734
#define EthOnPurple	63,1774
#define EthOnTeal	64,1810
#define EthOnCyan	65,1846
#define EthBlackUnder	68,1893
#define EthGrayUnder	69,1933
#define EthMaroonUnder	70,1972
#define EthGreenUnder	71,2011
#define EthOrangeUnder	72,2051
#define EthNavyUnder	73,2093
#define EthVioletUnder	74,2131
#define EthTealUnder	75,2173
#define EthReset 80,2269
#define EthBlack 116,3889
#define EthCoal 117,3925
#define EthGray 118,3959
#define EthWhite 119,3994
#define EthMaroon 120,4029
#define EthRed 121,4066
#define EthGreen 122,4099
#define EthLime 123,4135
#define EthOrange 124,4169
#define EthYellow 125,4206
#define EthNavy 126,4242
#define EthBlue 127,4277
#define EthViolet 128,4311
#define EthPurple 129,4348
#define EthTeal 130,4384
#define EthCyan 131,4419
#define EthBlackBold 133,4454
#define EthCoalBold 134,4493
#define EthGrayBold 135,4530
#define EthWhiteBold 136,4568
#define EthMaroonBold 137,4606
#define EthRedBold 138,4646
#define EthGreenBold 139,4682
#define EthLimeBold 140,4721
#define EthOrangeBold 141,4758
#define EthYellowBold 142,4798
#define EthNavyBold 143,4837
#define EthBlueBold 144,4875
#define EthVioletBold 145,4912
#define EthPurpleBold 146,4952
#define EthTealBold 147,4991
#define EthCyanBold 148,5029
#define EthOnBlack 167,5821
#define EthOnCoal 168,5858
#define EthOnGray 169,5890
#define EthOnWhite 170,5926
#define EthOnMaroon 171,5959
#define EthOnRed 172,5997
#define EthOnGreen 173,6028
#define EthOnLime 174,6065
#define EthOnOrange 175,6097
#define EthOnYellow 176,6135
#define EthOnNavy 177,6169
#define EthOnBlue 178,6205
#define EthOnViolet 179,6237
#define EthOnPurple 180,6275
#define EthOnTeal 181,6309
#define EthOnCyan 182,6345
#define EthBlackUnder 194,6813
#define EthGrayUnder 195,6853
#define EthMaroonUnder 196,6892
#define EthGreenUnder 197,6930
#define EthOrangeUnder 198,6970
#define EthNavyUnder 199,7011
#define EthVioletUnder 200,7050
#define EthTealUnder 201,7091

src/cpp-ethereum/libdevcore/Worker.h,667
enum class IfRunning32,845
	Fail,34,868
	Join,35,875
	Detach36,882
enum class WorkerState39,894
	Starting,41,919
	Started,42,930
	Stopping,43,940
	Stopped,44,951
	Killing45,961
class Worker48,974
	Worker(51,1000
	Worker(54,1139
	Worker& operator=(operator=57,1217
	virtual ~Worker(64,1327
	void setName(67,1417
	bool isWorking(76,1691
	virtual void startedWorking(79,1835
	virtual void doWork(82,1930
	bool shouldStop(86,2059
	virtual void doneWorking(89,2200
	std::string m_name;98,2440
	unsigned m_idleWaitMs 100,2462
	mutable Mutex x_work;102,2492
	std::unique_ptr<std::thread> m_work;103,2557
	std::atomic<WorkerState> m_state 104,2621

src/cpp-ethereum/libdevcore/FixedHash.h,5658
template <unsigned N> struct StaticLog2 38,1098
template <unsigned N> struct StaticLog2 { enum { result 38,1098
template <> struct StaticLog2<StaticLog239,1190
template <> struct StaticLog2<1> { enum { result 39,1190
class FixedHash47,1545
	using Arith = boost::multiprecision::number<boost::multiprecision::cpp_int_backend<N * 8, N 51,1611
	using Arith = boost::multiprecision::number<boost::multiprecision::cpp_int_backend<N * 8, N * 8, boost::multiprecision::unsigned_magnitude,51,1611
	using Arith = boost::multiprecision::number<boost::multiprecision::cpp_int_backend<N * 8, N * 8, boost::multiprecision::unsigned_magnitude, boost::multiprecision::unchecked,51,1611
	enum { size 54,1827
	enum ConstructFromPointerType 57,1913
	enum ConstructFromPointerType { ConstructFromPointer 57,1913
	enum ConstructFromStringType 60,2009
	enum ConstructFromStringType { FromHex,60,2009
	enum ConstructFromStringType { FromHex, FromBinary 60,2009
	enum ConstructFromHashType 63,2103
	enum ConstructFromHashType { AlignLeft,63,2103
	enum ConstructFromHashType { AlignLeft, AlignRight,63,2103
	enum ConstructFromHashType { AlignLeft, AlignRight, FailIfDifferent 63,2103
	FixedHash(66,2206
	template <unsigned M> explicit FixedHash(69,2320
	FixedHash(72,2641
	explicit FixedHash(75,2734
	explicit FixedHash(78,2851
	explicit FixedHash(81,3300
	explicit FixedHash(84,3774
	explicit FixedHash(87,3924
	operator Arith(operator Arith90,4169
	explicit operator bool(operator bool93,4282
	bool operator==(operator==96,4440
	bool operator!=(operator!=97,4516
	bool operator<(98,4592
	bool operator>=(operator>=99,4778
	bool operator<=(operator<=100,4849
	bool operator>(101,4937
	FixedHash& operator^=(operator^=104,5043
	FixedHash operator^(105,5165
	FixedHash& operator|=(operator|=106,5248
	FixedHash operator|(107,5370
	FixedHash& operator&=(operator&=108,5453
	FixedHash operator&(109,5575
	FixedHash operator~(110,5658
	FixedHash& operator++(113,5799
	bool contains(116,5965
	std::string abridged(124,6324
	std::string abridgedMiddle(127,6510
	std::string hex(130,6687
	bytesRef ref(133,6800
	bytesConstRef ref(136,6919
	byte* data(139,7050
	byte const* data(142,7151
	bytes asBytes(145,7264
	std::array<std::array148,7398
	std::array<byte, N>& asArray(148,7398
	std::array<std::array151,7523
	std::array<byte, N> const& asArray(151,7523
	void randomize(155,7644
	static FixedHash random(162,7824
	struct hash164,7917
		size_t operator()(operator()167,7973
	template <unsigned P,170,8105
	template <unsigned P, unsigned M> inline FixedHash& shiftBloom(170,8105
	template <unsigned P,175,8251
	template <unsigned P, unsigned M> inline bool containsBloom(175,8251
	template <unsigned P,180,8393
	template <unsigned P, unsigned M> inline FixedHash<M> bloomPart(180,8393
	inline unsigned firstBitSet(203,9114
	void clear(217,9325
	std::array<std::array220,9369
	std::array<byte, N> m_data;220,9369
class SecureFixedHash:SecureFixedHash224,9447
	using ConstructFromHashType 227,9501
	using ConstructFromStringType 228,9578
	using ConstructFromPointerType 229,9659
	explicit SecureFixedHash(231,9772
	explicit SecureFixedHash(232,9898
	explicit SecureFixedHash(233,10025
	template <unsigned M> explicit SecureFixedHash(234,10160
	template <unsigned M> explicit SecureFixedHash(235,10309
	explicit SecureFixedHash(236,10479
	explicit SecureFixedHash(237,10669
	~SecureFixedHash(238,10766
	SecureFixedHash<T>& operator=(operator=240,10808
	using FixedHash<T>::size;size249,11012
	bytesSec asBytesSec(251,11040
	FixedHash<T> const& makeInsecure(253,11098
	FixedHash<T>& writable(254,11192
	bool operator==(operator==259,11349
	bool operator!=(operator!=260,11500
	bool operator<(261,11651
	bool operator>=(operator>=262,11800
	bool operator<=(operator<=263,11951
	bool operator>(264,12102
	SecureFixedHash& operator^=(operator^=274,12483
	SecureFixedHash operator^(275,12604
	SecureFixedHash& operator|=(operator|=276,12702
	SecureFixedHash operator|(277,12823
	SecureFixedHash& operator&=(operator&=278,12921
	SecureFixedHash operator&(279,13042
	SecureFixedHash& operator^=(operator^=281,13141
	SecureFixedHash operator^(282,13299
	SecureFixedHash& operator|=(operator|=283,13400
	SecureFixedHash operator|(284,13558
	SecureFixedHash& operator&=(operator&=285,13659
	SecureFixedHash operator&(286,13817
	SecureFixedHash operator~(287,13918
	using FixedHash<T>::abridged;abridged289,14056
	using FixedHash<T>::abridgedMiddle;abridgedMiddle290,14087
	bytesConstRef ref(292,14125
	byte const* data(293,14184
	static SecureFixedHash<T> random(295,14244
	using FixedHash<T>::firstBitSet;firstBitSet296,14354
	void clear(298,14389
template<> inline bool FixedHash<32>::operator==(operator==302,14465
template<> inline size_t FixedHash<32>::hash::operator()(operator()310,14832
inline std::ostream& operator<<(318,15106
inline std::ostream& operator<<(329,15419
using h2048 336,15655
using h1024 337,15685
using h520 338,15715
using h512 339,15743
using h256 340,15771
using h160 341,15799
using h128 342,15827
using h64 343,15855
using h512s 344,15881
using h256s 345,15914
using h160s 346,15947
using h256Set 347,15980
using h160Set 348,16012
using h256Hash 349,16044
using h160Hash 350,16087
inline h160 right160(353,16222
inline h160 left160(361,16419
inline std::string toString(372,16599
namespace std384,16774
	template<> struct hash<hash387,16854
	template<> struct hash<hash388,16908
	template<> struct hash<hash389,16964
	template<> struct hash<hash390,17020
	template<> struct hash<hash391,17076

src/cpp-ethereum/libdevcore/Hash.cpp,928
namespace dev30,878
h256 sha256(33,895
namespace rmd16040,1037
#define RMDsize 65,1700
#define BYTES_TO_DWORD(68,1761
#define ROL(76,2072
#define F(79,2181
#define G(80,2225
#define H(81,2280
#define I(82,2327
#define J(83,2382
#define FF(86,2480
#define GG(91,2605
#define HH(96,2745
#define II(101,2885
#define JJ(106,3025
#define FFF(111,3165
#define GGG(116,3291
#define HHH(121,3432
#define III(126,3573
#define JJJ(131,3714
void MDinit(137,3856
void MDcompress(150,4102
void MDfinish(348,11046
#undef ROL378,11840
#undef F379,11851
#undef G380,11860
#undef H381,11869
#undef I382,11878
#undef J383,11887
#undef FF384,11896
#undef GG385,11906
#undef HH386,11916
#undef II387,11926
#undef JJ388,11936
#undef FFF389,11946
#undef GGG390,11957
#undef HHH391,11968
#undef III392,11979
#undef JJJ393,11990
h160 ripemd160(400,12036
#undef BYTES_TO_DWORD437,12992
#undef RMDsize438,13014

src/cpp-ethereum/libdevcore/vector_ref.h,1587
class vector_ref20,345
	using mutable_value_type = typename std::conditional<std::is_const<_T>::value, typename std::remove_const<_T>::type,type25,422
	using mutable_value_type = typename std::conditional<std::is_const<_T>::value, typename std::remove_const<_T>::type, _T>::type;type25,422
	vector_ref(29,682
	vector_ref(31,811
	vector_ref(33,972
	vector_ref(35,1257
	vector_ref(37,1550
	vector_ref(39,1757
	explicit operator bool(operator bool41,1876
	bool contentsEqual(43,1939
	std::vector<mutable_value_type> toVector(44,2146
	std::vector<unsigned char> toBytes(45,2266
	std::string toString(46,2468
	template <class _T2> explicit operator vector_ref<_T2>(operator vector_ref<_T2>48,2590
	operator vector_ref<_T operator vector_ref<_T49,2832
	_T* data(51,2922
	size_t count(53,3042
	size_t size(55,3167
	bool empty(56,3208
	vector_ref<_T> next(58,3330
	vector_ref<_T> cropped(62,3683
	vector_ref<_T> cropped(64,4050
	void retarget(65,4220
	void retarget(66,4285
	template <class T> bool overlapsWith(67,4372
	void copyTo(69,4691
	void populate(71,5051
	void cleanse(74,5299
	_T* begin(93,5767
	_T* end(94,5799
	_T const* begin(95,5839
	_T const* end(96,5883
	bool operator==(operator==101,6125
	bool operator!=(operator!=102,6237
	operator ldb::Slice(Slice105,6331
	void reset(108,6434
	_T* m_data;111,6493
	size_t m_count;112,6506
template<class _T> vector_ref<_T const> ref(115,6527
template<class _T> vector_ref<_T> ref(116,6626
template<class _T> vector_ref<_T const> ref(117,6707
template<class _T> vector_ref<_T> ref(118,6816

src/cpp-ethereum/libdevcore/CommonJS.h,718
template <unsigned N> std::string toJS(39,1006
inline std::string toJS(47,1381
template<unsigned T> std::string toJS(54,1544
template<typename T> std::string toJS(61,1710
enum class OnFailed 68,1850
enum class OnFailed { InterpretRaw,68,1850
enum class OnFailed { InterpretRaw, Empty,68,1850
enum class OnFailed { InterpretRaw, Empty, Throw 68,1850
template <unsigned N> FixedHash<N> jsToFixed(84,2727
template <unsigned N> boost::multiprecision::number<boost::multiprecision::cpp_int_backend<N * 8, N * 8, boost::multiprecision::unsigned_magnitude, boost::multiprecision::unchecked, void>> jsToInt(97,3103
inline u256 jsToU256(110,3883
inline int jsToInt(115,4150
inline std::string jsToDecimal(122,4281

src/cpp-ethereum/libdevcore/Assertions.h,330
#define ETH_FUNC 34,874
#define ETH_FUNC 36,927
#define ETH_FUNC 38,970
#define asserts(41,1004
#define assertsEqual(42,1077
inline bool assertAux(44,1171
inline bool assertEqualAux(58,1523
#define assertThrow(75,2213
using errinfo_comment 78,2373
inline void assertThrowAux(81,2482
inline void assertThrowAux(100,2894

src/cpp-ethereum/libdevcore/Log.cpp,1652
int dev::g_logVerbosity 37,1103
mutex x_logOverride;38,1132
static map<type_info const*, bool> s_logOverride;43,1441
bool dev::isChannelVisible(isChannelVisible45,1492
LogOverrideAux::LogOverrideAux(53,1669
LogOverrideAux::~LogOverrideAux(~LogOverrideAux61,1883
const char* LogChannel::name(name71,2061
const char* LeftChannel::name(name72,2118
const char* RightChannel::name(name73,2176
const char* WarnChannel::name(name74,2236
const char* NoteChannel::name(name75,2308
const char* DebugChannel::name(name76,2366
const char* TraceChannel::name(name77,2426
const char* LogChannel::name(name79,2491
const char* LeftChannel::name(name80,2551
const char* RightChannel::name(name81,2615
const char* WarnChannel::name(name82,2681
const char* NoteChannel::name(name83,2755
const char* DebugChannel::name(name84,2815
const char* TraceChannel::name(name85,2877
LogOutputStreamBase::LogOutputStreamBase(88,2944
struct ThreadLocalLogName111,4067
	ThreadLocalLogName(113,4095
	boost::thread_specific_ptr<std::string> m_name;114,4178
struct ThreadLocalLogContext118,4287
	void push(122,4355
	void pop(129,4497
	string join(134,4542
	boost::thread_specific_ptr<std::vector<std::string>> m_contexts;143,4695
ThreadLocalLogContext g_logThreadContext;146,4765
void dev::ThreadContext::push(push150,4853
void dev::ThreadContext::pop(pop155,4936
string dev::ThreadContext::join(join160,4999
string dev::getThreadName(getThreadName170,5266
void dev::setThreadName(setThreadName186,5590
void dev::simpleDebugOut(simpleDebugOut199,5858
std::function<void(std::string const&, char const*)> dev::g_logPost 215,6147

src/cpp-ethereum/libdevcore/debugbreak.h,456
#define DEBUG_BREAK_H28,1393
#define debug_break 32,1463
	DEBUG_BREAK_PREFER_BUILTIN_TRAP_TO_SIGTRAP 47,1752
enum { HAVE_TRAP_INSTRUCTION 51,1850
static void __inline__ trap_instruction(53,1930
enum { HAVE_TRAP_INSTRUCTION 58,2037
static void __inline__ trap_instruction(61,2157
enum { HAVE_TRAP_INSTRUCTION 86,2881
static void __inline__ trap_instruction(88,2961
enum { HAVE_TRAP_INSTRUCTION 97,3199
static void __inline__ debug_break(101,3287

src/cpp-ethereum/libdevcore/MemoryDB.cpp,627
namespace dev27,828
const char* DBChannel::name(name30,845
const char* DBWarn::name(name31,893
std::unordered_map<std::unordered_map33,939
std::unordered_map<h256, std::string> MemoryDB::get(get33,939
MemoryDB& MemoryDB::operator=(operator=45,1234
std::string MemoryDB::lookup(lookup58,1453
bool MemoryDB::exists(exists74,1827
void MemoryDB::insert(insert85,2052
bool MemoryDB::kill(kill103,2409
bytes MemoryDB::lookupAux(lookupAux132,3037
void MemoryDB::removeAux(removeAux143,3274
void MemoryDB::insertAux(insertAux151,3396
void MemoryDB::purge(purge159,3553
h256Hash MemoryDB::keys(keys179,3903

src/cpp-ethereum/libdevcore/TrieDB.cpp,113
h256 const dev::c_shaNull 28,853
h256 const dev::EmptyTrie 29,896
const char* TrieDBChannel::name(name31,940

src/cpp-ethereum/libdevcore/Exceptions.h,1263
struct Exception:Exception39,1139
	Exception(41,1208
	const char* what(42,1292
	std::string m_message;45,1421
#define DEV_SIMPLE_EXCEPTION(48,1449
struct RLPException:RLPException51,1611
struct RLPException: virtual Exception { RLPException(51,1611
#define DEV_SIMPLE_EXCEPTION_RLP(52,1730
struct BadRoot:BadRoot63,2156
struct BadRoot: virtual Exception { public: BadRoot(63,2156
struct BadRoot: virtual Exception { public: BadRoot(h256 const& _root): Exception("BadRoot " + _root.hex()), root(_root) {} h256 root;63,2156
struct InterfaceNotSupported:InterfaceNotSupported69,2436
struct InterfaceNotSupported: virtual Exception { public: InterfaceNotSupported(69,2436
struct ExternalFunctionFailure:ExternalFunctionFailure70,2588
struct ExternalFunctionFailure: virtual Exception { public: ExternalFunctionFailure(70,2588
using errinfo_invalidSymbol 73,2786
using errinfo_wrongAddress 74,2867
using errinfo_comment 75,2948
using errinfo_required 76,3024
using errinfo_got 77,3097
using errinfo_min 78,3160
using errinfo_max 79,3223
using RequirementError 80,3286
using errinfo_hash256 81,3356
using errinfo_required_h256 82,3422
using errinfo_got_h256 83,3503
using Hash256RequirementError 84,3574
using errinfo_extraData 85,3661

src/cpp-ethereum/libdevcore/Common.cpp,514
namespace dev31,894
#define ETH_PROJECT_VERSION 34,928
char const* Version 36,971
const u256 Invalid256 38,1015
void InvariantChecker::checkInvariants(checkInvariants40,1050
struct TimerChannel:TimerChannel49,1399
struct TimerChannel: public LogChannel { static const char* name(); static const int verbosity 49,1399
const char* TimerChannel::name(name52,1523
const char* TimerChannel::name(name54,1587
TimerHelper::~TimerHelper(~TimerHelper57,1655
uint64_t utcTime(64,1889
string inUnits(72,2076

src/cpp-ethereum/libdevcore/Base64.cpp,171
static inline bool is_base64(34,1252
static inline byte find_base64_char_index(39,1344
string dev::toBase64(toBase6449,1772
bytes dev::fromBase64(fromBase64101,2959

src/cpp-ethereum/libdevcore/TrieDB.h,6324
struct TrieDBChannel:TrieDBChannel36,930
struct TrieDBChannel: public LogChannel  { static const char* name(36,930
#define tdebug 37,1036
struct InvalidTrie:InvalidTrie39,1072
enum class Verification 43,1178
	Skip,44,1204
	Normal45,1211
class GenericTrieDB64,1581
	using DB 67,1611
	explicit GenericTrieDB(69,1629
	GenericTrieDB(70,1686
	~GenericTrieDB(71,1795
	void open(73,1817
	void open(74,1853
	void init(76,1969
	void setRoot(78,2052
	bool isNull(95,2568
	bool isEmpty(97,2727
	h256 const& root(99,2805
	std::string at(101,3085
	void insert(103,3191
	void insert(104,3272
	void insert(105,3353
	void remove(107,3490
	bool contains(109,3575
	bool contains(110,3637
	class iterator112,3703
		iterator(117,3794
		iterator& operator++(121,3916
		value_type operator*(123,3968
		value_type operator->(124,4016
		bool operator==(operator==126,4066
		bool operator!=(operator!=127,4144
		struct Node135,4306
			std::string rlp;137,4324
			std::string key;138,4344
			byte child;139,4390
			void setChild(143,4543
			void setFirstChild(144,4589
			void incrementChild(145,4629
			bool operator==(operator==147,4717
			bool operator!=(operator!=148,4822
		std::vector<Node> m_trail;152,4909
		GenericTrieDB<DB> const* m_that;153,4938
	iterator begin(156,4978
	iterator end(157,5029
	iterator lower_bound(159,5075
	void descendKey(162,5204
	void descendEntry(171,5561
	void descendList(182,5954
	h256Hash leftOvers(204,6804
	void debugStructure(212,6993
	bool check(219,7193
	DB const* db(235,7570
	DB* db(236,7609
	std::string node(290,9461
	h256 forceInsertNode(293,9623
	void forceInsertNode(294,9720
	void forceKillNode(295,9802
	void killNode(301,10157
	void killNode(302,10251
	h256 m_root;304,10349
	DB* m_db 305,10363
std::ostream& operator<<(309,10408
class SpecificTrieDB:SpecificTrieDB320,10754
	using DB 323,10801
	using KeyType 324,10835
	SpecificTrieDB(326,10863
	SpecificTrieDB(327,10915
	bool contains(331,11083
	std::string at(332,11196
	void insert(333,11304
	void insert(334,11430
	void remove(335,11516
	class iterator:iterator337,11613
		iterator(343,11768
		iterator(344,11784
		iterator(345,11830
		value_type operator*(347,11899
		value_type operator->(348,11947
	iterator begin(353,12027
	iterator end(354,12068
	iterator lower_bound(355,12113
std::ostream& operator<<(359,12274
class HashedGenericTrieDB:HashedGenericTrieDB367,12509
	using Super 369,12587
	using DB 372,12653
	HashedGenericTrieDB(374,12671
	HashedGenericTrieDB(375,12726
	using Super::open;377,12835
	using Super::init;378,12855
	using Super::setRoot;379,12875
	using Super::isNull;382,12988
	using Super::isEmpty;384,13115
	using Super::root;386,13139
	using Super::db;387,13159
	using Super::leftOvers;389,13178
	using Super::check;390,13203
	using Super::debugStructure;391,13224
	std::string at(393,13255
	bool contains(394,13331
	void insert(395,13406
	void remove(396,13500
	class iterator399,13656
		iterator(404,13747
		iterator(405,13763
		iterator(406,13805
		iterator& operator++(408,13863
		value_type operator*(409,13906
		value_type operator->(410,13962
		bool operator==(operator==412,14020
		bool operator!=(operator!=413,14078
		value_type at(415,14138
	iterator begin(417,14191
	iterator end(418,14238
	iterator lower_bound(419,14283
class FatGenericTrieDB:FatGenericTrieDB424,14403
	using Super 426,14478
	using DB 429,14544
	FatGenericTrieDB(430,14561
	FatGenericTrieDB(431,14613
	using Super::init;433,14719
	using Super::isNull;434,14739
	using Super::isEmpty;435,14761
	using Super::root;436,14784
	using Super::leftOvers;437,14804
	using Super::check;438,14829
	using Super::open;439,14850
	using Super::setRoot;440,14870
	using Super::db;441,14893
	using Super::debugStructure;442,14911
	std::string at(444,14942
	bool contains(445,15018
	void insert(446,15093
	void remove(453,15250
	class iterator:iterator456,15352
		iterator(461,15473
		iterator(462,15490
		typename Super::value_type at(464,15552
		mutable bytes m_key;472,15802
	iterator begin(475,15830
	iterator end(476,15877
	class HashedIterator:HashedIterator479,15966
		HashedIterator(484,16093
		HashedIterator(485,16115
		bytes key(487,16182
	HashedIterator hashedBegin(494,16345
	HashedIterator hashedEnd(495,16414
template <class KeyType, class DB> using TrieDB 498,16481
namespace dev503,16610
template <class DB> GenericTrieDB<DB>::iterator::iterator(iterator506,16627
template <class DB> GenericTrieDB<DB>::iterator::iterator(iterator513,16860
template <class DB> typename GenericTrieDB<DB>::iterator::value_type GenericTrieDB<DB>::iterator::at(at520,17125
template <class DB> void GenericTrieDB<DB>::iterator::next(next531,17547
template <class DB> void GenericTrieDB<DB>::iterator::next(next669,20791
template <class KeyType, class DB> typename SpecificTrieDB<KeyType, DB>::iterator::value_type SpecificTrieDB<KeyType, DB>::iterator::at(at768,23089
template <class DB> void GenericTrieDB<DB>::insert(insert778,23413
template <class DB> std::string GenericTrieDB<DB>::at(at796,24069
template <class DB> std::string GenericTrieDB<DB>::atAux(atAux801,24194
template <class DB> bytes GenericTrieDB<DB>::mergeAt(mergeAt833,25107
template <class DB> bytes GenericTrieDB<DB>::mergeAt(mergeAt838,25292
template <class DB> void GenericTrieDB<DB>::mergeAtAux(mergeAtAux914,27141
template <class DB> void GenericTrieDB<DB>::remove(remove931,27688
template <class DB> bool GenericTrieDB<DB>::isTwoItemNode(isTwoItemNode947,28031
template <class DB> std::string GenericTrieDB<DB>::deref(deref953,28230
template <class DB> bytes GenericTrieDB<DB>::deleteAt(deleteAt958,28383
template <class DB> bool GenericTrieDB<DB>::deleteAtAux(deleteAtAux1065,30676
template <class DB> bytes GenericTrieDB<DB>::place(place1082,31081
template <class DB> bytes GenericTrieDB<DB>::remove(remove1107,31728
template <class DB> RLPStream& GenericTrieDB<DB>::streamNode(streamNode1125,32100
template <class DB> bytes GenericTrieDB<DB>::cleve(cleve1134,32292
template <class DB> bytes GenericTrieDB<DB>::graft(graft1155,32787
template <class DB> bytes GenericTrieDB<DB>::merge(merge1182,33431
template <class DB> bytes GenericTrieDB<DB>::branch(branch1201,33844

src/cpp-ethereum/libdevcore/TrieHash.cpp,271
namespace dev31,923
#define APPEND_CHILD 37,980
#define ENABLE_DEBUG_PRINT 40,1017
bool g_hashDebug 43,1070
void hash256rlp(48,1235
void hash256aux(140,3977
bytes rlp256(161,4495
h256 hash256(174,4807
h256 orderedTrieRoot(179,4871
h256 orderedTrieRoot(188,5020

src/cpp-ethereum/libdevcore/Base64.h,60
template <size_t N> inline FixedHash<N> fromBase36(54,1677

src/cpp-ethereum/libdevcore/picosha2.h,1597
#define PICOSHA2_H25,1099
namespace picosha235,1275
inline uint32_t mask_32bit(45,1374
static const uint32_t add_constant[add_constant49,1439
static const uint32_t initial_message_digest[initial_message_digest68,2269
inline uint32_t ch(73,2423
inline uint32_t maj(77,2506
inline uint32_t rotr(81,2593
inline uint32_t bsig0(86,2702
inline uint32_t bsig1(90,2784
inline uint32_t shr(94,2866
inline uint32_t ssig0(99,2950
inline uint32_t ssig1(103,3030
template<typename RaIter1,107,3112
void hash256_block(108,3157
void output_hex(159,4592
void bytes_to_hex_string(171,4887
void bytes_to_hex_string(178,5080
std::string bytes_to_hex_string(183,5242
std::string bytes_to_hex_string(190,5419
class hash256_one_by_one 196,5558
	hash256_one_by_one(198,5593
	void init(202,5630
	void process(209,5837
	void finish(219,6177
	void get_hash_bytes(240,6677
	void add_to_data_length(249,6946
	void write_data_bit_length(263,7246
	std::vector<uint8_t> buffer_;286,7975
	uint32_t data_length_digits_[data_length_digits_287,8006
	uint32_t h_[h_288,8079
inline void get_hash_hex_string(291,8100
inline std::string get_hash_hex_string(297,8303
template<typename RaIter,303,8458
void hash256(304,8502
template<typename RaIter,312,8710
void hash256(313,8759
template<typename RaContainer,317,8869
void hash256(318,8918
template<typename RaContainer,322,9035
void hash256(323,9089
void hash256_hex_string(329,9234
std::string hash256_hex_string(338,9490
inline void hash256_hex_string(344,9634
void hash256_hex_string(349,9800
std::string hash256_hex_string(354,9959

src/cpp-ethereum/libdevcore/UndefMacros.h,122
#undef DELETE28,956
#undef IN29,970
#undef VOID30,980
#undef THIS31,992
#undef CONST32,1004
#undef interface37,1122

src/cpp-ethereum/libdevcore/CommonData.h,1810
enum class WhenError39,1040
	DontThrow 41,1063
	Throw 42,1079
enum class HexPrefix45,1095
	DontAdd 47,1118
	Add 48,1132
std::string toHex(54,1386
template <class T> static bool isHash(72,2228
inline std::string asString(79,2572
inline std::string asString(86,2862
inline bytes asBytes(92,3071
inline void toBigEndian(110,3880
inline T fromBigEndian(124,4492
inline std::string toBigEndianString(133,4714
inline std::string toBigEndianString(134,4829
inline bytes toBigEndian(135,4944
inline bytes toBigEndian(136,5035
inline bytes toCompactBigEndian(141,5252
inline bytes toCompactBigEndian(150,5618
inline std::string toCompactBigEndianString(158,5856
inline std::string toHex(169,6301
inline std::string toCompactHex(175,6479
unsigned commonPrefix(191,7210
inline unsigned bytesRequired(205,7582
void trimFront(216,7983
void pushFront(226,8336
inline std::vector<T>& operator+=(operator+=236,8605
inline std::vector<T>& operator+=(operator+=247,8931
template <class T, class U> std::set<T>& operator+=(operator+=256,9207
template <class T, class U> std::unordered_set<T>& operator+=(operator+=264,9408
template <class T, class U> std::vector<T>& operator+=(operator+=272,9626
template <class T, class U> std::set<T> operator+(280,9825
template <class T, class U> std::unordered_set<T> operator+(286,9988
template <class T, class U> std::vector<T> operator+(292,10168
inline std::vector<T> operator+(299,10336
inline std::set<T>& operator+=(operator+=307,10520
inline std::set<T> operator+(316,10694
std::unordered_map<A, B>& operator+=(operator+=323,10843
std::unordered_map<A, B> operator+(331,11032
std::vector<T> keysOf(341,11317
std::vector<T> keysOf(350,11482
std::vector<U> valuesOf(359,11657
std::vector<U> valuesOf(369,11850
bool contains(379,12054

src/cpp-ethereum/libdevcore/Worker.cpp,176
void Worker::startWorking(startWorking30,858
void Worker::stopWorking(stopWorking85,2376
void Worker::terminate(terminate99,2695
void Worker::workLoop(workLoop114,2944

src/cpp-ethereum/libdevcore/RangeMask.h,1450
class RangeMask46,1304
	RangeMask(55,1558
	RangeMask(57,1657
	RangeMask(59,1768
	RangeMask unionedWith(62,1903
	RangeMask operator+(63,1979
	RangeMask lowest(66,2148
	RangeMask operator~(75,2483
	RangeMask inverted(78,2634
	RangeMask& invert(95,3023
	template <class S> RangeMask operator-(97,3076
	template <class S> RangeMask& operator-=(operator-=98,3175
	RangeMask& operator+=(operator+=100,3275
	RangeMask& unionWith(102,3346
	RangeMask& operator+=(operator+=110,3576
	RangeMask& operator+=(operator+=116,3845
	RangeMask& unionWith(118,3951
	bool contains(123,4026
	bool empty(131,4175
	bool full(136,4229
	void clear(141,4405
	void reset(146,4446
	std::pair<std::pair153,4551
	std::pair<T, T> const& all(153,4551
	void extendAll(155,4650
	class const_iterator:const_iterator157,4760
		const_iterator(162,4873
		T operator*(164,4896
		const_iterator& operator++(165,4938
		const_iterator operator++(166,5034
		bool operator==(operator==168,5149
		bool operator!=(operator!=169,5258
		bool operator<(170,5336
		const_iterator(173,5429
	const_iterator begin(179,5641
	const_iterator end(180,5712
	T next(183,5925
	size_t size(195,6329
	size_t firstOut(203,6451
	size_t lastIn(210,6597
	UnsignedRange m_all;219,6746
	std::map<std::map221,6817
	std::map<T, T> m_ranges;221,6817
template <class T> inline std::ostream& operator<<(224,6847
RangeMask<T>& RangeMask<T>::unionWith(unionWith234,7134

src/cpp-ethereum/ethkey/KeyAux.h,1867
using namespace std;37,1114
using namespace dev;38,1135
using namespace dev::eth;39,1156
#undef RETURN42,1217
class BadArgument:BadArgument44,1232
string getAccountPassword(46,1273
string createPassword(51,1499
pair<string, string> createPassword(68,1931
class KeyCLI89,2610
	enum class OperationMode92,2633
		None,94,2662
		ListBare,95,2670
		NewBare,96,2682
		ImportBare,97,2693
		ExportBare,98,2707
		RecodeBare,99,2721
		KillBare,100,2735
		InspectBare,101,2747
		CreateWallet,102,2762
		List,103,2778
		New,104,2786
		Import,105,2793
		ImportWithAddress,106,2803
		ImportPresale,107,2824
		Export,108,2841
		Recode,109,2851
		Kill,110,2861
		Inspect,111,2869
		SignTx,112,2880
		DecodeTx,113,2890
	KeyCLI(116,2907
	bool interpretOption(118,2977
	KeyPair makeKey(278,7809
	Secret getSecret(286,7967
	std::string userVisible(322,9241
	void execute(324,9352
	std::string lockPassword(693,21378
	static void streamHelp(698,21569
	static bytes inputData(761,26105
	static bool isTrue(778,26468
	static bool isFalse(783,26583
	void openWallet(789,26709
	KDF kdf(804,27019
	Address userToAddress(806,27102
	KeyManager& keyManager(817,27392
	SecretStore& secretStore(833,27739
	unique_ptr<SecretStore> m_secretStore;843,27955
	unique_ptr<KeyManager> m_keyManager;844,27995
	OperationMode m_mode;847,28055
	string m_secretsPath 850,28097
	string m_walletPath 851,28149
	string m_masterPassword;854,28229
	strings m_unlocks;855,28255
	string m_lock;856,28275
	string m_lockHint;857,28291
	bool m_icap 858,28311
	string m_name;861,28357
	Address m_address;862,28373
	bool m_showSecret 865,28410
	strings m_inputs;868,28454
	string m_signKey;871,28487
	TransactionSkeleton m_toSign;872,28506
	u256 m_forceNonce;873,28537
	string m_kdf 875,28558
	map<map876,28584
	map<string, string> m_kdfParams;876,28584

src/cpp-ethereum/ethkey/main.cpp,93
void help(35,1026
void version(50,1413
void setDefaultOrCLocale(70,2314
int main(80,2434

src/cpp-ethereum/libethcore/SealEngine.h,1850
class SealEngineFace45,1105
	virtual ~SealEngineFace(48,1136
	virtual unsigned revision(51,1206
	virtual unsigned sealFields(52,1255
	virtual bytes sealRLP(53,1306
	virtual StringHashMap jsInfo(54,1357
	bytes option(63,2012
	bool setOption(64,2145
	virtual strings sealers(66,2351
	virtual std::string sealer(67,2410
	virtual void setSealer(68,2468
	virtual bool shouldSeal(70,2516
	virtual void cancelGeneration(73,2708
	ChainOperationParams const& chainParams(75,2745
	void setChainParams(76,2815
	SealEngineFace* withChainParams(77,2897
	virtual bool isPrecompiled(80,3077
	virtual bigint costOfPrecompiled(84,3271
	virtual std::pair<std::pair85,3412
	virtual std::pair<bool, bytes> executePrecompiled(85,3412
	void setQtumSchedule(88,3645
	EVMSchedule& getQtumSchedule(90,3735
	mutable std::set<Address> deleteAddresses;92,3799
	virtual bool onOptionChanging(96,3918
	mutable Mutex x_options;99,4010
	std::unordered_map<std::unordered_map100,4036
	std::unordered_map<std::string, bytes> m_options;100,4036
	mutable EVMSchedule qtumSchedule;102,4088
	ChainOperationParams m_params;104,4132
class SealEngineBase:SealEngineBase107,4168
	void generateSeal(110,4222
	void onSealGenerated(117,4377
	std::function<void(bytes const& s)> m_onSealGenerated;121,4557
using SealEngineFactory 124,4617
class SealEngineRegistrar126,4678
	static SealEngineFace* create(132,5031
	template <class SealEngine> static SealEngineFactory registerSealEngine(134,5187
	static void unregisterSealEngine(135,5359
	static SealEngineRegistrar* get(138,5468
	std::unordered_map<std::unordered_map140,5570
	std::unordered_map<std::string, SealEngineFactory> m_sealEngines;140,5570
	static SealEngineRegistrar* s_this;141,5637
#define ETH_REGISTER_SEAL_ENGINE(144,5678
class NoProof:NoProof146,5838
	std::string name(149,5890

src/cpp-ethereum/libethcore/Common.h,1762
enum class RelativeBlock:RelativeBlock82,2314
	Latest 84,2354
	Pending 85,2377
struct ImportRoute90,2425
	h256s deadBlocks;92,2446
	h256s liveBlocks;93,2465
	std::vector<Transaction> goodTranactions;94,2484
enum class ImportResult97,2531
	Success 99,2557
	UnknownParent,100,2571
	FutureTimeKnown,101,2587
	FutureTimeUnknown,102,2605
	AlreadyInChain,103,2625
	AlreadyKnown,104,2642
	Malformed,105,2657
	OverbidGasPrice,106,2669
	BadChain107,2687
struct ImportRequirements110,2701
	using value 112,2729
		ValidSeal 115,2763
		UncleBasic 116,2799
		TransactionBasic 117,2863
		UncleSeals 118,2939
		TransactionSignatures 119,3004
		Parent 120,3086
		UncleParent 121,3133
		PostGenesis 122,3192
		CheckUncles 123,3251
		CheckTransactions 124,3316
		OutOfOrderChecks 125,3415
		InOrderChecks 126,3569
		Everything 127,3700
		None 128,3783
template<typename... Args> class Signal133,3886
	using Callback 136,3936
	class HandlerAux138,3985
		~HandlerAux(143,4039
		void reset(144,4092
		void fire(145,4126
		HandlerAux(148,4190
		Callback m_h;152,4324
	~Signal(155,4345
	std::shared_ptr<HandlerAux> add(162,4443
	void operator()(operator()170,4664
	std::map<std::map178,4808
	std::map<unsigned, std::weak_ptr<typename Signal::HandlerAux>> m_fire;178,4808
template<class... Args> using Handler 181,4884
struct TransactionSkeleton183,4980
	bool creation 185,5009
	Address from;186,5033
	Address to;187,5048
	u256 value;188,5061
	bytes data;189,5074
	u256 nonce 190,5087
	u256 gas 191,5113
	u256 gasPrice 192,5137
inline void badBlock(199,5441
struct WorkingProgress205,5711
	uint64_t hashes 208,5860
	uint64_t ms 209,5921
	u256 rate(210,5995
enum class IfDropped214,6093
	Ignore,216,6116
	Retry 217,6184

src/cpp-ethereum/libethcore/BlockHeader.cpp,874
BlockHeader::BlockHeader(BlockHeader34,1046
BlockHeader::BlockHeader(BlockHeader38,1078
void BlockHeader::clear(clear45,1318
h256 BlockHeader::hash(hash64,1688
void BlockHeader::streamRLPFields(streamRLPFields77,1925
void BlockHeader::streamRLP(streamRLP83,2190
h256 BlockHeader::headerHashFromBlock(headerHashFromBlock95,2507
RLP BlockHeader::extractHeader(extractHeader100,2609
void BlockHeader::populate(populate115,3383
struct BlockInfoDiagnosticsChannel:BlockInfoDiagnosticsChannel144,4516
struct BlockInfoDiagnosticsChannel: public LogChannel { static const char* name(144,4516
struct BlockInfoDiagnosticsChannel: public LogChannel { static const char* name() { return EthBlue "▧" EthWhite " ◌"; } static const int verbosity 144,4516
void BlockHeader::populateFromParent(populateFromParent146,4676
void BlockHeader::verify(verify156,4917

src/cpp-ethereum/libethcore/KeyManager.h,2091
class PasswordUnknown:PasswordUnknown34,938
struct KeyInfo36,983
	KeyInfo(39,1022
	h256 passHash;42,1284
	std::string accountName;44,1359
	std::string passwordHint;46,1470
static h256 const UnknownPassword;49,1501
static auto const DontKnowThrow 51,1595
enum class SemanticPassword53,1686
	Existing,55,1716
	Master56,1727
class KeyManager72,2416
	enum class NewKeyType 75,2443
	enum class NewKeyType { DirectICAP 75,2443
	enum class NewKeyType { DirectICAP = 0, NoVanity,75,2443
	enum class NewKeyType { DirectICAP = 0, NoVanity, FirstTwo,75,2443
	enum class NewKeyType { DirectICAP = 0, NoVanity, FirstTwo, FirstTwoNextTwo,75,2443
	enum class NewKeyType { DirectICAP = 0, NoVanity, FirstTwo, FirstTwoNextTwo, FirstThree,75,2443
	enum class NewKeyType { DirectICAP = 0, NoVanity, FirstTwo, FirstTwoNextTwo, FirstThree, FirstFour 75,2443
	void setSecretsPath(80,2685
	void setKeysFile(81,2774
	std::string const& keysFile(82,2850
	void save(87,3011
	void notePassword(89,3085
	void noteHint(90,3182
	bool haveHint(91,3318
	AddressHash accountsHash(96,3595
	bool haveKey(107,4287
	h128 import(114,4751
	SecretStore& store(118,5107
	void importExisting(120,5283
	void kill(133,6493
	static std::string defaultPath(136,6577
	std::string defaultPassword(152,7366
	bool write(160,7761
	std::unordered_map<std::unordered_map168,8122
	std::unordered_map<h128, Address> m_uuidLookup;168,8122
	std::unordered_map<std::unordered_map170,8205
	std::unordered_map<Address, h128> m_addrLookup;170,8205
	std::unordered_map<std::unordered_map172,8288
	std::unordered_map<Address, KeyInfo> m_keyInfo;172,8288
	std::unordered_map<std::unordered_map174,8382
	std::unordered_map<h256, std::string> m_passwordHint;174,8382
	mutable std::unordered_map<std::unordered_map177,8507
	mutable std::unordered_map<h256, std::string> m_cachedPasswords;177,8507
	std::string m_defaultPasswordDeprecated;184,8906
	mutable std::string m_keysFile;186,8949
	mutable SecureFixedHash<16> m_keysFileKey;187,8982
	mutable h256 m_master;188,9026
	SecretStore m_store;189,9050

src/cpp-ethereum/libethcore/BasicAuthority.h,306
class BasicAuthority:BasicAuthority33,855
	std::string name(36,909
	unsigned revision(37,973
	unsigned sealFields(38,1023
	bytes sealRLP(39,1075
	static Signature sig(47,1485
	static BlockHeader& setSig(48,1565
	void setSecret(49,1669
	Secret m_secret;55,1834
	AddressHash m_authorities;56,1852

src/cpp-ethereum/libethcore/KeyManager.cpp,1556
KeyManager::KeyManager(37,1121
KeyManager::~KeyManager(~KeyManager48,1390
bool KeyManager::exists(exists51,1420
void KeyManager::create(create56,1539
bool KeyManager::recode(recode62,1683
bool KeyManager::recode(recode74,2057
bool KeyManager::load(load88,2440
Secret KeyManager::secret(secret149,4102
Secret KeyManager::secret(secret157,4357
string KeyManager::getPassword(getPassword165,4669
string KeyManager::getPassword(getPassword178,4983
h128 KeyManager::uuid(uuid197,5402
Address KeyManager::address(address205,5556
h128 KeyManager::import(import213,5722
Secret KeyManager::brain(brain227,6195
Secret KeyManager::subkey(subkey239,6413
Address KeyManager::importBrain(importBrain249,6590
void KeyManager::importExistingBrain(importExistingBrain258,6862
void KeyManager::importExisting(importExisting265,7078
void KeyManager::importExisting(importExisting277,7503
void KeyManager::kill(kill288,7926
KeyPair KeyManager::presaleSecret(presaleSecret298,8112
Addresses KeyManager::accounts(accounts328,8881
bool KeyManager::hasAccount(hasAccount339,9201
string const& KeyManager::accountName(accountName351,9454
void KeyManager::changeName(changeName363,9625
string const& KeyManager::passwordHint(passwordHint373,9835
h256 KeyManager::hashPassword(hashPassword388,10105
void KeyManager::cachePassword(cachePassword394,10328
bool KeyManager::write(write399,10452
void KeyManager::write(write407,10596
void KeyManager::write(write418,10908
KeyPair KeyManager::newKeyPair(newKeyPair441,11553

src/cpp-ethereum/libethcore/ICAP.h,606
class ICAP45,1188
	ICAP(51,1352
	ICAP(53,1499
	ICAP(55,1827
	enum Type58,2096
		Invalid,60,2110
		Direct,61,2121
		Indirect62,2131
	static std::pair<std::pair71,2379
	Type type(79,2661
	Address const& direct(81,2763
	std::string const& asset(83,2905
	std::string const& target(85,3078
	std::string const& institution(87,3278
	std::string const& client(89,3483
	std::pair<std::pair91,3702
	std::pair<Address, bytes> address(91,3702
	std::pair<std::pair94,4072
	Address m_direct;98,4219
	std::string m_client;99,4238
	std::string m_institution;100,4261
	std::string m_asset;101,4289

src/cpp-ethereum/libethcore/ChainOperationParams.h,741
class PrecompiledContract35,926
	PrecompiledContract(39,996
	PrecompiledContract(48,1212
	bigint cost(55,1344
	std::pair<std::pair56,1413
	std::pair<bool, bytes> execute(56,1413
	u256 const& startingBlock(58,1498
	PrecompiledExecutor m_execute;62,1610
struct ChainOperationParams66,1673
	explicit operator bool(operator bool70,1729
	std::string sealEngineName 73,1871
	u256 blockReward 76,1940
	u256 maximumExtraDataSize 77,1963
	u256 accountStartNonce 78,1998
	bool tieBreakingGas 79,2027
	std::unordered_map<std::unordered_map82,2118
	std::unordered_map<Address, PrecompiledContract> precompiled;82,2118
	std::unordered_map<std::unordered_map95,2392
	std::unordered_map<std::string, std::string> otherParams;95,2392

src/cpp-ethereum/libethcore/Precompiled.cpp,346
PrecompiledRegistrar* PrecompiledRegistrar::s_this 32,990
PrecompiledExecutor const& PrecompiledRegistrar::executor(executor34,1053
ETH_REGISTER_PRECOMPILED(44,1266
		h256 hash;48,1334
		h256 v;49,1347
		h256 r;50,1357
		h256 s;51,1367
ETH_REGISTER_PRECOMPILED(78,1798
ETH_REGISTER_PRECOMPILED(83,1899
ETH_REGISTER_PRECOMPILED(88,2030

src/cpp-ethereum/libethcore/Precompiled.h,386
class PrecompiledRegistrar38,1037
	static PrecompiledExecutor registerPrecompiled(45,1311
	static void unregisterPrecompiled(47,1526
	static PrecompiledRegistrar* get(50,1630
	std::unordered_map<std::unordered_map52,1734
	std::unordered_map<std::string, PrecompiledExecutor> m_execs;52,1734
	static PrecompiledRegistrar* s_this;53,1797
#define ETH_REGISTER_PRECOMPILED(57,1891

src/cpp-ethereum/libethcore/ABI.h,1652
namespace dev29,880
template <class T> struct ABISerialiser 42,1069
template <unsigned N> struct ABISerialiser<ABISerialiser43,1113
template <unsigned N> struct ABISerialiser<FixedHash<N>> { static bytes serialise(43,1113
template <> struct ABISerialiser<ABISerialiser44,1387
template <> struct ABISerialiser<u256> { static bytes serialise(44,1387
template <> struct ABISerialiser<ABISerialiser45,1501
template <> struct ABISerialiser<u160> { static bytes serialise(45,1501
template <> struct ABISerialiser<ABISerialiser46,1630
template <> struct ABISerialiser<string32> { static bytes serialise(46,1630
template <> struct ABISerialiser<ABISerialiser47,1816
	static bytes serialise(49,1864
inline bytes abiInAux(58,2123
template <class T, class ... U> bytes abiInAux(59,2162
template <class ... T> bytes abiIn(64,2304
template <class T> struct ABIDeserialiser 69,2446
template <unsigned N> struct ABIDeserialiser<ABIDeserialiser70,2492
template <unsigned N> struct ABIDeserialiser<FixedHash<N>> { static FixedHash<N> deserialise(70,2492
template <> struct ABIDeserialiser<ABIDeserialiser71,2782
template <> struct ABIDeserialiser<u256> { static u256 deserialise(71,2782
template <> struct ABIDeserialiser<ABIDeserialiser72,2967
template <> struct ABIDeserialiser<u160> { static u160 deserialise(72,2967
template <> struct ABIDeserialiser<ABIDeserialiser73,3153
template <> struct ABIDeserialiser<string32> { static string32 deserialise(73,3153
template <> struct ABIDeserialiser<ABIDeserialiser74,3370
	static std::string deserialise(76,3420
template <class T> T abiOut(88,3744
template <class T> T abiOut(94,3867

src/cpp-ethereum/libethcore/CommonJS.cpp,111
namespace dev26,812
std::string prettyU256(29,829
namespace eth59,1449
BlockNumber jsToBlockNumber(62,1466

src/cpp-ethereum/libethcore/Transaction.h,1377
enum IncludeSignature36,1000
	WithoutSignature 38,1024
	WithSignature 39,1080
enum class CheckTransaction42,1134
	None,44,1164
	Cheap,45,1171
	Everything46,1179
class TransactionBase50,1276
	TransactionBase(54,1344
	TransactionBase(60,1575
	TransactionBase(63,1945
	TransactionBase(66,2271
	TransactionBase(69,2609
	explicit TransactionBase(75,3022
	bool operator==(operator==78,3172
	bool operator!=(operator!=80,3417
	void forceSender(87,3831
	explicit operator bool(operator bool98,4269
	bool isCreation(101,4396
	bytes rlp(107,4675
	u256 value(113,5036
	u256 gasPrice(116,5154
	u256 gas(119,5330
	Address receiveAddress(122,5483
	Address to(125,5580
	Address from(128,5661
	bytes const& data(131,5805
	u256 nonce(134,5903
	void setNonce(137,6006
	void clearSignature(140,6101
	SignatureStruct const& signature(143,6224
	int64_t baseGasRequired(148,6408
	enum Type155,6727
		NullTransaction,157,6741
		ContractCreation,158,6786
		MessageCall	159,6877
	Type m_type 162,6971
	u256 m_nonce;163,7080
	u256 m_value;164,7142
	Address m_receiveAddress;165,7279
	u256 m_gasPrice;166,7355
	u256 m_gas;167,7445
	bytes m_data;168,7584
	SignatureStruct m_vrs;169,7702
	int m_chainId 170,7788
	mutable h256 m_hashWith;172,7909
	mutable Address m_sender;173,7985
using TransactionBases 177,8106
inline std::ostream& operator<<(180,8211

src/cpp-ethereum/libethcore/ICAP.cpp,314
namespace dev33,1013
namespace eth35,1029
string ICAP::iban(iban38,1046
std::pair<string, string> ICAP::fromIBAN(fromIBAN55,1446
Secret ICAP::createDirect(createDirect67,1771
ICAP ICAP::decoded(decoded78,1904
std::string ICAP::encoded(encoded110,2598
pair<Address, bytes> ICAP::lookup(lookup137,3523

src/cpp-ethereum/libethcore/Transaction.cpp,532
TransactionBase::TransactionBase(34,1045
TransactionBase::TransactionBase(TransactionBase48,1363
Address const& TransactionBase::safeSender(safeSender98,2969
Address const& TransactionBase::sender(sender110,3105
void TransactionBase::sign(sign122,3374
void TransactionBase::streamRLP(streamRLP130,3588
void TransactionBase::checkLowS(checkLowS154,4209
void TransactionBase::checkChainId(checkChainId160,4332
int64_t TransactionBase::baseGasRequired(baseGasRequired166,4482
h256 TransactionBase::sha3(sha3178,4893

src/cpp-ethereum/libethcore/CommonJS.h,65
namespace dev33,920
namespace dev52,1781
namespace eth54,1797

src/cpp-ethereum/libethcore/BasicAuthority.cpp,376
void BasicAuthority::init(init33,987
StringHashMap BasicAuthority::jsInfo(jsInfo38,1063
bool BasicAuthority::shouldSeal(shouldSeal43,1174
void BasicAuthority::generateSeal(generateSeal49,1440
bool BasicAuthority::onOptionChanging(onOptionChanging58,1643
void BasicAuthority::populateFromParent(populateFromParent70,1938
void BasicAuthority::verify(verify77,2251

src/cpp-ethereum/libethcore/SealEngine.cpp,395
SealEngineRegistrar* SealEngineRegistrar::s_this 29,888
void NoProof::init(init31,949
void SealEngineFace::verify(verify36,1011
void SealEngineFace::populateFromParent(populateFromParent41,1173
void SealEngineFace::verifyTransaction(verifyTransaction46,1304
SealEngineFace* SealEngineRegistrar::create(create52,1504
EVMSchedule const& SealEngineBase::evmSchedule(evmSchedule61,1742

src/cpp-ethereum/libethcore/ChainOperationParams.cpp,178
PrecompiledContract::PrecompiledContract(29,916
ChainOperationParams::ChainOperationParams(ChainOperationParams44,1233
u256 ChainOperationParams::u256Param(u256Param59,1689

src/cpp-ethereum/libethcore/Common.cpp,279
namespace dev38,1135
namespace eth40,1151
Address toAddress(56,1603
vector<pair<u256, string>> const& units(74,1960
std::string formatBalance(102,2579
static void badBlockInfo(130,3081
void badBlock(147,3891
string TransactionSkeleton::userReadable(userReadable154,4044

src/cpp-ethereum/libethcore/BlockHeader.h,1998
enum IncludeSeal37,979
	WithoutSeal 39,998
	WithSeal 40,1016
	OnlySeal 41,1031
enum Strictness44,1049
	CheckEverything,46,1067
	JustSeal,47,1085
	QuickNonce,48,1096
	IgnoreSeal,49,1109
	CheckNothingNew50,1122
enum BlockDataType66,1393
	HeaderData,68,1414
	BlockData69,1427
class BlockHeader95,2665
	static const unsigned BasicFields 99,2719
	explicit BlockHeader(103,2885
	static h256 headerHashFromBlock(105,3033
	explicit operator bool(operator bool109,3234
	bool operator==(operator==111,3305
	bool operator!=(operator!=127,3863
	void noteDirty(130,3957
	void verify(135,4258
	void setParentHash(140,4465
	void setSha3Uncles(141,4537
	void setTimestamp(142,4609
	void setAuthor(143,4679
	void setRoots(144,4746
	void setGasUsed(145,4925
	void setNumber(146,4991
	void setGasLimit(147,5055
	void setExtraData(148,5123
	void setLogBloom(149,5194
	void setDifficulty(150,5266
	template <class T> void setSeal(151,5338
	template <class T> void setSeal(152,5512
	h256 const& parentHash(154,5587
	h256 const& sha3Uncles(155,5644
	u256 const& timestamp(156,5701
	Address const& author(157,5756
	h256 const& stateRoot(158,5808
	h256 const& transactionsRoot(159,5863
	h256 const& receiptsRoot(160,5932
	u256 const& gasUsed(161,5993
	u256 const& number(162,6044
	u256 const& gasLimit(163,6093
	bytes const& extraData(164,6146
	LogBloom const& logBloom(165,6202
	u256 const& difficulty(166,6259
	template <class T> T seal(167,6316
	h256 m_parentHash;173,6570
	h256 m_sha3Uncles;174,6590
	h256 m_stateRoot;175,6610
	h256 m_transactionsRoot;176,6629
	h256 m_receiptsRoot;177,6655
	LogBloom m_logBloom;178,6677
	u256 m_number;179,6699
	u256 m_gasLimit;180,6715
	u256 m_gasUsed;181,6733
	bytes m_extraData;182,6750
	u256 m_timestamp 183,6770
	Address m_author;185,6803
	u256 m_difficulty;186,6822
	std::vector<bytes> m_seal;188,6843
	mutable h256 m_hash;190,6918
	mutable h256 m_hashWithout;191,6999
inline std::ostream& operator<<(194,7093

src/scheduler.cpp,450
CScheduler::CScheduler(13,311
CScheduler::~CScheduler(~CScheduler17,413
static boost::system_time toPosixTime(24,513
void CScheduler::serviceQueue(serviceQueue30,699
void CScheduler::stop(stop86,2919
void CScheduler::schedule(schedule98,3166
void CScheduler::scheduleFromNow(scheduleFromNow107,3420
static void Repeat(112,3596
void CScheduler::scheduleEvery(scheduleEvery118,3770
size_t CScheduler::getQueueInfo(getQueueInfo123,3932

src/threadsafety.h,1281
#define BITCOIN_THREADSAFETY_H7,270
#define LOCKABLE 16,641
#define SCOPED_LOCKABLE 17,684
#define GUARDED_BY(18,741
#define GUARDED_VAR 19,794
#define PT_GUARDED_BY(20,843
#define PT_GUARDED_VAR 21,902
#define ACQUIRED_AFTER(22,957
#define ACQUIRED_BEFORE(23,1030
#define EXCLUSIVE_LOCK_FUNCTION(24,1105
#define SHARED_LOCK_FUNCTION(25,1196
#define EXCLUSIVE_TRYLOCK_FUNCTION(26,1281
#define SHARED_TRYLOCK_FUNCTION(27,1378
#define UNLOCK_FUNCTION(28,1469
#define LOCK_RETURNED(29,1544
#define LOCKS_EXCLUDED(30,1603
#define EXCLUSIVE_LOCKS_REQUIRED(31,1676
#define SHARED_LOCKS_REQUIRED(32,1769
#define NO_THREAD_SAFETY_ANALYSIS 33,1856
#define LOCKABLE35,1939
#define SCOPED_LOCKABLE36,1956
#define GUARDED_BY(37,1980
#define GUARDED_VAR38,2002
#define PT_GUARDED_BY(39,2022
#define PT_GUARDED_VAR40,2047
#define ACQUIRED_AFTER(41,2070
#define ACQUIRED_BEFORE(42,2098
#define EXCLUSIVE_LOCK_FUNCTION(43,2127
#define SHARED_LOCK_FUNCTION(44,2164
#define EXCLUSIVE_TRYLOCK_FUNCTION(45,2198
#define SHARED_TRYLOCK_FUNCTION(46,2238
#define UNLOCK_FUNCTION(47,2275
#define LOCK_RETURNED(48,2304
#define LOCKS_EXCLUDED(49,2329
#define EXCLUSIVE_LOCKS_REQUIRED(50,2357
#define SHARED_LOCKS_REQUIRED(51,2395
#define NO_THREAD_SAFETY_ANALYSIS52,2430

src/ui_interface.h,1610
#define BITCOIN_UI_INTERFACE_H7,265
enum ChangeType21,541
    CT_NEW,23,559
    CT_UPDATED,24,571
    CT_DELETED25,587
class CClientUIInterface29,643
    enum MessageBoxFlags33,740
        ICON_INFORMATION 35,771
        ICON_WARNING 36,804
        ICON_ERROR 37,845
        ICON_MASK 42,1055
        BTN_OK 45,1225
        BTN_YES 46,1279
        BTN_NO 47,1334
        BTN_ABORT 48,1388
        BTN_RETRY 49,1445
        BTN_IGNORE 50,1502
        BTN_CLOSE 51,1560
        BTN_CANCEL 52,1617
        BTN_DISCARD 53,1675
        BTN_HELP 54,1734
        BTN_APPLY 55,1790
        BTN_RESET 56,1847
        BTN_MASK 61,2077
        MODAL 65,2340
        SECURE 68,2445
        MSG_INFORMATION 71,2560
        MSG_WARNING 72,2604
        MSG_ERROR 73,2659
    boost::signals2::signal<bool (const std::string& message, const std::string& caption, unsigned int style), boost::signals2::last_value<bool> > ThreadSafeMessageBox;77,2746
    boost::signals2::signal<bool (const std::string& message, const std::string& noninteractive_message, const std::string& caption, unsigned int style), boost::signals2::last_value<bool> > ThreadSafeQuestion;80,3067
    boost::signals2::signal<void (const std::string &message)> InitMessage;83,3329
    boost::signals2::signal<void (CWallet* wallet)> LoadWallet;97,3816
    boost::signals2::signal<void (const std::string &title, int nProgress)> ShowProgress;100,3927
    boost::signals2::signal<void (bool, const CBlockIndex *)> NotifyBlockTip;103,4057
    boost::signals2::signal<void (bool, const CBlockIndex *)> NotifyHeaderTip;106,4171

src/hash.cpp,393
inline uint32_t ROTL32(11,294
unsigned int MurmurHash3(16,383
void BIP32Hash(75,1808
#define ROTL(85,2245
#define SIPROUND 87,2312
CSipHasher::CSipHasher(CSipHasher96,2579
CSipHasher& CSipHasher::Write(Write106,2817
CSipHasher& CSipHasher::Write(Write126,3110
uint64_t CSipHasher::Finalize(Finalize154,3630
uint64_t SipHashUint256(172,3938
uint64_t SipHashUint256Extra(212,4763

src/txdb.h,998
#define BITCOIN_TXDB_H7,262
static constexpr int DB_PEAK_USAGE_FACTOR 27,608
static constexpr int MAX_BLOCK_COINSDB_USAGE 29,730
static const int64_t nDefaultDbCache 31,831
static const int64_t nMaxDbCache 33,899
static const int64_t nMinDbCache 35,992
static const int64_t nMaxBlockDBCache 37,1109
static const int64_t nMaxBlockDBAndTxIndexCache 41,1405
static const int64_t nMaxCoinsDBCache 43,1518
struct CDiskTxPos 45,1562
    unsigned int nTxOffset;47,1605
    ADD_SERIALIZE_METHODS;49,1650
    template <typename Stream,51,1678
    inline void SerializationOp(52,1729
    CDiskTxPos(57,1883
    CDiskTxPos(60,2032
    void SetNull(64,2077
class CCoinsViewDB 71,2225
    CDBWrapper db;74,2277
class CCoinsViewDBCursor:CCoinsViewDBCursor90,2916
    ~CCoinsViewDBCursor(93,2976
    CCoinsViewDBCursor(103,3173
    std::unique_ptr<CDBIterator> pcursor;105,3310
    std::pair<std::pair106,3352
    std::pair<char, COutPoint> keyTmp;106,3352
class CBlockTreeDB 112,3479

src/chainparamsseeds.h,142
#define BITCOIN_CHAINPARAMSSEEDS_H2,35
static SeedSpec6 pnSeed6_main[pnSeed6_main10,324
static SeedSpec6 pnSeed6_test[pnSeed6_test14,461

src/arith_uint256.cpp,1154
base_uint<BITS>::base_uint(base_uint16,415
base_uint<BITS>& base_uint<BITS>::operator<<=(operator<<=22,517
base_uint<BITS>& base_uint<BITS>::operator>>=(operator>>=39,985
base_uint<BITS>& base_uint<BITS>::operator*=(operator*=56,1447
base_uint<BITS>& base_uint<BITS>::operator*=(operator*=68,1735
base_uint<BITS>& base_uint<BITS>::operator/=(operator/=84,2169
int base_uint<BITS>::CompareTo(CompareTo110,3051
bool base_uint<BITS>::EqualTo(EqualTo122,3314
double base_uint<BITS>::getdouble(getdouble136,3616
std::string base_uint<BITS>::GetHex(GetHex148,3856
void base_uint<BITS>::SetHex(SetHex154,3977
void base_uint<BITS>::SetHex(SetHex160,4100
std::string base_uint<BITS>::GetReverseHex(GetReverseHex166,4212
void base_uint<BITS>::SetReverseHex(SetReverseHex172,4347
void base_uint<BITS>::SetReverseHex(SetReverseHex180,4512
std::string base_uint<BITS>::ToString(ToString186,4638
unsigned int base_uint<BITS>::bits(bits192,4741
arith_uint256& arith_uint256::SetCompact(SetCompact227,6276
uint32_t arith_uint256::GetCompact(GetCompact247,6926
uint256 ArithToUint256(270,7631
arith_uint256 UintToArith256(277,7789

src/checkpoints.h,65
#define BITCOIN_CHECKPOINTS_H6,225
namespace Checkpoints19,448

src/sync.h,1423
#define BITCOIN_SYNC_H7,262
class LOCKABLE AnnotatedMixin : public PARENT55,1559
void static inline EnterCritical(81,2170
void static inline LeaveCritical(82,2288
void static inline AssertLockHeldInternal(83,2326
void static inline DeleteLock(84,2434
#define AssertLockHeld(86,2484
class CCriticalSection 92,2711
    ~CCriticalSection(95,2792
typedef CCriticalSection CDynamicCriticalSection;100,2861
typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;102,2982
typedef boost::condition_variable CConditionVariable;105,3131
    operator bool(operator bool166,4881
typedef CMutexLock<CCriticalSection> CCriticalBlock;172,4950
#define PASTE(174,5004
#define PASTE2(175,5031
#define LOCK(177,5065
#define LOCK2(178,5161
#define TRY_LOCK(179,5293
#define ENTER_CRITICAL_SECTION(181,5376
#define LEAVE_CRITICAL_SECTION(187,5639
class CSemaphore193,5794
    boost::condition_variable condition;196,5822
    boost::mutex mutex;197,5863
    int value;198,5887
    CSemaphore(201,5911
    void wait(203,5954
    bool try_wait(212,6126
    void post(221,6300
class CSemaphoreGrant232,6496
    CSemaphore* sem;235,6529
    bool fHaveGrant;236,6550
    void Acquire(239,6580
    void Release(247,6704
    bool TryAcquire(255,6830
    void MoveTo(262,6967
    CSemaphoreGrant(270,7137
    CSemaphoreGrant(272,7194
    ~CSemaphoreGrant(280,7376
    operator bool(operator bool285,7431

src/tinyformat.h,6491
#define TINYFORMAT_H_INCLUDED116,5135
namespace tfm 123,5358
#define TINYFORMAT_ERROR(126,5433
#define TINYFORMAT_USE_VARIADIC_TEMPLATES130,5662
#   define TINYFORMAT_ERROR(142,5940
#       define TINYFORMAT_USE_VARIADIC_TEMPLATES147,6135
#   define TINYFORMAT_OLD_LIBSTDCPLUSPLUS_WORKAROUND154,6382
#   define TINYFORMAT_HIDDEN 160,6593
#   define TINYFORMAT_HIDDEN162,6666
struct is_convertible172,6914
        struct fail 176,6990
        struct fail { char dummy[dummy176,6990
        struct succeed 177,7030
        struct succeed { char dummy;177,7030
        static succeed tryConvert(180,7174
        static const T1& makeT1(181,7220
template<typename T> struct is_wchar 202,7995
template<typename T> struct is_wchar { typedef int tinyformat_wchar_is_not_supported;202,7995
template<> struct is_wchar<is_wchar203,8084
template<> struct is_wchar<is_wchar204,8125
template<int n> struct is_wchar<is_wchar205,8172
template<int n> struct is_wchar<is_wchar206,8226
template<typename T,211,8377
template<typename T, typename fmtT,211,8377
template<typename T, typename fmtT, bool convertible 211,8377
template<typename T,218,8705
    static void invoke(221,8781
template<typename T,226,8937
template<typename T, bool convertible 226,8937
    static bool invoke(234,9190
template<typename T,248,9582
template<typename T, bool convertible 248,9582
    static int invoke(262,10016
inline void formatTruncated(267,10172
#define TINYFORMAT_DEFINE_FORMAT_TRUNCATED_CSTR(274,10417
#undef TINYFORMAT_DEFINE_FORMAT_TRUNCATED_CSTR286,11114
inline void formatValue(308,12003
    typedef typename detail::is_wchar<detail::is_wchar314,12333
#define TINYFORMAT_DEFINE_FORMATVALUE_CHAR(343,13737
#undef TINYFORMAT_DEFINE_FORMATVALUE_CHAR359,14743
#define TINYFORMAT_ARGTYPES(367,15067
#define TINYFORMAT_VARARGS(368,15124
#define TINYFORMAT_PASSARGS(369,15179
#define TINYFORMAT_PASSARGS_TAIL(370,15236
#define TINYFORMAT_ARGTYPES_1 408,16632
#define TINYFORMAT_ARGTYPES_2 409,16671
#define TINYFORMAT_ARGTYPES_3 410,16720
#define TINYFORMAT_ARGTYPES_4 411,16779
#define TINYFORMAT_ARGTYPES_5 412,16848
#define TINYFORMAT_ARGTYPES_6 413,16927
#define TINYFORMAT_ARGTYPES_7 414,17016
#define TINYFORMAT_ARGTYPES_8 415,17115
#define TINYFORMAT_ARGTYPES_9 416,17224
#define TINYFORMAT_ARGTYPES_10 417,17343
#define TINYFORMAT_ARGTYPES_11 418,17474
#define TINYFORMAT_ARGTYPES_12 419,17616
#define TINYFORMAT_ARGTYPES_13 420,17769
#define TINYFORMAT_ARGTYPES_14 421,17933
#define TINYFORMAT_ARGTYPES_15 422,18108
#define TINYFORMAT_ARGTYPES_16 423,18294
#define TINYFORMAT_VARARGS_1 425,18492
#define TINYFORMAT_VARARGS_2 426,18534
#define TINYFORMAT_VARARGS_3 427,18590
#define TINYFORMAT_VARARGS_4 428,18660
#define TINYFORMAT_VARARGS_5 429,18744
#define TINYFORMAT_VARARGS_6 430,18842
#define TINYFORMAT_VARARGS_7 431,18954
#define TINYFORMAT_VARARGS_8 432,19080
#define TINYFORMAT_VARARGS_9 433,19220
#define TINYFORMAT_VARARGS_10 434,19374
#define TINYFORMAT_VARARGS_11 435,19545
#define TINYFORMAT_VARARGS_12 436,19732
#define TINYFORMAT_VARARGS_13 437,19935
#define TINYFORMAT_VARARGS_14 438,20154
#define TINYFORMAT_VARARGS_15 439,20389
#define TINYFORMAT_VARARGS_16 440,20640
#define TINYFORMAT_PASSARGS_1 442,20908
#define TINYFORMAT_PASSARGS_2 443,20941
#define TINYFORMAT_PASSARGS_3 444,20978
#define TINYFORMAT_PASSARGS_4 445,21019
#define TINYFORMAT_PASSARGS_5 446,21064
#define TINYFORMAT_PASSARGS_6 447,21113
#define TINYFORMAT_PASSARGS_7 448,21166
#define TINYFORMAT_PASSARGS_8 449,21223
#define TINYFORMAT_PASSARGS_9 450,21284
#define TINYFORMAT_PASSARGS_10 451,21349
#define TINYFORMAT_PASSARGS_11 452,21420
#define TINYFORMAT_PASSARGS_12 453,21496
#define TINYFORMAT_PASSARGS_13 454,21577
#define TINYFORMAT_PASSARGS_14 455,21663
#define TINYFORMAT_PASSARGS_15 456,21754
#define TINYFORMAT_PASSARGS_16 457,21850
#define TINYFORMAT_PASSARGS_TAIL_1459,21952
#define TINYFORMAT_PASSARGS_TAIL_2 460,21987
#define TINYFORMAT_PASSARGS_TAIL_3 461,22027
#define TINYFORMAT_PASSARGS_TAIL_4 462,22071
#define TINYFORMAT_PASSARGS_TAIL_5 463,22119
#define TINYFORMAT_PASSARGS_TAIL_6 464,22171
#define TINYFORMAT_PASSARGS_TAIL_7 465,22227
#define TINYFORMAT_PASSARGS_TAIL_8 466,22287
#define TINYFORMAT_PASSARGS_TAIL_9 467,22351
#define TINYFORMAT_PASSARGS_TAIL_10 468,22419
#define TINYFORMAT_PASSARGS_TAIL_11 469,22493
#define TINYFORMAT_PASSARGS_TAIL_12 470,22572
#define TINYFORMAT_PASSARGS_TAIL_13 471,22656
#define TINYFORMAT_PASSARGS_TAIL_14 472,22745
#define TINYFORMAT_PASSARGS_TAIL_15 473,22839
#define TINYFORMAT_PASSARGS_TAIL_16 474,22938
#define TINYFORMAT_FOREACH_ARGNUM(476,23043
namespace detail 482,23188
class FormatArg488,23501
        FormatArg(491,23531
        FormatArg(494,23584
        void format(500,23769
        int toInt(506,23975
        TINYFORMAT_HIDDEN static void formatImpl(513,24105
        TINYFORMAT_HIDDEN static int toIntImpl(520,24407
        const void* m_value;525,24569
inline int parseIntAndAdvance(534,24920
inline const char* printFormatStringLiteral(548,25344
inline const char* streamStateFromFormat(582,26487
inline void formatImpl(769,33000
class FormatList836,35630
        FormatList(839,35661
        const detail::FormatArg* m_formatters;846,35901
        int m_N;847,35948
typedef const FormatList& FormatListRef;851,36035
namespace detail 854,36078
class FormatListN 858,36185
        FormatListN(863,36313
        void init(868,36557
#       define TINYFORMAT_MAKE_FORMATLIST_CONSTRUCTOR(869,36583
#       undef TINYFORMAT_MAKE_FORMATLIST_CONSTRUCTOR884,37448
        TINYFORMAT_FOREACH_ARGNUM(TINYFORMAT_MAKE_FORMATLIST_CONSTRUCTOR883,37374
template<> class FormatListN<FormatListN892,37646
    public: FormatListN(894,37700
detail::FormatListN<sizeof...(Args)> makeFormatList(912,38242
inline detail::FormatListN<0> makeFormatList(919,38402
#define TINYFORMAT_MAKE_MAKEFORMATLIST(923,38490
#undef TINYFORMAT_MAKE_MAKEFORMATLIST930,38870
TINYFORMAT_FOREACH_ARGNUM(TINYFORMAT_MAKE_MAKEFORMATLIST929,38812
void format(948,39440
std::string format(956,39694
void printf(965,39944
void printfln(971,40063
inline void format(979,40204
inline std::string format(984,40305
inline void printf(991,40425
inline void printfln(996,40494
#define TINYFORMAT_MAKE_FORMAT_FUNCS(1002,40588
#undef TINYFORMAT_MAKE_FORMAT_FUNCS1032,42699
std::string format(1038,42797
#define strprintf 1047,42982

src/core_io.h,32
#define BITCOIN_CORE_IO_H6,221

src/util.h,731
#define BITCOIN_UTIL_H11,368
static const bool DEFAULT_LOGTIMEMICROS 38,847
static const bool DEFAULT_LOGIPS 39,896
static const bool DEFAULT_LOGTIMESTAMPS 40,945
class CTranslationInterface43,1026
    boost::signals2::signal<std::string (const char* psz)> Translate;47,1131
inline std::string _(68,1834
#define LogPrint(82,2242
#define LogPrintf(88,2393
bool error(93,2507
inline bool IsSwitchChar(123,3693
inline void SetThreadPriority(213,6276
#define THREAD_PRIORITY_LOWEST 219,6386
#define THREAD_PRIORITY_BELOW_NORMAL 220,6435
#define THREAD_PRIORITY_NORMAL 221,6477
#define THREAD_PRIORITY_ABOVE_NORMAL 222,6519
inline void SetThreadPriority(224,6562
template <typename Callable> void TraceThread(241,6979

src/cpp-ethereum/libethcore/ABI.cpp,0

src/cpp-ethereum/libethcore/Exceptions.h,0

src/cpp-ethereum/libdevcore/TrieHash.h,0

src/cpp-ethereum/libdevcore/concurrent_queue.h,0

src/cpp-ethereum/libdevcore/SHA3.h,0

src/cpp-ethereum/libdevcore/FileSystem.h,0

src/cpp-ethereum/libdevcore/Hash.h,0

src/cpp-ethereum/libevmcore/Exceptions.h,0

src/cpp-ethereum/evmjit/libevmjit/preprocessor/llvm_includes_start.h,0

src/cpp-ethereum/evmjit/libevmjit/preprocessor/llvm_includes_end.h,0

src/cpp-ethereum/evmjit/libevmjit/Optimizer.h,0

src/cpp-ethereum/libdevcrypto/AES.h,0

src/cpp-ethereum/libdevcrypto/Exceptions.h,0

src/cpp-ethereum/libethereum/MiningClient.h,0

src/cpp-ethereum/libethereum/MiningClient.cpp,0

src/cpp-ethereum/libethereum/GasPricer.cpp,0

src/cpp-ethereum/libethereum/GenericMiner.cpp,0

src/cpp-ethereum/libethereum/GenesisInfo.h,0

src/cpp-ethereum/libp2p/All.h,0

src/cpp-ethereum/utils/libscrypt/slowequals.h,0

src/cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.h,0

src/cpp-ethereum/utils/json_spirit/json_spirit_value.cpp,0

src/cpp-ethereum/utils/json_spirit/JsonSpiritHeaders.h,0

src/cpp-ethereum/test/deprecated/kademlia.cpp,0

src/cpp-ethereum/test/deprecated/fork.cpp,0

src/cpp-ethereum/test/deprecated/txTest.cpp,0

src/cpp-ethereum/test/deprecated/main.cpp,0

src/cpp-ethereum/test/libethereum/BlockQueue.cpp,0

src/cpp-ethereum/test/libtestutils/StateLoader.cpp,0

src/cpp-ethereum/test/libtestutils/StateLoader.h,0

src/cpp-ethereum/test/libtesteth/JsonSpiritHeaders.h,0

src/cpp-ethereum/libevm/All.h,0

src/cryptopp/pch.cpp,0

src/cryptopp/simple.cpp,0

src/cryptopp/marss.cpp,0

src/cryptopp/dessp.cpp,0

src/cryptopp/tigertab.cpp,0

src/test/ecoctests/test_utils.h,0

src/aal/qtumtransaction.cpp,0
